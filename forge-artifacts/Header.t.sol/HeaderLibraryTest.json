{
  "abi": [
    {
      "inputs": [],
      "name": "OccupiedMemory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PrecompileOutOfGas",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnallocatedMemory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ViewOverrun",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "addLastByte",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addressToBytes32",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "buf",
          "type": "bytes32"
        }
      ],
      "name": "bytes32ToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "payloadLength",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "firstElementLength",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "name": "createShortPayload",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "cutLastByte",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expectRevertAlreadyInitialized",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expectRevertNotOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "privKey",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hashedMsg",
          "type": "bytes32"
        }
      ],
      "name": "signMessage",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "privKey",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "signMessage",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "skipBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blocks",
          "type": "uint256"
        }
      ],
      "name": "skipBlocks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSynapseLibraryTest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSynapseUtilities",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "flag",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "origin",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "destination",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "optimisticPeriod",
              "type": "uint32"
            }
          ],
          "internalType": "struct RawHeader",
          "name": "rh",
          "type": "tuple"
        }
      ],
      "name": "test_encodeHeader",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "flag",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "origin",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "destination",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "optimisticPeriod",
              "type": "uint32"
            }
          ],
          "internalType": "struct RawHeader",
          "name": "rh",
          "type": "tuple"
        }
      ],
      "name": "test_headerLength",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "flag",
          "type": "uint8"
        },
        {
          "internalType": "uint128",
          "name": "remainder",
          "type": "uint128"
        }
      ],
      "name": "test_wrapPadded_revert_flagOutOfRange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b50612ca38061003d6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c806385226c81116100f9578063ba414fa611610097578063e20c9f7111610071578063e20c9f7114610333578063eaee26111461033b578063f1f97ac01461034e578063fa7626d41461036157600080fd5b8063ba414fa614610300578063c10b95e714610318578063c63101b61461032b57600080fd5b806391df0ed8116100d357806391df0ed8146102d2578063a2cdb207146101ae578063a72e0a34146102e5578063b5508aa9146102f857600080fd5b806385226c81146102955780638820cb26146102aa578063916a17c6146102ca57600080fd5b80633f7286f411610166578063660982d911610140578063660982d91461024857806366d9a9a0146102505780637b3471631461026557806382c947b71461026d57600080fd5b80633f7286f4146102045780634dfdb1d41461020c5780635ced058e1461021f57600080fd5b80630621feff146101ae5780630a9254e4146101b05780631ed7831c146101b85780632215ff36146101d65780632cfd9e17146101e95780633e5e3c23146101fc575b600080fd5b005b6101ae610370565b6101c06103bb565b6040516101cd919061200c565b60405180910390f35b6101ae6101e4366004612068565b61041d565b6101ae6101f73660046120d5565b6105b9565b6101c06106b7565b6101c0610717565b6101ae61021a3660046120d5565b610777565b61023061022d36600461216d565b90565b6040516001600160a01b0390911681526020016101cd565b6101ae610e81565b610258610e8b565b6040516101cd9190612186565b6101ae610f7a565b61028761027b366004612239565b6001600160a01b031690565b6040519081526020016101cd565b61029d610ff8565b6040516101cd91906122b2565b6102bd6102b8366004612314565b6110c8565b6040516101cd9190612355565b610258611157565b6102bd6102e0366004612368565b61123d565b6101ae6102f336600461216d565b611355565b61029d6113e1565b6103086114b1565b60405190151581526020016101cd565b6102bd610326366004612417565b6115dc565b6101ae611609565b6101c0611671565b6102bd61034936600461244c565b6116d1565b6102bd61035c366004612417565b6116ed565b6000546103089060ff1681565b565b60405161037c90611fff565b604051809103906000f080158015610398573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d80548060200260200160405190810160405280929190818152602001828054801561041357602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116103f5575b5050505050905090565b61043960ff831661042f6001806124bf565b60ff1660ff61170e565b915060006001600160801b03821661045860ff8516600160801b6124d8565b61046291906124ef565b601b54604051630e7335c560e41b8152600481018390529192506104db916001600160a01b039091169063e7335c5090602401602060405180830381865afa1580156104b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d69190612502565b61174b565b604051630618f58760e51b8152632c75dfdf60e11b6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b15801561052e57600080fd5b505af1158015610542573d6000803e3d6000fd5b5050601b5460405163138ac42f60e01b8152600481018590526001600160a01b03909116925063138ac42f9150602401602060405180830381865afa15801561058f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b39190612524565b50505050565b6105c281611755565b601b54815160208301516040808501516060860151608087015192516307950f5960e21b815260ff909516600486015263ffffffff93841660248601529083166044850152821660648401521660848201526000916001600160a01b031690631e543d649060a401602060405180830381865afa158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b9190612524565b604051602001610696919060789190911b6effffffffffffffffffffffffffffff1916815260110190565b60405160208183030381529060405290506106b381516011611773565b5050565b6060600f805480602002602001604051908101604052809291908181526020018280548015610413576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f5575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610413576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f5575050505050905090565b61078081611755565b601b54815160208301516040808501516060860151608087015192516307950f5960e21b815260ff909516600486015263ffffffff93841660248601529083166044850152821660648401521660848201526000916001600160a01b031690631e543d649060a401602060405180830381865afa158015610805573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108299190612524565b90506000826080015163ffffffff16836060015163ffffffff1664010000000061085391906124d8565b60408501516108719063ffffffff16680100000000000000006124d8565b602086015161088a9063ffffffff16600160601b6124d8565b865161089d9060ff16600160801b6124d8565b6108a791906124ef565b6108b191906124ef565b6108bb91906124ef565b6108c591906124ef565b9050610900826001600160881b0316826040518060400160405280600d81526020016c10b2b731b7b232a432b0b232b960991b815250611862565b601b5460405163138ac42f60e01b81526001600160881b03841660048201526109aa916001600160a01b03169063138ac42f90602401602060405180830381865afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190612524565b6001600160881b0316826040518060400160405280600b81526020016a085ddc985c14185919195960aa1b815250611862565b601b54604051630e7335c560e41b81526001600160881b0384166004820152610a48916001600160a01b03169063e7335c5090602401602060405180830381865afa1580156109fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a219190612502565b6040518060400160405280600981526020016810b4b9a432b0b232b960b91b8152506118aa565b601b5460405163bb760a7560e01b81526001600160881b0384166004820152610afe916001600160a01b03169063bb760a7590602401602060405180830381865afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf919061254d565b6001811115610ad057610ad0612493565b60ff16846000015160ff166040518060400160405280600581526020016421666c616760d81b815250611862565b601b54604051630c45b6a760e31b81526001600160881b0384166004820152610bab916001600160a01b03169063622db53890602401602060405180830381865afa158015610b51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b75919061256e565b63ffffffff16846020015163ffffffff166040518060400160405280600781526020016610b7b934b3b4b760c91b815250611862565b601b5460405163ce03fdab60e01b81526001600160881b0384166004820152610c57916001600160a01b03169063ce03fdab90602401602060405180830381865afa158015610bfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c22919061256e565b63ffffffff16846040015163ffffffff1660405180604001604052806006815260200165216e6f6e636560d01b815250611862565b601b5460405163227b448f60e11b81526001600160881b0384166004820152610d09916001600160a01b0316906344f6891e90602401602060405180830381865afa158015610caa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cce919061256e565b63ffffffff16846060015163ffffffff166040518060400160405280600c81526020016b10b232b9ba34b730ba34b7b760a11b815250611862565b601b54604051637668f03b60e01b81526001600160881b0384166004820152610dc0916001600160a01b031690637668f03b90602401602060405180830381865afa158015610d5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d80919061256e565b63ffffffff16846080015163ffffffff1660405180604001604052806011815260200170085bdc1d1a5b5a5cdd1a58d4195c9a5bd9607a1b815250611862565b601b54604051637a3952c560e11b81526001600160881b0384166004820152610e7c916001600160a01b03169063f472a58a90602401602060405180830381865afa158015610e13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e37919061258b565b604080516020810185905201604051602081830303815290604052805190602001206040518060400160405280600581526020016410b632b0b360d91b8152506118ef565b505050565b61036e6001611355565b60606012805480602002602001604051908101604052809291908181526020016000905b82821015610f715760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610f5957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610f1b5790505b50505050508152505081526020019060010190610eaf565b50505050905090565b6040805160608101909152602e808252737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391612c4060208301396040518263ffffffff1660e01b8152600401610fca9190612355565b600060405180830381600087803b158015610fe457600080fd5b505af11580156105b3573d6000803e3d6000fd5b60606011805480602002602001604051908101604052809291908181526020016000905b82821015610f7157838290600052602060002001805461103b906125a4565b80601f0160208091040260200160405190810160405280929190818152602001828054611067906125a4565b80156110b45780601f10611089576101008083540402835291602001916110b4565b820191906000526020600020905b81548152906001019060200180831161109757829003601f168201915b50505050508152602001906001019061101c565b60606110d483856125f4565b6040805160208101859052908101849052606081018490526080810184905260a0810184905260c0810184905260e08101849052610100810184905290945060009061012001604051602081830303815290604052905061114c61114760008760ff1661114085611937565b9190611952565b6119aa565b9150505b9392505050565b60606013805480602002602001604051908101604052809291908181526020016000905b82821015610f715760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561122557602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116111e75790505b5050505050815250508152602001906001019061117b565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052606090600090605c0160408051808303601f190181529082905280516020909101206338d07aa960e21b82526004820186905260248201819052915060009081908190737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e341eaa490604401606060405180830381865afa1580156112ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113109190612616565b6040805160208101939093528281019190915260f89290921b6001600160f81b0319166060820152815160418183030181526061909101909152979650505050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d631f7b4f3061137983436124ef565b6040518263ffffffff1660e01b815260040161139791815260200190565b600060405180830381600087803b1580156113b157600080fd5b505af11580156113c5573d6000803e3d6000fd5b505050506113de600c826113d991906124d8565b6119e0565b50565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610f71578382906000526020600020018054611424906125a4565b80601f0160208091040260200160405190810160405280929190818152602001828054611450906125a4565b801561149d5780601f106114725761010080835404028352916020019161149d565b820191906000526020600020905b81548152906001019060200180831161148057829003601f168201915b505050505081526020019060010190611405565b60008054610100900460ff16156114d15750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156115d75760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161155f917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161264d565b60408051601f19818403018152908290526115799161267e565b6000604051808303816000865af19150503d80600081146115b6576040519150601f19603f3d011682016040523d82523d6000602084013e6115bb565b606091505b50915050808060200190518101906115d39190612502565b9150505b919050565b6040516060906115f390839060009060200161269a565b6040516020818303038152906040529050919050565b60408051808201825260208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657290820152905163f28dceb360e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391610fca9190600401612355565b6060600c805480602002602001604051908101604052809291908181526020018280548015610413576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f5575050505050905090565b60606116e483838051906020012061123d565b90505b92915050565b60606116e761114760006001855161170591906126c9565b61114086611937565b600061171b848484611a57565b90506111506040518060400160405280600c81526020016b109bdd5b990814995cdd5b1d60a21b81525082611c1f565b6113de8115611cc6565b6117606001806124bf565b815161176c91906125f4565b60ff169052565b8082146106b3577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516117e49060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405161181b91906126dc565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516118529190612714565b60405180910390a16106b3611d36565b818314610e7c577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051611898919061273e565b60405180910390a1610e7c8383611773565b816106b3577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516118de919061273e565b60405180910390a16106b382611cc6565b818314610e7c577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051611925919061273e565b60405180910390a1610e7c8383611e42565b80516000906020830161194a8183611f24565b949350505050565b60008061195f8560801c90565b905061196a85611f6e565b8361197586846124ef565b61197f91906124ef565b111561199e5760405163a3b99ded60e01b815260040160405180910390fd5b61114c84820184611f24565b604051806119bb8360208301611f8b565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d63e5d6bf02611a0483426124ef565b6040518263ffffffff1660e01b8152600401611a2291815260200190565b600060405180830381600087803b158015611a3c57600080fd5b505af1158015611a50573d6000803e3d6000fd5b5050505050565b600081831115611ad35760405162461bcd60e51b815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840160405180910390fd5b828410158015611ae35750818411155b15611aef575082611150565b6000611afb84846126c9565b611b069060016124ef565b905060038511158015611b1857508481115b15611b2f57611b2785856124ef565b915050611150565b611b3c60036000196126c9565b8510158015611b555750611b52856000196126c9565b81115b15611b7057611b66856000196126c9565b611b2790846126c9565b82851115611bc6576000611b8484876126c9565b90506000611b92838361276d565b905080600003611ba757849350505050611150565b6001611bb382886124ef565b611bbd91906126c9565b93505050611c17565b83851015611c17576000611bda86866126c9565b90506000611be8838361276d565b905080600003611bfd57859350505050611150565b611c0781866126c9565b611c129060016124ef565b935050505b509392505050565b60006a636f6e736f6c652e6c6f676001600160a01b03168383604051602401611c49929190612781565b60408051601f198184030181529181526020820180516001600160e01b0316632d839cb360e21b17905251611c7e919061267e565b600060405180830381855afa9150503d8060008114611cb9576040519150601f19603f3d011682016040523d82523d6000602084013e611cbe565b606091505b505050505050565b806113de577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051611d2a9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16113de5b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15611e315760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052611dd0929160200161264d565b60408051601f1981840301815290829052611dea9161267e565b6000604051808303816000865af19150503d8060008114611e27576040519150601f19603f3d011682016040523d82523d6000602084013e611e2c565b606091505b505050505b6000805461ff001916610100179055565b8082146106b3577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051611eb69060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f9982604051611eed91906126dc565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f99816040516118529190612714565b600080611f3183856124ef565b9050604051811115611f41575060005b80600003611f625760405163085f79c360e11b815260040160405180910390fd5b608084901b831761194a565b60006001600160801b038216611f848360801c90565b0192915050565b6040516000906001600160801b03841690608085901c9080851015611fc3576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa905080611fed57604051637c7d772f60e01b815260040160405180910390fd5b608086901b8417979650505050505050565b61049c806127a483390190565b6020808252825182820181905260009190848201906040850190845b8181101561204d5783516001600160a01b031683529284019291840191600101612028565b50909695505050505050565b60ff811681146113de57600080fd5b6000806040838503121561207b57600080fd5b823561208681612059565b915060208301356001600160801b03811681146120a257600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b63ffffffff811681146113de57600080fd5b600060a082840312156120e757600080fd5b60405160a0810181811067ffffffffffffffff8211171561210a5761210a6120ad565b604052823561211881612059565b81526020830135612128816120c3565b6020820152604083013561213b816120c3565b6040820152606083013561214e816120c3565b60608201526080830135612161816120c3565b60808201529392505050565b60006020828403121561217f57600080fd5b5035919050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561222a57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156122155783516001600160e01b0319168252928b019260019290920191908b01906121eb565b50978a019795505050918701916001016121ae565b50919998505050505050505050565b60006020828403121561224b57600080fd5b81356001600160a01b038116811461115057600080fd5b60005b8381101561227d578181015183820152602001612265565b50506000910152565b6000815180845261229e816020860160208601612262565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561230757603f198886030184526122f5858351612286565b945092850192908501906001016122d9565b5092979650505050505050565b60008060006060848603121561232957600080fd5b833561233481612059565b9250602084013561234481612059565b929592945050506040919091013590565b6020815260006116e46020830184612286565b6000806040838503121561237b57600080fd5b50508035926020909101359150565b600082601f83011261239b57600080fd5b813567ffffffffffffffff808211156123b6576123b66120ad565b604051601f8301601f19908116603f011681019082821181831017156123de576123de6120ad565b816040528381528660208588010111156123f757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561242957600080fd5b813567ffffffffffffffff81111561244057600080fd5b61194a8482850161238a565b6000806040838503121561245f57600080fd5b82359150602083013567ffffffffffffffff81111561247d57600080fd5b6124898582860161238a565b9150509250929050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60ff81811683821601908111156116e7576116e76124a9565b80820281158282048414176116e7576116e76124a9565b808201808211156116e7576116e76124a9565b60006020828403121561251457600080fd5b8151801515811461115057600080fd5b60006020828403121561253657600080fd5b81516001600160881b038116811461115057600080fd5b60006020828403121561255f57600080fd5b81516002811061115057600080fd5b60006020828403121561258057600080fd5b8151611150816120c3565b60006020828403121561259d57600080fd5b5051919050565b600181811c908216806125b857607f821691505b6020821081036125d857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601260045260246000fd5b600060ff831680612607576126076125de565b8060ff84160691505092915050565b60008060006060848603121561262b57600080fd5b835161263681612059565b602085015160409095015190969495509392505050565b6001600160e01b0319831681528151600090612670816004850160208701612262565b919091016004019392505050565b60008251612690818460208701612262565b9190910192915050565b600083516126ac818460208801612262565b6001600160f81b0319939093169190920190815260010192915050565b818103818111156116e7576116e76124a9565b60408152600061270660408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b60408152600061270660408301600a8152690808080808149a59da1d60b21b602082015260400190565b60408152600560408201526422b93937b960d91b60608201526080602082015260006116e46080830184612286565b60008261277c5761277c6125de565b500690565b6040815260006127946040830185612286565b9050826020830152939250505056fe608060405234801561001057600080fd5b5061047c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637668f03b116100665780637668f03b14610116578063bb760a7514610129578063ce03fdab14610149578063e7335c501461015c578063f472a58a1461017f57600080fd5b8063138ac42f146100985780631e543d64146100c857806344f6891e146100db578063622db53814610103575b600080fd5b6100ab6100a6366004610369565b6101a0565b6040516001600160881b0390911681526020015b60405180910390f35b6100ab6100d636600461039b565b6101b3565b6100ee6100e9366004610369565b6101e2565b60405163ffffffff90911681526020016100bf565b6100ee610111366004610369565b61020b565b6100ee610124366004610369565b610226565b61013c610137366004610369565b610240565b6040516100bf919061041e565b6100ee610157366004610369565b61025c565b61016f61016a366004610369565b61027b565b60405190151581526020016100bf565b61019261018d366004610369565b61028e565b6040519081526020016100bf565b6000806101ac836102b1565b9392505050565b6000806101d78760ff1660018111156101ce576101ce610408565b878787876102e0565b979650505050505050565b60006102056101f0836102b1565b60201c6cffffffffffffffffffffffffff1690565b92915050565b6000610205610219836102b1565b60601c64ffffffffff1690565b6000610205610234836102b1565b6001600160881b031690565b600061020561024e836102b1565b6001600160881b0316610340565b600061020561026a836102b1565b60401c68ffffffffffffffffff1690565b6000600160ff608084901c161115610205565b600061020561029c836102b1565b6001600160881b031660009081526020902090565b6000600160ff608084901c1611156102dc57604051632c75dfdf60e11b815260040160405180910390fd5b5090565b600063ffffffff821667ffffffff00000000602085901b166bffffffff0000000000000000604087901b1663ffffffff60601b606089901b1660808a600181111561032d5761032d610408565b60ff16901b171717179695505050505050565b6000610355826001600160881b031660801c90565b60ff16600181111561020557610205610408565b60006020828403121561037b57600080fd5b5035919050565b803563ffffffff8116811461039657600080fd5b919050565b600080600080600060a086880312156103b357600080fd5b853560ff811681146103c457600080fd5b94506103d260208701610382565b93506103e060408701610382565b92506103ee60608701610382565b91506103fc60808701610382565b90509295509295909350565b634e487b7160e01b600052602160045260246000fd5b602081016002831061044057634e487b7160e01b600052602160045260246000fd5b9190529056fea2646970667358221220b13461cadacf61ac6a7eb7e919743e55533329fe0dfa7403f2919d822ad024d364736f6c63430008110033496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a264697066735822122004bf1aa11b4f99f554ce11b735f85293920f1d0e9aa33e95a4e1d19e2087646664736f6c63430008110033",
    "sourceMap": "479:2055:173:-:0;;;1572:26:67;;;1594:4;-1:-1:-1;;1572:26:67;;;;;;;;3288:44:71;;;;;;;;;;;479:2055:173;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101a95760003560e01c806385226c81116100f9578063ba414fa611610097578063e20c9f7111610071578063e20c9f7114610333578063eaee26111461033b578063f1f97ac01461034e578063fa7626d41461036157600080fd5b8063ba414fa614610300578063c10b95e714610318578063c63101b61461032b57600080fd5b806391df0ed8116100d357806391df0ed8146102d2578063a2cdb207146101ae578063a72e0a34146102e5578063b5508aa9146102f857600080fd5b806385226c81146102955780638820cb26146102aa578063916a17c6146102ca57600080fd5b80633f7286f411610166578063660982d911610140578063660982d91461024857806366d9a9a0146102505780637b3471631461026557806382c947b71461026d57600080fd5b80633f7286f4146102045780634dfdb1d41461020c5780635ced058e1461021f57600080fd5b80630621feff146101ae5780630a9254e4146101b05780631ed7831c146101b85780632215ff36146101d65780632cfd9e17146101e95780633e5e3c23146101fc575b600080fd5b005b6101ae610370565b6101c06103bb565b6040516101cd919061200c565b60405180910390f35b6101ae6101e4366004612068565b61041d565b6101ae6101f73660046120d5565b6105b9565b6101c06106b7565b6101c0610717565b6101ae61021a3660046120d5565b610777565b61023061022d36600461216d565b90565b6040516001600160a01b0390911681526020016101cd565b6101ae610e81565b610258610e8b565b6040516101cd9190612186565b6101ae610f7a565b61028761027b366004612239565b6001600160a01b031690565b6040519081526020016101cd565b61029d610ff8565b6040516101cd91906122b2565b6102bd6102b8366004612314565b6110c8565b6040516101cd9190612355565b610258611157565b6102bd6102e0366004612368565b61123d565b6101ae6102f336600461216d565b611355565b61029d6113e1565b6103086114b1565b60405190151581526020016101cd565b6102bd610326366004612417565b6115dc565b6101ae611609565b6101c0611671565b6102bd61034936600461244c565b6116d1565b6102bd61035c366004612417565b6116ed565b6000546103089060ff1681565b565b60405161037c90611fff565b604051809103906000f080158015610398573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d80548060200260200160405190810160405280929190818152602001828054801561041357602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116103f5575b5050505050905090565b61043960ff831661042f6001806124bf565b60ff1660ff61170e565b915060006001600160801b03821661045860ff8516600160801b6124d8565b61046291906124ef565b601b54604051630e7335c560e41b8152600481018390529192506104db916001600160a01b039091169063e7335c5090602401602060405180830381865afa1580156104b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d69190612502565b61174b565b604051630618f58760e51b8152632c75dfdf60e11b6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b15801561052e57600080fd5b505af1158015610542573d6000803e3d6000fd5b5050601b5460405163138ac42f60e01b8152600481018590526001600160a01b03909116925063138ac42f9150602401602060405180830381865afa15801561058f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b39190612524565b50505050565b6105c281611755565b601b54815160208301516040808501516060860151608087015192516307950f5960e21b815260ff909516600486015263ffffffff93841660248601529083166044850152821660648401521660848201526000916001600160a01b031690631e543d649060a401602060405180830381865afa158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b9190612524565b604051602001610696919060789190911b6effffffffffffffffffffffffffffff1916815260110190565b60405160208183030381529060405290506106b381516011611773565b5050565b6060600f805480602002602001604051908101604052809291908181526020018280548015610413576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f5575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610413576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f5575050505050905090565b61078081611755565b601b54815160208301516040808501516060860151608087015192516307950f5960e21b815260ff909516600486015263ffffffff93841660248601529083166044850152821660648401521660848201526000916001600160a01b031690631e543d649060a401602060405180830381865afa158015610805573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108299190612524565b90506000826080015163ffffffff16836060015163ffffffff1664010000000061085391906124d8565b60408501516108719063ffffffff16680100000000000000006124d8565b602086015161088a9063ffffffff16600160601b6124d8565b865161089d9060ff16600160801b6124d8565b6108a791906124ef565b6108b191906124ef565b6108bb91906124ef565b6108c591906124ef565b9050610900826001600160881b0316826040518060400160405280600d81526020016c10b2b731b7b232a432b0b232b960991b815250611862565b601b5460405163138ac42f60e01b81526001600160881b03841660048201526109aa916001600160a01b03169063138ac42f90602401602060405180830381865afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190612524565b6001600160881b0316826040518060400160405280600b81526020016a085ddc985c14185919195960aa1b815250611862565b601b54604051630e7335c560e41b81526001600160881b0384166004820152610a48916001600160a01b03169063e7335c5090602401602060405180830381865afa1580156109fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a219190612502565b6040518060400160405280600981526020016810b4b9a432b0b232b960b91b8152506118aa565b601b5460405163bb760a7560e01b81526001600160881b0384166004820152610afe916001600160a01b03169063bb760a7590602401602060405180830381865afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf919061254d565b6001811115610ad057610ad0612493565b60ff16846000015160ff166040518060400160405280600581526020016421666c616760d81b815250611862565b601b54604051630c45b6a760e31b81526001600160881b0384166004820152610bab916001600160a01b03169063622db53890602401602060405180830381865afa158015610b51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b75919061256e565b63ffffffff16846020015163ffffffff166040518060400160405280600781526020016610b7b934b3b4b760c91b815250611862565b601b5460405163ce03fdab60e01b81526001600160881b0384166004820152610c57916001600160a01b03169063ce03fdab90602401602060405180830381865afa158015610bfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c22919061256e565b63ffffffff16846040015163ffffffff1660405180604001604052806006815260200165216e6f6e636560d01b815250611862565b601b5460405163227b448f60e11b81526001600160881b0384166004820152610d09916001600160a01b0316906344f6891e90602401602060405180830381865afa158015610caa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cce919061256e565b63ffffffff16846060015163ffffffff166040518060400160405280600c81526020016b10b232b9ba34b730ba34b7b760a11b815250611862565b601b54604051637668f03b60e01b81526001600160881b0384166004820152610dc0916001600160a01b031690637668f03b90602401602060405180830381865afa158015610d5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d80919061256e565b63ffffffff16846080015163ffffffff1660405180604001604052806011815260200170085bdc1d1a5b5a5cdd1a58d4195c9a5bd9607a1b815250611862565b601b54604051637a3952c560e11b81526001600160881b0384166004820152610e7c916001600160a01b03169063f472a58a90602401602060405180830381865afa158015610e13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e37919061258b565b604080516020810185905201604051602081830303815290604052805190602001206040518060400160405280600581526020016410b632b0b360d91b8152506118ef565b505050565b61036e6001611355565b60606012805480602002602001604051908101604052809291908181526020016000905b82821015610f715760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610f5957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610f1b5790505b50505050508152505081526020019060010190610eaf565b50505050905090565b6040805160608101909152602e808252737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391612c4060208301396040518263ffffffff1660e01b8152600401610fca9190612355565b600060405180830381600087803b158015610fe457600080fd5b505af11580156105b3573d6000803e3d6000fd5b60606011805480602002602001604051908101604052809291908181526020016000905b82821015610f7157838290600052602060002001805461103b906125a4565b80601f0160208091040260200160405190810160405280929190818152602001828054611067906125a4565b80156110b45780601f10611089576101008083540402835291602001916110b4565b820191906000526020600020905b81548152906001019060200180831161109757829003601f168201915b50505050508152602001906001019061101c565b60606110d483856125f4565b6040805160208101859052908101849052606081018490526080810184905260a0810184905260c0810184905260e08101849052610100810184905290945060009061012001604051602081830303815290604052905061114c61114760008760ff1661114085611937565b9190611952565b6119aa565b9150505b9392505050565b60606013805480602002602001604051908101604052809291908181526020016000905b82821015610f715760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561122557602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116111e75790505b5050505050815250508152602001906001019061117b565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052606090600090605c0160408051808303601f190181529082905280516020909101206338d07aa960e21b82526004820186905260248201819052915060009081908190737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e341eaa490604401606060405180830381865afa1580156112ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113109190612616565b6040805160208101939093528281019190915260f89290921b6001600160f81b0319166060820152815160418183030181526061909101909152979650505050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d631f7b4f3061137983436124ef565b6040518263ffffffff1660e01b815260040161139791815260200190565b600060405180830381600087803b1580156113b157600080fd5b505af11580156113c5573d6000803e3d6000fd5b505050506113de600c826113d991906124d8565b6119e0565b50565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610f71578382906000526020600020018054611424906125a4565b80601f0160208091040260200160405190810160405280929190818152602001828054611450906125a4565b801561149d5780601f106114725761010080835404028352916020019161149d565b820191906000526020600020905b81548152906001019060200180831161148057829003601f168201915b505050505081526020019060010190611405565b60008054610100900460ff16156114d15750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156115d75760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161155f917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161264d565b60408051601f19818403018152908290526115799161267e565b6000604051808303816000865af19150503d80600081146115b6576040519150601f19603f3d011682016040523d82523d6000602084013e6115bb565b606091505b50915050808060200190518101906115d39190612502565b9150505b919050565b6040516060906115f390839060009060200161269a565b6040516020818303038152906040529050919050565b60408051808201825260208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657290820152905163f28dceb360e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391610fca9190600401612355565b6060600c805480602002602001604051908101604052809291908181526020018280548015610413576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f5575050505050905090565b60606116e483838051906020012061123d565b90505b92915050565b60606116e761114760006001855161170591906126c9565b61114086611937565b600061171b848484611a57565b90506111506040518060400160405280600c81526020016b109bdd5b990814995cdd5b1d60a21b81525082611c1f565b6113de8115611cc6565b6117606001806124bf565b815161176c91906125f4565b60ff169052565b8082146106b3577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516117e49060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405161181b91906126dc565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516118529190612714565b60405180910390a16106b3611d36565b818314610e7c577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051611898919061273e565b60405180910390a1610e7c8383611773565b816106b3577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516118de919061273e565b60405180910390a16106b382611cc6565b818314610e7c577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051611925919061273e565b60405180910390a1610e7c8383611e42565b80516000906020830161194a8183611f24565b949350505050565b60008061195f8560801c90565b905061196a85611f6e565b8361197586846124ef565b61197f91906124ef565b111561199e5760405163a3b99ded60e01b815260040160405180910390fd5b61114c84820184611f24565b604051806119bb8360208301611f8b565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d63e5d6bf02611a0483426124ef565b6040518263ffffffff1660e01b8152600401611a2291815260200190565b600060405180830381600087803b158015611a3c57600080fd5b505af1158015611a50573d6000803e3d6000fd5b5050505050565b600081831115611ad35760405162461bcd60e51b815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840160405180910390fd5b828410158015611ae35750818411155b15611aef575082611150565b6000611afb84846126c9565b611b069060016124ef565b905060038511158015611b1857508481115b15611b2f57611b2785856124ef565b915050611150565b611b3c60036000196126c9565b8510158015611b555750611b52856000196126c9565b81115b15611b7057611b66856000196126c9565b611b2790846126c9565b82851115611bc6576000611b8484876126c9565b90506000611b92838361276d565b905080600003611ba757849350505050611150565b6001611bb382886124ef565b611bbd91906126c9565b93505050611c17565b83851015611c17576000611bda86866126c9565b90506000611be8838361276d565b905080600003611bfd57859350505050611150565b611c0781866126c9565b611c129060016124ef565b935050505b509392505050565b60006a636f6e736f6c652e6c6f676001600160a01b03168383604051602401611c49929190612781565b60408051601f198184030181529181526020820180516001600160e01b0316632d839cb360e21b17905251611c7e919061267e565b600060405180830381855afa9150503d8060008114611cb9576040519150601f19603f3d011682016040523d82523d6000602084013e611cbe565b606091505b505050505050565b806113de577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051611d2a9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16113de5b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15611e315760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052611dd0929160200161264d565b60408051601f1981840301815290829052611dea9161267e565b6000604051808303816000865af19150503d8060008114611e27576040519150601f19603f3d011682016040523d82523d6000602084013e611e2c565b606091505b505050505b6000805461ff001916610100179055565b8082146106b3577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051611eb69060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f9982604051611eed91906126dc565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f99816040516118529190612714565b600080611f3183856124ef565b9050604051811115611f41575060005b80600003611f625760405163085f79c360e11b815260040160405180910390fd5b608084901b831761194a565b60006001600160801b038216611f848360801c90565b0192915050565b6040516000906001600160801b03841690608085901c9080851015611fc3576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa905080611fed57604051637c7d772f60e01b815260040160405180910390fd5b608086901b8417979650505050505050565b61049c806127a483390190565b6020808252825182820181905260009190848201906040850190845b8181101561204d5783516001600160a01b031683529284019291840191600101612028565b50909695505050505050565b60ff811681146113de57600080fd5b6000806040838503121561207b57600080fd5b823561208681612059565b915060208301356001600160801b03811681146120a257600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b63ffffffff811681146113de57600080fd5b600060a082840312156120e757600080fd5b60405160a0810181811067ffffffffffffffff8211171561210a5761210a6120ad565b604052823561211881612059565b81526020830135612128816120c3565b6020820152604083013561213b816120c3565b6040820152606083013561214e816120c3565b60608201526080830135612161816120c3565b60808201529392505050565b60006020828403121561217f57600080fd5b5035919050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561222a57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156122155783516001600160e01b0319168252928b019260019290920191908b01906121eb565b50978a019795505050918701916001016121ae565b50919998505050505050505050565b60006020828403121561224b57600080fd5b81356001600160a01b038116811461115057600080fd5b60005b8381101561227d578181015183820152602001612265565b50506000910152565b6000815180845261229e816020860160208601612262565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561230757603f198886030184526122f5858351612286565b945092850192908501906001016122d9565b5092979650505050505050565b60008060006060848603121561232957600080fd5b833561233481612059565b9250602084013561234481612059565b929592945050506040919091013590565b6020815260006116e46020830184612286565b6000806040838503121561237b57600080fd5b50508035926020909101359150565b600082601f83011261239b57600080fd5b813567ffffffffffffffff808211156123b6576123b66120ad565b604051601f8301601f19908116603f011681019082821181831017156123de576123de6120ad565b816040528381528660208588010111156123f757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561242957600080fd5b813567ffffffffffffffff81111561244057600080fd5b61194a8482850161238a565b6000806040838503121561245f57600080fd5b82359150602083013567ffffffffffffffff81111561247d57600080fd5b6124898582860161238a565b9150509250929050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60ff81811683821601908111156116e7576116e76124a9565b80820281158282048414176116e7576116e76124a9565b808201808211156116e7576116e76124a9565b60006020828403121561251457600080fd5b8151801515811461115057600080fd5b60006020828403121561253657600080fd5b81516001600160881b038116811461115057600080fd5b60006020828403121561255f57600080fd5b81516002811061115057600080fd5b60006020828403121561258057600080fd5b8151611150816120c3565b60006020828403121561259d57600080fd5b5051919050565b600181811c908216806125b857607f821691505b6020821081036125d857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601260045260246000fd5b600060ff831680612607576126076125de565b8060ff84160691505092915050565b60008060006060848603121561262b57600080fd5b835161263681612059565b602085015160409095015190969495509392505050565b6001600160e01b0319831681528151600090612670816004850160208701612262565b919091016004019392505050565b60008251612690818460208701612262565b9190910192915050565b600083516126ac818460208801612262565b6001600160f81b0319939093169190920190815260010192915050565b818103818111156116e7576116e76124a9565b60408152600061270660408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b60408152600061270660408301600a8152690808080808149a59da1d60b21b602082015260400190565b60408152600560408201526422b93937b960d91b60608201526080602082015260006116e46080830184612286565b60008261277c5761277c6125de565b500690565b6040815260006127946040830185612286565b9050826020830152939250505056fe608060405234801561001057600080fd5b5061047c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637668f03b116100665780637668f03b14610116578063bb760a7514610129578063ce03fdab14610149578063e7335c501461015c578063f472a58a1461017f57600080fd5b8063138ac42f146100985780631e543d64146100c857806344f6891e146100db578063622db53814610103575b600080fd5b6100ab6100a6366004610369565b6101a0565b6040516001600160881b0390911681526020015b60405180910390f35b6100ab6100d636600461039b565b6101b3565b6100ee6100e9366004610369565b6101e2565b60405163ffffffff90911681526020016100bf565b6100ee610111366004610369565b61020b565b6100ee610124366004610369565b610226565b61013c610137366004610369565b610240565b6040516100bf919061041e565b6100ee610157366004610369565b61025c565b61016f61016a366004610369565b61027b565b60405190151581526020016100bf565b61019261018d366004610369565b61028e565b6040519081526020016100bf565b6000806101ac836102b1565b9392505050565b6000806101d78760ff1660018111156101ce576101ce610408565b878787876102e0565b979650505050505050565b60006102056101f0836102b1565b60201c6cffffffffffffffffffffffffff1690565b92915050565b6000610205610219836102b1565b60601c64ffffffffff1690565b6000610205610234836102b1565b6001600160881b031690565b600061020561024e836102b1565b6001600160881b0316610340565b600061020561026a836102b1565b60401c68ffffffffffffffffff1690565b6000600160ff608084901c161115610205565b600061020561029c836102b1565b6001600160881b031660009081526020902090565b6000600160ff608084901c1611156102dc57604051632c75dfdf60e11b815260040160405180910390fd5b5090565b600063ffffffff821667ffffffff00000000602085901b166bffffffff0000000000000000604087901b1663ffffffff60601b606089901b1660808a600181111561032d5761032d610408565b60ff16901b171717179695505050505050565b6000610355826001600160881b031660801c90565b60ff16600181111561020557610205610408565b60006020828403121561037b57600080fd5b5035919050565b803563ffffffff8116811461039657600080fd5b919050565b600080600080600060a086880312156103b357600080fd5b853560ff811681146103c457600080fd5b94506103d260208701610382565b93506103e060408701610382565b92506103ee60608701610382565b91506103fc60808701610382565b90509295509295909350565b634e487b7160e01b600052602160045260246000fd5b602081016002831061044057634e487b7160e01b600052602160045260246000fd5b9190529056fea2646970667358221220b13461cadacf61ac6a7eb7e919743e55533329fe0dfa7403f2919d822ad024d364736f6c63430008110033496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a264697066735822122004bf1aa11b4f99f554ce11b735f85293920f1d0e9aa33e95a4e1d19e2087646664736f6c63430008110033",
    "sourceMap": "479:2055:173:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:43:185;;574:73:173;;;:::i;2161:134:74:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2140:392:173;;;;;;:::i;:::-;;:::i;1836:298::-;;;;;;:::i;:::-;;:::i;2930:133:74:-;;;:::i;2631:141::-;;;:::i;653:1177:173:-;;;;;;:::i;:::-;;:::i;1189:123:185:-;;;;;;:::i;:::-;1299:3;1189:123;;;;-1:-1:-1;;;;;2915:32:200;;;2897:51;;2885:2;2870:18;1189:123:185;2751:203:200;863:58:185;;;:::i;2447:178:74:-;;;:::i;:::-;;;;;;;:::i;653:109:185:-;;;:::i;1058:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1153:22:185;;1058:125;;;;4970:25:200;;;4958:2;4943:18;1058:125:185;4824:177:200;2301:140:74;;;:::i;:::-;;;;;;;:::i;449:473:181:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2778:146:74:-;;;:::i;1493:325:185:-;;;;;;:::i;:::-;;:::i;927:125::-;;;;;;:::i;:::-;;:::i;1866:141:74:-;;;:::i;1819:584:67:-;;;:::i;:::-;;;7624:14:200;;7617:22;7599:41;;7587:2;7572:18;1819:584:67;7459:187:200;1102:134:181;;;;;;:::i;:::-;;:::i;768:89:185:-;;;:::i;2013:142:74:-;;;:::i;1318:169:185:-;;;;;;:::i;:::-;;:::i;928:168:181:-;;;;;;:::i;:::-;;:::i;1572:26:67:-;;;;;;;;;604:43:185;:::o;574:73:173:-;621:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;608:10:173;:32;;-1:-1:-1;;;;;;608:32:173;-1:-1:-1;;;;;608:32:173;;;;;;;;;;574:73::o;2161:134:74:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:74;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2140:392:173:-;2248:50;;;;2260:32;2266:21;;2260:32;:::i;:::-;2248:50;;2294:3;2248:5;:50::i;:::-;2235:64;-1:-1:-1;2309:22:173;-1:-1:-1;;;;;2334:36:173;;:24;:13;;;-1:-1:-1;;;2334:24:173;:::i;:::-;:36;;;;:::i;:::-;2392:10;;:35;;-1:-1:-1;;;2392:35:173;;;;;4970:25:200;;;2309:61:173;;-1:-1:-1;2380:48:173;;-1:-1:-1;;;;;2392:10:173;;;;:19;;4943:18:200;;2392:35:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2380:11;:48::i;:::-;2438:40;;-1:-1:-1;;;2438:40:173;;-1:-1:-1;;;2438:40:173;;;10420:52:200;2438:15:173;;;;10393:18:200;;2438:40:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2488:10:173;;:37;;-1:-1:-1;;;2488:37:173;;;;;4970:25:200;;;-1:-1:-1;;;;;2488:10:173;;;;-1:-1:-1;2488:21:173;;-1:-1:-1;4943:18:200;;2488:37:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2225:307;2140:392;;:::o;1836:298::-;1901:14;:2;:12;:14::i;:::-;1982:10;;2006:7;;2015:9;;;;2026:8;;;;;2036:14;;;;2052:19;;;;1982:90;;-1:-1:-1;;;1982:90:173;;11072:4:200;11060:17;;;1982:90:173;;;11042:36:200;11097:10;11143:15;;;11123:18;;;11116:43;11195:15;;;11175:18;;;11168:43;11247:15;;11227:18;;;11220:43;11300:15;11279:19;;;11272:44;1925:25:173;;-1:-1:-1;;;;;1982:10:173;;:23;;11014:19:200;;1982:90:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1965:108;;;;;;;11476:3:200;11472:16;;;;-1:-1:-1;;11468:60:200;11456:73;;11554:2;11545:12;;11327:236;1965:108:173;;;;;;;;;;;;;1925:148;;2083:44;2092:12;:19;1901:2:45;2083:8:173;:44::i;:::-;1891:243;1836:298;:::o;2930:133:74:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:74;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:74;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;653:1177:173:-;761:14;:2;:12;:14::i;:::-;828:10;;852:7;;861:9;;;;872:8;;;;;882:14;;;;898:19;;;;828:90;;-1:-1:-1;;;828:90:173;;11072:4:200;11060:17;;;828:90:173;;;11042:36:200;11097:10;11143:15;;;11123:18;;;11116:43;11195:15;;;11175:18;;;11168:43;11247:15;;11227:18;;;11220:43;11300:15;11279:19;;;11272:44;810:15:173;;-1:-1:-1;;;;;828:10:173;;:23;;11014:19:200;;828:90:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;810:108;;928:16;1094:2;:19;;;1086:28;;1058:2;:14;;;1050:23;;1076:7;1050:33;;;;:::i;:::-;1016:8;;;;1008:27;;:17;;1028:7;1008:27;:::i;:::-;985:9;;;;977:28;;:18;;-1:-1:-1;;;977:28:173;:::i;:::-;955:7;;947:27;;:16;;-1:-1:-1;;;947:27:173;:::i;:::-;:58;;;;:::i;:::-;:88;;;;:::i;:::-;:136;;;;:::i;:::-;:167;;;;:::i;:::-;928:186;;1124:44;1133:7;-1:-1:-1;;;;;1124:44:173;1142:8;1124:44;;;;;;;;;;;;;-1:-1:-1;;;1124:44:173;;;:8;:44::i;:::-;1187:10;;:30;;-1:-1:-1;;;1187:30:173;;-1:-1:-1;;;;;11732:49:200;;1187:30:173;;;11714:68:200;1178:65:173;;-1:-1:-1;;;;;1187:10:173;;:21;;11687:18:200;;1187:30:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1178:65:173;1219:8;1178:65;;;;;;;;;;;;;-1:-1:-1;;;1178:65:173;;;:8;:65::i;:::-;1264:10;;:28;;-1:-1:-1;;;1264:28:173;;-1:-1:-1;;;;;11732:49:200;;1264:28:173;;;11714:68:200;1253:53:173;;-1:-1:-1;;;;;1264:10:173;;:19;;11687:18:200;;1264:28:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1253:53;;;;;;;;;;;;;-1:-1:-1;;;1253:53:173;;;:10;:53::i;:::-;1355:10;;:24;;-1:-1:-1;;;1355:24:173;;-1:-1:-1;;;;;11732:49:200;;1355:24:173;;;11714:68:200;1340:59:173;;-1:-1:-1;;;;;1355:10:173;;:15;;11687:18:200;;1355:24:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1349:31;;;;;;;;:::i;:::-;1340:59;;1382:2;:7;;;1340:59;;;;;;;;;;;;;;;-1:-1:-1;;;1340:59:173;;;:8;:59::i;:::-;1418:10;;:26;;-1:-1:-1;;;1418:26:173;;-1:-1:-1;;;;;11732:49:200;;1418:26:173;;;11714:68:200;1409:58:173;;-1:-1:-1;;;;;1418:10:173;;:17;;11687:18:200;;1418:26:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1409:58;;1446:2;:9;;;1409:58;;;;;;;;;;;;;;;-1:-1:-1;;;1409:58:173;;;:8;:58::i;:::-;1486:10;;:25;;-1:-1:-1;;;1486:25:173;;-1:-1:-1;;;;;11732:49:200;;1486:25:173;;;11714:68:200;1477:55:173;;-1:-1:-1;;;;;1486:10:173;;:16;;11687:18:200;;1486:25:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1477:55;;1513:2;:8;;;1477:55;;;;;;;;;;;;;;;-1:-1:-1;;;1477:55:173;;;:8;:55::i;:::-;1551:10;;:31;;-1:-1:-1;;;1551:31:173;;-1:-1:-1;;;;;11732:49:200;;1551:31:173;;;11714:68:200;1542:73:173;;-1:-1:-1;;;;;1551:10:173;;:22;;11687:18:200;;1551:31:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1542:73;;1584:2;:14;;;1542:73;;;;;;;;;;;;;;;-1:-1:-1;;;1542:73:173;;;:8;:73::i;:::-;1634:10;;:36;;-1:-1:-1;;;1634:36:173;;-1:-1:-1;;;;;11732:49:200;;1634:36:173;;;11714:68:200;1625:88:173;;-1:-1:-1;;;;;1634:10:173;;:27;;11687:18:200;;1634:36:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1625:88;;1672:2;:19;;;1625:88;;;;;;;;;;;;;;;-1:-1:-1;;;1625:88:173;;;:8;:88::i;:::-;1756:10;;:24;;-1:-1:-1;;;1756:24:173;;-1:-1:-1;;;;;11732:49:200;;1756:24:173;;;11714:68:200;1747:76:173;;-1:-1:-1;;;;;1756:10:173;;:15;;11687:18:200;;1756:24:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1792:20;;;;;;4970:25:200;;;4943:18;1792:20:173;;;;;;;;;;;;1782:31;;;;;;1747:76;;;;;;;;;;;;;-1:-1:-1;;;1747:76:173;;;:8;:76::i;:::-;708:1122;;653:1177;:::o;863:58:185:-;901:13;912:1;901:10;:13::i;2447:178:74:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;653:109:185:-;728:26;;;;;;;;;;;;;712:15;;;;728:26;;;;;712:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2301:140:74;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;449:473:181;583:12;627:34;643:18;627:13;:34;:::i;:::-;730:64;;;;;;13522:19:200;;;13557:12;;;13550:28;;;13594:12;;;13587:28;;;13631:12;;;13624:28;;;13668:13;;;13661:29;;;13706:13;;;13699:29;;;13744:13;;;13737:29;;;13782:13;;;13775:29;;;611:50:181;;-1:-1:-1;707:20:181;;13820:13:200;;730:64:181;;;;;;;;;;;;707:87;;854:61;:53;883:1;892:13;854:53;;:13;:7;:11;:13::i;:::-;:19;:53;:19;:53::i;:::-;:59;:61::i;:::-;847:68;;;449:473;;;;;;:::o;2778:146:74:-;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1493:325:185;1632:63;;14086:66:200;1632:63:185;;;14074:79:200;14169:12;;;14162:28;;;1571:22:185;;1605:14;;14206:12:200;;1632:63:185;;;;;;-1:-1:-1;;1632:63:185;;;;;;;1622:74;;1632:63;1622:74;;;;-1:-1:-1;;;1740:24:185;;;;;14403:25:200;;;14444:18;;;14437:34;;;1622:74:185;-1:-1:-1;1707:7:185;;;;;;1740;;;;14376:18:200;;1740:24:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1786:25;;;;;;15037:19:200;;;;15072:12;;;15065:28;;;;15149:3;15127:16;;;;-1:-1:-1;;;;;;15123:36:200;15109:12;;;15102:58;1786:25:185;;;;;;;;;15176:12:200;;;;1786:25:185;;;;1493:325;-1:-1:-1;;;;;;;1493:325:185:o;927:125::-;980:7;;988:21;1003:6;988:12;:21;:::i;:::-;980:30;;;;;;;;;;;;;4970:25:200;;4958:2;4943:18;;4824:177;980:30:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:25;3886:10:184;1025:6:185;:19;;;;:::i;:::-;1020:4;:25::i;:::-;927:125;:::o;1866:141:74:-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:67;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:67;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;15373:51:200;;;-1:-1:-1;;;15440:18:200;;;15433:34;2196:43:67;;;;;;;;;15346:18:200;;;2196:43:67;;;-1:-1:-1;;1671:64:67;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:67;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:67:o;1102:134:181:-;1197:32;;1166:12;;1197:32;;1210:7;;1226:1;;1197:32;;;:::i;:::-;;;;;;;;;;;;;1190:39;;1102:134;;;:::o;768:89:185:-;833:16;;;;;;;;;;;;;;;;;817:33;;-1:-1:-1;;;817:33:185;;:15;;;;:33;;833:16;817:33;;;:::i;2013:142:74:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:74;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;1318:169:185:-;1399:22;1440:40;1452:7;1471;1461:18;;;;;;1440:11;:40::i;:::-;1433:47;;1318:169;;;;;:::o;928:168:181:-;992:12;1023:66;:58;1052:1;1078;1061:7;:14;:18;;;;:::i;:::-;1023:13;:7;:11;:13::i;2703:190:79:-;2786:14;2821:19;2828:1;2831:3;2836;2821:6;:19::i;:::-;2812:28;;2850:36;;;;;;;;;;;;;;-1:-1:-1;;;2850:36:79;;;2879:6;2850:12;:36::i;587:83:70:-;646:17;658:4;657:5;646:10;:17::i;5410:125:190:-;5495:32;5501:21;;5495:32;:::i;:::-;5484:7;;:44;;;;:::i;:::-;5474:54;;;;5410:125::o;5209:262:67:-;5271:1;5266;:6;5262:203;;5293:41;;;;;16897:2:200;16879:21;;;16936:2;16916:18;;;16909:30;16975:34;16970:2;16955:18;;16948:62;-1:-1:-1;;;17041:2:200;17026:18;;17019:32;17083:3;17068:19;;16695:398;5293:41:67;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;5476:178::-;5557:1;5552;:6;5548:100;;5579:30;5605:3;5579:30;;;;;;:::i;:::-;;;;;;;;5623:14;5632:1;5635;5623:8;:14::i;3425:191::-;3504:9;3499:111;;3534:30;3560:3;3534:30;;;;;;:::i;:::-;;;;;;;;3578:21;3589:9;3578:10;:21::i;4377:185::-;4464:1;4459;:6;4455:101;;4486:31;4513:3;4486:31;;;;;;:::i;:::-;;;;;;;;4531:14;4540:1;4543;4531:8;:14::i;2972:569:52:-;3060:10;;3026:7;;3486:4;3477:14;;3517:17;3477:14;3060:10;3517:5;:17::i;:::-;3510:24;2972:569;-1:-1:-1;;;;2972:569:52:o;10331:484::-;10416:7;10435:12;10450:13;:7;6898:3;6871:30;;6712:196;10450:13;10435:28;;10546:13;:7;:11;:13::i;:::-;10539:4;10523:13;10530:6;10523:4;:13;:::i;:::-;:20;;;;:::i;:::-;:36;10519:87;;;10582:13;;-1:-1:-1;;;10582:13:52;;;;;;;;;;;10519:87;10758:40;10778:6;10771:4;:13;10792:4;10758:5;:40::i;4079:1041::-;4325:4;4319:11;;4455:34;4469:7;4484:4;4478:10;;4455:13;:34::i;:::-;-1:-1:-1;;;;;;7239:43:52;;4701:12;8097:2;8081:18;;-1:-1:-1;;8465:20:52;4997;;5019:4;4993:31;4987:4;4980:45;-1:-1:-1;5087:17:52;;4079:1041;;-1:-1:-1;4079:1041:52:o;17805:93:72:-;17860:7;;17868:22;17886:4;17868:15;:22;:::i;:::-;17860:31;;;;;;;;;;;;;4970:25:200;;4958:2;4943:18;;4824:177;17860:31:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17805:93;:::o;1434:1263:79:-;1518:14;1559:3;1552;:10;;1544:85;;;;-1:-1:-1;;;1544:85:79;;18785:2:200;1544:85:79;;;18767:21:200;18824:2;18804:18;;;18797:30;18863:34;18843:18;;;18836:62;18934:32;18914:18;;;18907:60;18984:19;;1544:85:79;;;;;;;;1863:3;1858:1;:8;;:20;;;;;1875:3;1870:1;:8;;1858:20;1854:34;;;-1:-1:-1;1887:1:79;1880:8;;1854:34;1899:12;1914:9;1920:3;1914;:9;:::i;:::-;:13;;1926:1;1914:13;:::i;:::-;1899:28;;2122:1;2117;:6;;:18;;;;;2134:1;2127:4;:8;2117:18;2113:38;;;2144:7;2150:1;2144:3;:7;:::i;:::-;2137:14;;;;;2113:38;2170:15;2184:1;-1:-1:-1;;2170:15:79;:::i;:::-;2165:1;:20;;:46;;;;-1:-1:-1;2196:15:79;2210:1;-1:-1:-1;;2196:15:79;:::i;:::-;2189:4;:22;2165:46;2161:82;;;2227:15;2241:1;-1:-1:-1;;2227:15:79;:::i;:::-;2220:23;;:3;:23;:::i;2161:82::-;2347:3;2343:1;:7;2339:352;;;2366:12;2381:7;2385:3;2381:1;:7;:::i;:::-;2366:22;-1:-1:-1;2402:11:79;2416;2423:4;2366:22;2416:11;:::i;:::-;2402:25;;2445:3;2452:1;2445:8;2441:24;;2462:3;2455:10;;;;;;;2441:24;2500:1;2488:9;2494:3;2488;:9;:::i;:::-;:13;;;;:::i;:::-;2479:22;;2352:160;;2339:352;;;2526:3;2522:1;:7;2518:173;;;2545:12;2560:7;2566:1;2560:3;:7;:::i;:::-;2545:22;-1:-1:-1;2581:11:79;2595;2602:4;2545:22;2595:11;:::i;:::-;2581:25;;2624:3;2631:1;2624:8;2620:24;;2641:3;2634:10;;;;;;;2620:24;2667:9;2673:3;2667;:9;:::i;:::-;:13;;2679:1;2667:13;:::i;:::-;2658:22;;2531:160;;2518:173;1534:1163;1434:1263;;;;;:::o;9671:207::-;9747:11;702:42;-1:-1:-1;;;;;9763:36:79;9847:2;9851;9800:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9800:54:79;;;;;;;;;;;;;;-1:-1:-1;;;;;9800:54:79;-1:-1:-1;;;9800:54:79;;;9763:92;;;9800:54;9763:92;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9671:207:79:o;3262:157:67:-;3322:9;3317:96;;3352:30;;;;;19629:2:200;19611:21;;;19668:2;19648:18;;;19641:30;19707:25;19702:2;19687:18;;19680:53;19765:2;19750:18;;19427:347;3352:30:67;;;;;;;;3396:6;2409:432;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;19981:51:200;;;-1:-1:-1;;;20048:18:200;;;20041:34;;;;2712:4:67;20091:18:200;;;20084:34;2489:11:67;;1671:64;2586:43;;19954:18:200;;2652:67:67;;;-1:-1:-1;;2652:67:67;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:67;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:67;2820:7;:14;;-1:-1:-1;;2820:14:67;;;;;2409:432::o;4095:277::-;4163:1;4158;:6;4154:212;;4185:44;;;;;20331:2:200;20313:21;;;20370:2;20350:18;;;20343:30;20409:34;20404:2;20389:18;;20382:62;-1:-1:-1;;;20475:2:200;20460:18;;20453:35;20520:3;20505:19;;20129:401;4185:44:67;;;;;;;;4248:34;4280:1;4248:34;;;;;;:::i;:::-;;;;;;;;4301;4333:1;4301:34;;;;;;:::i;2092:540:52:-;2158:7;;2192:11;2199:4;2192;:11;:::i;:::-;2177:26;;2471:4;2465:11;2459:4;2456:21;2453:38;;;-1:-1:-1;2488:1:52;2453:38;2514:4;2522:1;2514:9;2510:66;;2546:19;;-1:-1:-1;;;2546:19:52;;;;;;;;;;;2510:66;17362:3;17354:11;;;17353:20;;2592:33;17029:352;7459:258;7512:12;-1:-1:-1;;;;;7239:43:52;;7671:13;:7;6898:3;6871:30;;6712:196;7671:13;:29;;7459:258;-1:-1:-1;;7459:258:52:o;18013:842::-;18352:4;18346:11;18091:7;;-1:-1:-1;;;;;7239:43:52;;;6898:3;6871:30;;;;18434:12;;;18430:66;;;18469:16;;-1:-1:-1;;;18469:16:52;;;;;;;;;;;18430:66;18505:8;18721:4;18713:6;18707:4;18699:6;18693:4;18686:5;18675:51;18668:58;;18750:3;18745:37;;18762:20;;-1:-1:-1;;;18762:20:52;;;;;;;;;;;18745:37;17362:3;17354:11;;;17353:20;;18792:56;18013:842;-1:-1:-1;;;;;;;18013:842:52:o;-1:-1:-1:-;;;;;;;;:::o;14:658:200:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:200;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:200;;14:658;-1:-1:-1;;;;;;14:658:200:o;677:114::-;761:4;754:5;750:16;743:5;740:27;730:55;;781:1;778;771:12;796:440;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;978:9;965:23;997:29;1020:5;997:29;:::i;:::-;1045:5;-1:-1:-1;1102:2:200;1087:18;;1074:32;-1:-1:-1;;;;;1137:48:200;;1125:61;;1115:89;;1200:1;1197;1190:12;1115:89;1223:7;1213:17;;;796:440;;;;;:::o;1241:127::-;1302:10;1297:3;1293:20;1290:1;1283:31;1333:4;1330:1;1323:15;1357:4;1354:1;1347:15;1373:121;1458:10;1451:5;1447:22;1440:5;1437:33;1427:61;;1484:1;1481;1474:12;1499:1062;1586:6;1639:3;1627:9;1618:7;1614:23;1610:33;1607:53;;;1656:1;1653;1646:12;1607:53;1689:2;1683:9;1731:3;1723:6;1719:16;1801:6;1789:10;1786:22;1765:18;1753:10;1750:34;1747:62;1744:88;;;1812:18;;:::i;:::-;1848:2;1841:22;1885:23;;1917:29;1885:23;1917:29;:::i;:::-;1955:21;;2028:2;2013:18;;2000:32;2041;2000;2041;:::i;:::-;2101:2;2089:15;;2082:32;2166:2;2151:18;;2138:32;2179;2138;2179;:::i;:::-;2239:2;2227:15;;2220:32;2304:2;2289:18;;2276:32;2317;2276;2317;:::i;:::-;2377:2;2365:15;;2358:32;2442:3;2427:19;;2414:33;2456:32;2414:33;2456:32;:::i;:::-;2516:3;2504:16;;2497:33;2508:6;1499:1062;-1:-1:-1;;;1499:1062:200:o;2566:180::-;2625:6;2678:2;2666:9;2657:7;2653:23;2649:32;2646:52;;;2694:1;2691;2684:12;2646:52;-1:-1:-1;2717:23:200;;2566:180;-1:-1:-1;2566:180:200:o;2959:1569::-;3163:4;3192:2;3232;3221:9;3217:18;3262:2;3251:9;3244:21;3285:6;3320;3314:13;3351:6;3343;3336:22;3377:2;3367:12;;3410:2;3399:9;3395:18;3388:25;;3472:2;3462:6;3459:1;3455:14;3444:9;3440:30;3436:39;3510:2;3502:6;3498:15;3531:1;3552;3562:937;3578:6;3573:3;3570:15;3562:937;;;3647:22;;;-1:-1:-1;;3643:36:200;3631:49;;3703:13;;3790:9;;-1:-1:-1;;;;;3786:35:200;3771:51;;3861:11;;3855:18;3893:15;;;3886:27;;;3974:19;;3743:15;;;4006:24;;;4096:21;;;;4141:1;;4064:2;4052:15;;;4155:236;4171:8;4166:3;4163:17;4155:236;;;4252:15;;-1:-1:-1;;;;;;4248:42:200;4234:57;;4360:17;;;;4199:1;4190:11;;;;;4317:14;;;;4155:236;;;-1:-1:-1;4477:12:200;;;;4414:5;-1:-1:-1;;;4442:15:200;;;;3604:1;3595:11;3562:937;;;-1:-1:-1;4516:6:200;;2959:1569;-1:-1:-1;;;;;;;;;2959:1569:200:o;4533:286::-;4592:6;4645:2;4633:9;4624:7;4620:23;4616:32;4613:52;;;4661:1;4658;4651:12;4613:52;4687:23;;-1:-1:-1;;;;;4739:31:200;;4729:42;;4719:70;;4785:1;4782;4775:12;5006:250;5091:1;5101:113;5115:6;5112:1;5109:13;5101:113;;;5191:11;;;5185:18;5172:11;;;5165:39;5137:2;5130:10;5101:113;;;-1:-1:-1;;5248:1:200;5230:16;;5223:27;5006:250::o;5261:271::-;5303:3;5341:5;5335:12;5368:6;5363:3;5356:19;5384:76;5453:6;5446:4;5441:3;5437:14;5430:4;5423:5;5419:16;5384:76;:::i;:::-;5514:2;5493:15;-1:-1:-1;;5489:29:200;5480:39;;;;5521:4;5476:50;;5261:271;-1:-1:-1;;5261:271:200:o;5537:803::-;5699:4;5728:2;5768;5757:9;5753:18;5798:2;5787:9;5780:21;5821:6;5856;5850:13;5887:6;5879;5872:22;5925:2;5914:9;5910:18;5903:25;;5987:2;5977:6;5974:1;5970:14;5959:9;5955:30;5951:39;5937:53;;6025:2;6017:6;6013:15;6046:1;6056:255;6070:6;6067:1;6064:13;6056:255;;;6163:2;6159:7;6147:9;6139:6;6135:22;6131:36;6126:3;6119:49;6191:40;6224:6;6215;6209:13;6191:40;:::i;:::-;6181:50;-1:-1:-1;6289:12:200;;;;6254:15;;;;6092:1;6085:9;6056:255;;;-1:-1:-1;6328:6:200;;5537:803;-1:-1:-1;;;;;;;5537:803:200:o;6345:448::-;6418:6;6426;6434;6487:2;6475:9;6466:7;6462:23;6458:32;6455:52;;;6503:1;6500;6493:12;6455:52;6542:9;6529:23;6561:29;6584:5;6561:29;:::i;:::-;6609:5;-1:-1:-1;6666:2:200;6651:18;;6638:32;6679:31;6638:32;6679:31;:::i;:::-;6345:448;;6729:7;;-1:-1:-1;;;6783:2:200;6768:18;;;;6755:32;;6345:448::o;6798:218::-;6945:2;6934:9;6927:21;6908:4;6965:45;7006:2;6995:9;6991:18;6983:6;6965:45;:::i;7021:248::-;7089:6;7097;7150:2;7138:9;7129:7;7125:23;7121:32;7118:52;;;7166:1;7163;7156:12;7118:52;-1:-1:-1;;7189:23:200;;;7259:2;7244:18;;;7231:32;;-1:-1:-1;7021:248:200:o;7651:718::-;7693:5;7746:3;7739:4;7731:6;7727:17;7723:27;7713:55;;7764:1;7761;7754:12;7713:55;7800:6;7787:20;7826:18;7863:2;7859;7856:10;7853:36;;;7869:18;;:::i;:::-;7944:2;7938:9;7912:2;7998:13;;-1:-1:-1;;7994:22:200;;;8018:2;7990:31;7986:40;7974:53;;;8042:18;;;8062:22;;;8039:46;8036:72;;;8088:18;;:::i;:::-;8128:10;8124:2;8117:22;8163:2;8155:6;8148:18;8209:3;8202:4;8197:2;8189:6;8185:15;8181:26;8178:35;8175:55;;;8226:1;8223;8216:12;8175:55;8290:2;8283:4;8275:6;8271:17;8264:4;8256:6;8252:17;8239:54;8337:1;8330:4;8325:2;8317:6;8313:15;8309:26;8302:37;8357:6;8348:15;;;;;;7651:718;;;;:::o;8374:320::-;8442:6;8495:2;8483:9;8474:7;8470:23;8466:32;8463:52;;;8511:1;8508;8501:12;8463:52;8551:9;8538:23;8584:18;8576:6;8573:30;8570:50;;;8616:1;8613;8606:12;8570:50;8639:49;8680:7;8671:6;8660:9;8656:22;8639:49;:::i;8699:388::-;8776:6;8784;8837:2;8825:9;8816:7;8812:23;8808:32;8805:52;;;8853:1;8850;8843:12;8805:52;8889:9;8876:23;8866:33;;8950:2;8939:9;8935:18;8922:32;8977:18;8969:6;8966:30;8963:50;;;9009:1;9006;8999:12;8963:50;9032:49;9073:7;9064:6;9053:9;9049:22;9032:49;:::i;:::-;9022:59;;;8699:388;;;;;:::o;9092:127::-;9153:10;9148:3;9144:20;9141:1;9134:31;9184:4;9181:1;9174:15;9208:4;9205:1;9198:15;9224:127;9285:10;9280:3;9276:20;9273:1;9266:31;9316:4;9313:1;9306:15;9340:4;9337:1;9330:15;9356:148;9444:4;9423:12;;;9437;;;9419:31;;9462:13;;9459:39;;;9478:18;;:::i;9509:168::-;9582:9;;;9613;;9630:15;;;9624:22;;9610:37;9600:71;;9651:18;;:::i;9682:125::-;9747:9;;;9768:10;;;9765:36;;;9781:18;;:::i;9994:277::-;10061:6;10114:2;10102:9;10093:7;10089:23;10085:32;10082:52;;;10130:1;10127;10120:12;10082:52;10162:9;10156:16;10215:5;10208:13;10201:21;10194:5;10191:32;10181:60;;10237:1;10234;10227:12;10483:307;10553:6;10606:2;10594:9;10585:7;10581:23;10577:32;10574:52;;;10622:1;10619;10612:12;10574:52;10654:9;10648:16;-1:-1:-1;;;;;10697:5:200;10693:48;10686:5;10683:59;10673:87;;10756:1;10753;10746:12;11793:277;11880:6;11933:2;11921:9;11912:7;11908:23;11904:32;11901:52;;;11949:1;11946;11939:12;11901:52;11981:9;11975:16;12020:1;12013:5;12010:12;12000:40;;12036:1;12033;12026:12;12075:249;12144:6;12197:2;12185:9;12176:7;12172:23;12168:32;12165:52;;;12213:1;12210;12203:12;12165:52;12245:9;12239:16;12264:30;12288:5;12264:30;:::i;12329:184::-;12399:6;12452:2;12440:9;12431:7;12427:23;12423:32;12420:52;;;12468:1;12465;12458:12;12420:52;-1:-1:-1;12491:16:200;;12329:184;-1:-1:-1;12329:184:200:o;12518:380::-;12597:1;12593:12;;;;12640;;;12661:61;;12715:4;12707:6;12703:17;12693:27;;12661:61;12768:2;12760:6;12757:14;12737:18;12734:38;12731:161;;12814:10;12809:3;12805:20;12802:1;12795:31;12849:4;12846:1;12839:15;12877:4;12874:1;12867:15;12731:161;;12518:380;;;:::o;12903:127::-;12964:10;12959:3;12955:20;12952:1;12945:31;12995:4;12992:1;12985:15;13019:4;13016:1;13009:15;13035:157;13065:1;13099:4;13096:1;13092:12;13123:3;13113:37;;13130:18;;:::i;:::-;13182:3;13175:4;13172:1;13168:12;13164:22;13159:27;;;13035:157;;;;:::o;14482:369::-;14568:6;14576;14584;14637:2;14625:9;14616:7;14612:23;14608:32;14605:52;;;14653:1;14650;14643:12;14605:52;14685:9;14679:16;14704:29;14727:5;14704:29;:::i;:::-;14797:2;14782:18;;14776:25;14841:2;14826:18;;;14820:25;14752:5;;14776:25;;-1:-1:-1;14820:25:200;14482:369;-1:-1:-1;;;14482:369:200:o;15478:384::-;-1:-1:-1;;;;;;15663:33:200;;15651:46;;15720:13;;15633:3;;15742:74;15720:13;15805:1;15796:11;;15789:4;15777:17;;15742:74;:::i;:::-;15836:16;;;;15854:1;15832:24;;15478:384;-1:-1:-1;;;15478:384:200:o;15867:287::-;15996:3;16034:6;16028:13;16050:66;16109:6;16104:3;16097:4;16089:6;16085:17;16050:66;:::i;:::-;16132:16;;;;;15867:287;-1:-1:-1;;15867:287:200:o;16159:398::-;16314:3;16352:6;16346:13;16368:66;16427:6;16422:3;16415:4;16407:6;16403:17;16368:66;:::i;:::-;-1:-1:-1;;;;;;16495:26:200;;;;16456:16;;;;16481:41;;;16549:1;16538:13;;16159:398;-1:-1:-1;;16159:398:200:o;16562:128::-;16629:9;;;16650:11;;;16647:37;;;16664:18;;:::i;17262:348::-;17492:2;17481:9;17474:21;17455:4;17512:49;17557:2;17546:9;17542:18;17175:2;17163:15;;-1:-1:-1;;;17203:4:200;17194:14;;17187:36;17248:2;17239:12;;17098:159;17512:49;17504:57;;17597:6;17592:2;17581:9;17577:18;17570:34;17262:348;;;;:::o;17779:::-;18009:2;17998:9;17991:21;17972:4;18029:49;18074:2;18063:9;18059:18;17692:2;17680:15;;-1:-1:-1;;;17720:4:200;17711:14;;17704:36;17765:2;17756:12;;17615:159;18132:446;18382:2;18371:9;18364:21;18421:1;18416:2;18405:9;18401:18;18394:29;-1:-1:-1;;;18454:2:200;18443:9;18439:18;18432:35;18505:3;18498:4;18487:9;18483:20;18476:33;18345:4;18526:46;18567:3;18556:9;18552:19;18544:6;18526:46;:::i;19014:112::-;19046:1;19072;19062:35;;19077:18;;:::i;:::-;-1:-1:-1;19111:9:200;;19014:112::o;19131:291::-;19308:2;19297:9;19290:21;19271:4;19328:45;19369:2;19358:9;19354:18;19346:6;19328:45;:::i;:::-;19320:53;;19409:6;19404:2;19393:9;19389:18;19382:34;19131:291;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "addLastByte(bytes)": "c10b95e7",
    "addressToBytes32(address)": "82c947b7",
    "bytes32ToAddress(bytes32)": "5ced058e",
    "createShortPayload(uint8,uint8,bytes32)": "8820cb26",
    "cutLastByte(bytes)": "f1f97ac0",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "expectRevertAlreadyInitialized()": "7b347163",
    "expectRevertNotOwner()": "c63101b6",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "signMessage(uint256,bytes)": "eaee2611",
    "signMessage(uint256,bytes32)": "91df0ed8",
    "skipBlock()": "660982d9",
    "skipBlocks(uint256)": "a72e0a34",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testSynapseLibraryTest()": "a2cdb207",
    "testSynapseUtilities()": "0621feff",
    "test_encodeHeader((uint8,uint32,uint32,uint32,uint32))": "4dfdb1d4",
    "test_headerLength((uint8,uint32,uint32,uint32,uint32))": "2cfd9e17",
    "test_wrapPadded_revert_flagOutOfRange(uint8,uint128)": "2215ff36"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OccupiedMemory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PrecompileOutOfGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnallocatedMemory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ViewOverrun\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"addLastByte\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addressToBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"buf\",\"type\":\"bytes32\"}],\"name\":\"bytes32ToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"payloadLength\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"firstElementLength\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"createShortPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"cutLastByte\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevertAlreadyInitialized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevertNotOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hashedMsg\",\"type\":\"bytes32\"}],\"name\":\"signMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"signMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"skipBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blocks\",\"type\":\"uint256\"}],\"name\":\"skipBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSynapseLibraryTest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSynapseUtilities\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"destination\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"optimisticPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct RawHeader\",\"name\":\"rh\",\"type\":\"tuple\"}],\"name\":\"test_encodeHeader\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"destination\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"optimisticPeriod\",\"type\":\"uint32\"}],\"internalType\":\"struct RawHeader\",\"name\":\"rh\",\"type\":\"tuple\"}],\"name\":\"test_headerLength\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"remainder\",\"type\":\"uint128\"}],\"name\":\"test_wrapPadded_revert_flagOutOfRange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"testSynapseLibraryTest()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"},\"testSynapseUtilities()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/suite/libs/stack/Header.t.sol\":\"HeaderLibraryTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/libs/Constants.sol\":{\"keccak256\":\"0x00f447e219d27f9a864847f8038c4bac16f59e2fb37c5c0de1b554d48d41ba48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c3b8452f969900c9ffbfae74dd73d076d9eace7e2448015b6c46ca8dd4d4402\",\"dweb:/ipfs/QmXGya3YqdmTXNdzTs1ZLMXJZnfJb49Sw5soXhjHbq8qnk\"]},\"contracts/libs/Errors.sol\":{\"keccak256\":\"0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b\",\"dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB\"]},\"contracts/libs/memory/Attestation.sol\":{\"keccak256\":\"0x83b58e2d80cc7139b8996c51c5e9015f34e833e73b92036b53a1af6641e2b699\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a097c82542ba977de931c6331a9b01a39ef2e46b8916414a6f4f550bc59c113\",\"dweb:/ipfs/QmYRHMoPXzrnx86rZnHAEiFxqM5poEs6wyZinLLTEfwZH3\"]},\"contracts/libs/memory/BaseMessage.sol\":{\"keccak256\":\"0x6f625ee64c2abb64fe5e7645eb4ac449e4a743cf5c434de70b24b47522a2c579\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a29cb57889c10b4cc601abe0f65529f1829354a276437ecb7ce387a654fb671\",\"dweb:/ipfs/QmRYA9HJAdKaVhrvDdaCwdR5DvCYy7yPQGVJ4a9kUCAxaA\"]},\"contracts/libs/memory/ByteString.sol\":{\"keccak256\":\"0x99a2d8a7d93c1ce5063da6631347189cffb95d977cc1683c8bc2d9529b501d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c627819681a668117cbf3633700ed36b63942a3ea8d96db65211febe048bb8bb\",\"dweb:/ipfs/QmSdhu6BDD6Tk17zD2JcmYwYVEnnoeuh9UFWfUkVW5KKvL\"]},\"contracts/libs/memory/MemView.sol\":{\"keccak256\":\"0x95dd48e50e353b59fadce29f22f02629c91bd3b5e07c0efa588bd7c808536587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4347457c5338192aca52c237c7f588d15a4f541482cd44b0632c59f36f9558eb\",\"dweb:/ipfs/QmXn1sKY7nVNrgKtbtE9PaMHFKBadyg73fs2jhw4Navyb1\"]},\"contracts/libs/memory/Message.sol\":{\"keccak256\":\"0x206a96eb35a7015116bfc585b30d34bd5cf151761ded37b8a2a36dd74a9ba99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12ebb3152e1c1dc2aed3c88cb17f54d9abc2a157215c2628fa3c4ac161686cf\",\"dweb:/ipfs/QmbU6h7KEanE7Pt5UXN2WV5SQwWjziCwqBL5RLKAUJHKci\"]},\"contracts/libs/memory/Receipt.sol\":{\"keccak256\":\"0x009e8cfffa4806d1a0a326a31350ead092c9cd22105d4890c86bf93d20c7824d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa9905170f86e4e2d9b62e9fabaab36381398da14f001e0b9bb98c31c174a48e\",\"dweb:/ipfs/QmYpHjdY2yf3w6kFi9urUTyrMyVZBBsCGGEkE1kyTnXqVn\"]},\"contracts/libs/memory/Snapshot.sol\":{\"keccak256\":\"0x5df6aa04b1cbb65e410c7f1a02787e0e11dbcdb5cde18ae50d435029c27c1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2e19b5c6778338b7e8e9c8ef82738797d8955d37884c7db70d7cdea43329910\",\"dweb:/ipfs/Qma1cRGHqRM3tkh5JyzR2Td6iKKST2HapTygBwVNTRJJZD\"]},\"contracts/libs/memory/State.sol\":{\"keccak256\":\"0x3997f3a820110b3bce6f87ea8df3e1f8b006d1ac45efff1dc2f8873f8bbfa5af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf973a3633546dfff75b550673b4a680b7fab48d7fc8923157983a4fde3d5da4\",\"dweb:/ipfs/QmZ8NNwcYaqVxtar8g5MH5mqDXXuMTQLe6vi7zYGswFA3N\"]},\"contracts/libs/merkle/MerkleMath.sol\":{\"keccak256\":\"0xbd13c07bdc40b80f56c7d75e3f31b6c4a85a78d444b760604a5b71083d14925c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3162b491e4e216c0f2d143ce3baab4cf9e2a8b1b42466256a5d5b1f8b0385507\",\"dweb:/ipfs/QmYnDSZyxiGHfmB8Fx46zh1LZe3aCdVaKzpaQuD9piTc7u\"]},\"contracts/libs/stack/GasData.sol\":{\"keccak256\":\"0x2007fd4b97cf33bfe4aa7dc6ac887af87b4010ec9834636b4dd5685582ac26cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b54ca8b659d63ef7138c5b3b243190ca19b1e893b7b49dee1f8790d55b9e691\",\"dweb:/ipfs/Qmc2FGb16uosZ5kvyEK2onpWVPvWeE9X72xNWeJw8CbweD\"]},\"contracts/libs/stack/Header.sol\":{\"keccak256\":\"0x6a2030f6d08075f91336466c3fe4bd63f2760dcd42554856357af8024fd55344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1a1c8f6240f897c62cdc09fab57fc9eeea8072efbc8d101bd7e40b8eea272c9\",\"dweb:/ipfs/QmYrFA3fupKhW71k6yLkQsojPJt4Fcv4uH46hNvYYHcDsy\"]},\"contracts/libs/stack/Number.sol\":{\"keccak256\":\"0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd\",\"dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5\"]},\"contracts/libs/stack/Request.sol\":{\"keccak256\":\"0xecd4427fe7285d1d5663ea019a66ebb04d3f495c0be28a14043c99a0d9a90689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55e800c307070d6497031b90157d917dcabd5f93d342081be8d20ad3c80df429\",\"dweb:/ipfs/QmU8oza8MeWDbG9xfPaPVoj4Z1rKtvQ7pA3Z7CuYyGSuY6\"]},\"contracts/libs/stack/Tips.sol\":{\"keccak256\":\"0x2186d854149349ff689a8356c7f387d134f59fa4a97aed7b43c9e25f46661b0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff15d61f2c9b26e6ef33457aed4a2d9ed61726e2a746d3e0a7e68eb6cd3d63a1\",\"dweb:/ipfs/QmUeiiTAjPmuFhLfzDMqZ6DyvQmEYhsKo9XArHSrMvjYKL\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xad395351c00a0d0fe960e50eaf0702dceade23f6e8e03b729b17923b812a61ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a3cfbddc15788734b68c96c0f752096e6f3f7300d6c198068e67b399307f380\",\"dweb:/ipfs/QmZc3CByhTuLqkaWn88xytjHa1fEeTGUSTNMPHVSwA2xye\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"test/harnesses/libs/stack/HeaderHarness.t.sol\":{\"keccak256\":\"0x1ca4e28e037b1f6abc9db60d3cd0d4b3167459cdc0750ec71402ea777a9866a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e37a0472d83554b011ecaf602f3678b43c7716aa0bc06581d8aa88a3c1130dc6\",\"dweb:/ipfs/QmbQYEB6fwCNaxLPMYgKr9Zck9mRM7ifYW185phSL9MQmd\"]},\"test/suite/libs/stack/Header.t.sol\":{\"keccak256\":\"0x56f75a882f485ec22dd2fd975d608b54343bfc2750e7d50a7cc35261fcf1a912\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc383597903d06fe2ddf0456e5bb9320c421b643d27e251690368ed16898627d\",\"dweb:/ipfs/QmWQ7TxW3oMGmusUGtinrjPyrwrKyPJz2E2DtM4bRyzNEE\"]},\"test/utils/SynapseLibraryTest.t.sol\":{\"keccak256\":\"0xadc2e35557bfeb3617d3f4806596e610ccb399b20255c51930626b4a100ee803\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee71b2028c579cb42ddc895a1ab40c3a6001e2e36119465e18562f2535627e9d\",\"dweb:/ipfs/QmXzRiSqSvA9z9Rq4xnhGFCSbJUYAgmE8VrnP3hqjfWBbm\"]},\"test/utils/SynapseTestConstants.t.sol\":{\"keccak256\":\"0x24b5c4c4f8e0de51b137e0b922875be258282ddd33580da8cf939bef0b552a79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ea15ff24cdcacc3c31382bd04c530287d49dc841f7013e9810133b4f91593e\",\"dweb:/ipfs/QmbBd33fFmSmTqPXks8knXCXZHpaYvUSjebtmFGrU3YE5A\"]},\"test/utils/SynapseUtilities.t.sol\":{\"keccak256\":\"0x8d08d6a579173fe927decca6fbeaa743e9455051837799f3be15c052420b7112\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5662d8d58cac1c6e0688ce8faee3b2085402e4d0ce0cbc38596bdaafa75e1b51\",\"dweb:/ipfs/QmU9b5UQeYndKQAVprdab994RuG1WW8Uz7sg38uadyN2gq\"]},\"test/utils/libs/SynapseStructs.t.sol\":{\"keccak256\":\"0x664ba9f04e889501196308480444a90657872af51267cbe7e6d9de5308edab13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b85dd129998afd92047c883b6712d815ae2930171eaa33eb30fdceb5dddca0ea\",\"dweb:/ipfs/QmRKcKo86FaRVEydU1yETN6jaSKbomdFFcrswzZeL3WnAh\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "OccupiedMemory"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PrecompileOutOfGas"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnallocatedMemory"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ViewOverrun"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "addLastByte",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "addressToBytes32",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "buf",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "bytes32ToAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "payloadLength",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "firstElementLength",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "createShortPayload",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cutLastByte",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "expectRevertAlreadyInitialized"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "expectRevertNotOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "privKey",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "hashedMsg",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "signMessage",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "privKey",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "signMessage",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "skipBlock"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blocks",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "skipBlocks"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSynapseLibraryTest"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSynapseUtilities"
        },
        {
          "inputs": [
            {
              "internalType": "struct RawHeader",
              "name": "rh",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "flag",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "origin",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "destination",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "optimisticPeriod",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_encodeHeader"
        },
        {
          "inputs": [
            {
              "internalType": "struct RawHeader",
              "name": "rh",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "flag",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "origin",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "destination",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "optimisticPeriod",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_headerLength"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "flag",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "remainder",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_wrapPadded_revert_flagOutOfRange"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "testSynapseLibraryTest()": {
            "notice": "Prevents this contract from being included in the coverage report"
          },
          "testSynapseUtilities()": {
            "notice": "Prevents this contract from being included in the coverage report"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/suite/libs/stack/Header.t.sol": "HeaderLibraryTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/libs/Constants.sol": {
        "keccak256": "0x00f447e219d27f9a864847f8038c4bac16f59e2fb37c5c0de1b554d48d41ba48",
        "urls": [
          "bzz-raw://8c3b8452f969900c9ffbfae74dd73d076d9eace7e2448015b6c46ca8dd4d4402",
          "dweb:/ipfs/QmXGya3YqdmTXNdzTs1ZLMXJZnfJb49Sw5soXhjHbq8qnk"
        ],
        "license": "MIT"
      },
      "contracts/libs/Errors.sol": {
        "keccak256": "0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011",
        "urls": [
          "bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b",
          "dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Attestation.sol": {
        "keccak256": "0x83b58e2d80cc7139b8996c51c5e9015f34e833e73b92036b53a1af6641e2b699",
        "urls": [
          "bzz-raw://1a097c82542ba977de931c6331a9b01a39ef2e46b8916414a6f4f550bc59c113",
          "dweb:/ipfs/QmYRHMoPXzrnx86rZnHAEiFxqM5poEs6wyZinLLTEfwZH3"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/BaseMessage.sol": {
        "keccak256": "0x6f625ee64c2abb64fe5e7645eb4ac449e4a743cf5c434de70b24b47522a2c579",
        "urls": [
          "bzz-raw://0a29cb57889c10b4cc601abe0f65529f1829354a276437ecb7ce387a654fb671",
          "dweb:/ipfs/QmRYA9HJAdKaVhrvDdaCwdR5DvCYy7yPQGVJ4a9kUCAxaA"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/ByteString.sol": {
        "keccak256": "0x99a2d8a7d93c1ce5063da6631347189cffb95d977cc1683c8bc2d9529b501d66",
        "urls": [
          "bzz-raw://c627819681a668117cbf3633700ed36b63942a3ea8d96db65211febe048bb8bb",
          "dweb:/ipfs/QmSdhu6BDD6Tk17zD2JcmYwYVEnnoeuh9UFWfUkVW5KKvL"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/MemView.sol": {
        "keccak256": "0x95dd48e50e353b59fadce29f22f02629c91bd3b5e07c0efa588bd7c808536587",
        "urls": [
          "bzz-raw://4347457c5338192aca52c237c7f588d15a4f541482cd44b0632c59f36f9558eb",
          "dweb:/ipfs/QmXn1sKY7nVNrgKtbtE9PaMHFKBadyg73fs2jhw4Navyb1"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Message.sol": {
        "keccak256": "0x206a96eb35a7015116bfc585b30d34bd5cf151761ded37b8a2a36dd74a9ba99c",
        "urls": [
          "bzz-raw://e12ebb3152e1c1dc2aed3c88cb17f54d9abc2a157215c2628fa3c4ac161686cf",
          "dweb:/ipfs/QmbU6h7KEanE7Pt5UXN2WV5SQwWjziCwqBL5RLKAUJHKci"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Receipt.sol": {
        "keccak256": "0x009e8cfffa4806d1a0a326a31350ead092c9cd22105d4890c86bf93d20c7824d",
        "urls": [
          "bzz-raw://aa9905170f86e4e2d9b62e9fabaab36381398da14f001e0b9bb98c31c174a48e",
          "dweb:/ipfs/QmYpHjdY2yf3w6kFi9urUTyrMyVZBBsCGGEkE1kyTnXqVn"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Snapshot.sol": {
        "keccak256": "0x5df6aa04b1cbb65e410c7f1a02787e0e11dbcdb5cde18ae50d435029c27c1ce5",
        "urls": [
          "bzz-raw://d2e19b5c6778338b7e8e9c8ef82738797d8955d37884c7db70d7cdea43329910",
          "dweb:/ipfs/Qma1cRGHqRM3tkh5JyzR2Td6iKKST2HapTygBwVNTRJJZD"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/State.sol": {
        "keccak256": "0x3997f3a820110b3bce6f87ea8df3e1f8b006d1ac45efff1dc2f8873f8bbfa5af",
        "urls": [
          "bzz-raw://bf973a3633546dfff75b550673b4a680b7fab48d7fc8923157983a4fde3d5da4",
          "dweb:/ipfs/QmZ8NNwcYaqVxtar8g5MH5mqDXXuMTQLe6vi7zYGswFA3N"
        ],
        "license": "MIT"
      },
      "contracts/libs/merkle/MerkleMath.sol": {
        "keccak256": "0xbd13c07bdc40b80f56c7d75e3f31b6c4a85a78d444b760604a5b71083d14925c",
        "urls": [
          "bzz-raw://3162b491e4e216c0f2d143ce3baab4cf9e2a8b1b42466256a5d5b1f8b0385507",
          "dweb:/ipfs/QmYnDSZyxiGHfmB8Fx46zh1LZe3aCdVaKzpaQuD9piTc7u"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/GasData.sol": {
        "keccak256": "0x2007fd4b97cf33bfe4aa7dc6ac887af87b4010ec9834636b4dd5685582ac26cb",
        "urls": [
          "bzz-raw://8b54ca8b659d63ef7138c5b3b243190ca19b1e893b7b49dee1f8790d55b9e691",
          "dweb:/ipfs/Qmc2FGb16uosZ5kvyEK2onpWVPvWeE9X72xNWeJw8CbweD"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Header.sol": {
        "keccak256": "0x6a2030f6d08075f91336466c3fe4bd63f2760dcd42554856357af8024fd55344",
        "urls": [
          "bzz-raw://e1a1c8f6240f897c62cdc09fab57fc9eeea8072efbc8d101bd7e40b8eea272c9",
          "dweb:/ipfs/QmYrFA3fupKhW71k6yLkQsojPJt4Fcv4uH46hNvYYHcDsy"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Number.sol": {
        "keccak256": "0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96",
        "urls": [
          "bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd",
          "dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Request.sol": {
        "keccak256": "0xecd4427fe7285d1d5663ea019a66ebb04d3f495c0be28a14043c99a0d9a90689",
        "urls": [
          "bzz-raw://55e800c307070d6497031b90157d917dcabd5f93d342081be8d20ad3c80df429",
          "dweb:/ipfs/QmU8oza8MeWDbG9xfPaPVoj4Z1rKtvQ7pA3Z7CuYyGSuY6"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Tips.sol": {
        "keccak256": "0x2186d854149349ff689a8356c7f387d134f59fa4a97aed7b43c9e25f46661b0d",
        "urls": [
          "bzz-raw://ff15d61f2c9b26e6ef33457aed4a2d9ed61726e2a746d3e0a7e68eb6cd3d63a1",
          "dweb:/ipfs/QmUeiiTAjPmuFhLfzDMqZ6DyvQmEYhsKo9XArHSrMvjYKL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xad395351c00a0d0fe960e50eaf0702dceade23f6e8e03b729b17923b812a61ae",
        "urls": [
          "bzz-raw://0a3cfbddc15788734b68c96c0f752096e6f3f7300d6c198068e67b399307f380",
          "dweb:/ipfs/QmZc3CByhTuLqkaWn88xytjHa1fEeTGUSTNMPHVSwA2xye"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "test/harnesses/libs/stack/HeaderHarness.t.sol": {
        "keccak256": "0x1ca4e28e037b1f6abc9db60d3cd0d4b3167459cdc0750ec71402ea777a9866a8",
        "urls": [
          "bzz-raw://e37a0472d83554b011ecaf602f3678b43c7716aa0bc06581d8aa88a3c1130dc6",
          "dweb:/ipfs/QmbQYEB6fwCNaxLPMYgKr9Zck9mRM7ifYW185phSL9MQmd"
        ],
        "license": "MIT"
      },
      "test/suite/libs/stack/Header.t.sol": {
        "keccak256": "0x56f75a882f485ec22dd2fd975d608b54343bfc2750e7d50a7cc35261fcf1a912",
        "urls": [
          "bzz-raw://cc383597903d06fe2ddf0456e5bb9320c421b643d27e251690368ed16898627d",
          "dweb:/ipfs/QmWQ7TxW3oMGmusUGtinrjPyrwrKyPJz2E2DtM4bRyzNEE"
        ],
        "license": "MIT"
      },
      "test/utils/SynapseLibraryTest.t.sol": {
        "keccak256": "0xadc2e35557bfeb3617d3f4806596e610ccb399b20255c51930626b4a100ee803",
        "urls": [
          "bzz-raw://ee71b2028c579cb42ddc895a1ab40c3a6001e2e36119465e18562f2535627e9d",
          "dweb:/ipfs/QmXzRiSqSvA9z9Rq4xnhGFCSbJUYAgmE8VrnP3hqjfWBbm"
        ],
        "license": "MIT"
      },
      "test/utils/SynapseTestConstants.t.sol": {
        "keccak256": "0x24b5c4c4f8e0de51b137e0b922875be258282ddd33580da8cf939bef0b552a79",
        "urls": [
          "bzz-raw://12ea15ff24cdcacc3c31382bd04c530287d49dc841f7013e9810133b4f91593e",
          "dweb:/ipfs/QmbBd33fFmSmTqPXks8knXCXZHpaYvUSjebtmFGrU3YE5A"
        ],
        "license": "MIT"
      },
      "test/utils/SynapseUtilities.t.sol": {
        "keccak256": "0x8d08d6a579173fe927decca6fbeaa743e9455051837799f3be15c052420b7112",
        "urls": [
          "bzz-raw://5662d8d58cac1c6e0688ce8faee3b2085402e4d0ce0cbc38596bdaafa75e1b51",
          "dweb:/ipfs/QmU9b5UQeYndKQAVprdab994RuG1WW8Uz7sg38uadyN2gq"
        ],
        "license": "MIT"
      },
      "test/utils/libs/SynapseStructs.t.sol": {
        "keccak256": "0x664ba9f04e889501196308480444a90657872af51267cbe7e6d9de5308edab13",
        "urls": [
          "bzz-raw://b85dd129998afd92047c883b6712d815ae2930171eaa33eb30fdceb5dddca0ea",
          "dweb:/ipfs/QmRKcKo86FaRVEydU1yETN6jaSKbomdFFcrswzZeL3WnAh"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/suite/libs/stack/Header.t.sol",
    "id": 85794,
    "exportedSymbols": {
      "FlagOutOfRange": [
        10214
      ],
      "HEADER_LENGTH": [
        10098
      ],
      "HeaderHarness": [
        57942
      ],
      "HeaderLibraryTest": [
        85793
      ],
      "MessageFlag": [
        15004
      ],
      "RawHeader": [
        94214
      ],
      "SynapseLibraryTest": [
        91455
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2503:173",
    "nodes": [
      {
        "id": 85502,
        "nodeType": "PragmaDirective",
        "src": "32:23:173",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 85504,
        "nodeType": "ImportDirective",
        "src": "57:71:173",
        "nodes": [],
        "absolutePath": "contracts/libs/Constants.sol",
        "file": "../../../../contracts/libs/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85794,
        "sourceUnit": 10171,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85503,
              "name": "HEADER_LENGTH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10098,
              "src": "65:13:173",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85506,
        "nodeType": "ImportDirective",
        "src": "129:69:173",
        "nodes": [],
        "absolutePath": "contracts/libs/Errors.sol",
        "file": "../../../../contracts/libs/Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85794,
        "sourceUnit": 10335,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85505,
              "name": "FlagOutOfRange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10214,
              "src": "137:14:173",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85508,
        "nodeType": "ImportDirective",
        "src": "200:75:173",
        "nodes": [],
        "absolutePath": "test/utils/SynapseLibraryTest.t.sol",
        "file": "../../../utils/SynapseLibraryTest.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85794,
        "sourceUnit": 91456,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85507,
              "name": "SynapseLibraryTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 91455,
              "src": "208:18:173",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85511,
        "nodeType": "ImportDirective",
        "src": "276:93:173",
        "nodes": [],
        "absolutePath": "test/harnesses/libs/stack/HeaderHarness.t.sol",
        "file": "../../../harnesses/libs/stack/HeaderHarness.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85794,
        "sourceUnit": 57943,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85509,
              "name": "HeaderHarness",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57942,
              "src": "284:13:173",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 85510,
              "name": "MessageFlag",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 15004,
              "src": "299:11:173",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85513,
        "nodeType": "ImportDirective",
        "src": "371:67:173",
        "nodes": [],
        "absolutePath": "test/utils/libs/SynapseStructs.t.sol",
        "file": "../../../utils/libs/SynapseStructs.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85794,
        "sourceUnit": 96301,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85512,
              "name": "RawHeader",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 94214,
              "src": "379:9:173",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85793,
        "nodeType": "ContractDefinition",
        "src": "479:2055:173",
        "nodes": [
          {
            "id": 85518,
            "nodeType": "VariableDeclaration",
            "src": "534:33:173",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "libHarness",
            "nameLocation": "557:10:173",
            "scope": 85793,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_HeaderHarness_$57942",
              "typeString": "contract HeaderHarness"
            },
            "typeName": {
              "id": 85517,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 85516,
                "name": "HeaderHarness",
                "nameLocations": [
                  "534:13:173"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 57942,
                "src": "534:13:173"
              },
              "referencedDeclaration": 57942,
              "src": "534:13:173",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HeaderHarness_$57942",
                "typeString": "contract HeaderHarness"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 85529,
            "nodeType": "FunctionDefinition",
            "src": "574:73:173",
            "nodes": [],
            "body": {
              "id": 85528,
              "nodeType": "Block",
              "src": "598:49:173",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 85526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85521,
                      "name": "libHarness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85518,
                      "src": "608:10:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HeaderHarness_$57942",
                        "typeString": "contract HeaderHarness"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 85524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "621:17:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_HeaderHarness_$57942_$",
                          "typeString": "function () returns (contract HeaderHarness)"
                        },
                        "typeName": {
                          "id": 85523,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 85522,
                            "name": "HeaderHarness",
                            "nameLocations": [
                              "625:13:173"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 57942,
                            "src": "625:13:173"
                          },
                          "referencedDeclaration": 57942,
                          "src": "625:13:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_HeaderHarness_$57942",
                            "typeString": "contract HeaderHarness"
                          }
                        }
                      },
                      "id": 85525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "621:19:173",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HeaderHarness_$57942",
                        "typeString": "contract HeaderHarness"
                      }
                    },
                    "src": "608:32:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_HeaderHarness_$57942",
                      "typeString": "contract HeaderHarness"
                    }
                  },
                  "id": 85527,
                  "nodeType": "ExpressionStatement",
                  "src": "608:32:173"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "583:5:173",
            "parameters": {
              "id": 85519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "588:2:173"
            },
            "returnParameters": {
              "id": 85520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "598:0:173"
            },
            "scope": 85793,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 85695,
            "nodeType": "FunctionDefinition",
            "src": "653:1177:173",
            "nodes": [],
            "body": {
              "id": 85694,
              "nodeType": "Block",
              "src": "708:1122:173",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 85535,
                        "name": "rh",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85532,
                        "src": "761:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                          "typeString": "struct RawHeader memory"
                        }
                      },
                      "id": 85537,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "764:9:173",
                      "memberName": "boundFlag",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 94590,
                      "src": "761:12:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_RawHeader_$94214_memory_ptr_$returns$__$bound_to$_t_struct$_RawHeader_$94214_memory_ptr_$",
                        "typeString": "function (struct RawHeader memory) pure"
                      }
                    },
                    "id": 85538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "761:14:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85539,
                  "nodeType": "ExpressionStatement",
                  "src": "761:14:173"
                },
                {
                  "assignments": [
                    85541
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85541,
                      "mutability": "mutable",
                      "name": "encoded",
                      "nameLocation": "818:7:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 85694,
                      "src": "810:15:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint136",
                        "typeString": "uint136"
                      },
                      "typeName": {
                        "id": 85540,
                        "name": "uint136",
                        "nodeType": "ElementaryTypeName",
                        "src": "810:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint136",
                          "typeString": "uint136"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85555,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 85544,
                          "name": "rh",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85532,
                          "src": "852:2:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                            "typeString": "struct RawHeader memory"
                          }
                        },
                        "id": 85545,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "855:4:173",
                        "memberName": "flag",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94205,
                        "src": "852:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 85546,
                          "name": "rh",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85532,
                          "src": "861:2:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                            "typeString": "struct RawHeader memory"
                          }
                        },
                        "id": 85547,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "864:6:173",
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94207,
                        "src": "861:9:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 85548,
                          "name": "rh",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85532,
                          "src": "872:2:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                            "typeString": "struct RawHeader memory"
                          }
                        },
                        "id": 85549,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "875:5:173",
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94209,
                        "src": "872:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 85550,
                          "name": "rh",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85532,
                          "src": "882:2:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                            "typeString": "struct RawHeader memory"
                          }
                        },
                        "id": 85551,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "885:11:173",
                        "memberName": "destination",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94211,
                        "src": "882:14:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 85552,
                          "name": "rh",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85532,
                          "src": "898:2:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                            "typeString": "struct RawHeader memory"
                          }
                        },
                        "id": 85553,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "901:16:173",
                        "memberName": "optimisticPeriod",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94213,
                        "src": "898:19:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 85542,
                        "name": "libHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85518,
                        "src": "828:10:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HeaderHarness_$57942",
                          "typeString": "contract HeaderHarness"
                        }
                      },
                      "id": 85543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "839:12:173",
                      "memberName": "encodeHeader",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57892,
                      "src": "828:23:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint8_$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint32_$returns$_t_uint136_$",
                        "typeString": "function (uint8,uint32,uint32,uint32,uint32) pure external returns (uint136)"
                      }
                    },
                    "id": 85554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "828:90:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint136",
                      "typeString": "uint136"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "810:108:173"
                },
                {
                  "assignments": [
                    85557
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85557,
                      "mutability": "mutable",
                      "name": "expected",
                      "nameLocation": "936:8:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 85694,
                      "src": "928:16:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 85556,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "928:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85603,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 85602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 85596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 85586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 85576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 85566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 85560,
                                    "name": "rh",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 85532,
                                    "src": "955:2:173",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                                      "typeString": "struct RawHeader memory"
                                    }
                                  },
                                  "id": 85561,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "958:4:173",
                                  "memberName": "flag",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 94205,
                                  "src": "955:7:173",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 85559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "947:7:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 85558,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "947:7:173",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 85562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "947:16:173",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
                                "typeString": "int_const 3402...(31 digits omitted)...1456"
                              },
                              "id": 85565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32",
                                "id": 85563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "966:1:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "313238",
                                "id": 85564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "971:3:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_128_by_1",
                                  "typeString": "int_const 128"
                                },
                                "value": "128"
                              },
                              "src": "966:8:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
                                "typeString": "int_const 3402...(31 digits omitted)...1456"
                              }
                            },
                            "src": "947:27:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 85575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 85569,
                                    "name": "rh",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 85532,
                                    "src": "985:2:173",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                                      "typeString": "struct RawHeader memory"
                                    }
                                  },
                                  "id": 85570,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "988:6:173",
                                  "memberName": "origin",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 94207,
                                  "src": "985:9:173",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                ],
                                "id": 85568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "977:7:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 85567,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "977:7:173",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 85571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "977:18:173",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                                "typeString": "int_const 79228162514264337593543950336"
                              },
                              "id": 85574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32",
                                "id": 85572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "998:1:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3936",
                                "id": 85573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1003:2:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_96_by_1",
                                  "typeString": "int_const 96"
                                },
                                "value": "96"
                              },
                              "src": "998:7:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                                "typeString": "int_const 79228162514264337593543950336"
                              }
                            },
                            "src": "977:28:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "947:58:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 85585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 85579,
                                  "name": "rh",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85532,
                                  "src": "1016:2:173",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                                    "typeString": "struct RawHeader memory"
                                  }
                                },
                                "id": 85580,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1019:5:173",
                                "memberName": "nonce",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 94209,
                                "src": "1016:8:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "id": 85578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1008:7:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 85577,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1008:7:173",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 85581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1008:17:173",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_18446744073709551616_by_1",
                              "typeString": "int_const 18446744073709551616"
                            },
                            "id": 85584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "32",
                              "id": 85582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1028:1:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3634",
                              "id": 85583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1033:2:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_64_by_1",
                                "typeString": "int_const 64"
                              },
                              "value": "64"
                            },
                            "src": "1028:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18446744073709551616_by_1",
                              "typeString": "int_const 18446744073709551616"
                            }
                          },
                          "src": "1008:27:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "947:88:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 85595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 85589,
                                "name": "rh",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85532,
                                "src": "1058:2:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                                  "typeString": "struct RawHeader memory"
                                }
                              },
                              "id": 85590,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1061:11:173",
                              "memberName": "destination",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 94211,
                              "src": "1058:14:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 85588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1050:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 85587,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1050:7:173",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 85591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1050:23:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_4294967296_by_1",
                            "typeString": "int_const 4294967296"
                          },
                          "id": 85594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 85592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1076:1:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3332",
                            "id": 85593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1081:2:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "1076:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4294967296_by_1",
                            "typeString": "int_const 4294967296"
                          }
                        },
                        "src": "1050:33:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "947:136:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 85599,
                            "name": "rh",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85532,
                            "src": "1094:2:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                              "typeString": "struct RawHeader memory"
                            }
                          },
                          "id": 85600,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1097:16:173",
                          "memberName": "optimisticPeriod",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 94213,
                          "src": "1094:19:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 85598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1086:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 85597,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1086:7:173",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 85601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1086:28:173",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "947:167:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "928:186:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85605,
                        "name": "encoded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85541,
                        "src": "1133:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint136",
                          "typeString": "uint136"
                        }
                      },
                      {
                        "id": 85606,
                        "name": "expected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85557,
                        "src": "1142:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "21656e636f6465486561646572",
                        "id": 85607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1152:15:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee0fa103b22917fea3cca95cad81ff1ce1ad83326064dbb8c2e78a096573b3bf",
                          "typeString": "literal_string \"!encodeHeader\""
                        },
                        "value": "!encodeHeader"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint136",
                          "typeString": "uint136"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee0fa103b22917fea3cca95cad81ff1ce1ad83326064dbb8c2e78a096573b3bf",
                          "typeString": "literal_string \"!encodeHeader\""
                        }
                      ],
                      "id": 85604,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18521,
                      "src": "1124:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 85608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1124:44:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85609,
                  "nodeType": "ExpressionStatement",
                  "src": "1124:44:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 85613,
                            "name": "encoded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85541,
                            "src": "1209:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint136",
                              "typeString": "uint136"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint136",
                              "typeString": "uint136"
                            }
                          ],
                          "expression": {
                            "id": 85611,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85518,
                            "src": "1187:10:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeaderHarness_$57942",
                              "typeString": "contract HeaderHarness"
                            }
                          },
                          "id": 85612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1198:10:173",
                          "memberName": "wrapPadded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57926,
                          "src": "1187:21:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_uint136_$",
                            "typeString": "function (uint256) pure external returns (uint136)"
                          }
                        },
                        "id": 85614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1187:30:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint136",
                          "typeString": "uint136"
                        }
                      },
                      {
                        "id": 85615,
                        "name": "expected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85557,
                        "src": "1219:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "2177726170506164646564",
                        "id": 85616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1229:13:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cccf3264734338ea4f6217a168ebbbcdc15a774eb2f9833030c3b5a54a5d1207",
                          "typeString": "literal_string \"!wrapPadded\""
                        },
                        "value": "!wrapPadded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint136",
                          "typeString": "uint136"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cccf3264734338ea4f6217a168ebbbcdc15a774eb2f9833030c3b5a54a5d1207",
                          "typeString": "literal_string \"!wrapPadded\""
                        }
                      ],
                      "id": 85610,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18521,
                      "src": "1178:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 85617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1178:65:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85618,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:65:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 85622,
                            "name": "encoded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85541,
                            "src": "1284:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint136",
                              "typeString": "uint136"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint136",
                              "typeString": "uint136"
                            }
                          ],
                          "expression": {
                            "id": 85620,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85518,
                            "src": "1264:10:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeaderHarness_$57942",
                              "typeString": "contract HeaderHarness"
                            }
                          },
                          "id": 85621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1275:8:173",
                          "memberName": "isHeader",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57905,
                          "src": "1264:19:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) pure external returns (bool)"
                          }
                        },
                        "id": 85623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1264:28:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "216973486561646572",
                        "id": 85624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1294:11:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c32b2a2acbb5139d0b86bffbf8ee4dfc37fff07cd32051380307df2c004c067",
                          "typeString": "literal_string \"!isHeader\""
                        },
                        "value": "!isHeader"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c32b2a2acbb5139d0b86bffbf8ee4dfc37fff07cd32051380307df2c004c067",
                          "typeString": "literal_string \"!isHeader\""
                        }
                      ],
                      "id": 85619,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18251,
                        18272
                      ],
                      "referencedDeclaration": 18272,
                      "src": "1253:10:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 85625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1253:53:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85626,
                  "nodeType": "ExpressionStatement",
                  "src": "1253:53:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 85632,
                                "name": "encoded",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85541,
                                "src": "1371:7:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint136",
                                  "typeString": "uint136"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint136",
                                  "typeString": "uint136"
                                }
                              ],
                              "expression": {
                                "id": 85630,
                                "name": "libHarness",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85518,
                                "src": "1355:10:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HeaderHarness_$57942",
                                  "typeString": "contract HeaderHarness"
                                }
                              },
                              "id": 85631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1366:4:173",
                              "memberName": "flag",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57793,
                              "src": "1355:15:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_enum$_MessageFlag_$15004_$",
                                "typeString": "function (uint256) pure external returns (enum MessageFlag)"
                              }
                            },
                            "id": 85633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1355:24:173",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MessageFlag_$15004",
                              "typeString": "enum MessageFlag"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_MessageFlag_$15004",
                              "typeString": "enum MessageFlag"
                            }
                          ],
                          "id": 85629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1349:5:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 85628,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "1349:5:173",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1349:31:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 85635,
                          "name": "rh",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85532,
                          "src": "1382:2:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                            "typeString": "struct RawHeader memory"
                          }
                        },
                        "id": 85636,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1385:4:173",
                        "memberName": "flag",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94205,
                        "src": "1382:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "21666c6167",
                        "id": 85637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1391:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c0626abc6132a44f29233e88126b1409c9fa6567fc086b6b9e3dd81de490779",
                          "typeString": "literal_string \"!flag\""
                        },
                        "value": "!flag"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c0626abc6132a44f29233e88126b1409c9fa6567fc086b6b9e3dd81de490779",
                          "typeString": "literal_string \"!flag\""
                        }
                      ],
                      "id": 85627,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18521,
                      "src": "1340:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 85638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1340:59:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85639,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:59:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 85643,
                            "name": "encoded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85541,
                            "src": "1436:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint136",
                              "typeString": "uint136"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint136",
                              "typeString": "uint136"
                            }
                          ],
                          "expression": {
                            "id": 85641,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85518,
                            "src": "1418:10:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeaderHarness_$57942",
                              "typeString": "contract HeaderHarness"
                            }
                          },
                          "id": 85642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1429:6:173",
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57809,
                          "src": "1418:17:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_uint32_$",
                            "typeString": "function (uint256) pure external returns (uint32)"
                          }
                        },
                        "id": 85644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1418:26:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 85645,
                          "name": "rh",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85532,
                          "src": "1446:2:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                            "typeString": "struct RawHeader memory"
                          }
                        },
                        "id": 85646,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1449:6:173",
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94207,
                        "src": "1446:9:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "216f726967696e",
                        "id": 85647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1457:9:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92d657c9f32f852412d15c195b9d98fbbca01cd9cf59095dad749278d0d8af72",
                          "typeString": "literal_string \"!origin\""
                        },
                        "value": "!origin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92d657c9f32f852412d15c195b9d98fbbca01cd9cf59095dad749278d0d8af72",
                          "typeString": "literal_string \"!origin\""
                        }
                      ],
                      "id": 85640,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18521,
                      "src": "1409:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 85648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1409:58:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85649,
                  "nodeType": "ExpressionStatement",
                  "src": "1409:58:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 85653,
                            "name": "encoded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85541,
                            "src": "1503:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint136",
                              "typeString": "uint136"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint136",
                              "typeString": "uint136"
                            }
                          ],
                          "expression": {
                            "id": 85651,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85518,
                            "src": "1486:10:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeaderHarness_$57942",
                              "typeString": "contract HeaderHarness"
                            }
                          },
                          "id": 85652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1497:5:173",
                          "memberName": "nonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57825,
                          "src": "1486:16:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_uint32_$",
                            "typeString": "function (uint256) pure external returns (uint32)"
                          }
                        },
                        "id": 85654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1486:25:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 85655,
                          "name": "rh",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85532,
                          "src": "1513:2:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                            "typeString": "struct RawHeader memory"
                          }
                        },
                        "id": 85656,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1516:5:173",
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94209,
                        "src": "1513:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "216e6f6e6365",
                        "id": 85657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1523:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02c754d68ee8a7341b68ec6ffcbf786d5a8d2aaca8ec08942f7112309bfd6f98",
                          "typeString": "literal_string \"!nonce\""
                        },
                        "value": "!nonce"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02c754d68ee8a7341b68ec6ffcbf786d5a8d2aaca8ec08942f7112309bfd6f98",
                          "typeString": "literal_string \"!nonce\""
                        }
                      ],
                      "id": 85650,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18521,
                      "src": "1477:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 85658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1477:55:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85659,
                  "nodeType": "ExpressionStatement",
                  "src": "1477:55:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 85663,
                            "name": "encoded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85541,
                            "src": "1574:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint136",
                              "typeString": "uint136"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint136",
                              "typeString": "uint136"
                            }
                          ],
                          "expression": {
                            "id": 85661,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85518,
                            "src": "1551:10:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeaderHarness_$57942",
                              "typeString": "contract HeaderHarness"
                            }
                          },
                          "id": 85662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1562:11:173",
                          "memberName": "destination",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57841,
                          "src": "1551:22:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_uint32_$",
                            "typeString": "function (uint256) pure external returns (uint32)"
                          }
                        },
                        "id": 85664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1551:31:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 85665,
                          "name": "rh",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85532,
                          "src": "1584:2:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                            "typeString": "struct RawHeader memory"
                          }
                        },
                        "id": 85666,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1587:11:173",
                        "memberName": "destination",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94211,
                        "src": "1584:14:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "2164657374696e6174696f6e",
                        "id": 85667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1600:14:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_258fd6745c227a4677905abebc04caa285e5228178373083201db4a5fc925e77",
                          "typeString": "literal_string \"!destination\""
                        },
                        "value": "!destination"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_258fd6745c227a4677905abebc04caa285e5228178373083201db4a5fc925e77",
                          "typeString": "literal_string \"!destination\""
                        }
                      ],
                      "id": 85660,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18521,
                      "src": "1542:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 85668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1542:73:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85669,
                  "nodeType": "ExpressionStatement",
                  "src": "1542:73:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 85673,
                            "name": "encoded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85541,
                            "src": "1662:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint136",
                              "typeString": "uint136"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint136",
                              "typeString": "uint136"
                            }
                          ],
                          "expression": {
                            "id": 85671,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85518,
                            "src": "1634:10:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeaderHarness_$57942",
                              "typeString": "contract HeaderHarness"
                            }
                          },
                          "id": 85672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1645:16:173",
                          "memberName": "optimisticPeriod",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57857,
                          "src": "1634:27:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_uint32_$",
                            "typeString": "function (uint256) pure external returns (uint32)"
                          }
                        },
                        "id": 85674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1634:36:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 85675,
                          "name": "rh",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85532,
                          "src": "1672:2:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                            "typeString": "struct RawHeader memory"
                          }
                        },
                        "id": 85676,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1675:16:173",
                        "memberName": "optimisticPeriod",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94213,
                        "src": "1672:19:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "216f7074696d6973746963506572696f64",
                        "id": 85677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1693:19:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a6829cfcf64a71abd34ca5201697f13358e28d2a4b70a3031ba80c09113d0ac",
                          "typeString": "literal_string \"!optimisticPeriod\""
                        },
                        "value": "!optimisticPeriod"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a6829cfcf64a71abd34ca5201697f13358e28d2a4b70a3031ba80c09113d0ac",
                          "typeString": "literal_string \"!optimisticPeriod\""
                        }
                      ],
                      "id": 85670,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18521,
                      "src": "1625:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 85678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1625:88:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85679,
                  "nodeType": "ExpressionStatement",
                  "src": "1625:88:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 85683,
                            "name": "encoded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85541,
                            "src": "1772:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint136",
                              "typeString": "uint136"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint136",
                              "typeString": "uint136"
                            }
                          ],
                          "expression": {
                            "id": 85681,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85518,
                            "src": "1756:10:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeaderHarness_$57942",
                              "typeString": "contract HeaderHarness"
                            }
                          },
                          "id": 85682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1767:4:173",
                          "memberName": "leaf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57941,
                          "src": "1756:15:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_bytes32_$",
                            "typeString": "function (uint256) pure external returns (bytes32)"
                          }
                        },
                        "id": 85684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1756:24:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 85688,
                                "name": "expected",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85557,
                                "src": "1803:8:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 85686,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1792:3:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 85687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1796:6:173",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "1792:10:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 85689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1792:20:173",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 85685,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1782:9:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 85690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1782:31:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "216c656166",
                        "id": 85691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1815:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_137e1b2a9bb1590ec202630199960e2051658167859754d19caecc4d7e2e3801",
                          "typeString": "literal_string \"!leaf\""
                        },
                        "value": "!leaf"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_137e1b2a9bb1590ec202630199960e2051658167859754d19caecc4d7e2e3801",
                          "typeString": "literal_string \"!leaf\""
                        }
                      ],
                      "id": 85680,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18382,
                      "src": "1747:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory)"
                      }
                    },
                    "id": 85692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1747:76:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85693,
                  "nodeType": "ExpressionStatement",
                  "src": "1747:76:173"
                }
              ]
            },
            "functionSelector": "4dfdb1d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_encodeHeader",
            "nameLocation": "662:17:173",
            "parameters": {
              "id": 85533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85532,
                  "mutability": "mutable",
                  "name": "rh",
                  "nameLocation": "697:2:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 85695,
                  "src": "680:19:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                    "typeString": "struct RawHeader"
                  },
                  "typeName": {
                    "id": 85531,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85530,
                      "name": "RawHeader",
                      "nameLocations": [
                        "680:9:173"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 94214,
                      "src": "680:9:173"
                    },
                    "referencedDeclaration": 94214,
                    "src": "680:9:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RawHeader_$94214_storage_ptr",
                      "typeString": "struct RawHeader"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "679:21:173"
            },
            "returnParameters": {
              "id": 85534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "708:0:173"
            },
            "scope": 85793,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 85732,
            "nodeType": "FunctionDefinition",
            "src": "1836:298:173",
            "nodes": [],
            "body": {
              "id": 85731,
              "nodeType": "Block",
              "src": "1891:243:173",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 85701,
                        "name": "rh",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85698,
                        "src": "1901:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                          "typeString": "struct RawHeader memory"
                        }
                      },
                      "id": 85703,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1904:9:173",
                      "memberName": "boundFlag",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 94590,
                      "src": "1901:12:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_RawHeader_$94214_memory_ptr_$returns$__$bound_to$_t_struct$_RawHeader_$94214_memory_ptr_$",
                        "typeString": "function (struct RawHeader memory) pure"
                      }
                    },
                    "id": 85704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1901:14:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85705,
                  "nodeType": "ExpressionStatement",
                  "src": "1901:14:173"
                },
                {
                  "assignments": [
                    85707
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85707,
                      "mutability": "mutable",
                      "name": "packedHeader",
                      "nameLocation": "1938:12:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 85731,
                      "src": "1925:25:173",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 85706,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1925:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85724,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 85712,
                              "name": "rh",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85698,
                              "src": "2006:2:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                                "typeString": "struct RawHeader memory"
                              }
                            },
                            "id": 85713,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2009:4:173",
                            "memberName": "flag",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94205,
                            "src": "2006:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "expression": {
                              "id": 85714,
                              "name": "rh",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85698,
                              "src": "2015:2:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                                "typeString": "struct RawHeader memory"
                              }
                            },
                            "id": 85715,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2018:6:173",
                            "memberName": "origin",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94207,
                            "src": "2015:9:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "expression": {
                              "id": 85716,
                              "name": "rh",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85698,
                              "src": "2026:2:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                                "typeString": "struct RawHeader memory"
                              }
                            },
                            "id": 85717,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2029:5:173",
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94209,
                            "src": "2026:8:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "expression": {
                              "id": 85718,
                              "name": "rh",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85698,
                              "src": "2036:2:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                                "typeString": "struct RawHeader memory"
                              }
                            },
                            "id": 85719,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2039:11:173",
                            "memberName": "destination",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94211,
                            "src": "2036:14:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "expression": {
                              "id": 85720,
                              "name": "rh",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85698,
                              "src": "2052:2:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                                "typeString": "struct RawHeader memory"
                              }
                            },
                            "id": 85721,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2055:16:173",
                            "memberName": "optimisticPeriod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94213,
                            "src": "2052:19:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "expression": {
                            "id": 85710,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85518,
                            "src": "1982:10:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeaderHarness_$57942",
                              "typeString": "contract HeaderHarness"
                            }
                          },
                          "id": 85711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1993:12:173",
                          "memberName": "encodeHeader",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57892,
                          "src": "1982:23:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint8_$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint32_$returns$_t_uint136_$",
                            "typeString": "function (uint8,uint32,uint32,uint32,uint32) pure external returns (uint136)"
                          }
                        },
                        "id": 85722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1982:90:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint136",
                          "typeString": "uint136"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint136",
                          "typeString": "uint136"
                        }
                      ],
                      "expression": {
                        "id": 85708,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1965:3:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 85709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1969:12:173",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "1965:16:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 85723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1965:108:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1925:148:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 85726,
                          "name": "packedHeader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85707,
                          "src": "2092:12:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 85727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2105:6:173",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2092:19:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 85728,
                        "name": "HEADER_LENGTH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10098,
                        "src": "2113:13:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85725,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18496,
                      "src": "2083:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 85729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2083:44:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85730,
                  "nodeType": "ExpressionStatement",
                  "src": "2083:44:173"
                }
              ]
            },
            "functionSelector": "2cfd9e17",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_headerLength",
            "nameLocation": "1845:17:173",
            "parameters": {
              "id": 85699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85698,
                  "mutability": "mutable",
                  "name": "rh",
                  "nameLocation": "1880:2:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 85732,
                  "src": "1863:19:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RawHeader_$94214_memory_ptr",
                    "typeString": "struct RawHeader"
                  },
                  "typeName": {
                    "id": 85697,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85696,
                      "name": "RawHeader",
                      "nameLocations": [
                        "1863:9:173"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 94214,
                      "src": "1863:9:173"
                    },
                    "referencedDeclaration": 94214,
                    "src": "1863:9:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RawHeader_$94214_storage_ptr",
                      "typeString": "struct RawHeader"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1862:21:173"
            },
            "returnParameters": {
              "id": 85700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1891:0:173"
            },
            "scope": 85793,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 85792,
            "nodeType": "FunctionDefinition",
            "src": "2140:392:173",
            "nodes": [],
            "body": {
              "id": 85791,
              "nodeType": "Block",
              "src": "2225:307:173",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 85756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85739,
                      "name": "flag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85734,
                      "src": "2235:4:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 85743,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85734,
                              "src": "2254:4:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 85752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 85747,
                                          "name": "MessageFlag",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 15004,
                                          "src": "2271:11:173",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_MessageFlag_$15004_$",
                                            "typeString": "type(enum MessageFlag)"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_type$_t_enum$_MessageFlag_$15004_$",
                                            "typeString": "type(enum MessageFlag)"
                                          }
                                        ],
                                        "id": 85746,
                                        "name": "type",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -27,
                                        "src": "2266:4:173",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 85748,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2266:17:173",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_meta_type_t_enum$_MessageFlag_$15004",
                                        "typeString": "type(enum MessageFlag)"
                                      }
                                    },
                                    "id": 85749,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "2284:3:173",
                                    "memberName": "max",
                                    "nodeType": "MemberAccess",
                                    "src": "2266:21:173",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_MessageFlag_$15004",
                                      "typeString": "enum MessageFlag"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_MessageFlag_$15004",
                                      "typeString": "enum MessageFlag"
                                    }
                                  ],
                                  "id": 85745,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2260:5:173",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 85744,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2260:5:173",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 85750,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2260:28:173",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 85751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2291:1:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2260:32:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "hexValue": "323535",
                              "id": 85753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2294:3:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_255_by_1",
                                "typeString": "int_const 255"
                              },
                              "value": "255"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_rational_255_by_1",
                                "typeString": "int_const 255"
                              }
                            ],
                            "id": 85742,
                            "name": "bound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              28114,
                              28244
                            ],
                            "referencedDeclaration": 28114,
                            "src": "2248:5:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 85754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2248:50:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 85741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2242:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 85740,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2242:5:173",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 85755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2242:57:173",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2235:64:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 85757,
                  "nodeType": "ExpressionStatement",
                  "src": "2235:64:173"
                },
                {
                  "assignments": [
                    85759
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85759,
                      "mutability": "mutable",
                      "name": "encodedBadFlag",
                      "nameLocation": "2317:14:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 85791,
                      "src": "2309:22:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 85758,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2309:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85770,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 85769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 85767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 85762,
                            "name": "flag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85734,
                            "src": "2342:4:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 85761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2334:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 85760,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2334:7:173",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2334:13:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
                          "typeString": "int_const 3402...(31 digits omitted)...1456"
                        },
                        "id": 85766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 85764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2350:1:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "313238",
                          "id": 85765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2355:3:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_128_by_1",
                            "typeString": "int_const 128"
                          },
                          "value": "128"
                        },
                        "src": "2350:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
                          "typeString": "int_const 3402...(31 digits omitted)...1456"
                        }
                      },
                      "src": "2334:24:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 85768,
                      "name": "remainder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85736,
                      "src": "2361:9:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "2334:36:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2309:61:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 85774,
                            "name": "encodedBadFlag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85759,
                            "src": "2412:14:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 85772,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85518,
                            "src": "2392:10:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HeaderHarness_$57942",
                              "typeString": "contract HeaderHarness"
                            }
                          },
                          "id": 85773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2403:8:173",
                          "memberName": "isHeader",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57905,
                          "src": "2392:19:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) pure external returns (bool)"
                          }
                        },
                        "id": 85775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2392:35:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 85771,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19946,
                        19960
                      ],
                      "referencedDeclaration": 19946,
                      "src": "2380:11:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 85776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2380:48:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85777,
                  "nodeType": "ExpressionStatement",
                  "src": "2380:48:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 85781,
                          "name": "FlagOutOfRange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10214,
                          "src": "2454:14:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 85782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2469:8:173",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "2454:23:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 85778,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19821,
                        "src": "2438:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$30093",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 85780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2441:12:173",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29832,
                      "src": "2438:15:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 85783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2438:40:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85784,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:40:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85788,
                        "name": "encodedBadFlag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85759,
                        "src": "2510:14:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 85785,
                        "name": "libHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85518,
                        "src": "2488:10:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HeaderHarness_$57942",
                          "typeString": "contract HeaderHarness"
                        }
                      },
                      "id": 85787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2499:10:173",
                      "memberName": "wrapPadded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57926,
                      "src": "2488:21:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_uint136_$",
                        "typeString": "function (uint256) pure external returns (uint136)"
                      }
                    },
                    "id": 85789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2488:37:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint136",
                      "typeString": "uint136"
                    }
                  },
                  "id": 85790,
                  "nodeType": "ExpressionStatement",
                  "src": "2488:37:173"
                }
              ]
            },
            "functionSelector": "2215ff36",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_wrapPadded_revert_flagOutOfRange",
            "nameLocation": "2149:37:173",
            "parameters": {
              "id": 85737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85734,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "2193:4:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 85792,
                  "src": "2187:10:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 85733,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2187:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85736,
                  "mutability": "mutable",
                  "name": "remainder",
                  "nameLocation": "2207:9:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 85792,
                  "src": "2199:17:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 85735,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2199:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2186:31:173"
            },
            "returnParameters": {
              "id": 85738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2225:0:173"
            },
            "scope": 85793,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 85514,
              "name": "SynapseLibraryTest",
              "nameLocations": [
                "509:18:173"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 91455,
              "src": "509:18:173"
            },
            "id": 85515,
            "nodeType": "InheritanceSpecifier",
            "src": "509:18:173"
          }
        ],
        "canonicalName": "HeaderLibraryTest",
        "contractDependencies": [
          57942
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          85793,
          91455,
          93117,
          28773,
          19828,
          19825,
          28724,
          24523,
          24233,
          23554,
          21982,
          21279,
          19768,
          92948
        ],
        "name": "HeaderLibraryTest",
        "nameLocation": "488:17:173",
        "scope": 85794,
        "usedErrors": [
          10326,
          10328,
          10330,
          10332
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 173
}