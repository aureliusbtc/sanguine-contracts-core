{
  "abi": [
    {
      "inputs": [],
      "name": "OccupiedMemory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PrecompileOutOfGas",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnallocatedMemory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ViewOverrun",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "addLastByte",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addressToBytes32",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "buf",
          "type": "bytes32"
        }
      ],
      "name": "bytes32ToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "isAttestation",
          "type": "bool"
        }
      ],
      "name": "checkCastToAttestation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "payloadLength",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "firstElementLength",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "name": "createShortPayload",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "cutLastByte",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expectRevertAlreadyInitialized",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expectRevertNotOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "privKey",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hashedMsg",
          "type": "bytes32"
        }
      ],
      "name": "signMessage",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "privKey",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "signMessage",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "skipBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blocks",
          "type": "uint256"
        }
      ],
      "name": "skipBlocks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSynapseLibraryTest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSynapseUtilities",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "agentRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "snapGasHash",
          "type": "bytes32"
        }
      ],
      "name": "test_dataHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "snapRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "dataHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint40",
              "name": "blockNumber",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "timestamp",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "_agentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_snapGasHash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct RawAttestation",
          "name": "ra",
          "type": "tuple"
        }
      ],
      "name": "test_formatAttestation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "length",
          "type": "uint8"
        }
      ],
      "name": "test_isAttestation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b506131608061003d6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063916a17c6116100f9578063c10b95e711610097578063e932d76311610071578063e932d76314610356578063eaee261114610369578063f1f97ac01461037c578063fa7626d41461038f57600080fd5b8063c10b95e714610333578063c63101b614610346578063e20c9f711461034e57600080fd5b8063a72e0a34116100d3578063a72e0a34146102ed578063b5508aa914610300578063b5cace1214610308578063ba414fa61461031b57600080fd5b8063916a17c6146102d257806391df0ed8146102da578063a2cdb207146101c957600080fd5b80635ced058e116101665780637b347163116101405780637b3471631461026d57806382c947b71461027557806385226c811461029d5780638820cb26146102b257600080fd5b80635ced058e14610227578063660982d91461025057806366d9a9a01461025857600080fd5b80633e5e3c23116101a25780633e5e3c23146101f15780633f7286f4146101f95780634237e36914610201578063482a51f61461021457600080fd5b80630621feff146101c95780630a9254e4146101cb5780631ed7831c146101d3575b600080fd5b005b6101c961039e565b6101db6103e9565b6040516101e89190611fea565b60405180910390f35b6101db61044b565b6101db6104ab565b6101c961020f36600461210a565b61050b565b6101c961022236600461216b565b610809565b61023861023536600461218f565b90565b6040516001600160a01b0390911681526020016101e8565b6101c9610864565b61026061086e565b6040516101e891906121a8565b6101c961095d565b61028f61028336600461225b565b6001600160a01b031690565b6040519081526020016101e8565b6102a56109e1565b6040516101e891906122d4565b6102c56102c0366004612336565b610ab1565b6040516101e89190612377565b610260610b3e565b6102c56102e836600461238a565b610c24565b6101c96102fb36600461218f565b610d3c565b6102a5610dc8565b6101c961031636600461238a565b610e98565b610323610f71565b60405190151581526020016101e8565b6102c56103413660046123ac565b61109c565b6101c96110c9565b6101db611131565b6101c9610364366004612406565b611191565b6102c56103773660046124a4565b61183e565b6102c561038a3660046123ac565b61185a565b6000546103239060ff1681565b565b6040516103aa90611fdd565b604051809103906000f0801580156103c6573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d80548060200260200160405190810160405280929190818152602001828054801561044157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610423575b5050505050905090565b6060600f805480602002602001604051908101604052809291908181526020018280548015610441576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610423575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610441576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610423575050505050905090565b801561067657601b54604051633ae7034d60e01b81526105bf916001600160a01b031690633ae7034d90610543908690600401612377565b602060405180830381865afa158015610560573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058491906124eb565b6040518060400160405280601a81526020017f2169734174746573746174696f6e3a207768656e2076616c696400000000000081525061187b565b601b5460405163047d8e2760e21b8152610672916001600160a01b0316906311f6389c906105f1908690600401612377565b600060405180830381865afa15801561060e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106369190810190612508565b836040518060400160405280601e81526020017f2163617374546f4174746573746174696f6e3a207768656e2076616c696400008152506118ae565b5050565b601b54604051633ae7034d60e01b8152610724916001600160a01b031690633ae7034d906106a8908690600401612377565b602060405180830381865afa1580156106c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e991906124eb565b6040518060400160405280601a81526020017f2169734174746573746174696f6e3a207768656e2076616c69640000000000008152506118b9565b604051630618f58760e51b8152633ae4998b60e21b6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b15801561077757600080fd5b505af115801561078b573d6000803e3d6000fd5b5050601b5460405163047d8e2760e21b81526001600160a01b0390911692506311f6389c91506107bf908590600401612377565b600060405180830381865afa1580156107dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108049190810190612508565b505050565b60008160ff1667ffffffffffffffff81111561082757610827612037565b6040519080825280601f01601f191660200182016040528015610851576020820181803683370190505b50905061067281604e8460ff161461050b565b61039c6001610d3c565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156109545760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561093c57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108fe5790505b50505050508152505081526020019060010190610892565b50505050905090565b6040805160608101909152602e808252737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb3916130fd60208301396040518263ffffffff1660e01b81526004016109ad9190612377565b600060405180830381600087803b1580156109c757600080fd5b505af11580156109db573d6000803e3d6000fd5b50505050565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015610954578382906000526020600020018054610a2490612576565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5090612576565b8015610a9d5780601f10610a7257610100808354040283529160200191610a9d565b820191906000526020600020905b815481529060010190602001808311610a8057829003601f168201915b505050505081526020019060010190610a05565b6060610abd83856125b0565b6040805160208101859052908101849052606081018490526080810184905260a0810184905260c0810184905260e081018490526101008101849052909450600090610120016040516020818303038152906040529050610b35610b3060008760ff16610b29856118c4565b91906118df565b611937565b95945050505050565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156109545760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610c0c57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610bce5790505b50505050508152505081526020019060010190610b62565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052606090600090605c0160408051808303601f190181529082905280516020909101206338d07aa960e21b82526004820186905260248201819052915060009081908190737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e341eaa490604401606060405180830381865afa158015610cd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf791906125e0565b6040805160208101939093528281019190915260f89290921b6001600160f81b0319166060820152815160418183030181526061909101909152979650505050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d631f7b4f30610d60834361262d565b6040518263ffffffff1660e01b8152600401610d7e91815260200190565b600060405180830381600087803b158015610d9857600080fd5b505af1158015610dac573d6000803e3d6000fd5b50505050610dc5600c82610dc09190612640565b61196d565b50565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610954578382906000526020600020018054610e0b90612576565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3790612576565b8015610e845780601f10610e5957610100808354040283529160200191610e84565b820191906000526020600020905b815481529060010190602001808311610e6757829003601f168201915b505050505081526020019060010190610dec565b601b5460405163717b6ca960e01b815260048101849052602481018390526000916001600160a01b03169063717b6ca990604401602060405180830381865afa158015610ee9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0d9190612657565b905060008383604051602001610f2d929190918252602082015260400190565b6040516020818303038152906040528051906020012090506109db828260405180604001604052806009815260200168042c8c2e8c290c2e6d60bb1b8152506119dd565b60008054610100900460ff1615610f915750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156110975760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161101f917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001612670565b60408051601f1981840301815290829052611039916126a1565b6000604051808303816000865af19150503d8060008114611076576040519150601f19603f3d011682016040523d82523d6000602084013e61107b565b606091505b509150508080602001905181019061109391906124eb565b9150505b919050565b6040516060906110b39083906000906020016126bd565b6040516020818303038152906040529050919050565b60408051808201825260208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657290820152905163f28dceb360e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb3916109ad9190600401612377565b6060600c805480602002602001604051908101604052809291908181526020018280548015610441576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610423575050505050905090565b601b54815160208301516040808501516060860151608087015192516386bf225360e01b81526004810195909552602485019390935263ffffffff16604484015264ffffffffff91821660648401521660848201526000916001600160a01b0316906386bf22539060a401600060405180830381865afa158015611219573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112419190810190612508565b90506112ec81836000015184602001518560400151866060015187608001516040516020016112b4959493929190948552602085019390935260e09190911b6001600160e01b031916604084015260d890811b6001600160d81b0319908116604485015291901b166049820152604e0190565b60408051601f19818403018152828201909152601282527110b337b936b0ba20ba3a32b9ba30ba34b7b760711b6020830152906118ae565b6112f781600161050b565b601b5460405163048dd67b60e51b8152611391916001600160a01b0316906391bacf6090611329908590600401612377565b602060405180830381865afa158015611346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136a9190612657565b8351604080518082019091526009815268085cdb985c149bdbdd60ba1b60208201526119dd565b601b546040516331387ea760e21b8152611430916001600160a01b03169063c4e1fa9c906113c3908590600401612377565b602060405180830381865afa1580156113e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114049190612657565b836020015160405180604001604052806009815260200168042c8c2e8c290c2e6d60bb1b8152506119dd565b601b5460405163139d940160e21b81526114d8916001600160a01b031690634e76500490611462908590600401612377565b602060405180830381865afa15801561147f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a391906126ec565b63ffffffff16836040015163ffffffff1660405180604001604052806006815260200165216e6f6e636560d01b815250611a13565b601b546040516274a47360e91b8152611587916001600160a01b03169063e948e60090611509908590600401612377565b602060405180830381865afa158015611526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154a9190612709565b64ffffffffff16836060015164ffffffffff166040518060400160405280600c81526020016b10b13637b1b5a73ab6b132b960a11b815250611a13565b601b54604051630e4d511160e11b8152611635916001600160a01b031690631c9aa222906115b9908590600401612377565b602060405180830381865afa1580156115d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fa9190612709565b64ffffffffff16836080015164ffffffffff166040518060400160405280600a81526020016902174696d657374616d760b41b815250611a13565b60007f3464bf887f210604c594030208052a323ac6628785466262d7524176912016419050600081838051906020012060405160200161167f929190918252602082015260400190565b60408051601f19818403018152908290528051602090910120601b5463730dbf6360e01b8352909250611736916001600160a01b039091169063730dbf63906116cc908790600401612377565b602060405180830381865afa1580156116e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170d9190612657565b826040518060400160405280600a815260200169085a185cda15985b1a5960b21b8152506119dd565b60007fccfadb9c399e4e4257b6d0c3f92e1f9a9c00b1802b55a2f7d511702faa769090905080848051906020012060405160200161177e929190918252602082015260400190565b60408051601f19818403018152908290528051602090910120601b5463060cf3bf60e41b8352909350611837916001600160a01b03909116906360cf3bf0906117cb908890600401612377565b602060405180830381865afa1580156117e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180c9190612657565b836040518060400160405280600c81526020016b085a185cda125b9d985b1a5960a21b8152506119dd565b5050505050565b6060611851838380519060200120610c24565b90505b92915050565b6060611854610b306000600185516118729190612726565b610b29866118c4565b81610672576000805160206130dd8339815191528160405161189d9190612739565b60405180910390a161067282611a49565b610804838383611aab565b61067282158261187b565b8051600090602083016118d78183611ae8565b949350505050565b6000806118ec8560801c90565b90506118f785611b32565b83611902868461262d565b61190c919061262d565b111561192b5760405163a3b99ded60e01b815260040160405180910390fd5b610b3584820184611ae8565b604051806119488360208301611b4f565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d63e5d6bf02611991834261262d565b6040518263ffffffff1660e01b81526004016119af91815260200190565b600060405180830381600087803b1580156119c957600080fd5b505af1158015611837573d6000803e3d6000fd5b818314610804576000805160206130dd83398151915281604051611a019190612739565b60405180910390a16108048383611bc3565b818314610804576000805160206130dd83398151915281604051611a379190612739565b60405180910390a16108048383611ca3565b80610dc5576000805160206130bd833981519152604051611a9b9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1610dc5611d70565b611ab58383611e7c565b610804576000805160206130dd83398151915281604051611ad69190612739565b60405180910390a16108048383611f08565b600080611af5838561262d565b9050604051811115611b05575060005b80600003611b265760405163085f79c360e11b815260040160405180910390fd5b608084901b83176118d7565b60006001600160801b038216611b488360801c90565b0192915050565b6040516000906001600160801b03841690608085901c9080851015611b87576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa905080611bb157604051637c7d772f60e01b815260040160405180910390fd5b608086901b8417979650505050505050565b808214610672576000805160206130bd833981519152604051611c259060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f9982604051611c5c9190612768565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f9981604051611c9391906127a0565b60405180910390a1610672611d70565b808214610672576000805160206130bd833981519152604051611d029060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051611d399190612768565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051611c9391906127a0565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15611e6b5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052611e0a9291602001612670565b60408051601f1981840301815290829052611e24916126a1565b6000604051808303816000865af19150503d8060008114611e61576040519150601f19603f3d011682016040523d82523d6000602084013e611e66565b606091505b505050505b6000805461ff001916610100179055565b805182516001919003611eff5760005b8351811015611ef957828181518110611ea757611ea76127ca565b602001015160f81c60f81b6001600160f81b031916848281518110611ece57611ece6127ca565b01602001516001600160f81b03191614611ee757600091505b80611ef1816127e0565b915050611e8c565b50611854565b50600092915050565b611f128282611e7c565b610672576000805160206130bd833981519152604051611f6f9060208082526023908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b62797460408201526265735d60e81b606082015260800190565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf1882604051611fa691906127f9565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf1881604051611c939190612835565b61085d8061286083390190565b6020808252825182820181905260009190848201906040850190845b8181101561202b5783516001600160a01b031683529284019291840191600101612006565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561207657612076612037565b604052919050565b600067ffffffffffffffff82111561209857612098612037565b50601f01601f191660200190565b600082601f8301126120b757600080fd5b81356120ca6120c58261207e565b61204d565b8181528460208386010111156120df57600080fd5b816020850160208301376000918101602001919091529392505050565b8015158114610dc557600080fd5b6000806040838503121561211d57600080fd5b823567ffffffffffffffff81111561213457600080fd5b612140858286016120a6565b9250506020830135612151816120fc565b809150509250929050565b60ff81168114610dc557600080fd5b60006020828403121561217d57600080fd5b81356121888161215c565b9392505050565b6000602082840312156121a157600080fd5b5035919050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561224c57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156122375783516001600160e01b0319168252928b019260019290920191908b019061220d565b50978a019795505050918701916001016121d0565b50919998505050505050505050565b60006020828403121561226d57600080fd5b81356001600160a01b038116811461218857600080fd5b60005b8381101561229f578181015183820152602001612287565b50506000910152565b600081518084526122c0816020860160208601612284565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561232957603f198886030184526123178583516122a8565b945092850192908501906001016122fb565b5092979650505050505050565b60008060006060848603121561234b57600080fd5b83356123568161215c565b925060208401356123668161215c565b929592945050506040919091013590565b60208152600061185160208301846122a8565b6000806040838503121561239d57600080fd5b50508035926020909101359150565b6000602082840312156123be57600080fd5b813567ffffffffffffffff8111156123d557600080fd5b6118d7848285016120a6565b63ffffffff81168114610dc557600080fd5b64ffffffffff81168114610dc557600080fd5b600060e0828403121561241857600080fd5b60405160e0810181811067ffffffffffffffff8211171561243b5761243b612037565b80604052508235815260208301356020820152604083013561245c816123e1565b6040820152606083013561246f816123f3565b60608201526080830135612482816123f3565b608082015260a0838101359082015260c0928301359281019290925250919050565b600080604083850312156124b757600080fd5b82359150602083013567ffffffffffffffff8111156124d557600080fd5b6124e1858286016120a6565b9150509250929050565b6000602082840312156124fd57600080fd5b8151612188816120fc565b60006020828403121561251a57600080fd5b815167ffffffffffffffff81111561253157600080fd5b8201601f8101841361254257600080fd5b80516125506120c58261207e565b81815285602083850101111561256557600080fd5b610b35826020830160208601612284565b600181811c9082168061258a57607f821691505b6020821081036125aa57634e487b7160e01b600052602260045260246000fd5b50919050565b600060ff8316806125d157634e487b7160e01b600052601260045260246000fd5b8060ff84160691505092915050565b6000806000606084860312156125f557600080fd5b83516126008161215c565b602085015160409095015190969495509392505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561185457611854612617565b808202811582820484141761185457611854612617565b60006020828403121561266957600080fd5b5051919050565b6001600160e01b0319831681528151600090612693816004850160208701612284565b919091016004019392505050565b600082516126b3818460208701612284565b9190910192915050565b600083516126cf818460208801612284565b6001600160f81b0319939093169190920190815260010192915050565b6000602082840312156126fe57600080fd5b8151612188816123e1565b60006020828403121561271b57600080fd5b8151612188816123f3565b8181038181111561185457611854612617565b60408152600560408201526422b93937b960d91b606082015260806020820152600061185160808301846122a8565b60408152600061279260408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b60408152600061279260408301600a8152690808080808149a59da1d60b21b602082015260400190565b634e487b7160e01b600052603260045260246000fd5b6000600182016127f2576127f2612617565b5060010190565b60408152600061282360408301600a8152690808080808081319599d60b21b602082015260400190565b82810360208401526118d781856122a8565b60408152600061282360408301600a8152690808080808149a59da1d60b21b60208201526040019056fe608060405234801561001057600080fd5b5061083d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063717b6ca911610071578063717b6ca91461016c578063730dbf631461017f57806386bf22531461019257806391bacf60146101fb578063c4e1fa9c1461020e578063e948e6001461022157600080fd5b806311f6389c146100ae5780631c9aa222146100d75780633ae7034d146101005780634e7650041461012357806360cf3bf01461014b575b600080fd5b6100c16100bc366004610649565b610234565b6040516100ce91906106fa565b60405180910390f35b6100ea6100e5366004610649565b610253565b60405164ffffffffff90911681526020016100ce565b61011361010e366004610649565b61026c565b60405190151581526020016100ce565b610136610131366004610649565b610289565b60405163ffffffff90911681526020016100ce565b61015e610159366004610649565b61029c565b6040519081526020016100ce565b61015e61017a366004610748565b6102af565b61015e61018d366004610649565b6102bb565b6100c16101a0366004610784565b6040805160208101969096528581019490945260e09290921b6001600160e01b031916606085015260d890811b6001600160d81b0319908116606486015291901b1660698301528051604e818403018152606e909201905290565b61015e610209366004610649565b6102ce565b61015e61021c366004610649565b6102e1565b6100ea61022f366004610649565b6102f4565b6060600061024183610307565b905061024c8161031a565b9392505050565b600061026661026183610307565b610350565b92915050565b600061026661027a83610362565b6001600160801b0316604e1490565b600061026661029783610307565b61037d565b60006102666102aa83610307565b61038c565b600061024c83836103ba565b60006102666102c983610307565b6103f0565b60006102666102dc83610307565b61041c565b60006102666102ef83610307565b61042d565b600061026661030283610307565b61043b565b600061026661031583610362565b61044a565b6040518061032b836020830161047a565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b600061026660496005845b91906104ee565b805160009060208301610375818361050f565b949350505050565b6000610266604060048461035b565b60006102667fccfadb9c399e4e4257b6d0c3f92e1f9a9c00b1802b55a2f7d511702faa769090835b90610559565b60408051602081018490529081018290526000906060015b60405160208183030381529060405280519060200120905092915050565b60006102667f3464bf887f210604c594030208052a323ac6628785466262d752417691201641836103b4565b6000610266816020845b919061057c565b600061026660208084610426565b6000610266604460058461035b565b6000604e6001600160801b0383161461047657604051633ae4998b60e21b815260040160405180910390fd5b5090565b6040516000906001600160801b03841690608085901c90808510156104b2576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa9050806104dc57604051637c7d772f60e01b815260040160405180910390fd5b608086901b8417979650505050505050565b6000806104fc85858561057c565b602084900360031b1c9150509392505050565b60008061051c83856107e6565b905060405181111561052c575060005b8060000361054d5760405163085f79c360e11b815260040160405180910390fd5b608084901b8317610375565b60008161056584610611565b6040805160208101939093528201526060016103d2565b60008160000361058e5750600061024c565b60208211156105b05760405163063af09560e31b815260040160405180910390fd5b6001600160801b0384166105c483856107e6565b11156105e35760405163a3b99ded60e01b815260040160405180910390fd5b600382901b60006105f48660801c90565b90940151600160ff1b600019929092019190911d16949350505050565b60008061061e8360801c90565b6001600160801b039390931690922092915050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561065b57600080fd5b813567ffffffffffffffff8082111561067357600080fd5b818401915084601f83011261068757600080fd5b81358181111561069957610699610633565b604051601f8201601f19908116603f011681019083821181831017156106c1576106c1610633565b816040528281528760208487010111156106da57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156107275785810183015185820160400152820161070b565b506000604082860101526040601f19601f8301168501019250505092915050565b6000806040838503121561075b57600080fd5b50508035926020909101359150565b803564ffffffffff8116811461077f57600080fd5b919050565b600080600080600060a0868803121561079c57600080fd5b8535945060208601359350604086013563ffffffff811681146107be57600080fd5b92506107cc6060870161076a565b91506107da6080870161076a565b90509295509295909350565b8082018082111561026657634e487b7160e01b600052601160045260246000fdfea26469706673582212203324cd9bcef344c74362056dad9103e8251b9dcacf5189ea267e88a825b966a564736f6c6343000811003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a264697066735822122045d3a8813dd81100b173606be49bfaca9c23d539d2aae6cbb92c35a93309334f64736f6c63430008110033",
    "sourceMap": "519:3109:161:-:0;;;1572:26:67;;;1594:4;-1:-1:-1;;1572:26:67;;;;;;;;3288:44:71;;;;;;;;;;;519:3109:161;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c8063916a17c6116100f9578063c10b95e711610097578063e932d76311610071578063e932d76314610356578063eaee261114610369578063f1f97ac01461037c578063fa7626d41461038f57600080fd5b8063c10b95e714610333578063c63101b614610346578063e20c9f711461034e57600080fd5b8063a72e0a34116100d3578063a72e0a34146102ed578063b5508aa914610300578063b5cace1214610308578063ba414fa61461031b57600080fd5b8063916a17c6146102d257806391df0ed8146102da578063a2cdb207146101c957600080fd5b80635ced058e116101665780637b347163116101405780637b3471631461026d57806382c947b71461027557806385226c811461029d5780638820cb26146102b257600080fd5b80635ced058e14610227578063660982d91461025057806366d9a9a01461025857600080fd5b80633e5e3c23116101a25780633e5e3c23146101f15780633f7286f4146101f95780634237e36914610201578063482a51f61461021457600080fd5b80630621feff146101c95780630a9254e4146101cb5780631ed7831c146101d3575b600080fd5b005b6101c961039e565b6101db6103e9565b6040516101e89190611fea565b60405180910390f35b6101db61044b565b6101db6104ab565b6101c961020f36600461210a565b61050b565b6101c961022236600461216b565b610809565b61023861023536600461218f565b90565b6040516001600160a01b0390911681526020016101e8565b6101c9610864565b61026061086e565b6040516101e891906121a8565b6101c961095d565b61028f61028336600461225b565b6001600160a01b031690565b6040519081526020016101e8565b6102a56109e1565b6040516101e891906122d4565b6102c56102c0366004612336565b610ab1565b6040516101e89190612377565b610260610b3e565b6102c56102e836600461238a565b610c24565b6101c96102fb36600461218f565b610d3c565b6102a5610dc8565b6101c961031636600461238a565b610e98565b610323610f71565b60405190151581526020016101e8565b6102c56103413660046123ac565b61109c565b6101c96110c9565b6101db611131565b6101c9610364366004612406565b611191565b6102c56103773660046124a4565b61183e565b6102c561038a3660046123ac565b61185a565b6000546103239060ff1681565b565b6040516103aa90611fdd565b604051809103906000f0801580156103c6573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d80548060200260200160405190810160405280929190818152602001828054801561044157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610423575b5050505050905090565b6060600f805480602002602001604051908101604052809291908181526020018280548015610441576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610423575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610441576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610423575050505050905090565b801561067657601b54604051633ae7034d60e01b81526105bf916001600160a01b031690633ae7034d90610543908690600401612377565b602060405180830381865afa158015610560573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058491906124eb565b6040518060400160405280601a81526020017f2169734174746573746174696f6e3a207768656e2076616c696400000000000081525061187b565b601b5460405163047d8e2760e21b8152610672916001600160a01b0316906311f6389c906105f1908690600401612377565b600060405180830381865afa15801561060e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106369190810190612508565b836040518060400160405280601e81526020017f2163617374546f4174746573746174696f6e3a207768656e2076616c696400008152506118ae565b5050565b601b54604051633ae7034d60e01b8152610724916001600160a01b031690633ae7034d906106a8908690600401612377565b602060405180830381865afa1580156106c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e991906124eb565b6040518060400160405280601a81526020017f2169734174746573746174696f6e3a207768656e2076616c69640000000000008152506118b9565b604051630618f58760e51b8152633ae4998b60e21b6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b15801561077757600080fd5b505af115801561078b573d6000803e3d6000fd5b5050601b5460405163047d8e2760e21b81526001600160a01b0390911692506311f6389c91506107bf908590600401612377565b600060405180830381865afa1580156107dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108049190810190612508565b505050565b60008160ff1667ffffffffffffffff81111561082757610827612037565b6040519080825280601f01601f191660200182016040528015610851576020820181803683370190505b50905061067281604e8460ff161461050b565b61039c6001610d3c565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156109545760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561093c57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108fe5790505b50505050508152505081526020019060010190610892565b50505050905090565b6040805160608101909152602e808252737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb3916130fd60208301396040518263ffffffff1660e01b81526004016109ad9190612377565b600060405180830381600087803b1580156109c757600080fd5b505af11580156109db573d6000803e3d6000fd5b50505050565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015610954578382906000526020600020018054610a2490612576565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5090612576565b8015610a9d5780601f10610a7257610100808354040283529160200191610a9d565b820191906000526020600020905b815481529060010190602001808311610a8057829003601f168201915b505050505081526020019060010190610a05565b6060610abd83856125b0565b6040805160208101859052908101849052606081018490526080810184905260a0810184905260c0810184905260e081018490526101008101849052909450600090610120016040516020818303038152906040529050610b35610b3060008760ff16610b29856118c4565b91906118df565b611937565b95945050505050565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156109545760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610c0c57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610bce5790505b50505050508152505081526020019060010190610b62565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052606090600090605c0160408051808303601f190181529082905280516020909101206338d07aa960e21b82526004820186905260248201819052915060009081908190737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e341eaa490604401606060405180830381865afa158015610cd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf791906125e0565b6040805160208101939093528281019190915260f89290921b6001600160f81b0319166060820152815160418183030181526061909101909152979650505050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d631f7b4f30610d60834361262d565b6040518263ffffffff1660e01b8152600401610d7e91815260200190565b600060405180830381600087803b158015610d9857600080fd5b505af1158015610dac573d6000803e3d6000fd5b50505050610dc5600c82610dc09190612640565b61196d565b50565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610954578382906000526020600020018054610e0b90612576565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3790612576565b8015610e845780601f10610e5957610100808354040283529160200191610e84565b820191906000526020600020905b815481529060010190602001808311610e6757829003601f168201915b505050505081526020019060010190610dec565b601b5460405163717b6ca960e01b815260048101849052602481018390526000916001600160a01b03169063717b6ca990604401602060405180830381865afa158015610ee9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0d9190612657565b905060008383604051602001610f2d929190918252602082015260400190565b6040516020818303038152906040528051906020012090506109db828260405180604001604052806009815260200168042c8c2e8c290c2e6d60bb1b8152506119dd565b60008054610100900460ff1615610f915750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156110975760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161101f917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001612670565b60408051601f1981840301815290829052611039916126a1565b6000604051808303816000865af19150503d8060008114611076576040519150601f19603f3d011682016040523d82523d6000602084013e61107b565b606091505b509150508080602001905181019061109391906124eb565b9150505b919050565b6040516060906110b39083906000906020016126bd565b6040516020818303038152906040529050919050565b60408051808201825260208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657290820152905163f28dceb360e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb3916109ad9190600401612377565b6060600c805480602002602001604051908101604052809291908181526020018280548015610441576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610423575050505050905090565b601b54815160208301516040808501516060860151608087015192516386bf225360e01b81526004810195909552602485019390935263ffffffff16604484015264ffffffffff91821660648401521660848201526000916001600160a01b0316906386bf22539060a401600060405180830381865afa158015611219573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112419190810190612508565b90506112ec81836000015184602001518560400151866060015187608001516040516020016112b4959493929190948552602085019390935260e09190911b6001600160e01b031916604084015260d890811b6001600160d81b0319908116604485015291901b166049820152604e0190565b60408051601f19818403018152828201909152601282527110b337b936b0ba20ba3a32b9ba30ba34b7b760711b6020830152906118ae565b6112f781600161050b565b601b5460405163048dd67b60e51b8152611391916001600160a01b0316906391bacf6090611329908590600401612377565b602060405180830381865afa158015611346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136a9190612657565b8351604080518082019091526009815268085cdb985c149bdbdd60ba1b60208201526119dd565b601b546040516331387ea760e21b8152611430916001600160a01b03169063c4e1fa9c906113c3908590600401612377565b602060405180830381865afa1580156113e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114049190612657565b836020015160405180604001604052806009815260200168042c8c2e8c290c2e6d60bb1b8152506119dd565b601b5460405163139d940160e21b81526114d8916001600160a01b031690634e76500490611462908590600401612377565b602060405180830381865afa15801561147f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a391906126ec565b63ffffffff16836040015163ffffffff1660405180604001604052806006815260200165216e6f6e636560d01b815250611a13565b601b546040516274a47360e91b8152611587916001600160a01b03169063e948e60090611509908590600401612377565b602060405180830381865afa158015611526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154a9190612709565b64ffffffffff16836060015164ffffffffff166040518060400160405280600c81526020016b10b13637b1b5a73ab6b132b960a11b815250611a13565b601b54604051630e4d511160e11b8152611635916001600160a01b031690631c9aa222906115b9908590600401612377565b602060405180830381865afa1580156115d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fa9190612709565b64ffffffffff16836080015164ffffffffff166040518060400160405280600a81526020016902174696d657374616d760b41b815250611a13565b60007f3464bf887f210604c594030208052a323ac6628785466262d7524176912016419050600081838051906020012060405160200161167f929190918252602082015260400190565b60408051601f19818403018152908290528051602090910120601b5463730dbf6360e01b8352909250611736916001600160a01b039091169063730dbf63906116cc908790600401612377565b602060405180830381865afa1580156116e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170d9190612657565b826040518060400160405280600a815260200169085a185cda15985b1a5960b21b8152506119dd565b60007fccfadb9c399e4e4257b6d0c3f92e1f9a9c00b1802b55a2f7d511702faa769090905080848051906020012060405160200161177e929190918252602082015260400190565b60408051601f19818403018152908290528051602090910120601b5463060cf3bf60e41b8352909350611837916001600160a01b03909116906360cf3bf0906117cb908890600401612377565b602060405180830381865afa1580156117e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180c9190612657565b836040518060400160405280600c81526020016b085a185cda125b9d985b1a5960a21b8152506119dd565b5050505050565b6060611851838380519060200120610c24565b90505b92915050565b6060611854610b306000600185516118729190612726565b610b29866118c4565b81610672576000805160206130dd8339815191528160405161189d9190612739565b60405180910390a161067282611a49565b610804838383611aab565b61067282158261187b565b8051600090602083016118d78183611ae8565b949350505050565b6000806118ec8560801c90565b90506118f785611b32565b83611902868461262d565b61190c919061262d565b111561192b5760405163a3b99ded60e01b815260040160405180910390fd5b610b3584820184611ae8565b604051806119488360208301611b4f565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d63e5d6bf02611991834261262d565b6040518263ffffffff1660e01b81526004016119af91815260200190565b600060405180830381600087803b1580156119c957600080fd5b505af1158015611837573d6000803e3d6000fd5b818314610804576000805160206130dd83398151915281604051611a019190612739565b60405180910390a16108048383611bc3565b818314610804576000805160206130dd83398151915281604051611a379190612739565b60405180910390a16108048383611ca3565b80610dc5576000805160206130bd833981519152604051611a9b9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1610dc5611d70565b611ab58383611e7c565b610804576000805160206130dd83398151915281604051611ad69190612739565b60405180910390a16108048383611f08565b600080611af5838561262d565b9050604051811115611b05575060005b80600003611b265760405163085f79c360e11b815260040160405180910390fd5b608084901b83176118d7565b60006001600160801b038216611b488360801c90565b0192915050565b6040516000906001600160801b03841690608085901c9080851015611b87576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa905080611bb157604051637c7d772f60e01b815260040160405180910390fd5b608086901b8417979650505050505050565b808214610672576000805160206130bd833981519152604051611c259060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f9982604051611c5c9190612768565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f9981604051611c9391906127a0565b60405180910390a1610672611d70565b808214610672576000805160206130bd833981519152604051611d029060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051611d399190612768565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051611c9391906127a0565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15611e6b5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052611e0a9291602001612670565b60408051601f1981840301815290829052611e24916126a1565b6000604051808303816000865af19150503d8060008114611e61576040519150601f19603f3d011682016040523d82523d6000602084013e611e66565b606091505b505050505b6000805461ff001916610100179055565b805182516001919003611eff5760005b8351811015611ef957828181518110611ea757611ea76127ca565b602001015160f81c60f81b6001600160f81b031916848281518110611ece57611ece6127ca565b01602001516001600160f81b03191614611ee757600091505b80611ef1816127e0565b915050611e8c565b50611854565b50600092915050565b611f128282611e7c565b610672576000805160206130bd833981519152604051611f6f9060208082526023908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b62797460408201526265735d60e81b606082015260800190565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf1882604051611fa691906127f9565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf1881604051611c939190612835565b61085d8061286083390190565b6020808252825182820181905260009190848201906040850190845b8181101561202b5783516001600160a01b031683529284019291840191600101612006565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561207657612076612037565b604052919050565b600067ffffffffffffffff82111561209857612098612037565b50601f01601f191660200190565b600082601f8301126120b757600080fd5b81356120ca6120c58261207e565b61204d565b8181528460208386010111156120df57600080fd5b816020850160208301376000918101602001919091529392505050565b8015158114610dc557600080fd5b6000806040838503121561211d57600080fd5b823567ffffffffffffffff81111561213457600080fd5b612140858286016120a6565b9250506020830135612151816120fc565b809150509250929050565b60ff81168114610dc557600080fd5b60006020828403121561217d57600080fd5b81356121888161215c565b9392505050565b6000602082840312156121a157600080fd5b5035919050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561224c57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156122375783516001600160e01b0319168252928b019260019290920191908b019061220d565b50978a019795505050918701916001016121d0565b50919998505050505050505050565b60006020828403121561226d57600080fd5b81356001600160a01b038116811461218857600080fd5b60005b8381101561229f578181015183820152602001612287565b50506000910152565b600081518084526122c0816020860160208601612284565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561232957603f198886030184526123178583516122a8565b945092850192908501906001016122fb565b5092979650505050505050565b60008060006060848603121561234b57600080fd5b83356123568161215c565b925060208401356123668161215c565b929592945050506040919091013590565b60208152600061185160208301846122a8565b6000806040838503121561239d57600080fd5b50508035926020909101359150565b6000602082840312156123be57600080fd5b813567ffffffffffffffff8111156123d557600080fd5b6118d7848285016120a6565b63ffffffff81168114610dc557600080fd5b64ffffffffff81168114610dc557600080fd5b600060e0828403121561241857600080fd5b60405160e0810181811067ffffffffffffffff8211171561243b5761243b612037565b80604052508235815260208301356020820152604083013561245c816123e1565b6040820152606083013561246f816123f3565b60608201526080830135612482816123f3565b608082015260a0838101359082015260c0928301359281019290925250919050565b600080604083850312156124b757600080fd5b82359150602083013567ffffffffffffffff8111156124d557600080fd5b6124e1858286016120a6565b9150509250929050565b6000602082840312156124fd57600080fd5b8151612188816120fc565b60006020828403121561251a57600080fd5b815167ffffffffffffffff81111561253157600080fd5b8201601f8101841361254257600080fd5b80516125506120c58261207e565b81815285602083850101111561256557600080fd5b610b35826020830160208601612284565b600181811c9082168061258a57607f821691505b6020821081036125aa57634e487b7160e01b600052602260045260246000fd5b50919050565b600060ff8316806125d157634e487b7160e01b600052601260045260246000fd5b8060ff84160691505092915050565b6000806000606084860312156125f557600080fd5b83516126008161215c565b602085015160409095015190969495509392505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561185457611854612617565b808202811582820484141761185457611854612617565b60006020828403121561266957600080fd5b5051919050565b6001600160e01b0319831681528151600090612693816004850160208701612284565b919091016004019392505050565b600082516126b3818460208701612284565b9190910192915050565b600083516126cf818460208801612284565b6001600160f81b0319939093169190920190815260010192915050565b6000602082840312156126fe57600080fd5b8151612188816123e1565b60006020828403121561271b57600080fd5b8151612188816123f3565b8181038181111561185457611854612617565b60408152600560408201526422b93937b960d91b606082015260806020820152600061185160808301846122a8565b60408152600061279260408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b60408152600061279260408301600a8152690808080808149a59da1d60b21b602082015260400190565b634e487b7160e01b600052603260045260246000fd5b6000600182016127f2576127f2612617565b5060010190565b60408152600061282360408301600a8152690808080808081319599d60b21b602082015260400190565b82810360208401526118d781856122a8565b60408152600061282360408301600a8152690808080808149a59da1d60b21b60208201526040019056fe608060405234801561001057600080fd5b5061083d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063717b6ca911610071578063717b6ca91461016c578063730dbf631461017f57806386bf22531461019257806391bacf60146101fb578063c4e1fa9c1461020e578063e948e6001461022157600080fd5b806311f6389c146100ae5780631c9aa222146100d75780633ae7034d146101005780634e7650041461012357806360cf3bf01461014b575b600080fd5b6100c16100bc366004610649565b610234565b6040516100ce91906106fa565b60405180910390f35b6100ea6100e5366004610649565b610253565b60405164ffffffffff90911681526020016100ce565b61011361010e366004610649565b61026c565b60405190151581526020016100ce565b610136610131366004610649565b610289565b60405163ffffffff90911681526020016100ce565b61015e610159366004610649565b61029c565b6040519081526020016100ce565b61015e61017a366004610748565b6102af565b61015e61018d366004610649565b6102bb565b6100c16101a0366004610784565b6040805160208101969096528581019490945260e09290921b6001600160e01b031916606085015260d890811b6001600160d81b0319908116606486015291901b1660698301528051604e818403018152606e909201905290565b61015e610209366004610649565b6102ce565b61015e61021c366004610649565b6102e1565b6100ea61022f366004610649565b6102f4565b6060600061024183610307565b905061024c8161031a565b9392505050565b600061026661026183610307565b610350565b92915050565b600061026661027a83610362565b6001600160801b0316604e1490565b600061026661029783610307565b61037d565b60006102666102aa83610307565b61038c565b600061024c83836103ba565b60006102666102c983610307565b6103f0565b60006102666102dc83610307565b61041c565b60006102666102ef83610307565b61042d565b600061026661030283610307565b61043b565b600061026661031583610362565b61044a565b6040518061032b836020830161047a565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b600061026660496005845b91906104ee565b805160009060208301610375818361050f565b949350505050565b6000610266604060048461035b565b60006102667fccfadb9c399e4e4257b6d0c3f92e1f9a9c00b1802b55a2f7d511702faa769090835b90610559565b60408051602081018490529081018290526000906060015b60405160208183030381529060405280519060200120905092915050565b60006102667f3464bf887f210604c594030208052a323ac6628785466262d752417691201641836103b4565b6000610266816020845b919061057c565b600061026660208084610426565b6000610266604460058461035b565b6000604e6001600160801b0383161461047657604051633ae4998b60e21b815260040160405180910390fd5b5090565b6040516000906001600160801b03841690608085901c90808510156104b2576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa9050806104dc57604051637c7d772f60e01b815260040160405180910390fd5b608086901b8417979650505050505050565b6000806104fc85858561057c565b602084900360031b1c9150509392505050565b60008061051c83856107e6565b905060405181111561052c575060005b8060000361054d5760405163085f79c360e11b815260040160405180910390fd5b608084901b8317610375565b60008161056584610611565b6040805160208101939093528201526060016103d2565b60008160000361058e5750600061024c565b60208211156105b05760405163063af09560e31b815260040160405180910390fd5b6001600160801b0384166105c483856107e6565b11156105e35760405163a3b99ded60e01b815260040160405180910390fd5b600382901b60006105f48660801c90565b90940151600160ff1b600019929092019190911d16949350505050565b60008061061e8360801c90565b6001600160801b039390931690922092915050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561065b57600080fd5b813567ffffffffffffffff8082111561067357600080fd5b818401915084601f83011261068757600080fd5b81358181111561069957610699610633565b604051601f8201601f19908116603f011681019083821181831017156106c1576106c1610633565b816040528281528760208487010111156106da57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156107275785810183015185820160400152820161070b565b506000604082860101526040601f19601f8301168501019250505092915050565b6000806040838503121561075b57600080fd5b50508035926020909101359150565b803564ffffffffff8116811461077f57600080fd5b919050565b600080600080600060a0868803121561079c57600080fd5b8535945060208601359350604086013563ffffffff811681146107be57600080fd5b92506107cc6060870161076a565b91506107da6080870161076a565b90509295509295909350565b8082018082111561026657634e487b7160e01b600052601160045260246000fdfea26469706673582212203324cd9bcef344c74362056dad9103e8251b9dcacf5189ea267e88a825b966a564736f6c6343000811003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a264697066735822122045d3a8813dd81100b173606be49bfaca9c23d539d2aae6cbb92c35a93309334f64736f6c63430008110033",
    "sourceMap": "519:3109:161:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:43:185;;657:78:161;;;:::i;2161:134:74:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2930:133;;;:::i;2631:141::-;;;:::i;3086:540:161:-;;;;;;:::i;:::-;;:::i;2547:203::-;;;;;;:::i;:::-;;:::i;1189:123:185:-;;;;;;:::i;:::-;1299:3;1189:123;;;;-1:-1:-1;;;;;3040:32:200;;;3022:51;;3010:2;2995:18;1189:123:185;2876:203:200;863:58:185;;;:::i;2447:178:74:-;;;:::i;:::-;;;;;;;:::i;653:109:185:-;;;:::i;1058:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1153:22:185;;1058:125;;;;5095:25:200;;;5083:2;5068:18;1058:125:185;4949:177:200;2301:140:74;;;:::i;:::-;;;;;;;:::i;449:473:181:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2778:146:74:-;;;:::i;1493:325:185:-;;;;;;:::i;:::-;;:::i;927:125::-;;;;;;:::i;:::-;;:::i;1866:141:74:-;;;:::i;2261:280:161:-;;;;;;:::i;:::-;;:::i;1819:584:67:-;;;:::i;:::-;;;8002:14:200;;7995:22;7977:41;;7965:2;7950:18;1819:584:67;7837:187:200;1102:134:181;;;;;;:::i;:::-;;:::i;768:89:185:-;;;:::i;2013:142:74:-;;;:::i;741:1514:161:-;;;;;;:::i;:::-;;:::i;1318:169:185:-;;;;;;:::i;:::-;;:::i;928:168:181:-;;;;;;:::i;:::-;;:::i;1572:26:67:-;;;;;;;;;604:43:185;:::o;657:78:161:-;704:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;691:10:161;:37;;-1:-1:-1;;;;;;691:37:161;-1:-1:-1;;;;;691:37:161;;;;;;;;;;657:78::o;2161:134:74:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:74;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:74;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:74;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;3086:540:161:-;3181:13;3177:443;;;3221:10;;:33;;-1:-1:-1;;;3221:33:161;;3210:75;;-1:-1:-1;;;;;3221:10:161;;:24;;:33;;3246:7;;3221:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3210:75;;;;;;;;;;;;;;;;;:10;:75::i;:::-;3308:10;;:37;;-1:-1:-1;;;3308:37:161;;3299:90;;-1:-1:-1;;;;;3308:10:161;;:28;;:37;;3337:7;;3308:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3308:37:161;;;;;;;;;;;;:::i;:::-;3347:7;3299:90;;;;;;;;;;;;;;;;;:8;:90::i;:::-;3086:540;;:::o;3177:443::-;3432:10;;:33;;-1:-1:-1;;;3432:33:161;;3420:76;;-1:-1:-1;;;;;3432:10:161;;:24;;:33;;3457:7;;3432:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3420:76;;;;;;;;;;;;;;;;;:11;:76::i;:::-;3510:48;;-1:-1:-1;;;3510:48:161;;-1:-1:-1;;;3510:48:161;;;11112:52:200;3510:15:161;;;;11085:18:200;;3510:48:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3572:10:161;;:37;;-1:-1:-1;;;3572:37:161;;-1:-1:-1;;;;;3572:10:161;;;;-1:-1:-1;3572:28:161;;-1:-1:-1;3572:37:161;;3601:7;;3572:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3572:37:161;;;;;;;;;;;;:::i;:::-;;3086:540;;:::o;2547:203::-;2606:20;2639:6;2629:17;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2629:17:161;;2606:40;;2656:87;2689:7;985:2:45;2713:6:161;:28;;;2656:22;:87::i;863:58:185:-;901:13;912:1;901:10;:13::i;2447:178:74:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;653:109:185:-;728:26;;;;;;;;;;;;;712:15;;;;728:26;;;;;712:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;653:109::o;2301:140:74:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;449:473:181;583:12;627:34;643:18;627:13;:34;:::i;:::-;730:64;;;;;;12144:19:200;;;12179:12;;;12172:28;;;12216:12;;;12209:28;;;12253:12;;;12246:28;;;12290:13;;;12283:29;;;12328:13;;;12321:29;;;12366:13;;;12359:29;;;12404:13;;;12397:29;;;611:50:181;;-1:-1:-1;707:20:181;;12442:13:200;;730:64:181;;;;;;;;;;;;707:87;;854:61;:53;883:1;892:13;854:53;;:13;:7;:11;:13::i;:::-;:19;:53;:19;:53::i;:::-;:59;:61::i;:::-;847:68;449:473;-1:-1:-1;;;;;449:473:181:o;2778:146:74:-;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1493:325:185;1632:63;;12708:66:200;1632:63:185;;;12696:79:200;12791:12;;;12784:28;;;1571:22:185;;1605:14;;12828:12:200;;1632:63:185;;;;;;-1:-1:-1;;1632:63:185;;;;;;;1622:74;;1632:63;1622:74;;;;-1:-1:-1;;;1740:24:185;;;;;13025:25:200;;;13066:18;;;13059:34;;;1622:74:185;-1:-1:-1;1707:7:185;;;;;;1740;;;;12998:18:200;;1740:24:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1786:25;;;;;;13659:19:200;;;;13694:12;;;13687:28;;;;13771:3;13749:16;;;;-1:-1:-1;;;;;;13745:36:200;13731:12;;;13724:58;1786:25:185;;;;;;;;;13798:12:200;;;;1786:25:185;;;;1493:325;-1:-1:-1;;;;;;;1493:325:185:o;927:125::-;980:7;;988:21;1003:6;988:12;:21;:::i;:::-;980:30;;;;;;;;;;;;;5095:25:200;;5083:2;5068:18;;4949:177;980:30:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:25;3886:10:184;1025:6:185;:19;;;;:::i;:::-;1020:4;:25::i;:::-;927:125;:::o;1866:141:74:-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2261:280:161;2360:10;;:43;;-1:-1:-1;;;2360:43:161;;;;;13025:25:200;;;13066:18;;;13059:34;;;2341:16:161;;-1:-1:-1;;;;;2360:10:161;;:19;;12998:18:200;;2360:43:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2341:62;;2413:16;2459:9;2470:11;2442:40;;;;;;;;15037:19:200;;;15081:2;15072:12;;15065:28;15118:2;15109:12;;14880:247;2442:40:161;;;;;;;;;;;;;2432:51;;;;;;2413:70;;2493:41;2502:8;2512;2493:41;;;;;;;;;;;;;-1:-1:-1;;;2493:41:161;;;:8;:41::i;1819:584:67:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:67;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;15306:51:200;;;-1:-1:-1;;;15373:18:200;;;15366:34;2196:43:67;;;;;;;;;15279:18:200;;;2196:43:67;;;-1:-1:-1;;1671:64:67;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:67;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:67:o;1102:134:181:-;1197:32;;1166:12;;1197:32;;1210:7;;1226:1;;1197:32;;;:::i;:::-;;;;;;;;;;;;;1190:39;;1102:134;;;:::o;768:89:185:-;833:16;;;;;;;;;;;;;;;;;817:33;;-1:-1:-1;;;817:33:185;;:15;;;;:33;;833:16;817:33;;;:::i;2013:142:74:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:74;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;741:1514:161:-;851:10;;880:11;;893;;;;906:8;;;;;916:14;;;;932:12;;;;851:94;;-1:-1:-1;;;851:94:161;;;;;16748:25:200;;;;16789:18;;;16782:34;;;;16864:10;16852:23;16832:18;;;16825:51;16895:12;16943:15;;;16923:18;;;16916:43;16996:15;16975:19;;;16968:44;816:20:161;;-1:-1:-1;;;;;851:10:161;;:28;;16720:19:200;;851:94:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;851:94:161;;;;;;;;;;;;:::i;:::-;816:129;;991:169;1013:7;1051:2;:11;;;1064:2;:11;;;1077:2;:8;;;1087:2;:14;;;1103:2;:12;;;1034:82;;;;;;;;;;;17258:19:200;;;17302:2;17293:12;;17286:28;;;;17370:3;17348:16;;;;-1:-1:-1;;;;;;17344:43:200;17339:2;17330:12;;17323:65;17411:3;17463:16;;;-1:-1:-1;;;;;;17459:25:200;;;17454:2;17445:12;;17438:47;17519:16;;;17515:25;17510:2;17501:12;;17494:47;17566:2;17557:12;;17023:552;1034:82:161;;;;-1:-1:-1;;1034:82:161;;;;;;991:169;;;;;;;;;-1:-1:-1;;;1034:82:161;991:169;;;1034:82;991:8;:169::i;:::-;1170:63;1203:7;1227:4;1170:22;:63::i;:::-;1276:10;;:28;;-1:-1:-1;;;1276:28:161;;1267:64;;-1:-1:-1;;;;;1276:10:161;;:19;;:28;;1296:7;;1276:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1306:11;;1267:64;;;;;;;;;;;;-1:-1:-1;;;1267:64:161;;;;:8;:64::i;:::-;1350:10;;:28;;-1:-1:-1;;;1350:28:161;;1341:64;;-1:-1:-1;;;;;1350:10:161;;:19;;:28;;1370:7;;1350:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1380:2;:11;;;1341:64;;;;;;;;;;;;;-1:-1:-1;;;1341:64:161;;;:8;:64::i;:::-;1424:10;;:25;;-1:-1:-1;;;1424:25:161;;1415:55;;-1:-1:-1;;;;;1424:10:161;;:16;;:25;;1441:7;;1424:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1415:55;;1451:2;:8;;;1415:55;;;;;;;;;;;;;;;-1:-1:-1;;;1415:55:161;;;:8;:55::i;:::-;1489:10;;:31;;-1:-1:-1;;;1489:31:161;;1480:73;;-1:-1:-1;;;;;1489:10:161;;:22;;:31;;1512:7;;1489:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1480:73;;1522:2;:14;;;1480:73;;;;;;;;;;;;;;;-1:-1:-1;;;1480:73:161;;;:8;:73::i;:::-;1572:10;;:29;;-1:-1:-1;;;1572:29:161;;1563:67;;-1:-1:-1;;;;;1572:10:161;;:20;;:29;;1593:7;;1572:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1563:67;;1603:2;:12;;;1563:67;;;;;;;;;;;;;;;-1:-1:-1;;;1563:67:161;;;:8;:67::i;:::-;1687:23;1713:35;1687:61;;1758:25;1813:15;1840:7;1830:18;;;;;;1796:53;;;;;;;;15037:19:200;;;15081:2;15072:12;;15065:28;15118:2;15109:12;;14880:247;1796:53:161;;;;-1:-1:-1;;1796:53:161;;;;;;;;;;1786:64;;1796:53;1786:64;;;;1869:10;;-1:-1:-1;;;1869:29:161;;1786:64;;-1:-1:-1;1860:72:161;;-1:-1:-1;;;;;1869:10:161;;;;:20;;:29;;1890:7;;1869:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1900:17;1860:72;;;;;;;;;;;;;-1:-1:-1;;;1860:72:161;;;:8;:72::i;:::-;1991:30;2024:37;1991:70;;2118:22;2152:7;2142:18;;;;;;2101:60;;;;;;;;15037:19:200;;;15081:2;15072:12;;15065:28;15118:2;15109:12;;14880:247;2101:60:161;;;;-1:-1:-1;;2101:60:161;;;;;;;;;;2091:71;;2101:60;2091:71;;;;2181:10;;-1:-1:-1;;;2181:31:161;;2091:71;;-1:-1:-1;2172:76:161;;-1:-1:-1;;;;;2181:10:161;;;;:22;;:31;;2204:7;;2181:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2214:17;2172:76;;;;;;;;;;;;;-1:-1:-1;;;2172:76:161;;;:8;:76::i;:::-;806:1449;;;;741:1514;:::o;1318:169:185:-;1399:22;1440:40;1452:7;1471;1461:18;;;;;;1440:11;:40::i;:::-;1433:47;;1318:169;;;;;:::o;928:168:181:-;992:12;1023:66;:58;1052:1;1078;1061:7;:14;:18;;;;:::i;:::-;1023:13;:7;:11;:13::i;3425:191:67:-;3504:9;3499:111;;-1:-1:-1;;;;;;;;;;;3560:3:67;3534:30;;;;;;:::i;:::-;;;;;;;;3578:21;3589:9;3578:10;:21::i;1404:123:70:-;1500:20;1510:1;1513;1516:3;1500:9;:20::i;676:107::-;754:22;766:4;765:5;772:3;754:10;:22::i;2972:569:52:-;3060:10;;3026:7;;3486:4;3477:14;;3517:17;3477:14;3060:10;3517:5;:17::i;:::-;3510:24;2972:569;-1:-1:-1;;;;2972:569:52:o;10331:484::-;10416:7;10435:12;10450:13;:7;6898:3;6871:30;;6712:196;10450:13;10435:28;;10546:13;:7;:11;:13::i;:::-;10539:4;10523:13;10530:6;10523:4;:13;:::i;:::-;:20;;;;:::i;:::-;:36;10519:87;;;10582:13;;-1:-1:-1;;;10582:13:52;;;;;;;;;;;10519:87;10758:40;10778:6;10771:4;:13;10792:4;10758:5;:40::i;4079:1041::-;4325:4;4319:11;;4455:34;4469:7;4484:4;4478:10;;4455:13;:34::i;:::-;-1:-1:-1;;;;;;7239:43:52;;4701:12;8097:2;8081:18;;-1:-1:-1;;8465:20:52;4997;;5019:4;4993:31;4987:4;4980:45;-1:-1:-1;5087:17:52;;4079:1041;;-1:-1:-1;4079:1041:52:o;17805:93:72:-;17860:7;;17868:22;17886:4;17868:15;:22;:::i;:::-;17860:31;;;;;;;;;;;;;5095:25:200;;5083:2;5068:18;;4949:177;17860:31:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4377:185:67;4464:1;4459;:6;4455:101;;-1:-1:-1;;;;;;;;;;;4513:3:67;4486:31;;;;;;:::i;:::-;;;;;;;;4531:14;4540:1;4543;4531:8;:14::i;5476:178::-;5557:1;5552;:6;5548:100;;-1:-1:-1;;;;;;;;;;;5605:3:67;5579:30;;;;;;:::i;:::-;;;;;;;;5623:14;5632:1;5635;5623:8;:14::i;3262:157::-;3322:9;3317:96;;-1:-1:-1;;;;;;;;;;;3352:30:67;;;;18874:2:200;18856:21;;;18913:2;18893:18;;;18886:30;18952:25;18947:2;18932:18;;18925:53;19010:2;18995:18;;18672:347;3352:30:67;;;;;;;;3396:6;:4;:6::i;15950:205::-;16044:14;16053:1;16056;16044:8;:14::i;:::-;16039:110;;-1:-1:-1;;;;;;;;;;;16105:3:67;16079:30;;;;;;:::i;:::-;;;;;;;;16123:15;16133:1;16136;16123:9;:15::i;2092:540:52:-;2158:7;;2192:11;2199:4;2192;:11;:::i;:::-;2177:26;;2471:4;2465:11;2459:4;2456:21;2453:38;;;-1:-1:-1;2488:1:52;2453:38;2514:4;2522:1;2514:9;2510:66;;2546:19;;-1:-1:-1;;;2546:19:52;;;;;;;;;;;2510:66;17362:3;17354:11;;;17353:20;;2592:33;17029:352;7459:258;7512:12;-1:-1:-1;;;;;7239:43:52;;7671:13;:7;6898:3;6871:30;;6712:196;7671:13;:29;;7459:258;-1:-1:-1;;7459:258:52:o;18013:842::-;18352:4;18346:11;18091:7;;-1:-1:-1;;;;;7239:43:52;;;6898:3;6871:30;;;;18434:12;;;18430:66;;;18469:16;;-1:-1:-1;;;18469:16:52;;;;;;;;;;;18430:66;18505:8;18721:4;18713:6;18707:4;18699:6;18693:4;18686:5;18675:51;18668:58;;18750:3;18745:37;;18762:20;;-1:-1:-1;;;18762:20:52;;;;;;;;;;;18745:37;17362:3;17354:11;;;17353:20;;18792:56;18013:842;-1:-1:-1;;;;;;;18013:842:52:o;4095:277:67:-;4163:1;4158;:6;4154:212;;-1:-1:-1;;;;;;;;;;;4185:44:67;;;;19226:2:200;19208:21;;;19265:2;19245:18;;;19238:30;19304:34;19299:2;19284:18;;19277:62;-1:-1:-1;;;19370:2:200;19355:18;;19348:35;19415:3;19400:19;;19024:401;4185:44:67;;;;;;;;4248:34;4280:1;4248:34;;;;;;:::i;:::-;;;;;;;;4301;4333:1;4301:34;;;;;;:::i;:::-;;;;;;;;4349:6;:4;:6::i;5209:262::-;5271:1;5266;:6;5262:203;;-1:-1:-1;;;;;;;;;;;5293:41:67;;;;20666:2:200;20648:21;;;20705:2;20685:18;;;20678:30;20744:34;20739:2;20724:18;;20717:62;-1:-1:-1;;;20810:2:200;20795:18;;20788:32;20852:3;20837:19;;20464:398;5293:41:67;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;21775:51:200;;;-1:-1:-1;;;21842:18:200;;;21835:34;;;;2712:4:67;21885:18:200;;;21878:34;2489:11:67;;1671:64;2586:43;;21748:18:200;;2652:67:67;;;-1:-1:-1;;2652:67:67;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:67;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:67;2820:7;:14;;-1:-1:-1;;2820:14:67;;;;;2409:432::o;15304:345::-;15431:8;;15419;;15401:4;;15419:20;;15415:228;;15460:6;15455:137;15476:1;:8;15472:1;:12;15455:137;;;15521:1;15523;15521:4;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;15513:12:67;;:1;15515;15513:4;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;15513:4:67;:12;15509:69;;15554:5;15549:10;;15509:69;15486:3;;;;:::i;:::-;;;;15455:137;;;;15415:228;;;-1:-1:-1;15627:5:67;15304:345;;;;:::o;15654:291::-;15729:14;15738:1;15741;15729:8;:14::i;:::-;15724:215;;-1:-1:-1;;;;;;;;;;;15764:42:67;;;;22397:2:200;22379:21;;;22436:2;22416:18;;;22409:30;22475:34;22470:2;22455:18;;22448:62;-1:-1:-1;;;22541:2:200;22526:18;;22519:33;22584:3;22569:19;;22195:399;15764:42:67;;;;;;;;15825:32;15855:1;15825:32;;;;;;:::i;:::-;;;;;;;;15876;15906:1;15876:32;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;14:658:200:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:200;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:200;;14:658;-1:-1:-1;;;;;;14:658:200:o;677:127::-;738:10;733:3;729:20;726:1;719:31;769:4;766:1;759:15;793:4;790:1;783:15;809:275;880:2;874:9;945:2;926:13;;-1:-1:-1;;922:27:200;910:40;;980:18;965:34;;1001:22;;;962:62;959:88;;;1027:18;;:::i;:::-;1063:2;1056:22;809:275;;-1:-1:-1;809:275:200:o;1089:186::-;1137:4;1170:18;1162:6;1159:30;1156:56;;;1192:18;;:::i;:::-;-1:-1:-1;1258:2:200;1237:15;-1:-1:-1;;1233:29:200;1264:4;1229:40;;1089:186::o;1280:462::-;1322:5;1375:3;1368:4;1360:6;1356:17;1352:27;1342:55;;1393:1;1390;1383:12;1342:55;1429:6;1416:20;1460:48;1476:31;1504:2;1476:31;:::i;:::-;1460:48;:::i;:::-;1533:2;1524:7;1517:19;1579:3;1572:4;1567:2;1559:6;1555:15;1551:26;1548:35;1545:55;;;1596:1;1593;1586:12;1545:55;1661:2;1654:4;1646:6;1642:17;1635:4;1626:7;1622:18;1609:55;1709:1;1684:16;;;1702:4;1680:27;1673:38;;;;1688:7;1280:462;-1:-1:-1;;;1280:462:200:o;1747:118::-;1833:5;1826:13;1819:21;1812:5;1809:32;1799:60;;1855:1;1852;1845:12;1870:449;1944:6;1952;2005:2;1993:9;1984:7;1980:23;1976:32;1973:52;;;2021:1;2018;2011:12;1973:52;2061:9;2048:23;2094:18;2086:6;2083:30;2080:50;;;2126:1;2123;2116:12;2080:50;2149:49;2190:7;2181:6;2170:9;2166:22;2149:49;:::i;:::-;2139:59;;;2248:2;2237:9;2233:18;2220:32;2261:28;2283:5;2261:28;:::i;:::-;2308:5;2298:15;;;1870:449;;;;;:::o;2324:114::-;2408:4;2401:5;2397:16;2390:5;2387:27;2377:55;;2428:1;2425;2418:12;2443:243;2500:6;2553:2;2541:9;2532:7;2528:23;2524:32;2521:52;;;2569:1;2566;2559:12;2521:52;2608:9;2595:23;2627:29;2650:5;2627:29;:::i;:::-;2675:5;2443:243;-1:-1:-1;;;2443:243:200:o;2691:180::-;2750:6;2803:2;2791:9;2782:7;2778:23;2774:32;2771:52;;;2819:1;2816;2809:12;2771:52;-1:-1:-1;2842:23:200;;2691:180;-1:-1:-1;2691:180:200:o;3084:1569::-;3288:4;3317:2;3357;3346:9;3342:18;3387:2;3376:9;3369:21;3410:6;3445;3439:13;3476:6;3468;3461:22;3502:2;3492:12;;3535:2;3524:9;3520:18;3513:25;;3597:2;3587:6;3584:1;3580:14;3569:9;3565:30;3561:39;3635:2;3627:6;3623:15;3656:1;3677;3687:937;3703:6;3698:3;3695:15;3687:937;;;3772:22;;;-1:-1:-1;;3768:36:200;3756:49;;3828:13;;3915:9;;-1:-1:-1;;;;;3911:35:200;3896:51;;3986:11;;3980:18;4018:15;;;4011:27;;;4099:19;;3868:15;;;4131:24;;;4221:21;;;;4266:1;;4189:2;4177:15;;;4280:236;4296:8;4291:3;4288:17;4280:236;;;4377:15;;-1:-1:-1;;;;;;4373:42:200;4359:57;;4485:17;;;;4324:1;4315:11;;;;;4442:14;;;;4280:236;;;-1:-1:-1;4602:12:200;;;;4539:5;-1:-1:-1;;;4567:15:200;;;;3729:1;3720:11;3687:937;;;-1:-1:-1;4641:6:200;;3084:1569;-1:-1:-1;;;;;;;;;3084:1569:200:o;4658:286::-;4717:6;4770:2;4758:9;4749:7;4745:23;4741:32;4738:52;;;4786:1;4783;4776:12;4738:52;4812:23;;-1:-1:-1;;;;;4864:31:200;;4854:42;;4844:70;;4910:1;4907;4900:12;5131:250;5216:1;5226:113;5240:6;5237:1;5234:13;5226:113;;;5316:11;;;5310:18;5297:11;;;5290:39;5262:2;5255:10;5226:113;;;-1:-1:-1;;5373:1:200;5355:16;;5348:27;5131:250::o;5386:271::-;5428:3;5466:5;5460:12;5493:6;5488:3;5481:19;5509:76;5578:6;5571:4;5566:3;5562:14;5555:4;5548:5;5544:16;5509:76;:::i;:::-;5639:2;5618:15;-1:-1:-1;;5614:29:200;5605:39;;;;5646:4;5601:50;;5386:271;-1:-1:-1;;5386:271:200:o;5662:803::-;5824:4;5853:2;5893;5882:9;5878:18;5923:2;5912:9;5905:21;5946:6;5981;5975:13;6012:6;6004;5997:22;6050:2;6039:9;6035:18;6028:25;;6112:2;6102:6;6099:1;6095:14;6084:9;6080:30;6076:39;6062:53;;6150:2;6142:6;6138:15;6171:1;6181:255;6195:6;6192:1;6189:13;6181:255;;;6288:2;6284:7;6272:9;6264:6;6260:22;6256:36;6251:3;6244:49;6316:40;6349:6;6340;6334:13;6316:40;:::i;:::-;6306:50;-1:-1:-1;6414:12:200;;;;6379:15;;;;6217:1;6210:9;6181:255;;;-1:-1:-1;6453:6:200;;5662:803;-1:-1:-1;;;;;;;5662:803:200:o;6470:448::-;6543:6;6551;6559;6612:2;6600:9;6591:7;6587:23;6583:32;6580:52;;;6628:1;6625;6618:12;6580:52;6667:9;6654:23;6686:29;6709:5;6686:29;:::i;:::-;6734:5;-1:-1:-1;6791:2:200;6776:18;;6763:32;6804:31;6763:32;6804:31;:::i;:::-;6470:448;;6854:7;;-1:-1:-1;;;6908:2:200;6893:18;;;;6880:32;;6470:448::o;6923:218::-;7070:2;7059:9;7052:21;7033:4;7090:45;7131:2;7120:9;7116:18;7108:6;7090:45;:::i;7146:248::-;7214:6;7222;7275:2;7263:9;7254:7;7250:23;7246:32;7243:52;;;7291:1;7288;7281:12;7243:52;-1:-1:-1;;7314:23:200;;;7384:2;7369:18;;;7356:32;;-1:-1:-1;7146:248:200:o;8029:320::-;8097:6;8150:2;8138:9;8129:7;8125:23;8121:32;8118:52;;;8166:1;8163;8156:12;8118:52;8206:9;8193:23;8239:18;8231:6;8228:30;8225:50;;;8271:1;8268;8261:12;8225:50;8294:49;8335:7;8326:6;8315:9;8311:22;8294:49;:::i;8354:121::-;8439:10;8432:5;8428:22;8421:5;8418:33;8408:61;;8465:1;8462;8455:12;8480:123;8565:12;8558:5;8554:24;8547:5;8544:35;8534:63;;8593:1;8590;8583:12;8608:1060;8700:6;8753:3;8741:9;8732:7;8728:23;8724:33;8721:53;;;8770:1;8767;8760:12;8721:53;8803:2;8797:9;8845:3;8837:6;8833:16;8915:6;8903:10;8900:22;8879:18;8867:10;8864:34;8861:62;8858:88;;;8926:18;;:::i;:::-;8966:10;8962:2;8955:22;;9014:9;9001:23;8993:6;8986:39;9086:2;9075:9;9071:18;9058:32;9053:2;9045:6;9041:15;9034:57;9141:2;9130:9;9126:18;9113:32;9154:30;9178:5;9154:30;:::i;:::-;9212:2;9200:15;;9193:30;9275:2;9260:18;;9247:32;9288;9247;9288;:::i;:::-;9348:2;9336:15;;9329:32;9413:3;9398:19;;9385:33;9427:32;9385:33;9427:32;:::i;:::-;9487:3;9475:16;;9468:33;9563:3;9548:19;;;9535:33;9517:16;;;9510:59;9631:3;9616:19;;;9603:33;9585:16;;;9578:59;;;;-1:-1:-1;9479:6:200;8608:1060;-1:-1:-1;8608:1060:200:o;9673:388::-;9750:6;9758;9811:2;9799:9;9790:7;9786:23;9782:32;9779:52;;;9827:1;9824;9817:12;9779:52;9863:9;9850:23;9840:33;;9924:2;9913:9;9909:18;9896:32;9951:18;9943:6;9940:30;9937:50;;;9983:1;9980;9973:12;9937:50;10006:49;10047:7;10038:6;10027:9;10023:22;10006:49;:::i;:::-;9996:59;;;9673:388;;;;;:::o;10066:245::-;10133:6;10186:2;10174:9;10165:7;10161:23;10157:32;10154:52;;;10202:1;10199;10192:12;10154:52;10234:9;10228:16;10253:28;10275:5;10253:28;:::i;10316:647::-;10395:6;10448:2;10436:9;10427:7;10423:23;10419:32;10416:52;;;10464:1;10461;10454:12;10416:52;10497:9;10491:16;10530:18;10522:6;10519:30;10516:50;;;10562:1;10559;10552:12;10516:50;10585:22;;10638:4;10630:13;;10626:27;-1:-1:-1;10616:55:200;;10667:1;10664;10657:12;10616:55;10696:2;10690:9;10721:48;10737:31;10765:2;10737:31;:::i;10721:48::-;10792:2;10785:5;10778:17;10832:7;10827:2;10822;10818;10814:11;10810:20;10807:33;10804:53;;;10853:1;10850;10843:12;10804:53;10866:67;10930:2;10925;10918:5;10914:14;10909:2;10905;10901:11;10866:67;:::i;11175:380::-;11254:1;11250:12;;;;11297;;;11318:61;;11372:4;11364:6;11360:17;11350:27;;11318:61;11425:2;11417:6;11414:14;11394:18;11391:38;11388:161;;11471:10;11466:3;11462:20;11459:1;11452:31;11506:4;11503:1;11496:15;11534:4;11531:1;11524:15;11388:161;;11175:380;;;:::o;11560:254::-;11590:1;11624:4;11621:1;11617:12;11648:3;11638:134;;11694:10;11689:3;11685:20;11682:1;11675:31;11729:4;11726:1;11719:15;11757:4;11754:1;11747:15;11638:134;11804:3;11797:4;11794:1;11790:12;11786:22;11781:27;;;11560:254;;;;:::o;13104:369::-;13190:6;13198;13206;13259:2;13247:9;13238:7;13234:23;13230:32;13227:52;;;13275:1;13272;13265:12;13227:52;13307:9;13301:16;13326:29;13349:5;13326:29;:::i;:::-;13419:2;13404:18;;13398:25;13463:2;13448:18;;;13442:25;13374:5;;13398:25;;-1:-1:-1;13442:25:200;13104:369;-1:-1:-1;;;13104:369:200:o;13821:127::-;13882:10;13877:3;13873:20;13870:1;13863:31;13913:4;13910:1;13903:15;13937:4;13934:1;13927:15;13953:125;14018:9;;;14039:10;;;14036:36;;;14052:18;;:::i;14265:168::-;14338:9;;;14369;;14386:15;;;14380:22;;14366:37;14356:71;;14407:18;;:::i;14691:184::-;14761:6;14814:2;14802:9;14793:7;14789:23;14785:32;14782:52;;;14830:1;14827;14820:12;14782:52;-1:-1:-1;14853:16:200;;14691:184;-1:-1:-1;14691:184:200:o;15411:384::-;-1:-1:-1;;;;;;15596:33:200;;15584:46;;15653:13;;15566:3;;15675:74;15653:13;15738:1;15729:11;;15722:4;15710:17;;15675:74;:::i;:::-;15769:16;;;;15787:1;15765:24;;15411:384;-1:-1:-1;;;15411:384:200:o;15800:287::-;15929:3;15967:6;15961:13;15983:66;16042:6;16037:3;16030:4;16022:6;16018:17;15983:66;:::i;:::-;16065:16;;;;;15800:287;-1:-1:-1;;15800:287:200:o;16092:398::-;16247:3;16285:6;16279:13;16301:66;16360:6;16355:3;16348:4;16340:6;16336:17;16301:66;:::i;:::-;-1:-1:-1;;;;;;16428:26:200;;;;16389:16;;;;16414:41;;;16482:1;16471:13;;16092:398;-1:-1:-1;;16092:398:200:o;17580:249::-;17649:6;17702:2;17690:9;17681:7;17677:23;17673:32;17670:52;;;17718:1;17715;17708:12;17670:52;17750:9;17744:16;17769:30;17793:5;17769:30;:::i;17834:249::-;17903:6;17956:2;17944:9;17935:7;17931:23;17927:32;17924:52;;;17972:1;17969;17962:12;17924:52;18004:9;17998:16;18023:30;18047:5;18023:30;:::i;18088:128::-;18155:9;;;18176:11;;;18173:37;;;18190:18;;:::i;18221:446::-;18471:2;18460:9;18453:21;18510:1;18505:2;18494:9;18490:18;18483:29;-1:-1:-1;;;18543:2:200;18532:9;18528:18;18521:35;18594:3;18587:4;18576:9;18572:20;18565:33;18434:4;18615:46;18656:3;18645:9;18641:19;18633:6;18615:46;:::i;19594:348::-;19824:2;19813:9;19806:21;19787:4;19844:49;19889:2;19878:9;19874:18;19507:2;19495:15;;-1:-1:-1;;;19535:4:200;19526:14;;19519:36;19580:2;19571:12;;19430:159;19844:49;19836:57;;19929:6;19924:2;19913:9;19909:18;19902:34;19594:348;;;;:::o;20111:::-;20341:2;20330:9;20323:21;20304:4;20361:49;20406:2;20395:9;20391:18;20024:2;20012:15;;-1:-1:-1;;;20052:4:200;20043:14;;20036:36;20097:2;20088:12;;19947:159;21923:127;21984:10;21979:3;21975:20;21972:1;21965:31;22015:4;22012:1;22005:15;22039:4;22036:1;22029:15;22055:135;22094:3;22115:17;;;22112:43;;22135:18;;:::i;:::-;-1:-1:-1;22182:1:200;22171:13;;22055:135::o;22599:438::-;22847:2;22836:9;22829:21;22810:4;22873:49;22918:2;22907:9;22903:18;19507:2;19495:15;;-1:-1:-1;;;19535:4:200;19526:14;;19519:36;19580:2;19571:12;;19430:159;22873:49;22970:9;22962:6;22958:22;22953:2;22942:9;22938:18;22931:50;22998:33;23024:6;23016;22998:33;:::i;23042:438::-;23290:2;23279:9;23272:21;23253:4;23316:49;23361:2;23350:9;23346:18;20024:2;20012:15;;-1:-1:-1;;;20052:4:200;20043:14;;20036:36;20097:2;20088:12;;19947:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "addLastByte(bytes)": "c10b95e7",
    "addressToBytes32(address)": "82c947b7",
    "bytes32ToAddress(bytes32)": "5ced058e",
    "checkCastToAttestation(bytes,bool)": "4237e369",
    "createShortPayload(uint8,uint8,bytes32)": "8820cb26",
    "cutLastByte(bytes)": "f1f97ac0",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "expectRevertAlreadyInitialized()": "7b347163",
    "expectRevertNotOwner()": "c63101b6",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "signMessage(uint256,bytes)": "eaee2611",
    "signMessage(uint256,bytes32)": "91df0ed8",
    "skipBlock()": "660982d9",
    "skipBlocks(uint256)": "a72e0a34",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testSynapseLibraryTest()": "a2cdb207",
    "testSynapseUtilities()": "0621feff",
    "test_dataHash(bytes32,bytes32)": "b5cace12",
    "test_formatAttestation((bytes32,bytes32,uint32,uint40,uint40,bytes32,bytes32))": "e932d763",
    "test_isAttestation(uint8)": "482a51f6"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OccupiedMemory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PrecompileOutOfGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnallocatedMemory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ViewOverrun\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"addLastByte\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addressToBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"buf\",\"type\":\"bytes32\"}],\"name\":\"bytes32ToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isAttestation\",\"type\":\"bool\"}],\"name\":\"checkCastToAttestation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"payloadLength\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"firstElementLength\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"createShortPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"cutLastByte\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevertAlreadyInitialized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevertNotOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hashedMsg\",\"type\":\"bytes32\"}],\"name\":\"signMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"signMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"skipBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blocks\",\"type\":\"uint256\"}],\"name\":\"skipBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSynapseLibraryTest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSynapseUtilities\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"agentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"snapGasHash\",\"type\":\"bytes32\"}],\"name\":\"test_dataHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"snapRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"blockNumber\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"internalType\":\"bytes32\",\"name\":\"_agentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_snapGasHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct RawAttestation\",\"name\":\"ra\",\"type\":\"tuple\"}],\"name\":\"test_formatAttestation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"length\",\"type\":\"uint8\"}],\"name\":\"test_isAttestation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"testSynapseLibraryTest()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"},\"testSynapseUtilities()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/suite/libs/memory/Attestation.t.sol\":\"AttestationLibraryTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/libs/Constants.sol\":{\"keccak256\":\"0x00f447e219d27f9a864847f8038c4bac16f59e2fb37c5c0de1b554d48d41ba48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c3b8452f969900c9ffbfae74dd73d076d9eace7e2448015b6c46ca8dd4d4402\",\"dweb:/ipfs/QmXGya3YqdmTXNdzTs1ZLMXJZnfJb49Sw5soXhjHbq8qnk\"]},\"contracts/libs/Errors.sol\":{\"keccak256\":\"0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b\",\"dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB\"]},\"contracts/libs/memory/Attestation.sol\":{\"keccak256\":\"0x83b58e2d80cc7139b8996c51c5e9015f34e833e73b92036b53a1af6641e2b699\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a097c82542ba977de931c6331a9b01a39ef2e46b8916414a6f4f550bc59c113\",\"dweb:/ipfs/QmYRHMoPXzrnx86rZnHAEiFxqM5poEs6wyZinLLTEfwZH3\"]},\"contracts/libs/memory/BaseMessage.sol\":{\"keccak256\":\"0x6f625ee64c2abb64fe5e7645eb4ac449e4a743cf5c434de70b24b47522a2c579\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a29cb57889c10b4cc601abe0f65529f1829354a276437ecb7ce387a654fb671\",\"dweb:/ipfs/QmRYA9HJAdKaVhrvDdaCwdR5DvCYy7yPQGVJ4a9kUCAxaA\"]},\"contracts/libs/memory/ByteString.sol\":{\"keccak256\":\"0x99a2d8a7d93c1ce5063da6631347189cffb95d977cc1683c8bc2d9529b501d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c627819681a668117cbf3633700ed36b63942a3ea8d96db65211febe048bb8bb\",\"dweb:/ipfs/QmSdhu6BDD6Tk17zD2JcmYwYVEnnoeuh9UFWfUkVW5KKvL\"]},\"contracts/libs/memory/MemView.sol\":{\"keccak256\":\"0x95dd48e50e353b59fadce29f22f02629c91bd3b5e07c0efa588bd7c808536587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4347457c5338192aca52c237c7f588d15a4f541482cd44b0632c59f36f9558eb\",\"dweb:/ipfs/QmXn1sKY7nVNrgKtbtE9PaMHFKBadyg73fs2jhw4Navyb1\"]},\"contracts/libs/memory/Message.sol\":{\"keccak256\":\"0x206a96eb35a7015116bfc585b30d34bd5cf151761ded37b8a2a36dd74a9ba99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12ebb3152e1c1dc2aed3c88cb17f54d9abc2a157215c2628fa3c4ac161686cf\",\"dweb:/ipfs/QmbU6h7KEanE7Pt5UXN2WV5SQwWjziCwqBL5RLKAUJHKci\"]},\"contracts/libs/memory/Receipt.sol\":{\"keccak256\":\"0x009e8cfffa4806d1a0a326a31350ead092c9cd22105d4890c86bf93d20c7824d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa9905170f86e4e2d9b62e9fabaab36381398da14f001e0b9bb98c31c174a48e\",\"dweb:/ipfs/QmYpHjdY2yf3w6kFi9urUTyrMyVZBBsCGGEkE1kyTnXqVn\"]},\"contracts/libs/memory/Snapshot.sol\":{\"keccak256\":\"0x5df6aa04b1cbb65e410c7f1a02787e0e11dbcdb5cde18ae50d435029c27c1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2e19b5c6778338b7e8e9c8ef82738797d8955d37884c7db70d7cdea43329910\",\"dweb:/ipfs/Qma1cRGHqRM3tkh5JyzR2Td6iKKST2HapTygBwVNTRJJZD\"]},\"contracts/libs/memory/State.sol\":{\"keccak256\":\"0x3997f3a820110b3bce6f87ea8df3e1f8b006d1ac45efff1dc2f8873f8bbfa5af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf973a3633546dfff75b550673b4a680b7fab48d7fc8923157983a4fde3d5da4\",\"dweb:/ipfs/QmZ8NNwcYaqVxtar8g5MH5mqDXXuMTQLe6vi7zYGswFA3N\"]},\"contracts/libs/merkle/MerkleMath.sol\":{\"keccak256\":\"0xbd13c07bdc40b80f56c7d75e3f31b6c4a85a78d444b760604a5b71083d14925c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3162b491e4e216c0f2d143ce3baab4cf9e2a8b1b42466256a5d5b1f8b0385507\",\"dweb:/ipfs/QmYnDSZyxiGHfmB8Fx46zh1LZe3aCdVaKzpaQuD9piTc7u\"]},\"contracts/libs/stack/GasData.sol\":{\"keccak256\":\"0x2007fd4b97cf33bfe4aa7dc6ac887af87b4010ec9834636b4dd5685582ac26cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b54ca8b659d63ef7138c5b3b243190ca19b1e893b7b49dee1f8790d55b9e691\",\"dweb:/ipfs/Qmc2FGb16uosZ5kvyEK2onpWVPvWeE9X72xNWeJw8CbweD\"]},\"contracts/libs/stack/Header.sol\":{\"keccak256\":\"0x6a2030f6d08075f91336466c3fe4bd63f2760dcd42554856357af8024fd55344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1a1c8f6240f897c62cdc09fab57fc9eeea8072efbc8d101bd7e40b8eea272c9\",\"dweb:/ipfs/QmYrFA3fupKhW71k6yLkQsojPJt4Fcv4uH46hNvYYHcDsy\"]},\"contracts/libs/stack/Number.sol\":{\"keccak256\":\"0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd\",\"dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5\"]},\"contracts/libs/stack/Request.sol\":{\"keccak256\":\"0xecd4427fe7285d1d5663ea019a66ebb04d3f495c0be28a14043c99a0d9a90689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55e800c307070d6497031b90157d917dcabd5f93d342081be8d20ad3c80df429\",\"dweb:/ipfs/QmU8oza8MeWDbG9xfPaPVoj4Z1rKtvQ7pA3Z7CuYyGSuY6\"]},\"contracts/libs/stack/Tips.sol\":{\"keccak256\":\"0x2186d854149349ff689a8356c7f387d134f59fa4a97aed7b43c9e25f46661b0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff15d61f2c9b26e6ef33457aed4a2d9ed61726e2a746d3e0a7e68eb6cd3d63a1\",\"dweb:/ipfs/QmUeiiTAjPmuFhLfzDMqZ6DyvQmEYhsKo9XArHSrMvjYKL\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xad395351c00a0d0fe960e50eaf0702dceade23f6e8e03b729b17923b812a61ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a3cfbddc15788734b68c96c0f752096e6f3f7300d6c198068e67b399307f380\",\"dweb:/ipfs/QmZc3CByhTuLqkaWn88xytjHa1fEeTGUSTNMPHVSwA2xye\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"test/harnesses/libs/memory/AttestationHarness.t.sol\":{\"keccak256\":\"0xe320598c27f7c6ef9137f024c75d900df72729c6beedf56a5078582a5f0f2e11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80c9c6674f89f1ac81f45ee60fb2d0cd66f07efb669ef87fc140fbff43ca097d\",\"dweb:/ipfs/QmUSVuoF6MnLokJJtSHvVmfm8F574zuCd17qnpwN43bLh2\"]},\"test/suite/libs/memory/Attestation.t.sol\":{\"keccak256\":\"0xcd6456857b9a870ad51347477939cfc764e6968937ea280c35f82e3e385a9c88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://807301af9308a168a9e3064b50ccaf7656ce0a3dbda248e2e2bedab6074209b5\",\"dweb:/ipfs/QmWaSWcQhBhDshzoSyXPofBPek3QoM8h7XJoSMsy5LZxCV\"]},\"test/utils/SynapseLibraryTest.t.sol\":{\"keccak256\":\"0xadc2e35557bfeb3617d3f4806596e610ccb399b20255c51930626b4a100ee803\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee71b2028c579cb42ddc895a1ab40c3a6001e2e36119465e18562f2535627e9d\",\"dweb:/ipfs/QmXzRiSqSvA9z9Rq4xnhGFCSbJUYAgmE8VrnP3hqjfWBbm\"]},\"test/utils/SynapseTestConstants.t.sol\":{\"keccak256\":\"0x24b5c4c4f8e0de51b137e0b922875be258282ddd33580da8cf939bef0b552a79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ea15ff24cdcacc3c31382bd04c530287d49dc841f7013e9810133b4f91593e\",\"dweb:/ipfs/QmbBd33fFmSmTqPXks8knXCXZHpaYvUSjebtmFGrU3YE5A\"]},\"test/utils/SynapseUtilities.t.sol\":{\"keccak256\":\"0x8d08d6a579173fe927decca6fbeaa743e9455051837799f3be15c052420b7112\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5662d8d58cac1c6e0688ce8faee3b2085402e4d0ce0cbc38596bdaafa75e1b51\",\"dweb:/ipfs/QmU9b5UQeYndKQAVprdab994RuG1WW8Uz7sg38uadyN2gq\"]},\"test/utils/libs/SynapseStructs.t.sol\":{\"keccak256\":\"0x664ba9f04e889501196308480444a90657872af51267cbe7e6d9de5308edab13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b85dd129998afd92047c883b6712d815ae2930171eaa33eb30fdceb5dddca0ea\",\"dweb:/ipfs/QmRKcKo86FaRVEydU1yETN6jaSKbomdFFcrswzZeL3WnAh\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "OccupiedMemory"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PrecompileOutOfGas"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnallocatedMemory"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ViewOverrun"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "addLastByte",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "addressToBytes32",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "buf",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "bytes32ToAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "isAttestation",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "checkCastToAttestation"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "payloadLength",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "firstElementLength",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "createShortPayload",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cutLastByte",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "expectRevertAlreadyInitialized"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "expectRevertNotOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "privKey",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "hashedMsg",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "signMessage",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "privKey",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "signMessage",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "skipBlock"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blocks",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "skipBlocks"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSynapseLibraryTest"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSynapseUtilities"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "agentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "snapGasHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_dataHash"
        },
        {
          "inputs": [
            {
              "internalType": "struct RawAttestation",
              "name": "ra",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "snapRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "dataHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint40",
                  "name": "blockNumber",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "timestamp",
                  "type": "uint40"
                },
                {
                  "internalType": "bytes32",
                  "name": "_agentRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "_snapGasHash",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_formatAttestation"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "length",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAttestation"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "testSynapseLibraryTest()": {
            "notice": "Prevents this contract from being included in the coverage report"
          },
          "testSynapseUtilities()": {
            "notice": "Prevents this contract from being included in the coverage report"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/suite/libs/memory/Attestation.t.sol": "AttestationLibraryTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/libs/Constants.sol": {
        "keccak256": "0x00f447e219d27f9a864847f8038c4bac16f59e2fb37c5c0de1b554d48d41ba48",
        "urls": [
          "bzz-raw://8c3b8452f969900c9ffbfae74dd73d076d9eace7e2448015b6c46ca8dd4d4402",
          "dweb:/ipfs/QmXGya3YqdmTXNdzTs1ZLMXJZnfJb49Sw5soXhjHbq8qnk"
        ],
        "license": "MIT"
      },
      "contracts/libs/Errors.sol": {
        "keccak256": "0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011",
        "urls": [
          "bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b",
          "dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Attestation.sol": {
        "keccak256": "0x83b58e2d80cc7139b8996c51c5e9015f34e833e73b92036b53a1af6641e2b699",
        "urls": [
          "bzz-raw://1a097c82542ba977de931c6331a9b01a39ef2e46b8916414a6f4f550bc59c113",
          "dweb:/ipfs/QmYRHMoPXzrnx86rZnHAEiFxqM5poEs6wyZinLLTEfwZH3"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/BaseMessage.sol": {
        "keccak256": "0x6f625ee64c2abb64fe5e7645eb4ac449e4a743cf5c434de70b24b47522a2c579",
        "urls": [
          "bzz-raw://0a29cb57889c10b4cc601abe0f65529f1829354a276437ecb7ce387a654fb671",
          "dweb:/ipfs/QmRYA9HJAdKaVhrvDdaCwdR5DvCYy7yPQGVJ4a9kUCAxaA"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/ByteString.sol": {
        "keccak256": "0x99a2d8a7d93c1ce5063da6631347189cffb95d977cc1683c8bc2d9529b501d66",
        "urls": [
          "bzz-raw://c627819681a668117cbf3633700ed36b63942a3ea8d96db65211febe048bb8bb",
          "dweb:/ipfs/QmSdhu6BDD6Tk17zD2JcmYwYVEnnoeuh9UFWfUkVW5KKvL"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/MemView.sol": {
        "keccak256": "0x95dd48e50e353b59fadce29f22f02629c91bd3b5e07c0efa588bd7c808536587",
        "urls": [
          "bzz-raw://4347457c5338192aca52c237c7f588d15a4f541482cd44b0632c59f36f9558eb",
          "dweb:/ipfs/QmXn1sKY7nVNrgKtbtE9PaMHFKBadyg73fs2jhw4Navyb1"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Message.sol": {
        "keccak256": "0x206a96eb35a7015116bfc585b30d34bd5cf151761ded37b8a2a36dd74a9ba99c",
        "urls": [
          "bzz-raw://e12ebb3152e1c1dc2aed3c88cb17f54d9abc2a157215c2628fa3c4ac161686cf",
          "dweb:/ipfs/QmbU6h7KEanE7Pt5UXN2WV5SQwWjziCwqBL5RLKAUJHKci"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Receipt.sol": {
        "keccak256": "0x009e8cfffa4806d1a0a326a31350ead092c9cd22105d4890c86bf93d20c7824d",
        "urls": [
          "bzz-raw://aa9905170f86e4e2d9b62e9fabaab36381398da14f001e0b9bb98c31c174a48e",
          "dweb:/ipfs/QmYpHjdY2yf3w6kFi9urUTyrMyVZBBsCGGEkE1kyTnXqVn"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Snapshot.sol": {
        "keccak256": "0x5df6aa04b1cbb65e410c7f1a02787e0e11dbcdb5cde18ae50d435029c27c1ce5",
        "urls": [
          "bzz-raw://d2e19b5c6778338b7e8e9c8ef82738797d8955d37884c7db70d7cdea43329910",
          "dweb:/ipfs/Qma1cRGHqRM3tkh5JyzR2Td6iKKST2HapTygBwVNTRJJZD"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/State.sol": {
        "keccak256": "0x3997f3a820110b3bce6f87ea8df3e1f8b006d1ac45efff1dc2f8873f8bbfa5af",
        "urls": [
          "bzz-raw://bf973a3633546dfff75b550673b4a680b7fab48d7fc8923157983a4fde3d5da4",
          "dweb:/ipfs/QmZ8NNwcYaqVxtar8g5MH5mqDXXuMTQLe6vi7zYGswFA3N"
        ],
        "license": "MIT"
      },
      "contracts/libs/merkle/MerkleMath.sol": {
        "keccak256": "0xbd13c07bdc40b80f56c7d75e3f31b6c4a85a78d444b760604a5b71083d14925c",
        "urls": [
          "bzz-raw://3162b491e4e216c0f2d143ce3baab4cf9e2a8b1b42466256a5d5b1f8b0385507",
          "dweb:/ipfs/QmYnDSZyxiGHfmB8Fx46zh1LZe3aCdVaKzpaQuD9piTc7u"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/GasData.sol": {
        "keccak256": "0x2007fd4b97cf33bfe4aa7dc6ac887af87b4010ec9834636b4dd5685582ac26cb",
        "urls": [
          "bzz-raw://8b54ca8b659d63ef7138c5b3b243190ca19b1e893b7b49dee1f8790d55b9e691",
          "dweb:/ipfs/Qmc2FGb16uosZ5kvyEK2onpWVPvWeE9X72xNWeJw8CbweD"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Header.sol": {
        "keccak256": "0x6a2030f6d08075f91336466c3fe4bd63f2760dcd42554856357af8024fd55344",
        "urls": [
          "bzz-raw://e1a1c8f6240f897c62cdc09fab57fc9eeea8072efbc8d101bd7e40b8eea272c9",
          "dweb:/ipfs/QmYrFA3fupKhW71k6yLkQsojPJt4Fcv4uH46hNvYYHcDsy"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Number.sol": {
        "keccak256": "0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96",
        "urls": [
          "bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd",
          "dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Request.sol": {
        "keccak256": "0xecd4427fe7285d1d5663ea019a66ebb04d3f495c0be28a14043c99a0d9a90689",
        "urls": [
          "bzz-raw://55e800c307070d6497031b90157d917dcabd5f93d342081be8d20ad3c80df429",
          "dweb:/ipfs/QmU8oza8MeWDbG9xfPaPVoj4Z1rKtvQ7pA3Z7CuYyGSuY6"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Tips.sol": {
        "keccak256": "0x2186d854149349ff689a8356c7f387d134f59fa4a97aed7b43c9e25f46661b0d",
        "urls": [
          "bzz-raw://ff15d61f2c9b26e6ef33457aed4a2d9ed61726e2a746d3e0a7e68eb6cd3d63a1",
          "dweb:/ipfs/QmUeiiTAjPmuFhLfzDMqZ6DyvQmEYhsKo9XArHSrMvjYKL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xad395351c00a0d0fe960e50eaf0702dceade23f6e8e03b729b17923b812a61ae",
        "urls": [
          "bzz-raw://0a3cfbddc15788734b68c96c0f752096e6f3f7300d6c198068e67b399307f380",
          "dweb:/ipfs/QmZc3CByhTuLqkaWn88xytjHa1fEeTGUSTNMPHVSwA2xye"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "test/harnesses/libs/memory/AttestationHarness.t.sol": {
        "keccak256": "0xe320598c27f7c6ef9137f024c75d900df72729c6beedf56a5078582a5f0f2e11",
        "urls": [
          "bzz-raw://80c9c6674f89f1ac81f45ee60fb2d0cd66f07efb669ef87fc140fbff43ca097d",
          "dweb:/ipfs/QmUSVuoF6MnLokJJtSHvVmfm8F574zuCd17qnpwN43bLh2"
        ],
        "license": "MIT"
      },
      "test/suite/libs/memory/Attestation.t.sol": {
        "keccak256": "0xcd6456857b9a870ad51347477939cfc764e6968937ea280c35f82e3e385a9c88",
        "urls": [
          "bzz-raw://807301af9308a168a9e3064b50ccaf7656ce0a3dbda248e2e2bedab6074209b5",
          "dweb:/ipfs/QmWaSWcQhBhDshzoSyXPofBPek3QoM8h7XJoSMsy5LZxCV"
        ],
        "license": "MIT"
      },
      "test/utils/SynapseLibraryTest.t.sol": {
        "keccak256": "0xadc2e35557bfeb3617d3f4806596e610ccb399b20255c51930626b4a100ee803",
        "urls": [
          "bzz-raw://ee71b2028c579cb42ddc895a1ab40c3a6001e2e36119465e18562f2535627e9d",
          "dweb:/ipfs/QmXzRiSqSvA9z9Rq4xnhGFCSbJUYAgmE8VrnP3hqjfWBbm"
        ],
        "license": "MIT"
      },
      "test/utils/SynapseTestConstants.t.sol": {
        "keccak256": "0x24b5c4c4f8e0de51b137e0b922875be258282ddd33580da8cf939bef0b552a79",
        "urls": [
          "bzz-raw://12ea15ff24cdcacc3c31382bd04c530287d49dc841f7013e9810133b4f91593e",
          "dweb:/ipfs/QmbBd33fFmSmTqPXks8knXCXZHpaYvUSjebtmFGrU3YE5A"
        ],
        "license": "MIT"
      },
      "test/utils/SynapseUtilities.t.sol": {
        "keccak256": "0x8d08d6a579173fe927decca6fbeaa743e9455051837799f3be15c052420b7112",
        "urls": [
          "bzz-raw://5662d8d58cac1c6e0688ce8faee3b2085402e4d0ce0cbc38596bdaafa75e1b51",
          "dweb:/ipfs/QmU9b5UQeYndKQAVprdab994RuG1WW8Uz7sg38uadyN2gq"
        ],
        "license": "MIT"
      },
      "test/utils/libs/SynapseStructs.t.sol": {
        "keccak256": "0x664ba9f04e889501196308480444a90657872af51267cbe7e6d9de5308edab13",
        "urls": [
          "bzz-raw://b85dd129998afd92047c883b6712d815ae2930171eaa33eb30fdceb5dddca0ea",
          "dweb:/ipfs/QmRKcKo86FaRVEydU1yETN6jaSKbomdFFcrswzZeL3WnAh"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/suite/libs/memory/Attestation.t.sol",
    "id": 80107,
    "exportedSymbols": {
      "ATTESTATION_LENGTH": [
        10071
      ],
      "AttestationHarness": [
        55164
      ],
      "AttestationLibraryTest": [
        80106
      ],
      "MemViewLib": [
        12265
      ],
      "RawAttestation": [
        94438
      ],
      "SynapseLibraryTest": [
        91455
      ],
      "UnformattedAttestation": [
        10222
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3597:161",
    "nodes": [
      {
        "id": 79822,
        "nodeType": "PragmaDirective",
        "src": "32:23:161",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 79824,
        "nodeType": "ImportDirective",
        "src": "57:77:161",
        "nodes": [],
        "absolutePath": "contracts/libs/Errors.sol",
        "file": "../../../../contracts/libs/Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80107,
        "sourceUnit": 10335,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79823,
              "name": "UnformattedAttestation",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10222,
              "src": "65:22:161",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79826,
        "nodeType": "ImportDirective",
        "src": "135:76:161",
        "nodes": [],
        "absolutePath": "contracts/libs/Constants.sol",
        "file": "../../../../contracts/libs/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80107,
        "sourceUnit": 10171,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79825,
              "name": "ATTESTATION_LENGTH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10071,
              "src": "143:18:161",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79829,
        "nodeType": "ImportDirective",
        "src": "213:87:161",
        "nodes": [],
        "absolutePath": "test/utils/SynapseLibraryTest.t.sol",
        "file": "../../../utils/SynapseLibraryTest.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80107,
        "sourceUnit": 91456,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79827,
              "name": "SynapseLibraryTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 91455,
              "src": "221:18:161",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 79828,
              "name": "MemViewLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12265,
              "src": "241:10:161",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79832,
        "nodeType": "ImportDirective",
        "src": "301:103:161",
        "nodes": [],
        "absolutePath": "test/harnesses/libs/memory/AttestationHarness.t.sol",
        "file": "../../../harnesses/libs/memory/AttestationHarness.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80107,
        "sourceUnit": 55165,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79830,
              "name": "AttestationHarness",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55164,
              "src": "309:18:161",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 79831,
              "name": "MemViewLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12265,
              "src": "329:10:161",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79834,
        "nodeType": "ImportDirective",
        "src": "406:72:161",
        "nodes": [],
        "absolutePath": "test/utils/libs/SynapseStructs.t.sol",
        "file": "../../../utils/libs/SynapseStructs.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80107,
        "sourceUnit": 96301,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79833,
              "name": "RawAttestation",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 94438,
              "src": "414:14:161",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80106,
        "nodeType": "ContractDefinition",
        "src": "519:3109:161",
        "nodes": [
          {
            "id": 79839,
            "nodeType": "UsingForDirective",
            "src": "579:27:161",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 79837,
              "name": "MemViewLib",
              "nameLocations": [
                "585:10:161"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12265,
              "src": "585:10:161"
            },
            "typeName": {
              "id": 79838,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "600:5:161",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "id": 79842,
            "nodeType": "VariableDeclaration",
            "src": "612:38:161",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "libHarness",
            "nameLocation": "640:10:161",
            "scope": 80106,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AttestationHarness_$55164",
              "typeString": "contract AttestationHarness"
            },
            "typeName": {
              "id": 79841,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 79840,
                "name": "AttestationHarness",
                "nameLocations": [
                  "612:18:161"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 55164,
                "src": "612:18:161"
              },
              "referencedDeclaration": 55164,
              "src": "612:18:161",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AttestationHarness_$55164",
                "typeString": "contract AttestationHarness"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 79853,
            "nodeType": "FunctionDefinition",
            "src": "657:78:161",
            "nodes": [],
            "body": {
              "id": 79852,
              "nodeType": "Block",
              "src": "681:54:161",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 79850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79845,
                      "name": "libHarness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79842,
                      "src": "691:10:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AttestationHarness_$55164",
                        "typeString": "contract AttestationHarness"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 79848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "704:22:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_AttestationHarness_$55164_$",
                          "typeString": "function () returns (contract AttestationHarness)"
                        },
                        "typeName": {
                          "id": 79847,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 79846,
                            "name": "AttestationHarness",
                            "nameLocations": [
                              "708:18:161"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 55164,
                            "src": "708:18:161"
                          },
                          "referencedDeclaration": 55164,
                          "src": "708:18:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AttestationHarness_$55164",
                            "typeString": "contract AttestationHarness"
                          }
                        }
                      },
                      "id": 79849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "704:24:161",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AttestationHarness_$55164",
                        "typeString": "contract AttestationHarness"
                      }
                    },
                    "src": "691:37:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AttestationHarness_$55164",
                      "typeString": "contract AttestationHarness"
                    }
                  },
                  "id": 79851,
                  "nodeType": "ExpressionStatement",
                  "src": "691:37:161"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "666:5:161",
            "parameters": {
              "id": 79843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:2:161"
            },
            "returnParameters": {
              "id": 79844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:0:161"
            },
            "scope": 80106,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80003,
            "nodeType": "FunctionDefinition",
            "src": "741:1514:161",
            "nodes": [],
            "body": {
              "id": 80002,
              "nodeType": "Block",
              "src": "806:1449:161",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    79860
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79860,
                      "mutability": "mutable",
                      "name": "payload",
                      "nameLocation": "829:7:161",
                      "nodeType": "VariableDeclaration",
                      "scope": 80002,
                      "src": "816:20:161",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 79859,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "816:5:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79874,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 79863,
                          "name": "ra",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79856,
                          "src": "880:2:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawAttestation_$94438_memory_ptr",
                            "typeString": "struct RawAttestation memory"
                          }
                        },
                        "id": 79864,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "883:8:161",
                        "memberName": "snapRoot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94425,
                        "src": "880:11:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 79865,
                          "name": "ra",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79856,
                          "src": "893:2:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawAttestation_$94438_memory_ptr",
                            "typeString": "struct RawAttestation memory"
                          }
                        },
                        "id": 79866,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "896:8:161",
                        "memberName": "dataHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94427,
                        "src": "893:11:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 79867,
                          "name": "ra",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79856,
                          "src": "906:2:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawAttestation_$94438_memory_ptr",
                            "typeString": "struct RawAttestation memory"
                          }
                        },
                        "id": 79868,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "909:5:161",
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94429,
                        "src": "906:8:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 79869,
                          "name": "ra",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79856,
                          "src": "916:2:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawAttestation_$94438_memory_ptr",
                            "typeString": "struct RawAttestation memory"
                          }
                        },
                        "id": 79870,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "919:11:161",
                        "memberName": "blockNumber",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94431,
                        "src": "916:14:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "expression": {
                          "id": 79871,
                          "name": "ra",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79856,
                          "src": "932:2:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawAttestation_$94438_memory_ptr",
                            "typeString": "struct RawAttestation memory"
                          }
                        },
                        "id": 79872,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "935:9:161",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94433,
                        "src": "932:12:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      ],
                      "expression": {
                        "id": 79861,
                        "name": "libHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79842,
                        "src": "851:10:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationHarness_$55164",
                          "typeString": "contract AttestationHarness"
                        }
                      },
                      "id": 79862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "862:17:161",
                      "memberName": "formatAttestation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55149,
                      "src": "851:28:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bytes32_$_t_bytes32_$_t_uint32_$_t_uint40_$_t_uint40_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes32,bytes32,uint32,uint40,uint40) pure external returns (bytes memory)"
                      }
                    },
                    "id": 79873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "851:94:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "816:129:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79876,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79860,
                        "src": "1013:7:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 79879,
                              "name": "ra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79856,
                              "src": "1051:2:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawAttestation_$94438_memory_ptr",
                                "typeString": "struct RawAttestation memory"
                              }
                            },
                            "id": 79880,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1054:8:161",
                            "memberName": "snapRoot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94425,
                            "src": "1051:11:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 79881,
                              "name": "ra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79856,
                              "src": "1064:2:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawAttestation_$94438_memory_ptr",
                                "typeString": "struct RawAttestation memory"
                              }
                            },
                            "id": 79882,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1067:8:161",
                            "memberName": "dataHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94427,
                            "src": "1064:11:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 79883,
                              "name": "ra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79856,
                              "src": "1077:2:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawAttestation_$94438_memory_ptr",
                                "typeString": "struct RawAttestation memory"
                              }
                            },
                            "id": 79884,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1080:5:161",
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94429,
                            "src": "1077:8:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "expression": {
                              "id": 79885,
                              "name": "ra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79856,
                              "src": "1087:2:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawAttestation_$94438_memory_ptr",
                                "typeString": "struct RawAttestation memory"
                              }
                            },
                            "id": 79886,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1090:11:161",
                            "memberName": "blockNumber",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94431,
                            "src": "1087:14:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            }
                          },
                          {
                            "expression": {
                              "id": 79887,
                              "name": "ra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79856,
                              "src": "1103:2:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawAttestation_$94438_memory_ptr",
                                "typeString": "struct RawAttestation memory"
                              }
                            },
                            "id": 79888,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1106:9:161",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94433,
                            "src": "1103:12:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            },
                            {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            }
                          ],
                          "expression": {
                            "id": 79877,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1034:3:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 79878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1038:12:161",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1034:16:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 79889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1034:82:161",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "21666f726d61744174746573746174696f6e",
                        "id": 79890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1130:20:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_753f450714fa9e33578db256cf936bd5989784d2ca55109d08697386c2ec93ee",
                          "typeString": "literal_string \"!formatAttestation\""
                        },
                        "value": "!formatAttestation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_753f450714fa9e33578db256cf936bd5989784d2ca55109d08697386c2ec93ee",
                          "typeString": "literal_string \"!formatAttestation\""
                        }
                      ],
                      "id": 79875,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 20050,
                      "src": "991:8:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,string memory)"
                      }
                    },
                    "id": 79891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "991:169:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79892,
                  "nodeType": "ExpressionStatement",
                  "src": "991:169:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79894,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79860,
                        "src": "1203:7:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 79895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1227:4:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 79893,
                      "name": "checkCastToAttestation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80105,
                      "src": "1170:22:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (bytes memory,bool)"
                      }
                    },
                    "id": 79896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1194:7:161",
                      "1212:13:161"
                    ],
                    "names": [
                      "payload",
                      "isAttestation"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1170:63:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79897,
                  "nodeType": "ExpressionStatement",
                  "src": "1170:63:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79901,
                            "name": "payload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79860,
                            "src": "1296:7:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 79899,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79842,
                            "src": "1276:10:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttestationHarness_$55164",
                              "typeString": "contract AttestationHarness"
                            }
                          },
                          "id": 79900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1287:8:161",
                          "memberName": "snapRoot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55024,
                          "src": "1276:19:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure external returns (bytes32)"
                          }
                        },
                        "id": 79902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1276:28:161",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 79903,
                          "name": "ra",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79856,
                          "src": "1306:2:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawAttestation_$94438_memory_ptr",
                            "typeString": "struct RawAttestation memory"
                          }
                        },
                        "id": 79904,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1309:8:161",
                        "memberName": "snapRoot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94425,
                        "src": "1306:11:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "21736e6170526f6f74",
                        "id": 79905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1319:11:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ab275148d53467f1de41a90cc250e8e7d7d580b289a8d92cf2c29f229355784",
                          "typeString": "literal_string \"!snapRoot\""
                        },
                        "value": "!snapRoot"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ab275148d53467f1de41a90cc250e8e7d7d580b289a8d92cf2c29f229355784",
                          "typeString": "literal_string \"!snapRoot\""
                        }
                      ],
                      "id": 79898,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18382,
                      "src": "1267:8:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory)"
                      }
                    },
                    "id": 79906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1267:64:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79907,
                  "nodeType": "ExpressionStatement",
                  "src": "1267:64:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79911,
                            "name": "payload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79860,
                            "src": "1370:7:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 79909,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79842,
                            "src": "1350:10:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttestationHarness_$55164",
                              "typeString": "contract AttestationHarness"
                            }
                          },
                          "id": 79910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1361:8:161",
                          "memberName": "dataHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55038,
                          "src": "1350:19:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure external returns (bytes32)"
                          }
                        },
                        "id": 79912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1350:28:161",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 79913,
                          "name": "ra",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79856,
                          "src": "1380:2:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawAttestation_$94438_memory_ptr",
                            "typeString": "struct RawAttestation memory"
                          }
                        },
                        "id": 79914,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1383:8:161",
                        "memberName": "dataHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94427,
                        "src": "1380:11:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "216461746148617368",
                        "id": 79915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1393:11:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49119ce49a551451742cc96bf07facc3f3a054d522d983556192e5ec49c39c31",
                          "typeString": "literal_string \"!dataHash\""
                        },
                        "value": "!dataHash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49119ce49a551451742cc96bf07facc3f3a054d522d983556192e5ec49c39c31",
                          "typeString": "literal_string \"!dataHash\""
                        }
                      ],
                      "id": 79908,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18382,
                      "src": "1341:8:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory)"
                      }
                    },
                    "id": 79916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1341:64:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79917,
                  "nodeType": "ExpressionStatement",
                  "src": "1341:64:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79921,
                            "name": "payload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79860,
                            "src": "1441:7:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 79919,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79842,
                            "src": "1424:10:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttestationHarness_$55164",
                              "typeString": "contract AttestationHarness"
                            }
                          },
                          "id": 79920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1435:5:161",
                          "memberName": "nonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55068,
                          "src": "1424:16:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_uint32_$",
                            "typeString": "function (bytes memory) pure external returns (uint32)"
                          }
                        },
                        "id": 79922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1424:25:161",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 79923,
                          "name": "ra",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79856,
                          "src": "1451:2:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawAttestation_$94438_memory_ptr",
                            "typeString": "struct RawAttestation memory"
                          }
                        },
                        "id": 79924,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1454:5:161",
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94429,
                        "src": "1451:8:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "216e6f6e6365",
                        "id": 79925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1461:8:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02c754d68ee8a7341b68ec6ffcbf786d5a8d2aaca8ec08942f7112309bfd6f98",
                          "typeString": "literal_string \"!nonce\""
                        },
                        "value": "!nonce"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02c754d68ee8a7341b68ec6ffcbf786d5a8d2aaca8ec08942f7112309bfd6f98",
                          "typeString": "literal_string \"!nonce\""
                        }
                      ],
                      "id": 79918,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18521,
                      "src": "1415:8:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 79926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1415:55:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79927,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:55:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79931,
                            "name": "payload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79860,
                            "src": "1512:7:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 79929,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79842,
                            "src": "1489:10:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttestationHarness_$55164",
                              "typeString": "contract AttestationHarness"
                            }
                          },
                          "id": 79930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1500:11:161",
                          "memberName": "blockNumber",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55082,
                          "src": "1489:22:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_uint40_$",
                            "typeString": "function (bytes memory) pure external returns (uint40)"
                          }
                        },
                        "id": 79932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1489:31:161",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "expression": {
                          "id": 79933,
                          "name": "ra",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79856,
                          "src": "1522:2:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawAttestation_$94438_memory_ptr",
                            "typeString": "struct RawAttestation memory"
                          }
                        },
                        "id": 79934,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1525:11:161",
                        "memberName": "blockNumber",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94431,
                        "src": "1522:14:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "hexValue": "21626c6f636b4e756d626572",
                        "id": 79935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1538:14:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_049a80491e2ab17bd586213ec5cc6cc4b1d13113ef8c41aa29b7d075f9bddbdd",
                          "typeString": "literal_string \"!blockNumber\""
                        },
                        "value": "!blockNumber"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_049a80491e2ab17bd586213ec5cc6cc4b1d13113ef8c41aa29b7d075f9bddbdd",
                          "typeString": "literal_string \"!blockNumber\""
                        }
                      ],
                      "id": 79928,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18521,
                      "src": "1480:8:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 79936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1480:73:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79937,
                  "nodeType": "ExpressionStatement",
                  "src": "1480:73:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79941,
                            "name": "payload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79860,
                            "src": "1593:7:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 79939,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79842,
                            "src": "1572:10:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttestationHarness_$55164",
                              "typeString": "contract AttestationHarness"
                            }
                          },
                          "id": 79940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1583:9:161",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55096,
                          "src": "1572:20:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_uint40_$",
                            "typeString": "function (bytes memory) pure external returns (uint40)"
                          }
                        },
                        "id": 79942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1572:29:161",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "expression": {
                          "id": 79943,
                          "name": "ra",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79856,
                          "src": "1603:2:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawAttestation_$94438_memory_ptr",
                            "typeString": "struct RawAttestation memory"
                          }
                        },
                        "id": 79944,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1606:9:161",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94433,
                        "src": "1603:12:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "hexValue": "2174696d657374616d70",
                        "id": 79945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1617:12:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2667c935951990ba9c90d59874f47f083f1ce356e9c969121c07bf10165ae2ec",
                          "typeString": "literal_string \"!timestamp\""
                        },
                        "value": "!timestamp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2667c935951990ba9c90d59874f47f083f1ce356e9c969121c07bf10165ae2ec",
                          "typeString": "literal_string \"!timestamp\""
                        }
                      ],
                      "id": 79938,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18521,
                      "src": "1563:8:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 79946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1563:67:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79947,
                  "nodeType": "ExpressionStatement",
                  "src": "1563:67:161"
                },
                {
                  "assignments": [
                    79949
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79949,
                      "mutability": "mutable",
                      "name": "attestationSalt",
                      "nameLocation": "1695:15:161",
                      "nodeType": "VariableDeclaration",
                      "scope": 80002,
                      "src": "1687:23:161",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 79948,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1687:7:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79953,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4154544553544154494f4e5f56414c49445f53414c54",
                        "id": 79951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1723:24:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3464bf887f210604c594030208052a323ac6628785466262d752417691201641",
                          "typeString": "literal_string \"ATTESTATION_VALID_SALT\""
                        },
                        "value": "ATTESTATION_VALID_SALT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3464bf887f210604c594030208052a323ac6628785466262d752417691201641",
                          "typeString": "literal_string \"ATTESTATION_VALID_SALT\""
                        }
                      ],
                      "id": 79950,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1713:9:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 79952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1713:35:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1687:61:161"
                },
                {
                  "assignments": [
                    79955
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79955,
                      "mutability": "mutable",
                      "name": "hashedAttestation",
                      "nameLocation": "1766:17:161",
                      "nodeType": "VariableDeclaration",
                      "scope": 80002,
                      "src": "1758:25:161",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 79954,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1758:7:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79965,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79959,
                            "name": "attestationSalt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79949,
                            "src": "1813:15:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 79961,
                                "name": "payload",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79860,
                                "src": "1840:7:161",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 79960,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "1830:9:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 79962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1830:18:161",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 79957,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1796:3:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 79958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1800:12:161",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1796:16:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 79963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1796:53:161",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 79956,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1786:9:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 79964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1786:64:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1758:92:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79969,
                            "name": "payload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79860,
                            "src": "1890:7:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 79967,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79842,
                            "src": "1869:10:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttestationHarness_$55164",
                              "typeString": "contract AttestationHarness"
                            }
                          },
                          "id": 79968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1880:9:161",
                          "memberName": "hashValid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55110,
                          "src": "1869:20:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure external returns (bytes32)"
                          }
                        },
                        "id": 79970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1869:29:161",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 79971,
                        "name": "hashedAttestation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79955,
                        "src": "1900:17:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "216861736856616c6964",
                        "id": 79972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1919:12:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa1b4fffc345784a0bdb8ec1c65d5cbea40f01596e17af78073e5f9a3a7a6510",
                          "typeString": "literal_string \"!hashValid\""
                        },
                        "value": "!hashValid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa1b4fffc345784a0bdb8ec1c65d5cbea40f01596e17af78073e5f9a3a7a6510",
                          "typeString": "literal_string \"!hashValid\""
                        }
                      ],
                      "id": 79966,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18382,
                      "src": "1860:8:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory)"
                      }
                    },
                    "id": 79973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1860:72:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79974,
                  "nodeType": "ExpressionStatement",
                  "src": "1860:72:161"
                },
                {
                  "assignments": [
                    79976
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79976,
                      "mutability": "mutable",
                      "name": "attestationInvalidSalt",
                      "nameLocation": "1999:22:161",
                      "nodeType": "VariableDeclaration",
                      "scope": 80002,
                      "src": "1991:30:161",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 79975,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1991:7:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79980,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4154544553544154494f4e5f494e56414c49445f53414c54",
                        "id": 79978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2034:26:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccfadb9c399e4e4257b6d0c3f92e1f9a9c00b1802b55a2f7d511702faa769090",
                          "typeString": "literal_string \"ATTESTATION_INVALID_SALT\""
                        },
                        "value": "ATTESTATION_INVALID_SALT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ccfadb9c399e4e4257b6d0c3f92e1f9a9c00b1802b55a2f7d511702faa769090",
                          "typeString": "literal_string \"ATTESTATION_INVALID_SALT\""
                        }
                      ],
                      "id": 79977,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2024:9:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 79979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2024:37:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1991:70:161"
                },
                {
                  "expression": {
                    "id": 79991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79981,
                      "name": "hashedAttestation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79955,
                      "src": "2071:17:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 79985,
                              "name": "attestationInvalidSalt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79976,
                              "src": "2118:22:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 79987,
                                  "name": "payload",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 79860,
                                  "src": "2152:7:161",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 79986,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "2142:9:161",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 79988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2142:18:161",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 79983,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2101:3:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 79984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2105:12:161",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "2101:16:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 79989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2101:60:161",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 79982,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "2091:9:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 79990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2091:71:161",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2071:91:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 79992,
                  "nodeType": "ExpressionStatement",
                  "src": "2071:91:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79996,
                            "name": "payload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79860,
                            "src": "2204:7:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 79994,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79842,
                            "src": "2181:10:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttestationHarness_$55164",
                              "typeString": "contract AttestationHarness"
                            }
                          },
                          "id": 79995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2192:11:161",
                          "memberName": "hashInvalid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55124,
                          "src": "2181:22:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure external returns (bytes32)"
                          }
                        },
                        "id": 79997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2181:31:161",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 79998,
                        "name": "hashedAttestation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79955,
                        "src": "2214:17:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "2168617368496e76616c6964",
                        "id": 79999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2233:14:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0b4d96df363c67896e0b9f09e4c27df281b8f3a2aa9e0db70a51a77c169e80f",
                          "typeString": "literal_string \"!hashInvalid\""
                        },
                        "value": "!hashInvalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0b4d96df363c67896e0b9f09e4c27df281b8f3a2aa9e0db70a51a77c169e80f",
                          "typeString": "literal_string \"!hashInvalid\""
                        }
                      ],
                      "id": 79993,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18382,
                      "src": "2172:8:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory)"
                      }
                    },
                    "id": 80000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2172:76:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80001,
                  "nodeType": "ExpressionStatement",
                  "src": "2172:76:161"
                }
              ]
            },
            "functionSelector": "e932d763",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_formatAttestation",
            "nameLocation": "750:22:161",
            "parameters": {
              "id": 79857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79856,
                  "mutability": "mutable",
                  "name": "ra",
                  "nameLocation": "795:2:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 80003,
                  "src": "773:24:161",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RawAttestation_$94438_memory_ptr",
                    "typeString": "struct RawAttestation"
                  },
                  "typeName": {
                    "id": 79855,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 79854,
                      "name": "RawAttestation",
                      "nameLocations": [
                        "773:14:161"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 94438,
                      "src": "773:14:161"
                    },
                    "referencedDeclaration": 94438,
                    "src": "773:14:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RawAttestation_$94438_storage_ptr",
                      "typeString": "struct RawAttestation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "772:26:161"
            },
            "returnParameters": {
              "id": 79858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "806:0:161"
            },
            "scope": 80106,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80035,
            "nodeType": "FunctionDefinition",
            "src": "2261:280:161",
            "nodes": [],
            "body": {
              "id": 80034,
              "nodeType": "Block",
              "src": "2331:210:161",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80011
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80011,
                      "mutability": "mutable",
                      "name": "dataHash",
                      "nameLocation": "2349:8:161",
                      "nodeType": "VariableDeclaration",
                      "scope": 80034,
                      "src": "2341:16:161",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 80010,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2341:7:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80017,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80014,
                        "name": "agentRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80005,
                        "src": "2380:9:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 80015,
                        "name": "snapGasHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80007,
                        "src": "2391:11:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 80012,
                        "name": "libHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79842,
                        "src": "2360:10:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationHarness_$55164",
                          "typeString": "contract AttestationHarness"
                        }
                      },
                      "id": 80013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2371:8:161",
                      "memberName": "dataHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55054,
                      "src": "2360:19:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes32) pure external returns (bytes32)"
                      }
                    },
                    "id": 80016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2360:43:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2341:62:161"
                },
                {
                  "assignments": [
                    80019
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80019,
                      "mutability": "mutable",
                      "name": "expected",
                      "nameLocation": "2421:8:161",
                      "nodeType": "VariableDeclaration",
                      "scope": 80034,
                      "src": "2413:16:161",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 80018,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2413:7:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80027,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80023,
                            "name": "agentRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80005,
                            "src": "2459:9:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 80024,
                            "name": "snapGasHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80007,
                            "src": "2470:11:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 80021,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2442:3:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 80022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2446:12:161",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2442:16:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 80025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2442:40:161",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 80020,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2432:9:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 80026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2432:51:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2413:70:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80029,
                        "name": "dataHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80011,
                        "src": "2502:8:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 80030,
                        "name": "expected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80019,
                        "src": "2512:8:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "216461746148617368",
                        "id": 80031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2522:11:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49119ce49a551451742cc96bf07facc3f3a054d522d983556192e5ec49c39c31",
                          "typeString": "literal_string \"!dataHash\""
                        },
                        "value": "!dataHash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49119ce49a551451742cc96bf07facc3f3a054d522d983556192e5ec49c39c31",
                          "typeString": "literal_string \"!dataHash\""
                        }
                      ],
                      "id": 80028,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18382,
                      "src": "2493:8:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory)"
                      }
                    },
                    "id": 80032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2493:41:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80033,
                  "nodeType": "ExpressionStatement",
                  "src": "2493:41:161"
                }
              ]
            },
            "functionSelector": "b5cace12",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_dataHash",
            "nameLocation": "2270:13:161",
            "parameters": {
              "id": 80008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80005,
                  "mutability": "mutable",
                  "name": "agentRoot",
                  "nameLocation": "2292:9:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 80035,
                  "src": "2284:17:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 80004,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2284:7:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80007,
                  "mutability": "mutable",
                  "name": "snapGasHash",
                  "nameLocation": "2311:11:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 80035,
                  "src": "2303:19:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 80006,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2303:7:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2283:40:161"
            },
            "returnParameters": {
              "id": 80009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2331:0:161"
            },
            "scope": 80106,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80055,
            "nodeType": "FunctionDefinition",
            "src": "2547:203:161",
            "nodes": [],
            "body": {
              "id": 80054,
              "nodeType": "Block",
              "src": "2596:154:161",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80041
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80041,
                      "mutability": "mutable",
                      "name": "payload",
                      "nameLocation": "2619:7:161",
                      "nodeType": "VariableDeclaration",
                      "scope": 80054,
                      "src": "2606:20:161",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 80040,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2606:5:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80046,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80044,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80037,
                        "src": "2639:6:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 80043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2629:9:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 80042,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2633:5:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 80045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2629:17:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2606:40:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80048,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80041,
                        "src": "2689:7:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80049,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80037,
                          "src": "2713:6:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 80050,
                          "name": "ATTESTATION_LENGTH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10071,
                          "src": "2723:18:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2713:28:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 80047,
                      "name": "checkCastToAttestation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80105,
                      "src": "2656:22:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (bytes memory,bool)"
                      }
                    },
                    "id": 80052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "2680:7:161",
                      "2698:13:161"
                    ],
                    "names": [
                      "payload",
                      "isAttestation"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2656:87:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80053,
                  "nodeType": "ExpressionStatement",
                  "src": "2656:87:161"
                }
              ]
            },
            "functionSelector": "482a51f6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAttestation",
            "nameLocation": "2556:18:161",
            "parameters": {
              "id": 80038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80037,
                  "mutability": "mutable",
                  "name": "length",
                  "nameLocation": "2581:6:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 80055,
                  "src": "2575:12:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 80036,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2575:5:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2574:14:161"
            },
            "returnParameters": {
              "id": 80039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2596:0:161"
            },
            "scope": 80106,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80105,
            "nodeType": "FunctionDefinition",
            "src": "3086:540:161",
            "nodes": [],
            "body": {
              "id": 80104,
              "nodeType": "Block",
              "src": "3167:459:161",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 80062,
                    "name": "isAttestation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80059,
                    "src": "3181:13:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 80102,
                    "nodeType": "Block",
                    "src": "3406:214:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 80084,
                                  "name": "payload",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80057,
                                  "src": "3457:7:161",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 80082,
                                  "name": "libHarness",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 79842,
                                  "src": "3432:10:161",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AttestationHarness_$55164",
                                    "typeString": "contract AttestationHarness"
                                  }
                                },
                                "id": 80083,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3443:13:161",
                                "memberName": "isAttestation",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55163,
                                "src": "3432:24:161",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (bytes memory) pure external returns (bool)"
                                }
                              },
                              "id": 80085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3432:33:161",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2169734174746573746174696f6e3a207768656e2076616c6964",
                              "id": 80086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3467:28:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e966dfd797af44ffbf1152f6e28c8c70fcae117500861b2418dea198dde872f4",
                                "typeString": "literal_string \"!isAttestation: when valid\""
                              },
                              "value": "!isAttestation: when valid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e966dfd797af44ffbf1152f6e28c8c70fcae117500861b2418dea198dde872f4",
                                "typeString": "literal_string \"!isAttestation: when valid\""
                              }
                            ],
                            "id": 80081,
                            "name": "assertFalse",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19946,
                              19960
                            ],
                            "referencedDeclaration": 19960,
                            "src": "3420:11:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 80087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3420:76:161",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80088,
                        "nodeType": "ExpressionStatement",
                        "src": "3420:76:161"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 80092,
                                "name": "UnformattedAttestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10222,
                                "src": "3526:22:161",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 80093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3549:8:161",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "3526:31:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "id": 80089,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19821,
                              "src": "3510:2:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$30093",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 80091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3513:12:161",
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29832,
                            "src": "3510:15:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                              "typeString": "function (bytes4) external"
                            }
                          },
                          "id": 80094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3510:48:161",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80095,
                        "nodeType": "ExpressionStatement",
                        "src": "3510:48:161"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 80099,
                              "name": "payload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80057,
                              "src": "3601:7:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 80096,
                              "name": "libHarness",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79842,
                              "src": "3572:10:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AttestationHarness_$55164",
                                "typeString": "contract AttestationHarness"
                              }
                            },
                            "id": 80098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3583:17:161",
                            "memberName": "castToAttestation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55010,
                            "src": "3572:28:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view external returns (bytes memory)"
                            }
                          },
                          "id": 80100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3572:37:161",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 80101,
                        "nodeType": "ExpressionStatement",
                        "src": "3572:37:161"
                      }
                    ]
                  },
                  "id": 80103,
                  "nodeType": "IfStatement",
                  "src": "3177:443:161",
                  "trueBody": {
                    "id": 80080,
                    "nodeType": "Block",
                    "src": "3196:204:161",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 80066,
                                  "name": "payload",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80057,
                                  "src": "3246:7:161",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 80064,
                                  "name": "libHarness",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 79842,
                                  "src": "3221:10:161",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AttestationHarness_$55164",
                                    "typeString": "contract AttestationHarness"
                                  }
                                },
                                "id": 80065,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3232:13:161",
                                "memberName": "isAttestation",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55163,
                                "src": "3221:24:161",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (bytes memory) pure external returns (bool)"
                                }
                              },
                              "id": 80067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3221:33:161",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2169734174746573746174696f6e3a207768656e2076616c6964",
                              "id": 80068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3256:28:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e966dfd797af44ffbf1152f6e28c8c70fcae117500861b2418dea198dde872f4",
                                "typeString": "literal_string \"!isAttestation: when valid\""
                              },
                              "value": "!isAttestation: when valid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e966dfd797af44ffbf1152f6e28c8c70fcae117500861b2418dea198dde872f4",
                                "typeString": "literal_string \"!isAttestation: when valid\""
                              }
                            ],
                            "id": 80063,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              18251,
                              18272
                            ],
                            "referencedDeclaration": 18272,
                            "src": "3210:10:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 80069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3210:75:161",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80070,
                        "nodeType": "ExpressionStatement",
                        "src": "3210:75:161"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 80074,
                                  "name": "payload",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80057,
                                  "src": "3337:7:161",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 80072,
                                  "name": "libHarness",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 79842,
                                  "src": "3308:10:161",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AttestationHarness_$55164",
                                    "typeString": "contract AttestationHarness"
                                  }
                                },
                                "id": 80073,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3319:17:161",
                                "memberName": "castToAttestation",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55010,
                                "src": "3308:28:161",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) view external returns (bytes memory)"
                                }
                              },
                              "id": 80075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3308:37:161",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 80076,
                              "name": "payload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80057,
                              "src": "3347:7:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "2163617374546f4174746573746174696f6e3a207768656e2076616c6964",
                              "id": 80077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3356:32:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_055a282bc4d5b6dc4b730a980c75e75eb69bfea9eb5313add9845a10835df6e5",
                                "typeString": "literal_string \"!castToAttestation: when valid\""
                              },
                              "value": "!castToAttestation: when valid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_055a282bc4d5b6dc4b730a980c75e75eb69bfea9eb5313add9845a10835df6e5",
                                "typeString": "literal_string \"!castToAttestation: when valid\""
                              }
                            ],
                            "id": 80071,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 20050,
                            "src": "3299:8:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory,string memory)"
                            }
                          },
                          "id": 80078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3299:90:161",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80079,
                        "nodeType": "ExpressionStatement",
                        "src": "3299:90:161"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4237e369",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkCastToAttestation",
            "nameLocation": "3095:22:161",
            "parameters": {
              "id": 80060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80057,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "3131:7:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 80105,
                  "src": "3118:20:161",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 80056,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3118:5:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80059,
                  "mutability": "mutable",
                  "name": "isAttestation",
                  "nameLocation": "3145:13:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 80105,
                  "src": "3140:18:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 80058,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3140:4:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3117:42:161"
            },
            "returnParameters": {
              "id": 80061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3167:0:161"
            },
            "scope": 80106,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 79835,
              "name": "SynapseLibraryTest",
              "nameLocations": [
                "554:18:161"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 91455,
              "src": "554:18:161"
            },
            "id": 79836,
            "nodeType": "InheritanceSpecifier",
            "src": "554:18:161"
          }
        ],
        "canonicalName": "AttestationLibraryTest",
        "contractDependencies": [
          55164
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          80106,
          91455,
          93117,
          28773,
          19828,
          19825,
          28724,
          24523,
          24233,
          23554,
          21982,
          21279,
          19768,
          92948
        ],
        "name": "AttestationLibraryTest",
        "nameLocation": "528:22:161",
        "scope": 80107,
        "usedErrors": [
          10326,
          10328,
          10330,
          10332
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 161
}