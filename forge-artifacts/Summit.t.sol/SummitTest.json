{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "IncorrectStatesAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IndexOutOfRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IndexedTooMuch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OccupiedMemory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PrecompileOutOfGas",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TreeHeightTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnallocatedMemory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnformattedSnapshot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnformattedState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ViewOverrun",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "agentRoot",
          "type": "bytes32"
        }
      ],
      "name": "AgentRootAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "notary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "name": "AttestationAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attestation",
          "type": "bytes"
        }
      ],
      "name": "AttestationSaved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "msgValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "origin",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "nonce",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "version",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "content",
          "type": "bytes"
        }
      ],
      "name": "BaseMessageReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "nonce",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "destination",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "Dispatched",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "disputeIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "guardIndex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "notaryIndex",
          "type": "uint32"
        }
      ],
      "name": "DisputeOpened",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "disputeIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "slashedIndex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "rivalIndex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "fraudProver",
          "type": "address"
        }
      ],
      "name": "DisputeResolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "remoteDomain",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "name": "Executed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidAttestation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "arPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "arSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidAttestationReport",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "rcptPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "rcptSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidReceipt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "rrPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "rrSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidReceiptReport",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "srPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "srSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidStateReport",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "statePayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidStateWithAttestation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "snapSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidStateWithSnapshot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "notary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "rcptPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "rcptSignature",
          "type": "bytes"
        }
      ],
      "name": "ReceiptAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newRoot",
          "type": "bytes32"
        }
      ],
      "name": "RootUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "nonce",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "destination",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "snapSignature",
          "type": "bytes"
        }
      ],
      "name": "SnapshotAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "state",
          "type": "bytes"
        }
      ],
      "name": "StateSaved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum AgentFlag",
          "name": "flag",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "StatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "actor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "origin",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tip",
          "type": "uint256"
        }
      ],
      "name": "TipAwarded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "paddedTips",
          "type": "uint256"
        }
      ],
      "name": "TipsRecorded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "origin",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint40",
                  "name": "blockNumber",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "timestamp",
                  "type": "uint40"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ],
                      "internalType": "struct RawNumber",
                      "name": "gasPrice",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ],
                      "internalType": "struct RawNumber",
                      "name": "dataPrice",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ],
                      "internalType": "struct RawNumber",
                      "name": "execBuffer",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ],
                      "internalType": "struct RawNumber",
                      "name": "amortAttCost",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ],
                      "internalType": "struct RawNumber",
                      "name": "etherPrice",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ],
                      "internalType": "struct RawNumber",
                      "name": "markup",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct RawGasData",
                  "name": "gasData",
                  "type": "tuple"
                }
              ],
              "internalType": "struct RawState[]",
              "name": "states",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct RawSnapshot",
          "name": "rs",
          "type": "tuple"
        }
      ],
      "name": "acceptSnapshot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "addAgentBM",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "addNewAgent",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "newRoot",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addressToBytes32",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "buf",
          "type": "bytes32"
        }
      ],
      "name": "bytes32ToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum AgentFlag",
              "name": "flag",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "internalType": "struct AgentStatus",
          "name": "status",
          "type": "tuple"
        },
        {
          "internalType": "enum AgentFlag",
          "name": "flag",
          "type": "uint8"
        }
      ],
      "name": "checkAgentStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkLatestState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clear",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "createAgent",
      "outputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "origin",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint40",
              "name": "blockNumber",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "timestamp",
              "type": "uint40"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "gasPrice",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "dataPrice",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "execBuffer",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "amortAttCost",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "etherPrice",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "markup",
                  "type": "tuple"
                }
              ],
              "internalType": "struct RawGasData",
              "name": "gasData",
              "type": "tuple"
            }
          ],
          "internalType": "struct RawState",
          "name": "rawState",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "snapRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "dataHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint40",
              "name": "blockNumber",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "timestamp",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "_agentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_snapGasHash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct RawAttestation",
          "name": "ra",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "statesAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct RawStateIndex",
          "name": "rsi",
          "type": "tuple"
        }
      ],
      "name": "createAttestation",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "snapRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "dataHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint40",
              "name": "blockNumber",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "timestamp",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "_agentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_snapGasHash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct RawAttestation",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "notary",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "origin",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint40",
              "name": "blockNumber",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "timestamp",
              "type": "uint40"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "gasPrice",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "dataPrice",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "execBuffer",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "amortAttCost",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "etherPrice",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "markup",
                  "type": "tuple"
                }
              ],
              "internalType": "struct RawGasData",
              "name": "gasData",
              "type": "tuple"
            }
          ],
          "internalType": "struct RawState",
          "name": "rs",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "statesAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct RawStateIndex",
          "name": "rsi",
          "type": "tuple"
        }
      ],
      "name": "createSignedSnapshot",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "snapSig",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "origin",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint40",
                  "name": "blockNumber",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "timestamp",
                  "type": "uint40"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ],
                      "internalType": "struct RawNumber",
                      "name": "gasPrice",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ],
                      "internalType": "struct RawNumber",
                      "name": "dataPrice",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ],
                      "internalType": "struct RawNumber",
                      "name": "execBuffer",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ],
                      "internalType": "struct RawNumber",
                      "name": "amortAttCost",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ],
                      "internalType": "struct RawNumber",
                      "name": "etherPrice",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ],
                      "internalType": "struct RawNumber",
                      "name": "markup",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct RawGasData",
                  "name": "gasData",
                  "type": "tuple"
                }
              ],
              "internalType": "struct RawState",
              "name": "rs",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "stateIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "statesAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RawStateIndex",
              "name": "rsi",
              "type": "tuple"
            }
          ],
          "internalType": "struct MessagingBaseTest.SnapshotMock",
          "name": "sm",
          "type": "tuple"
        }
      ],
      "name": "createSnapshotProof",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "snapRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "dataHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint40",
              "name": "blockNumber",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "timestamp",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "_agentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_snapGasHash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct RawAttestation",
          "name": "ra",
          "type": "tuple"
        },
        {
          "internalType": "bytes32[]",
          "name": "snapProof",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployBondingManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployDestination",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployDestinationSynapse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployGasOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployGasOracleSynapse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployInbox",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployLightInbox",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployLightManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployOrigin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployOriginSynapse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deploySummit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "disputeIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "guard",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "notary",
          "type": "address"
        }
      ],
      "name": "expectDisputeOpened",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "disputePtr",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "slashed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "honest",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "prover",
          "type": "address"
        }
      ],
      "name": "expectDisputeResolved",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expectRevertAlreadyInitialized",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expectRevertNotOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum AgentFlag",
          "name": "flag",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "expectStatusUpdated",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "genSnapshotProof",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "domainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "agentId",
          "type": "uint256"
        }
      ],
      "name": "getAgent",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getAgentLeaf",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "getAgentProof",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAgentRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "getAgentStatus",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum AgentFlag",
              "name": "flag",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "internalType": "struct AgentStatus",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "agentId",
          "type": "uint256"
        }
      ],
      "name": "getDomainAgent",
      "outputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "agentId",
          "type": "uint256"
        }
      ],
      "name": "getGuard",
      "outputs": [
        {
          "internalType": "address",
          "name": "guard",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getLatestProof",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getLeaf",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "domainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "agentId",
          "type": "uint256"
        }
      ],
      "name": "getNotary",
      "outputs": [
        {
          "internalType": "address",
          "name": "notary",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "getProof",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "getRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSnapshotRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getZeroProof",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initBondingManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initInbox",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initLightInbox",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initLightManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeLocalContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "msgHash",
          "type": "bytes32"
        }
      ],
      "name": "insertMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isLocalAgentSecured",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isLocalSystemContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "localAgentManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "localContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "localDestination",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "localDomain",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "localInbox",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "localOrigin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "localSummit",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guard",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "notary",
          "type": "address"
        }
      ],
      "name": "openDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "seed",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Random",
          "name": "random",
          "type": "tuple"
        }
      ],
      "name": "randomAgent",
      "outputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "seed",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Random",
          "name": "random",
          "type": "tuple"
        }
      ],
      "name": "randomGuard",
      "outputs": [
        {
          "internalType": "address",
          "name": "guard",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "seed",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Random",
          "name": "random",
          "type": "tuple"
        }
      ],
      "name": "randomNotary",
      "outputs": [
        {
          "internalType": "address",
          "name": "notary",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setupAgentsBM",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setupAgentsLM",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "setupDomain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "snapRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "dataHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint40",
              "name": "blockNumber",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "timestamp",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "_agentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_snapGasHash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct RawAttestation",
          "name": "ra",
          "type": "tuple"
        }
      ],
      "name": "signAttestation",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "attestation",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "attestation",
          "type": "bytes"
        }
      ],
      "name": "signAttestation",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "snapRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "dataHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint40",
              "name": "blockNumber",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "timestamp",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "_agentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_snapGasHash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct RawAttestation",
          "name": "ra",
          "type": "tuple"
        }
      ],
      "name": "signAttestationReport",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "arSignature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        }
      ],
      "name": "signAttestationReport",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "signMessage",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "hashedMsg",
          "type": "bytes32"
        }
      ],
      "name": "signMessage",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "privKey",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hashedMsg",
          "type": "bytes32"
        }
      ],
      "name": "signMessage",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "privKey",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "signMessage",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "receipt",
          "type": "bytes"
        }
      ],
      "name": "signReceipt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "origin",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "destination",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "messageHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "snapshotRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "stateIndex",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "attNotary",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "firstExecutor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "finalExecutor",
              "type": "address"
            }
          ],
          "internalType": "struct RawExecReceipt",
          "name": "re",
          "type": "tuple"
        }
      ],
      "name": "signReceipt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "receipt",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "rcptPayload",
          "type": "bytes"
        }
      ],
      "name": "signReceiptReport",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "origin",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "destination",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "messageHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "snapshotRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "stateIndex",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "attNotary",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "firstExecutor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "finalExecutor",
              "type": "address"
            }
          ],
          "internalType": "struct RawExecReceipt",
          "name": "re",
          "type": "tuple"
        }
      ],
      "name": "signReceiptReport",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "rcptPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "rrSignature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "snapshot",
          "type": "bytes"
        }
      ],
      "name": "signSnapshot",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "origin",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint40",
                  "name": "blockNumber",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "timestamp",
                  "type": "uint40"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ],
                      "internalType": "struct RawNumber",
                      "name": "gasPrice",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ],
                      "internalType": "struct RawNumber",
                      "name": "dataPrice",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ],
                      "internalType": "struct RawNumber",
                      "name": "execBuffer",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ],
                      "internalType": "struct RawNumber",
                      "name": "amortAttCost",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ],
                      "internalType": "struct RawNumber",
                      "name": "etherPrice",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ],
                      "internalType": "struct RawNumber",
                      "name": "markup",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct RawGasData",
                  "name": "gasData",
                  "type": "tuple"
                }
              ],
              "internalType": "struct RawState[]",
              "name": "states",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct RawSnapshot",
          "name": "rawSnap",
          "type": "tuple"
        }
      ],
      "name": "signSnapshot",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "snapshot",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "internalType": "State[]",
          "name": "states",
          "type": "uint256[]"
        }
      ],
      "name": "signSnapshot",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "snapshot",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "statePayload",
          "type": "bytes"
        }
      ],
      "name": "signStateReport",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "origin",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint40",
              "name": "blockNumber",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "timestamp",
              "type": "uint40"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "gasPrice",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "dataPrice",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "execBuffer",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "amortAttCost",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "etherPrice",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "markup",
                  "type": "tuple"
                }
              ],
              "internalType": "struct RawGasData",
              "name": "gasData",
              "type": "tuple"
            }
          ],
          "internalType": "struct RawState",
          "name": "rs",
          "type": "tuple"
        }
      ],
      "name": "signStateReport",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "statePayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "srSignature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "skipBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blocks",
          "type": "uint256"
        }
      ],
      "name": "skipBlocks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSynapseAgents",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSynapseProofs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSynapseTest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSynapseUtilities",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "test_acceptGuardSnapshot_revert_notInbox",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "test_acceptNotarySnapshot_revert_notInbox",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "seed",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Random",
          "name": "random",
          "type": "tuple"
        }
      ],
      "name": "test_cleanSetup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        }
      ],
      "name": "test_getLatestState_empty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "seed",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Random",
          "name": "random",
          "type": "tuple"
        }
      ],
      "name": "test_guardSnapshots",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_initializer_revert_alreadyInitialized",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "seed",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Random",
          "name": "random",
          "type": "tuple"
        }
      ],
      "name": "test_notarySnapshots",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_setupCorrectly",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "origin",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint40",
              "name": "blockNumber",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "timestamp",
              "type": "uint40"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "gasPrice",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "dataPrice",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "execBuffer",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "amortAttCost",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "etherPrice",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "markup",
                  "type": "tuple"
                }
              ],
              "internalType": "struct RawGasData",
              "name": "gasData",
              "type": "tuple"
            }
          ],
          "internalType": "struct RawState",
          "name": "rs",
          "type": "tuple"
        }
      ],
      "name": "test_submitSnapshot_revert_notaryInDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "origin",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint40",
              "name": "blockNumber",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "timestamp",
              "type": "uint40"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "gasPrice",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "dataPrice",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "execBuffer",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "amortAttCost",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "etherPrice",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "markup",
                  "type": "tuple"
                }
              ],
              "internalType": "struct RawGasData",
              "name": "gasData",
              "type": "tuple"
            }
          ],
          "internalType": "struct RawState",
          "name": "rs",
          "type": "tuple"
        }
      ],
      "name": "test_submitSnapshot_success_guardInDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "seed",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Random",
          "name": "random",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "mask",
          "type": "uint256"
        }
      ],
      "name": "test_verifyAttestation_existingNonce",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "seed",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Random",
          "name": "random",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "snapRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "dataHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint40",
              "name": "blockNumber",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "timestamp",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "_agentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_snapGasHash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct RawAttestation",
          "name": "ra",
          "type": "tuple"
        }
      ],
      "name": "test_verifyAttestation_unknownNonce",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum AgentFlag",
          "name": "flag",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "updateAgent",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "newRoot",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "updateAgentLM",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "agentManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "inbox_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "gasOracle_",
          "type": "address"
        }
      ],
      "name": "updateOrigin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "seed",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Random",
          "name": "random",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "snapRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "dataHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint40",
              "name": "blockNumber",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "timestamp",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "_agentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_snapGasHash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct RawAttestation",
          "name": "ra",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        }
      ],
      "name": "verifyAttestation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "seed",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Random",
          "name": "random",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "snapRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "dataHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint40",
              "name": "blockNumber",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "timestamp",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "_agentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_snapGasHash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct RawAttestation",
          "name": "ra",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "isAttestationValid",
          "type": "bool"
        }
      ],
      "name": "verifyAttestationReport",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1065:18158:147:-:0;;;1572:26:67;;;1594:4;-1:-1:-1;;1572:26:67;;;;;;;;3288:44:71;;;;;;;;;;;1520:48:147;;;;;;;;;-1:-1:-1;2366:10:183;895:7:181;:5;:7::i;:::-;1930:24:182;;1065:18158:147;;1083:184:181;1129:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1117:9:181;:42;;-1:-1:-1;;;;;;1117:42:181;-1:-1:-1;;;;;1117:42:181;;;;;;;;;;1181:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1169:9:181;:43;;-1:-1:-1;;;;;;1169:43:181;-1:-1:-1;;;;;1169:43:181;;;;;;;;;;1233:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1222:8:181;:38;;-1:-1:-1;;;;;;1222:38:181;-1:-1:-1;;;;;1222:38:181;;;;;;;;;;1083:184::o;1065:18158:147:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620007a15760003560e01c80637d97233111620003e9578063c63101b61162000211578063e40514841162000131578063ed7886a111620000c7578063fb9ae35c1162000092578063fb9ae35c1462001019578063fdeec9d01462001030578063fe6acd111462001047578063fe708520146200105e57600080fd5b8063ed7886a11462000fb6578063ee92836c1462000fdd578063f45b0b891462000ff4578063fa7626d4146200100b57600080fd5b8063e89d3ac81162000108578063e89d3ac81462000f67578063e953efe71462000f7e578063eaee26111462000f95578063ec44788e1462000fac57600080fd5b8063e40514841462000f22578063e4f825da1462000f39578063e5fff06d1462000f5057600080fd5b8063dc10a65211620001a7578063de3aa1b8116200017e578063de3aa1b81462000eed578063e20c9f711462000f04578063e36fc1921462000f0e578063e3e3502b1462000f1857600080fd5b8063dc10a6521462000e8a578063dc340c991462000eb0578063dcaeb14e1462000ec757600080fd5b8063cf90a07211620001e8578063cf90a0721462000e3b578063d2185ffe1462000e52578063d53ee9841462000e69578063dbe554d31462000e8057600080fd5b8063c63101b61462000e03578063cb61eeaa1462000e0d578063cd438fad1462000e2457600080fd5b806391d76c2d1162000309578063a72e0a34116200029f578063bad84a1c116200026a578063bad84a1c1462000db4578063bb2316ae1462000dbe578063bb95b16f1462000dd5578063c202d9c31462000dec57600080fd5b8063a72e0a341462000d61578063a7b7b9231462000d78578063b5508aa91462000d8f578063ba414fa61462000d9957600080fd5b80639d7a2a2311620002e05780639d7a2a2314620007df5780639ee2a5e31462000d36578063a34d07091462000d40578063a6adaefe1462000d5757600080fd5b806391d76c2d1462000cfe57806391df0ed81462000d085780639b24b3b01462000d1f57600080fd5b80638b48c35c116200037f5780638d3b076d11620003565780638d3b076d1462000caf5780638dc2a7ff1462000cc6578063916a17c61462000cdd57806391cf0e211462000ce757600080fd5b80638b48c35c1462000c7e5780638b95a0cb1462000c955780638d3638f41462000c9f57600080fd5b806382c947b711620003c057806382c947b71462000c3157806385226c811462000c4e57806387b45b8614620007df57806387c9c01a1462000c6757600080fd5b80637d9723311462000bec5780637fa5bd551462000c035780638195e47c1462000c1a57600080fd5b80633e5e3c2311620005cd57806366003f8011620004ed5780637146093a1162000483578063785712e9116200044e578063785712e91462000bb75780637b3471631462000bc15780637be3700b1462000bcb5780637c6a5ef81462000be257600080fd5b80637146093a1462000b6857806371cd11a91462000b7f578063723278731462000b9657806374f1e0b71462000ba057600080fd5b8063678f55ff11620004c4578063678f55ff1462000b1e578063695c7dea1462000b355780636a2a70561462000b3f578063703f81e11462000b5157600080fd5b806366003f801462000af1578063660982d91462000afb57806366d9a9a01462000b0557600080fd5b80635cc50a6d11620005635780635e4af9ba116200053a5780635e4af9ba1462000aa2578063629ddf691462000ab9578063636b52051462000ad0578063642c1b001462000ae757600080fd5b80635cc50a6d1462000a6a5780635ced058e1462000a7c5780635d2eaa481462000a9057600080fd5b806352167bce11620005a457806352167bce1462000a0b57806352efea6e1462000a325780635389708a1462000a3c5780635add0d471462000a5357600080fd5b80633e5e3c2314620009e05780633f7286f414620009ea57806348ee7a5c14620009f457600080fd5b8063221a2c9f11620006c557806332044b6e116200065b57806333eb9877116200062657806333eb987714620009a35780633842c6d714620009b55780633a08292814620009cc5780633d07d64f14620009d657600080fd5b806332044b6e1462000961578063333de32e146200097857806333605c43146200098f57806333b1fa72146200099957600080fd5b80632518520c116200069c5780632518520c14620009365780632881c94514620007df57806328b9366e146200094d5780633122fa36146200095757600080fd5b8063221a2c9f14620008f157806322e91248146200090857806322f7c96f146200091f57600080fd5b8063169e8aac116200073b5780631b88c8b411620007125780631b88c8b414620008905780631cfff62314620008b75780631de914ac14620008c15780631ed7831c14620008d857600080fd5b8063169e8aac1462000841578063182abf69146200086757806318caa541146200087e57600080fd5b806306d944a7116200077c57806306d944a714620007e157806308f6231314620007fa5780630a9254e4146200082057806313981ac0146200082a57600080fd5b8063046acfbc14620007a657806305dad63914620007d55780630621feff14620007df575b600080fd5b620007bd620007b73660046200af0d565b62001075565b604051620007cc91906200afb6565b60405180910390f35b620007df620010ad565b005b620007eb620012e7565b604051908152602001620007cc565b620008116200080b3660046200afcb565b6200135c565b604051620007cc91906200b02b565b620007df620013d8565b620007df6200083b3660046200b040565b62001549565b6027546001600160a01b03165b6040516001600160a01b039091168152602001620007cc565b620007bd620008783660046200b09a565b620017b9565b6027546001600160a01b03166200084e565b620008a7620008a13660046200b359565b620017d9565b604051620007cc9291906200b3a4565b620007df620017fe565b620007bd620008d23660046200b3cd565b620019fe565b620008e262001a3e565b604051620007cc91906200b405565b620007df620009023660046200b454565b62001aa2565b620007eb620009193660046200b474565b62001b34565b62000811620009303660046200b474565b62001ba6565b620007bd620009473660046200af0d565b62001c1c565b620007eb62001c4b565b620007df62001c96565b620007df620009723660046200b568565b62001e47565b620007df620009893660046200b5ba565b620021e4565b620007df6200226a565b620007df620022cc565b6029546001600160a01b03166200084e565b620007df620009c63660046200b5da565b620024ba565b620007df6200270c565b620007df62002720565b620008e26200277d565b620008e2620027df565b620007bd62000a053660046200af0d565b62002841565b62000a2262000a1c3660046200afcb565b62002870565b604051620007cc9291906200b616565b620007df62002914565b620008a762000a4d3660046200b668565b620029fa565b620007df62000a643660046200b6b8565b62002a26565b6026546001600160a01b03166200084e565b6200084e62000a8d3660046200b474565b90565b6028546001600160a01b03166200084e565b620007eb62000ab33660046200b6d7565b62003935565b6200084e62000aca3660046200b474565b62003b1c565b620007df62000ae13660046200b5ba565b62003b2b565b620007df62003d21565b620007df62003dea565b620007df6200421e565b62000b0f6200422a565b604051620007cc91906200b715565b6200081162000b2f3660046200b5ba565b6200431d565b620007df620043ac565b6025546001600160a01b03166200084e565b6200084e62000b623660046200b7cc565b6200447c565b620007df62000b793660046200b7fb565b620044d0565b620007df62000b903660046200b81c565b620046cd565b620007df62004707565b620008a762000bb13660046200b871565b62004930565b620008116200494c565b620007df620049e5565b6200084e62000bdc3660046200b6b8565b62004a33565b620007df62004a54565b620007df62000bfd3660046200b6b8565b62004ca2565b6200081162000c143660046200b474565b62005e81565b620007bd62000c2b3660046200af0d565b62005eb4565b620007eb62000c423660046200b5ba565b6001600160a01b031690565b62000c5862005ee3565b604051620007cc91906200b947565b620007df62000c783660046200b9bb565b62005fbd565b620008a762000c8f3660046200ba4d565b620060c1565b620007df620060dd565b604051600a8152602001620007cc565b620007df62000cc03660046200ba80565b62006286565b620007df62000cd73660046200b474565b62006336565b62000b0f62006368565b620007df62000cf83660046200b568565b62006452565b620007df62006707565b620007bd62000d193660046200afcb565b62006751565b620007eb62000d303660046200b474565b62006867565b620007df6200689a565b6200084e62000d513660046200b6b8565b620068ef565b620007df6200690b565b620007df62000d723660046200b474565b62006955565b6200084e62000d893660046200afcb565b620069e2565b62000c5862006a59565b62000da362006b33565b6040519015158152602001620007cc565b620007df62006c55565b620007df62000dcf3660046200b6d7565b62006d75565b620008a762000de63660046200b871565b62006df8565b620007df62000dfd3660046200bab6565b62006e14565b620007df6200710a565b62000da362000e1e3660046200b5ba565b6200716f565b620007df62000e353660046200bad6565b620071dd565b620008a762000e4c3660046200bb0b565b62007293565b62000da362000e633660046200b5ba565b620072a1565b620007df62000e7a3660046200b5ba565b620072b6565b620007df6200745f565b62000ea162000e9b3660046200b5ba565b620076ca565b604051620007cc91906200bc22565b620007df62000ec13660046200bc32565b620077a8565b62000ede62000ed83660046200bc52565b62007871565b604051620007cc91906200bcf0565b620007df62000efe3660046200bd00565b620078ca565b620008e262007917565b620007df62007979565b620007df620079d7565b6200084e62000f333660046200bd21565b62007a89565b620007df62000f4a3660046200b6b8565b62007ab7565b620008a762000f613660046200bd59565b62007e3c565b620007eb62000f783660046200b474565b62007e58565b620007eb62000f8f3660046200bd8c565b62007e8b565b620007bd62000fa63660046200bdad565b62007f47565b620007df62007f5c565b62000fcd62000fc73660046200bddf565b62007fb1565b604051620007cc9291906200be27565b620007bd62000fee3660046200af0d565b6200800e565b620008a7620010053660046200ba4d565b6200803d565b60005462000da39060ff1681565b620007df6200102a3660046200be4c565b62008059565b620007bd620010413660046200af0d565b62008291565b620007df620010583660046200bab6565b620082c0565b6200084e6200106f3660046200b6b8565b6200851c565b6060620010a4837ff304ae6578b1582b0b5b512e0a7070d6f76973b1f360f99dd500082d3bc9487784620017b9565b90505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000061f00016806200112a57604051620010e6906200ab29565b604051809103906000f08015801562001103573d6000803e3d6000fd5b50602580546001600160a01b0319166001600160a01b03929092169190911790556200124f565b61100081036200120957602954602854602454604051600a936001600160a01b0390811693811692600160201b9004169062001166906200ab37565b6200117594939291906200be6d565b604051809103906000f08015801562001192573d6000803e3d6000fd5b50602580546001600160a01b0319166001600160a01b039290921691821790556040805163204a7f0760e21b81529051638129fc1c9160048082019260009290919082900301818387803b158015620011ea57600080fd5b505af1158015620011ff573d6000803e3d6000fd5b505050506200124f565b60405162461bcd60e51b81526020600482015260166024820152752ab735b737bbb71037b83a34b7b71d1027b934b3b4b760511b60448201526064015b60405180910390fd5b602554604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600e60448201526d4f726967696e2053796e6170736560901b60648201526000805160206202b4dc8339815191529063c657c718906084015b600060405180830381600087803b158015620012c957600080fd5b505af1158015620012de573d6000803e3d6000fd5b5050505050565b565b6020805460408051635ca1e16560e01b815290516000936001600160a01b0390931692635ca1e16592600480820193918290030181865afa15801562001331573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200135791906200be9c565b905090565b601e546040516308f6231360e01b815260048101849052602481018390526060916001600160a01b0316906308f6231390604401600060405180830381865afa158015620013ae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620010a491908101906200bf23565b6040805160e08101825260008082526020820181905291810182905264ffffffffff43811660608301524216608082015260a0810182905260c081019190915262001423816200852d565b600080526031602090815281517f346dc135129bcc5b8e8f6ff902940f16dc0729d02b27118b912aa326da88b831558101517f346dc135129bcc5b8e8f6ff902940f16dc0729d02b27118b912aa326da88b8325560408101517f346dc135129bcc5b8e8f6ff902940f16dc0729d02b27118b912aa326da88b83380546060840151608085015163ffffffff90941668ffffffffffffffffff1990921691909117600160201b64ffffffffff928316021764ffffffffff60481b1916600160481b919093160291909117905560a08101517f346dc135129bcc5b8e8f6ff902940f16dc0729d02b27118b912aa326da88b8345560c08101517f346dc135129bcc5b8e8f6ff902940f16dc0729d02b27118b912aa326da88b835556200154662008566565b50565b83156200163b576000805160206202b54a83398151915260001c6001600160a01b031663440ed10d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200159e57600080fd5b505af1158015620015b3573d6000803e3d6000fd5b505050507fb4cad5624e1d1c6c622ec70516ee582fe3f6519440c5b47e5165141edc9c54cf600185620015e791906200bf71565b6001600160a01b0385811660009081526021602090815260408083205488851684529281902054815195865263ffffffff938416928601929092529116908301528316606082015260800160405180910390a15b6001600160a01b0383811660009081526021602090815260408083205493861683529182902054825163ffffffff94851660248201529316604480850191909152825180850390910181526064909301909152810180516001600160e01b0316630c22d24360e31b1790526000805160206202b4dc83398151915263bd6af434620016ce6026546001600160a01b031690565b836040518363ffffffff1660e01b8152600401620016ee9291906200bf87565b600060405180830381600087803b1580156200170957600080fd5b505af11580156200171e573d6000803e3d6000fd5b50506027546001600160a01b0316159150620012de9050576000805160206202b4dc83398151915263bd6af4346200175e6027546001600160a01b031690565b836040518363ffffffff1660e01b81526004016200177e9291906200bf87565b600060405180830381600087803b1580156200179957600080fd5b505af1158015620017ae573d6000803e3d6000fd5b505050505050505050565b6060620017cf84848480519060200120620019fe565b90505b9392505050565b606080620017e78362008624565b9150620017f5848362001075565b90509250929050565b7f0000000000000000000000000000000000000000000000000000000000000000610f0016806200187b5760405162001837906200ab45565b604051809103906000f08015801562001854573d6000803e3d6000fd5b50602680546001600160a01b0319166001600160a01b039290921691909117905562001995565b61010081036200194c57602954602854604051600a926001600160a01b03908116921690620018aa906200ab53565b620018b8939291906200bfad565b604051809103906000f080158015620018d5573d6000803e3d6000fd5b50602680546001600160a01b0319166001600160a01b03929092169182179055604051639498bd7160e01b815260006004820152639498bd7190602401600060405180830381600087803b1580156200192d57600080fd5b505af115801562001942573d6000803e3d6000fd5b5050505062001995565b60405162461bcd60e51b815260206004820152601b60248201527f556e6b6e6f776e206f7074696f6e3a2044657374696e6174696f6e0000000000604482015260640162001246565b602654604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601360448201527244657374696e6174696f6e2053796e6170736560681b60648201526000805160206202b4dc8339815191529063c657c71890608401620012ae565b6060620017cf84848460405160200162001a22929190918252602082015260400190565b60405160208183030381529060405280519060200120620086df565b6060600d80548060200260200160405190810160405280929190818152602001828054801562001a9857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162001a79575b5050505050905090565b6027546040516368beda9d60e11b815263ffffffff8316600482015262001546916001600160a01b03169063d17db53a90602401600060405180830381865afa15801562001af4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001b1e91908101906200c02d565b6040518060200160405280600081525062008729565b601e5460405163045d224960e31b8152600481018390526000916001600160a01b0316906322e91248906024015b602060405180830381865afa15801562001b80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010a791906200be9c565b601f546040516311c6930d60e21b8152600481018390526060916001600160a01b03169063471a4c34906024015b600060405180830381865afa15801562001bf2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620010a791908101906200bf23565b6060620010a4837f43713cd927f8eb63b519f3b180bd5f3708ebbe93666be9ba4b9624b7bc57e66384620017b9565b601f546040805163ebf0c71760e01b815290516000926001600160a01b03169163ebf0c7179160048083019260209291908290030181865afa15801562001331573d6000803e3d6000fd5b7f000000000000000000000000000000000000000000000000000000000000000060f0168062001d125760405162001cce906200ab29565b604051809103906000f08015801562001ceb573d6000803e3d6000fd5b50602c80546001600160a01b0319166001600160a01b039290921691909117905562001de5565b601081036200120957602e54602d54602a546040516103e8936001600160a01b0390811693811692169062001d47906200ab37565b62001d5694939291906200be6d565b604051809103906000f08015801562001d73573d6000803e3d6000fd5b50602c80546001600160a01b0319166001600160a01b039290921691821790556040805163204a7f0760e21b81529051638129fc1c9160048082019260009290919082900301818387803b15801562001dcb57600080fd5b505af115801562001de0573d6000803e3d6000fd5b505050505b602c54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600c60448201526b13dc9a59da5b88131bd8d85b60a21b60648201526000805160206202b4dc8339815191529063c657c71890608401620012ae565b600062001e7162001e588562008735565b601b5460019062001e6b9082906200bf71565b62008742565b90506000601b828154811062001e8b5762001e8b6200c065565b60009182526020822060088204015460079091166004026101000a900463ffffffff16915062001ecf62001ebf8762008735565b600062001e6b600160046200bf71565b63ffffffff83166000908152601c60205260408120600201805492935090918390811062001f015762001f016200c065565b60009182526020822001546001600160a01b031691508062001f248389620060c1565b915091508662001ffe5760405163248e63e160e11b8152600160048201819052602482018190526044820181905260648201526000805160206202b4dc8339815191529063491cc7c290608401600060405180830381600087803b15801562001f8c57600080fd5b505af115801562001fa1573d6000803e3d6000fd5b505050507f5ce497fe75d0d52e5ee139d2cd651d0ff00692a94d7052cb37faef5592d74b2b828260405162001fd89291906200b3a4565b60405180910390a162001fee60048685620071dd565b62001ffe60008460003062001549565b6000805160206202b54a83398151915260001c6001600160a01b03166341af2f526040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200204c57600080fd5b505af115801562002061573d6000803e3d6000fd5b5050602854604051630ca7747360e01b81526200211093506001600160a01b039091169150630ca77473906200209e90869086906004016200b3a4565b6020604051808303816000875af1158015620020be573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620020e491906200c07b565b886040518060400160405280600c81526020016b2172657475726e56616c756560a01b81525062008783565b8615620021d757620021d76000805160206202b54a83398151915260001c6001600160a01b031663191553a46040518163ffffffff1660e01b81526004016000604051808303816000875af11580156200216e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200219891908101906200c09b565b5160006040518060400160405280601b81526020017f456d6974746564206c6f6773207768656e2073686f756c646e27740000000000815250620087c3565b620017ae89898962006452565b6000620021f1826200431d565b602e549091506001600160a01b031663cbd05965836200221181620076ca565b846040518463ffffffff1660e01b815260040162002232939291906200c1d0565b600060405180830381600087803b1580156200224d57600080fd5b505af115801562002262573d6000803e3d6000fd5b505050505050565b6027546001600160a01b03166001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620022b157600080fd5b505af1158015620022c6573d6000803e3d6000fd5b50505050565b7f0000000000000000000000000000000000000000000000000000000000000000620f000016806200234a5760405162002306906200ab61565b604051809103906000f08015801562002323573d6000803e3d6000fd5b50602780546001600160a01b0319166001600160a01b03929092169190911790556200245e565b6201000081036200241c57602954602854604051600a926001600160a01b039081169216906200237a906200ab6f565b62002388939291906200bfad565b604051809103906000f080158015620023a5573d6000803e3d6000fd5b50602780546001600160a01b0319166001600160a01b039290921691821790556040805163204a7f0760e21b81529051638129fc1c9160048082019260009290919082900301818387803b158015620023fd57600080fd5b505af115801562002412573d6000803e3d6000fd5b505050506200245e565b60405162461bcd60e51b8152602060048201526016602482015275155b9adb9bdddb881bdc1d1a5bdb8e8814dd5b5b5a5d60521b604482015260640162001246565b602754604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600660448201526514dd5b5b5a5d60d21b60648201526000805160206202b4dc8339815191529063c657c71890608401620012ae565b6000805160206202b54a83398151915260001c6001600160a01b031663440ed10d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200250857600080fd5b505af11580156200251d573d6000803e3d6000fd5b505050506001600160a01b0382811660009081526021602090815260408083205493851683529182902054825187815263ffffffff948516928101929092529290921682820152517fd0672fae056abe2bf0637742527d49add67fdb68192a6c6f6bf86eac19fe05309181900360600190a16001600160a01b0382811660009081526021602090815260408083205493851683529182902054825163ffffffff94851660248201529316604480850191909152825180850390910181526064909301909152810180516001600160e01b0316632885570d60e21b1790526000805160206202b4dc83398151915263bd6af434620026226026546001600160a01b031690565b836040518363ffffffff1660e01b8152600401620026429291906200bf87565b600060405180830381600087803b1580156200265d57600080fd5b505af115801562002672573d6000803e3d6000fd5b50506027546001600160a01b0316159150620022c69050576000805160206202b4dc83398151915263bd6af434620026b26027546001600160a01b031690565b836040518363ffffffff1660e01b8152600401620026d29291906200bf87565b600060405180830381600087803b158015620026ed57600080fd5b505af115801562002702573d6000803e3d6000fd5b5050505050505050565b62002716620049e5565b620012e56200226a565b600a60405162002730906200ab7d565b63ffffffff9091168152602001604051809103906000f0801580156200275a573d6000803e3d6000fd5b50602880546001600160a01b0319166001600160a01b0392909216919091179055565b6060600f80548060200260200160405190810160405280929190818152602001828054801562001a98576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001a79575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801562001a98576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001a79575050505050905090565b6060620010a4837fb38669e8ca41a27fcd85729b868e8ab047d0f142073a017213e58f0a91e88ef384620017b9565b601b805460009182916200288590866200c219565b815481106200289857620028986200c065565b6000918252602080832060088304015463ffffffff6004600790941684026101000a90910416808452601c9091526040909220919350600290910190620028e090856200c219565b81548110620028f357620028f36200c065565b60009182526020909120015491946001600160a01b03909216935090915050565b60405162002922906200ab8b565b604051809103906000f0801580156200293f573d6000803e3d6000fd5b50601e80546001600160a01b0319166001600160a01b03929092169190911790556040516200296e906200ab99565b604051809103906000f0801580156200298b573d6000803e3d6000fd5b50601f80546001600160a01b0319166001600160a01b0392909216919091179055604051620029ba906200aba7565b604051809103906000f080158015620029d7573d6000803e3d6000fd5b50602080546001600160a01b0319166001600160a01b0392909216919091179055565b606080600062002a0b8585620087ff565b905062002a198682620017d9565b9250925050935093915050565b60005b60048163ffffffff16101562002fee5760408051600a8082526101608201909252600091602082016101408036833701905050905060005b600a8163ffffffff16101562002f2257600062002a9762002a8286620088e2565b63ffffffff16600163ffffffff801662008742565b905062002ab362002aaa8360016200c230565b869083620088ef565b602f60008663ffffffff16815260200190815260200160002060008463ffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548163ffffffff021916908363ffffffff16021790555060408201518160010160046101000a81548163ffffffff021916908363ffffffff16021790555060608201518160010160086101000a81548164ffffffffff021916908364ffffffffff160217905550608082015181600101600d6101000a81548164ffffffffff021916908364ffffffffff16021790555060a08201518160020160008201518160000160008201518160000160006101000a81548161ffff021916908361ffff160217905550505060208201518160010160008201518160000160006101000a81548161ffff021916908361ffff160217905550505060408201518160020160008201518160000160006101000a81548161ffff021916908361ffff160217905550505060608201518160030160008201518160000160006101000a81548161ffff021916908361ffff160217905550505060808201518160040160008201518160000160006101000a81548161ffff021916908361ffff160217905550505060a08201518160050160008201518160000160006101000a81548161ffff021916908361ffff1602179055505050505090505062002ee8602f60008663ffffffff16815260200190815260200160002060008463ffffffff1681526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160089054906101000a900464ffffffffff1664ffffffffff1664ffffffffff16815260200160018201600d9054906101000a900464ffffffffff1664ffffffffff1664ffffffffff168152602001600282016040518060c0016040529081600082016040518060200160405290816000820160009054906101000a900461ffff1661ffff1661ffff16815250508152602001600182016040518060200160405290816000820160009054906101000a900461ffff1661ffff1661ffff16815250508152602001600282016040518060200160405290816000820160009054906101000a900461ffff1661ffff1661ffff16815250508152602001600382016040518060200160405290816000820160009054906101000a900461ffff1661ffff1661ffff16815250508152602001600482016040518060200160405290816000820160009054906101000a900461ffff1661ffff1661ffff16815250508152602001600582016040518060200160405290816000820160009054906101000a900461ffff1661ffff1661ffff168152505081525050815250506200895f565b838363ffffffff168151811062002f035762002f036200c065565b60209081029190910101525062002f1a816200c250565b905062002a61565b506000808052601c6020526000805160206202b56a833981519152805463ffffffff851690811062002f585762002f586200c065565b60009182526020822001546001600160a01b031691508062002f7b838562007293565b604080518082018252838152602080820184905263ffffffff8a166000908152603090915291909120815193955091935091819062002fbb90826200c2f6565b506020820151600182019062002fd290826200c2f6565b50905050505050508062002fe6906200c250565b905062002a29565b5060005b60048163ffffffff161015620036cb5760005b600a811015620031e15760405163248e63e160e11b8152600160048201819052602482018190526044820181905260648201526000805160206202b4dc8339815191529063491cc7c290608401600060405180830381600087803b1580156200306d57600080fd5b505af115801562003082573d6000803e3d6000fd5b50505063ffffffff8084166000908152602f60209081526040808320868452825291829020825160c0808201855282548252600183015480871683860152600160201b81049096168286015264ffffffffff600160401b87048116606080850191909152600160681b90970416608080840191909152855160e081018752600285015461ffff90811693820193845292815286518087018852600386015484168152818701528651808701885260048601548416815281880152865180870188526005860154841681529781019790975285518086018752600685015483168152908701528451938401909452600790910154909216815260a0838101919091528101919091527fc82fd59396134ccdeb4ce594571af6fe8f87d1df40fb6aaf1463ee06d610d0cb9150620031b79062008976565b604051620031c691906200afb6565b60405180910390a1620031d9816200c3c2565b905062003005565b5060405163248e63e160e11b8152600160048201819052602482018190526044820181905260648201526000805160206202b4dc8339815191529063491cc7c290608401600060405180830381600087803b1580156200324057600080fd5b505af115801562003255573d6000803e3d6000fd5b5050600080525050601c6020526000805160206202b56a833981519152805463ffffffff83169081106200328d576200328d6200c065565b600091825260208083209091015463ffffffff841683526030909152604080832090516001600160a01b0390921692917f5ca3d740e03650b41813a4b418830f6ba39700ae010fe8c4d1bca0e8676b9c5691620032ef9160018201906200c463565b60405180910390a360285463ffffffff82166000908152603060205260408082209051634bb73ea560e01b81529192839283926001600160a01b0390921691634bb73ea59162003348919060018201906004016200c463565b6000604051808303816000875af115801562003368573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200339291908101906200c48c565b925092509250620033e983604051806020016040528060008152506040518060400160405280601c81526020017f47756172643a206e6f6e2d656d707479206174746573746174696f6e0000000081525062008a15565b6200342e826000801b6040518060400160405280601b81526020017f47756172643a206e6f6e2d656d707479206167656e7420726f6f74000000000081525062008a22565b62003472815160006040518060400160405280601e81526020017f47756172643a206e6f6e2d656d70747920736e61702067617320646174610000815250620087c3565b60005b600a8163ffffffff161015620036b357602754620036a0906001600160a01b031663e8c12f80620034a88460016200c230565b60008052601c6020526000805160206202b56a833981519152805463ffffffff8b16908110620034dc57620034dc6200c065565b6000918252602090912001546040516001600160e01b031960e085901b1681526200351592916001600160a01b0316906004016200b616565b600060405180830381865afa15801562003533573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200355d91908101906200c02d565b63ffffffff8088166000908152602f602090815260408083208785168452825291829020825160c0808201855282548252600183015480871683860152600160201b81049096168286015264ffffffffff600160401b87048116606080850191909152600160681b90970416608080840191909152855160e081018752600285015461ffff90811693820193845292815286518087018852600386015484168152818701528651808701885260048601548416815281880152865180870188526005860154841681529781019790975285518086018752600685015483168152908701528451938401909452600790910154909216815260a0838101919091528101919091526200366e9062008976565b60405180604001604052806013815260200172085b185d195cdd14dd185d194e8819dd585c99606a1b81525062008a15565b620036ab816200c250565b905062003475565b5050505080620036c3906200c250565b905062002ff2565b5060005b60048163ffffffff1610156200392a5760275460405163caecc6db60e01b815263ffffffff8316600482015260009182916001600160a01b039091169063caecc6db90602401600060405180830381865afa15801562003733573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200375d91908101906200c55b565b915091506200383b82603060008663ffffffff16815260200190815260200160002060000180546200378f906200c276565b80601f0160208091040260200160405190810160405280929190818152602001828054620037bd906200c276565b80156200380e5780601f10620037e2576101008083540402835291602001916200380e565b820191906000526020600020905b815481529060010190602001808311620037f057829003601f168201915b505050505060405180604001604052806009815260200168085cdb985c1cda1bdd60ba1b81525062008a15565b63ffffffff8316600090815260306020526040902060010180546200391491839162003867906200c276565b80601f016020809104026020016040519081016040528092919081815260200182805462003895906200c276565b8015620038e65780601f10620038ba57610100808354040283529160200191620038e6565b820191906000526020600020905b815481529060010190602001808311620038c857829003601f168201915b50505050506040518060400160405280600a815260200169217369676e617475726560b01b81525062008a15565b50508062003922906200c250565b9050620036cf565b50620015466200745f565b6001600160a01b03811660009081526021602052604081205463ffffffff1615620039935760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481859191959609a1b604482015260640162001246565b60248054600091908290620039ae9063ffffffff166200c250565b82546101009290920a63ffffffff81810219909316828416918202179093556001600160a01b0386166000908152602160209081526040808320805463ffffffff199081169097179055602282528083208054909616948a169490941790945560239093529120805491925060019160ff1916828002179055506020546001600160a01b031663d3b7576c8262003a486001888862008a5e565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b15801562003a8d57600080fd5b505af115801562003aa2573d6000803e3d6000fd5b50506020805460408051635ca1e16560e01b815290516001600160a01b039092169450635ca1e165935060048082019392918290030181865afa15801562003aee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003b1491906200be9c565b949350505050565b6000620010a76000836200447c565b6000805160206202b4dc833981519152634c63e56262003b536028546001600160a01b031690565b6001600160a01b0316836001600160a01b031614156040518263ffffffff1660e01b815260040162003b89911515815260200190565b60006040518083038186803b15801562003ba257600080fd5b505afa15801562003bb7573d6000803e3d6000fd5b5050604051630618f58760e51b815263dbc2fa8560e01b60048201526000805160206202b4dc833981519152925063c31eb0e09150602401600060405180830381600087803b15801562003c0a57600080fd5b505af115801562003c1f573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b03841660048201526000805160206202b4dc833981519152925063ca669fa79150602401600060405180830381600087803b15801562003c7457600080fd5b505af115801562003c89573d6000803e3d6000fd5b5050602754604051623cd01560e21b815260006004820181905260248201819052604482018190526080606483015260848201526001600160a01b03909116925062f34054915060a4016000604051808303816000875af115801562003cf3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262003d1d91908101906200c02d565b5050565b600a60405162003d31906200abb5565b63ffffffff9091168152602001604051809103906000f08015801562003d5b573d6000803e3d6000fd5b50602980546001600160a01b0319166001600160a01b03929092169182179055604080516318caf8e360e31b815260048101929092526024820152600e60448201526d2137b73234b733a6b0b730b3b2b960911b60648201526000805160206202b4dc8339815191529063c657c718906084015b600060405180830381600087803b158015620022b157600080fd5b60005b601b5481101562003f3c576000601b828154811062003e105762003e106200c065565b60009182526020822060088204015460079091166004026101000a900463ffffffff1691505b63ffffffff82166000908152601c602052604090206002015481101562003f265763ffffffff82166000908152601c6020526040812060020180548390811062003e845762003e846200c065565b6000918252602090912001546027546040516328f3fac960e01b81526001600160a01b0392831660048201819052935062003f1292849216906328f3fac990602401606060405180830381865afa15801562003ee4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003f0a91906200c5bb565b600162005fbd565b5062003f1e816200c3c2565b905062003e36565b50508062003f34906200c3c2565b905062003ded565b506027546040805163054fd4d560e41b8152905162003ff9926001600160a01b0316916354fd4d509160048083019260009291908290030181865afa15801562003f8a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262003fb491908101906200c636565b60405180604001604052806005815260200164302e302e3360d81b8152506040518060400160405280600881526020016710bb32b939b4b7b760c11b81525062008a96565b60275460405163511ecdd760e11b815260006004820181905291829182916001600160a01b03169063a23d9bae90602401600060405180830381865afa15801562004048573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200407291908101906200c48c565b60008052603160209081526040805160e0810182527f346dc135129bcc5b8e8f6ff902940f16dc0729d02b27118b912aa326da88b8315481527f346dc135129bcc5b8e8f6ff902940f16dc0729d02b27118b912aa326da88b83254928101929092527f346dc135129bcc5b8e8f6ff902940f16dc0729d02b27118b912aa326da88b8335463ffffffff81169183019190915264ffffffffff600160201b820481166060840152600160481b9091041660808201527f346dc135129bcc5b8e8f6ff902940f16dc0729d02b27118b912aa326da88b8345460a08201527f346dc135129bcc5b8e8f6ff902940f16dc0729d02b27118b912aa326da88b8355460c08201529295509093509150620041b89084906200418e9062008b22565b6040518060400160405280600b81526020016a08585d1d14185e5b1bd85960aa1b81525062008a15565b620041ea826000801b6040518060400160405280600a815260200169085859d95b9d149bdbdd60b21b81525062008a22565b62004219815160006040518060400160405280600881526020016721736e617047617360c01b815250620087c3565b505050565b620012e5600162006955565b60606012805480602002602001604051908101604052809291908181526020016000905b82821015620043145760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620042fb57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620042bc5790505b505050505081525050815260200190600101906200424e565b50505050905090565b6001600160a01b03811660009081526021602052604081205460609163ffffffff9091169003620043625760405162461bcd60e51b815260040162001246906200c683565b602080546001600160a01b038481166000908152602190935260409283902054925163088a4d6d60e11b815263ffffffff909316600484015216906311149ada9060240162001bd4565b60005b601b5481101562001546576000601b8281548110620043d257620043d26200c065565b60009182526020822060088204015460079091166004026101000a900463ffffffff1691505b6004811015620044665763ffffffff82166000908152601c602052604081206002018054839081106200442f576200442f6200c065565b6000918252602090912001546001600160a01b0316905062004452838262006d75565b506200445e816200c3c2565b9050620043f8565b50508062004474906200c3c2565b9050620043af565b63ffffffff82166000908152601c60205260408120600201620044a16004846200c219565b81548110620044b457620044b46200c065565b6000918252602090912001546001600160a01b03169392505050565b6001600160a01b03821660009081526021602052604090205463ffffffff16158015906200451a57506001600160a01b03821660009081526022602052604090205463ffffffff16155b620045585760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a590811dd585c99609a1b604482015260640162001246565b6001600160a01b03811660009081526021602052604090205463ffffffff1615801590620045a357506001600160a01b03811660009081526022602052604090205463ffffffff1615155b620045e25760405162461bcd60e51b815260206004820152600e60248201526d496e76616c6964204e6f7461727960901b604482015260640162001246565b6000620045f0600162008b9c565b9050600080620046018484620017d9565b915091506000620046348685600001516000815181106200462657620046266200c065565b602002602001015162007e3c565b9150506200464a6028546001600160a01b031690565b6001600160a01b0316636238970960008386866040518563ffffffff1660e01b81526004016200467e94939291906200c6aa565b6020604051808303816000875af11580156200469e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620046c491906200c07b565b50505050505050565b601f546001600160a01b031663671dc16f620046e98362008bd5565b6040518263ffffffff1660e01b8152600401620012ae91906200c6ef565b7f0000000000000000000000000000000000000000000000000000000000000000630f00000016806200478c5760405162004742906200abc3565b604051809103906000f0801580156200475f573d6000803e3d6000fd5b50602460046101000a8154816001600160a01b0302191690836001600160a01b03160217905550620048c0565b630100000081036200487757602654604051600a916001600160a01b031690620047b6906200abd1565b620047c39291906200b616565b604051809103906000f080158015620047e0573d6000803e3d6000fd5b50602460046101000a8154816001600160a01b0302191690836001600160a01b03160217905550602460049054906101000a90046001600160a01b03166001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200485857600080fd5b505af11580156200486d573d6000803e3d6000fd5b50505050620048c0565b60405162461bcd60e51b815260206004820152601960248201527f556e6b6e6f776e206f7074696f6e3a204761734f7261636c6500000000000000604482015260640162001246565b60248054604080516318caf8e360e31b8152600160201b9092046001600160a01b031660048301529181019190915260116044820152704761734f7261636c652053796e6170736560781b60648201526000805160206202b4dc8339815191529063c657c71890608401620012ae565b6060806200493e8362008c92565b9150620017f5848362002841565b6020546024546060916001600160a01b0316906311149ada90620049789063ffffffff1660016200c230565b6040516001600160e01b031960e084901b16815263ffffffff919091166004820152602401600060405180830381865afa158015620049bb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200135791908101906200bf23565b6040805160608101909152602e8082526000805160206202b4dc8339815191529163f28dceb3916202b51c60208301396040518263ffffffff1660e01b815260040162003dcf91906200afb6565b6000620010a762004a448362008735565b62000d898462008735565b919050565b6001600f7f0000000000000000000000000000000000000000000000000000000000000000160362004af457602b546001600160a01b0316639498bd7162004a9b620012e7565b6040518263ffffffff1660e01b815260040162004aba91815260200190565b600060405180830381600087803b15801562004ad557600080fd5b505af115801562004aea573d6000803e3d6000fd5b5050505062004bd3565b600062004b00620012e7565b602b5460405163ca669fa760e01b81526001600160a01b0390911660048201529091506000805160206202b4dc8339815191529063ca669fa790602401600060405180830381600087803b15801562004b5857600080fd5b505af115801562004b6d573d6000803e3d6000fd5b5050602e54604051632c3340bb60e11b8152600481018590526001600160a01b03909116925063586681769150602401600060405180830381600087803b15801562004bb857600080fd5b505af115801562004bcd573d6000803e3d6000fd5b50505050505b60005b601b5481101562001546576000601b828154811062004bf95762004bf96200c065565b60009182526020822060088204015460079091166004026101000a900463ffffffff1691505b600481101562004c8c5763ffffffff82166000908152601c6020526040812060020180548390811062004c565762004c566200c065565b6000918252602090912001546001600160a01b0316905062004c7881620021e4565b5062004c84816200c3c2565b905062004c1f565b50508062004c9a906200c3c2565b905062004bd6565b62004cad8162002a26565b60408051600480825260a08201909252600091816020015b606081526020019060019003908162004cc557505060408051600480825260a0820190925291925060009190602082015b606081526020019060019003908162004cf657905050905060005b60048163ffffffff16101562005c075762004d2b6200abdf565b62004d3685620088e2565b64ffffffffff16606082015262004d4d85620088e2565b64ffffffffff908116608083015260608201516040516301f7b4f360e41b8152911660048201526000805160206202b4dc83398151915290631f7b4f3090602401600060405180830381600087803b15801562004da957600080fd5b505af115801562004dbe573d6000803e3d6000fd5b5050505060808101516040516372eb5f8160e11b815264ffffffffff90911660048201526000805160206202b4dc8339815191529063e5d6bf0290602401600060405180830381600087803b15801562004e1757600080fd5b505af115801562004e2c573d6000803e3d6000fd5b5050505062004e476040518060200160405280606081525090565b60408051600a808252610160820190925290816020015b62004e686200ac1b565b81526020019060019003908162004e5e575050815260005b600a81101562004ff6576000811562004eb257600462004ea08962008735565b62004eac91906200c219565b62004eba565b8463ffffffff165b6000818152602f60209081526040808320868452825291829020825160c0808201855282548252600183015463ffffffff80821684870152600160201b8204168387015264ffffffffff600160401b82048116606080860191909152600160681b90920416608080850191909152865160e081018852600286015461ffff90811694820194855293815287518088018952600387015485168152818801528751808801895260048701548516815281890152875180880189526005870154851681529281019290925286518087018852600686015484168152908201528551948501909552600790920154909116825260a083810192909252908101919091528451805192935090918490811062004fd65762004fd66200c065565b6020026020010181905250508062004fee906200c3c2565b905062004e80565b506200500281620046cd565b6200500c62001c4b565b825262005018620012e7565b60a0830152620050288162008d46565b60c083015262005038826200852d565b620050458360016200c230565b63ffffffff90811660408481018281526000928352603160209081529183208651815591860151600183015551600282018054606088015160808901519390961668ffffffffffffffffff1990911617600160201b64ffffffffff968716021764ffffffffff60481b1916600160481b95909216949094021790925560a0840151600383015560c0840151600490920191909155620050e48362008b22565b6103e86000908152601c6020527f47e464d6b54f4c05519dc9f1f41e37310975069e488251e351ac93edeca901368054929350909163ffffffff87169081106200513257620051326200c065565b6000918252602090912001546001600160a01b03169050620051558184620017d9565b888763ffffffff16815181106200517057620051706200c065565b60200260200101888863ffffffff16815181106200519257620051926200c065565b602090810291909101019190915252602754604051635f8d571360e11b81526001600160a01b038381166004830152600092839283929091169063bf1aae2690602401600060405180830381865afa158015620051f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200521d91908101906200c48c565b9250925092506200523e836040518060200160405280600081525062008729565b6200524b82600062008d6f565b620052598151600062008e58565b60405163248e63e160e11b8152600160048201819052602482018190526044820181905260648201526000805160206202b4dc8339815191529063491cc7c290608401600060405180830381600087803b158015620052b757600080fd5b505af1158015620052cc573d6000803e3d6000fd5b505050507f60c3a1f5763d1f5370168d8e60a7e6c27c5200c3327a20af481c738a9b11d7de856040516200530191906200afb6565b60405180910390a160405163248e63e160e11b8152600160048201819052602482018190526044820181905260648201526000805160206202b4dc8339815191529063491cc7c290608401600060405180830381600087803b1580156200536757600080fd5b505af11580156200537c573d6000803e3d6000fd5b50505050836001600160a01b03166103e863ffffffff167f5ca3d740e03650b41813a4b418830f6ba39700ae010fe8c4d1bca0e8676b9c568c8b63ffffffff1681518110620053cf57620053cf6200c065565b60200260200101518c8c63ffffffff1681518110620053f257620053f26200c065565b60200260200101516040516200540a9291906200b3a4565b60405180910390a36026546001600160a01b0385811660009081526021602052604090205460a08a01516000805160206202b4dc8339815191529363bd6af434931691631cff139b60e11b9163ffffffff90911690600019908b90620054708e62008f2c565b604051602401620054869594939291906200c748565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b9092168252620054ce92916004016200bf87565b600060405180830381600087803b158015620054e957600080fd5b505af1158015620054fe573d6000803e3d6000fd5b50506028548c516001600160a01b039091169250634bb73ea591508c9063ffffffff8c169081106200553457620055346200c065565b60200260200101518b8b63ffffffff16815181106200555757620055576200c065565b60200260200101516040518363ffffffff1660e01b81526004016200557e9291906200b3a4565b6000604051808303816000875af11580156200559e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620055c891908101906200c48c565b60408051808201909152601d81527f4e6f746172793a20696e636f7272656374206174746573746174696f6e0000006020820152929550909350915062005613908490879062008a15565b62005659828860a001516040518060400160405280601c81526020017f4e6f746172793a20696e636f7272656374206167656e7420726f6f740000000081525062008a22565b620056c7816040516020016200567091906200c7bc565b604051602081830303815290604052805190602001208860c001516040518060400160405280601f81526020017f4e6f746172793a20696e636f727265637420736e61702067617320686173680081525062008a22565b602754604088810151905163511ecdd760e11b815263ffffffff90911660048201526001600160a01b039091169063a23d9bae90602401600060405180830381865afa1580156200571c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200574691908101906200c48c565b60408051808201909152600f81526e10b3b2ba20ba3a32b9ba30ba34b7b760891b6020820152929550909350915062005783908490879062008a15565b620057c9828860a001516040518060400160405280601b81526020017f216765744174746573746174696f6e3a206167656e7420726f6f74000000000081525062008a22565b6200583781604051602001620057e091906200c7bc565b604051602081830303815290604052805190602001208860c001516040518060400160405280601981526020017f216765744174746573746174696f6e3a2067617320686173680000000000000081525062008a22565b602754604051635f8d571360e11b81526001600160a01b0386811660048301529091169063bf1aae2690602401600060405180830381865afa15801562005882573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620058ac91908101906200c48c565b60408051808201909152601281527110b630ba32b9ba20ba3a32b9ba30ba34b7b760711b60208201529295509093509150620058ec908490879062008a15565b62005932828860a001516040518060400160405280601e81526020017f216c61746573744174746573746174696f6e3a206167656e7420726f6f74000081525062008a22565b620059a0816040516020016200594991906200c7bc565b604051602081830303815290604052805190602001208860c001516040518060400160405280601c81526020017f216c61746573744174746573746174696f6e3a2067617320686173680000000081525062008a22565b60005b600a81101562005ad557602754604089810151905163114dad8f60e11b815263ffffffff9091166004820152602481018390526000916001600160a01b03169063229b5b1e90604401600060405180830381865afa15801562005a0a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262005a3491908101906200bf23565b9050600062005a6d62005a678a60000151858151811062005a595762005a596200c065565b60200260200101516200895f565b62008ff7565b50905062005abf62005a8f62005a858560026200c7f4565b838560066200902d565b8b5160408051808201909152601181527010b3b2ba29b730b839b437ba283937b7b360791b602082015262008a22565b50508062005acd906200c3c2565b9050620059a3565b5060005b600a8163ffffffff16101562005beb5760275462005bd8906001600160a01b031663e8c12f8062005b0c8460016200c230565b886040518363ffffffff1660e01b815260040162005b2c9291906200b616565b600060405180830381865afa15801562005b4a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262005b7491908101906200c02d565b62005ba589600001518463ffffffff168151811062005b975762005b976200c065565b602002602001015162008976565b60405180604001604052806014815260200173216c617465737453746174653a206e6f7461727960601b81525062008a15565b62005be3816200c250565b905062005ad9565b50505050505050508062005bff906200c250565b905062004d11565b5060005b60048163ffffffff16101562005d535760275460405163f523071960e01b815263ffffffff8316600482015260009182916001600160a01b039091169063f523071990602401600060405180830381865afa15801562005c6f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262005c9991908101906200c55b565b9150915062005cec82868563ffffffff168151811062005cbd5762005cbd6200c065565b602002602001015160405180604001604052806008815260200167085c185e5b1bd85960c21b81525062008a15565b62005d3d81858563ffffffff168151811062005d0c5762005d0c6200c065565b60200260200101516040518060400160405280600a815260200169217369676e617475726560b01b81525062008a15565b50508062005d4b906200c250565b905062005c0b565b5060005b60048163ffffffff16101562005e76576000808052601c6020526000805160206202b56a833981519152805463ffffffff841690811062005d9c5762005d9c6200c065565b6000918252602082200154602754604051635f8d571360e11b81526001600160a01b0392831660048201819052945083928392169063bf1aae2690602401600060405180830381865afa15801562005df8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262005e2291908101906200c48c565b92509250925062005e43836040518060200160405280600081525062008729565b62005e5082600062008d6f565b62005e5e8151600062008e58565b505050508062005e6e906200c250565b905062005d57565b50620042196200745f565b601e54604051637fa5bd5560e01b8152600481018390526060916001600160a01b031690637fa5bd559060240162001bd4565b6060620010a4837fdf42b2c0137811ba604f5c79e20c4d6b94770aa819cc524eca444056544f8ab784620017b9565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156200431457838290600052602060002001805462005f29906200c276565b80601f016020809104026020016040519081016040528092919081815260200182805462005f57906200c276565b801562005fa85780601f1062005f7c5761010080835404028352916020019162005fa8565b820191906000526020600020905b81548152906001019060200180831162005f8a57829003601f168201915b50505050508152602001906001019062005f07565b81516200601790600581111562005fd85762005fd86200bbbb565b60ff1682600581111562005ff05762005ff06200bbbb565b60ff166040518060400160405280600581526020016421666c616760d81b815250620087c3565b6020808301516001600160a01b038516600090815260228352604090819020548151808301909252600782526610b237b6b0b4b760c91b938201939093526200606b9263ffffffff928316921690620087c3565b6040828101516001600160a01b038516600090815260216020908152908390205483518085019094526006845265042d2dcc8caf60d31b91840191909152620042199263ffffffff9283169290911690620087c3565b606080620060cf8362008b22565b9150620017f584836200800e565b7f000000000000000000000000000000000000000000000000000000000000000062f0000016806200615b5760405162006117906200abc3565b604051809103906000f08015801562006134573d6000803e3d6000fd5b50602a80546001600160a01b0319166001600160a01b039290921691909117905562006221565b6210000081036200487757602b546040516103e8916001600160a01b03169062006185906200abd1565b620061929291906200b616565b604051809103906000f080158015620061af573d6000803e3d6000fd5b50602a80546001600160a01b0319166001600160a01b039290921691821790556040805163204a7f0760e21b81529051638129fc1c9160048082019260009290919082900301818387803b1580156200620757600080fd5b505af11580156200621c573d6000803e3d6000fd5b505050505b602a54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600f60448201526e11d85cd3dc9858db1948131bd8d85b608a1b60648201526000805160206202b4dc8339815191529063c657c71890608401620012ae565b6000848484846040516200629a906200ab37565b620062a994939291906200be6d565b604051809103906000f080158015620062c6573d6000803e3d6000fd5b5090506000805160206202b4dc83398151915263b4d6c782620062f16025546001600160a01b031690565b836001600160a01b0316803b806020016040519081016040528181526000908060200190933c6040518363ffffffff1660e01b81526004016200177e9291906200bf87565b601e54604051632d287e4360e01b8152600481018390526001600160a01b0390911690632d287e4390602401620012ae565b60606013805480602002602001604051908101604052809291908181526020016000905b82821015620043145760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200643957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620063fa5790505b505050505081525050815260200190600101906200638c565b801560006200646562001ebf8662008735565b6000808052601c6020526000805160206202b56a83398151915280549293509091839081106200649957620064996200c065565b60009182526020822001546001600160a01b0316915080620064bc83886200803d565b9150915084620065975760405163248e63e160e11b8152600160048201819052602482018190526044820181905260648201526000805160206202b4dc8339815191529063491cc7c290608401600060405180830381600087803b1580156200652457600080fd5b505af115801562006539573d6000803e3d6000fd5b505050507f6f83f9b71f5c687c7dd205d520001d4e5adc1f16e4e2ee5b798c720d643e5a9e8282604051620065709291906200b3a4565b60405180910390a1620065876004600085620071dd565b6200659760008460003062001549565b6000805160206202b54a83398151915260001c6001600160a01b03166341af2f526040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620065e557600080fd5b505af1158015620065fa573d6000803e3d6000fd5b50506028546040516318f46fad60e11b8152620066a993506001600160a01b0390911691506331e8df5a906200663790869086906004016200b3a4565b6020604051808303816000875af115801562006657573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200667d91906200c07b565b866040518060400160405280600c81526020016b2172657475726e56616c756560a01b81525062008783565b84156200270257620027026000805160206202b54a83398151915260001c6001600160a01b031663191553a46040518163ffffffff1660e01b81526004016000604051808303816000875af11580156200216e573d6000803e3d6000fd5b602d54602e54602c54602b5460405163c0c53b8b60e01b81526001600160a01b03938416600482015291831660248301528216604482015291169063c0c53b8b9060640162003dcf565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052606090600090605c0160408051808303601f190181529082905280516020909101206338d07aa960e21b825260048201869052602482018190529150600090819081906000805160206202b4dc8339815191529063e341eaa490604401606060405180830381865afa158015620067fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200682291906200c80e565b6040805160208101939093528281019190915260f89290921b6001600160f81b0319166060820152815160418183030181526061909101909152979650505050505050565b601e546040516309b24b3b60e41b8152600481018390526000916001600160a01b031690639b24b3b09060240162001b62565b602854602954602554602654602754604051637c643b2f60e11b81526001600160a01b039485166004820152928416602484015290831660448301528216606482015291169063f8c8765e9060840162003dcf565b6000620017d2620069008362008735565b62000a1c8462008735565b602e54602c54602b54602d5460405163c0c53b8b60e01b81526001600160a01b03938416600482015291831660248301528216604482015291169063c0c53b8b9060640162003dcf565b6000805160206202b4dc833981519152631f7b4f306200697683436200c848565b6040518263ffffffff1660e01b81526004016200699591815260200190565b600060405180830381600087803b158015620069b057600080fd5b505af1158015620069c5573d6000803e3d6000fd5b5050505062001546600c82620069dc91906200c7f4565b620090c8565b601b80546000918291620069f9906001906200bf71565b62006a0590866200c219565b62006a129060016200c848565b8154811062006a255762006a256200c065565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16905062003b1481846200447c565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156200431457838290600052602060002001805462006a9f906200c276565b80601f016020809104026020016040519081016040528092919081815260200182805462006acd906200c276565b801562006b1e5780601f1062006af25761010080835404028352916020019162006b1e565b820191906000526020600020905b81548152906001019060200180831162006b0057829003601f168201915b50505050508152602001906001019062006a7d565b60008054610100900460ff161562006b545750600054610100900460ff1690565b60006000805160206202b4dc8339815191523b1562004a4f57604080516000805160206202b4dc833981519152602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162006bdb917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016200c85e565b60408051601f198184030181529082905262006bf7916200c891565b6000604051808303816000865af19150503d806000811462006c36576040519150601f19603f3d011682016040523d82523d6000602084013e62006c3b565b606091505b5091505080806020019051810190620017d291906200c07b565b7f0000000000000000000000000000000000000000000000000000000000000000600f168062006cd15760405162006c8d906200ab45565b604051809103906000f08015801562006caa573d6000803e3d6000fd5b50602b80546001600160a01b0319166001600160a01b039290921691909117905562006d0e565b600181036200194c57602e54602d546040516103e8926001600160a01b0390811692169062006d00906200ab53565b62006c8d939291906200bfad565b602b54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601160448201527011195cdd1a5b985d1a5bdb88131bd8d85b607a1b60648201526000805160206202b4dc8339815191529063c657c71890608401620012ae565b600062006d816200494c565b60295460405163237a85a560e01b81529192506001600160a01b03169063237a85a59062006db8908690869086906004016200c8af565b600060405180830381600087803b15801562006dd357600080fd5b505af115801562006de8573d6000803e3d6000fd5b50505050620022c6838362003935565b60608062006e068362008c92565b9150620017f5848362005eb4565b60008060016040518060400160405280600081526020016001815250915091506000601b838154811062006e4c5762006e4c6200c065565b60009182526020808320600883040154838052601c9091526000805160206202b56a833981519152805460079093166004026101000a90910463ffffffff1693508291829190829062006ea35762006ea36200c065565b6000918252602080832090910154918052601c90526000805160206202b56a83398151915280546001600160a01b0390921691600190811062006eea5762006eea6200c065565b600091825260208083209091015463ffffffff88168352601c9091526040822060020180546001600160a01b0390921692909162006f2c5762006f2c6200c065565b60009182526020909120015491945092506001600160a01b0316905062006f548382620044d0565b866040015163ffffffff1660000362006f6f57600160408801525b60008062006f7f848a89620029fa565b602854604051634bb73ea560e01b81529294509092506001600160a01b031690634bb73ea59062006fb790859085906004016200b3a4565b6000604051808303816000875af115801562006fd7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200700191908101906200c48c565b505050600062007012848462001075565b604051630618f58760e51b8152636893014360e01b60048201529091506000805160206202b4dc8339815191529063c31eb0e090602401600060405180830381600087803b1580156200706457600080fd5b505af115801562007079573d6000803e3d6000fd5b5050602854604051634bb73ea560e01b81526001600160a01b039091169250634bb73ea59150620070b190869085906004016200b3a4565b6000604051808303816000875af1158015620070d1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620070fb91908101906200c48c565b50505050505050505050505050565b60408051808201825260208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657290820152905163f28dceb360e01b81526000805160206202b4dc8339815191529163f28dceb39162003dcf91906004016200afb6565b6000620071846029546001600160a01b031690565b6001600160a01b0316826001600160a01b03161480620071c157506026546001600160a01b03165b6001600160a01b0316826001600160a01b0316145b80620010a75750506025546001600160a01b0391821691161490565b6000805160206202b54a83398151915260001c6001600160a01b031663440ed10d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200722b57600080fd5b505af115801562007240573d6000803e3d6000fd5b50505050806001600160a01b03168263ffffffff167f8f9b8b0f4f062833bec85ea9a8465e4a1207b4be6eb565bbd0ae8b913588d04e856040516200728691906200c8e1565b60405180910390a3505050565b606080620017e78362009108565b6000620071ac6026546001600160a01b031690565b6000805160206202b4dc833981519152634c63e562620072de6029546001600160a01b031690565b6001600160a01b0316836001600160a01b031614156040518263ffffffff1660e01b815260040162007314911515815260200190565b60006040518083038186803b1580156200732d57600080fd5b505afa15801562007342573d6000803e3d6000fd5b5050604051630618f58760e51b815263dbc2fa8560e01b60048201526000805160206202b4dc833981519152925063c31eb0e09150602401600060405180830381600087803b1580156200739557600080fd5b505af1158015620073aa573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b03841660048201526000805160206202b4dc833981519152925063ca669fa79150602401600060405180830381600087803b158015620073ff57600080fd5b505af115801562007414573d6000803e3d6000fd5b5050602754604051639cc1bb3160e01b8152600060048201819052602482018190526060604483015260648201526001600160a01b039091169250639cc1bb319150608401620012ae565b60005b600a8163ffffffff16101562001546576200747c6200ac1b565b60005b60048163ffffffff161015620075ec5760408083015163ffffffff8381166000908152602f6020908152848220888416835290529290922060010154908216600160201b9091049091161115620075d95763ffffffff8082166000908152602f602090815260408083208785168452825291829020825160c0808201855282548252600183015480871683860152600160201b81049096168286015264ffffffffff600160401b87048116606080850191909152600160681b90970416608080840191909152855160e081018752600285015461ffff90811693820193845292815286518087018852600386015484168152818701528651808701885260048601548416815281880152865180870188526005860154841681529781019790975285518086018752600685015483168152908701528451938401909452600790910154909216815260a08381019190915281019190915291505b620075e4816200c250565b90506200747f565b50602754620076b6906001600160a01b031663d17db53a620076108560016200c230565b6040516001600160e01b031960e084901b16815263ffffffff919091166004820152602401600060405180830381865afa15801562007653573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200767d91908101906200c02d565b620076888362008976565b6040518060400160405280600f81526020016e216765744c6174657374537461746560881b81525062008a15565b50620076c2816200c250565b905062007462565b60408051606081018252600080825260208201819052918101919091526001600160a01b03821660009081526021602052604081205463ffffffff169003620077275760405162461bcd60e51b815260040162001246906200c683565b604080516060810182526001600160a01b038416600090815260236020529190912054819060ff1660058111156200776357620077636200bbbb565b81526001600160a01b0390931660008181526022602090815260408083205463ffffffff90811683890152938352602190915290819020549091169301929092525090565b620077b38262004ca2565b6000620077d4620077c484620088e2565b63ffffffff166000600462008742565b63ffffffff8082166000908152603160209081526040808320815160e0810183528154815260018201549381019390935260028101548086169284019290925264ffffffffff600160201b830481166060850152600160481b9092049091166080830152600381015460a08301526004015460c08201529293509182916200786091908690620091ef16565b91509150620012de85828462001e47565b6200787b6200abdf565b6000620078898584620087ff565b90506200789681620046cd565b620078c18460a00151856040015186606001518760800151856200927890949392919063ffffffff16565b95945050505050565b620078d58262004ca2565b6040810151620078fe9063ffffffff16620078f3600460016200c848565b63ffffffff62008742565b63ffffffff16604082015262003d1d8282600062001e47565b6060600c80548060200260200160405190810160405280929190818152602001828054801562001a98576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001a79575050505050905090565b6103e86040516200798a906200ac59565b63ffffffff9091168152602001604051809103906000f080158015620079b4573d6000803e3d6000fd5b50602d80546001600160a01b0319166001600160a01b0392909216919091179055565b6103e8604051620079e8906200ac67565b63ffffffff9091168152602001604051809103906000f08015801562007a12573d6000803e3d6000fd5b50602e80546001600160a01b0319166001600160a01b03929092169182179055604080516318caf8e360e31b815260048101929092526024820152600c60448201526b2634b3b43a26b0b730b3b2b960a11b60648201526000805160206202b4dc8339815191529063c657c7189060840162003dcf565b60008062007a9783620092e8565b6001600160a01b0382166000908152601d60205260409020559392505050565b600a600062007ac683620093fd565b9050600062007ad584620093fd565b9050600062007ae485620093fd565b9050600084848460405162007af9906200ab6f565b62007b07939291906200bfad565b604051809103906000f08015801562007b24573d6000803e3d6000fd5b5060405163ca669fa760e01b81526001600160a01b03841660048201529091506000805160206202b4dc8339815191529063ca669fa790602401600060405180830381600087803b15801562007b7957600080fd5b505af115801562007b8e573d6000803e3d6000fd5b50505050806001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562007bce57600080fd5b505af115801562007be3573d6000803e3d6000fd5b5050505062007c76816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562007c2a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007c5091906200c8f1565b836040518060400160405280600681526020016510b7bbb732b960d11b8152506200940a565b62007d0c816001600160a01b0316637622f78d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562007cb9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007cdf91906200c8f1565b856040518060400160405280600d81526020016c10b0b3b2b73a26b0b730b3b2b960991b8152506200940a565b62007d9b816001600160a01b031663fb0e722b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562007d4f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007d7591906200c8f1565b8460405180604001604052806006815260200165042d2dcc4def60d31b8152506200940a565b62002262816001600160a01b0316638d3638f46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562007dde573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007e0491906200c911565b63ffffffff168663ffffffff166040518060400160405280600c81526020016b10b637b1b0b62237b6b0b4b760a11b815250620087c3565b60608062007e4a8362008976565b9150620017f5848362001c1c565b60205460405163045d224960e31b8152600481018390526000916001600160a01b0316906322e912489060240162001b62565b6001600160a01b03811660009081526021602052604081205463ffffffff1680820362007ecc5760405162461bcd60e51b815260040162001246906200c683565b6001600160a01b0383166000908152602360205260409020805485919060ff1916600183600581111562007f045762007f046200bbbb565b0217905550602080546001600160a01b038581166000908152602290935260409092205491169063d3b7576c90839062003a4890889063ffffffff168862008a5e565b6060620010a483838051906020012062006751565b602954602554602654602854602754604051637c643b2f60e11b81526001600160a01b039485166004820152928416602484015290831660448301528216606482015291169063f8c8765e9060840162003dcf565b62007fbb6200abdf565b6040805160208101909152825151815260609062007fdb90600162009458565b915062007ff2836000015183856020015162007871565b91506200800783602001516000015162001ba6565b9050915091565b6060620010a4837f3464bf887f210604c594030208052a323ac6628785466262d75241769120164184620017b9565b6060806200804b8362008b22565b9150620017f5848362008291565b601b805460018101909155600881047f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc101805463ffffffff80861660046007909516949094026101000a8481029102199091161790556000908152601c60205260409020620080c982826200c2f6565b50600063ffffffff831615620081015781604051602001620080ec91906200c931565b60405160208183030381529060405262008120565b6040518060400160405280600581526020016411dd585c9960da1b8152505b60408051600480825260a082019092529192506020820160808036833750505063ffffffff84166000908152601c602090815260409091208251620081709360029092019291909101906200ac75565b5060005b60048110156200821f57620081b6826200818e83620094bf565b604051602001620081a19291906200c96d565b60405160208183030381529060405262007a89565b63ffffffff85166000908152601c60205260409020600201805483908110620081e357620081e36200c065565b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905562008217816200c3c2565b905062008174565b5063ffffffff83166000908152601c6020526040812060020180549091906200824c576200824c6200c065565b600091825260208083209091015463ffffffff9095168252601c90526040902060010180546001600160a01b0319166001600160a01b03909416939093179092555050565b6060620010a4837fccfadb9c399e4e4257b6d0c3f92e1f9a9c00b1802b55a2f7d511702faa76909084620017b9565b60008060016040518060400160405280600081526020016001815250915091506000601b8381548110620082f857620082f86200c065565b60009182526020808320600883040154838052601c9091526000805160206202b56a833981519152805460079093166004026101000a90910463ffffffff169350829182906200834c576200834c6200c065565b600091825260208083209091015463ffffffff86168352601c9091526040822060020180546001600160a01b039092169290916200838e576200838e6200c065565b6000918252602090912001549092506001600160a01b03169050620083b48282620044d0565b856040015163ffffffff16600003620083cf57600160408701525b600080620083df848988620029fa565b915091506000805160206202b54a83398151915260001c6001600160a01b031663440ed10d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200843157600080fd5b505af115801562008446573d6000803e3d6000fd5b50505050836001600160a01b031660007f5ca3d740e03650b41813a4b418830f6ba39700ae010fe8c4d1bca0e8676b9c568484604051620084899291906200b3a4565b60405180910390a3602854604051634bb73ea560e01b81526001600160a01b0390911690634bb73ea590620084c590859085906004016200b3a4565b6000604051808303816000875af1158015620084e5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200850f91908101906200c48c565b5050505050505050505050565b6000620010a762000aca8362008735565b60a081015160c082015160408051602081019390935282015260600160408051601f198184030181529190528051602091820120910152565b62008570620095d7565b6200857a62003d21565b6200858462002720565b6200858e620022cc565b62008598620017fe565b620085a262004707565b620085ac620010ad565b620085b662007f5c565b620085c06200689a565b620085ca620043ac565b620085d4620079d7565b620085de62007979565b620085e862006c55565b620085f2620060dd565b620085fc62001c96565b620086066200690b565b6200861062006707565b6200861a62004a54565b620012e56200421e565b606060008260000151516001600160401b038111156200864857620086486200ad7e565b60405190808252806020026020018201604052801562008672578160200160208202803683370190505b50905060005b835151811015620086d357620086a08460000151828151811062005a595762005a596200c065565b828281518110620086b557620086b56200c065565b6020908102919091010152620086cb816200c3c2565b905062008678565b50620017d28162009108565b6001600160a01b0382166000908152601d60205260408120546060918190036200871d5760405162461bcd60e51b815260040162001246906200c683565b62003b14818462006751565b62003d1d828262009684565b6000620010a78262009762565b6000620087518484846200978e565b9050620017d26040518060400160405280600c81526020016b109bdd5b990814995cdd5b1d60a21b8152508262009981565b8115158315151462004219576000805160206202b4fc83398151915281604051620087af91906200c9ad565b60405180910390a162004219838362009a21565b81831462004219576000805160206202b4fc83398151915281604051620087eb91906200c9ad565b60405180910390a162004219838362008e58565b60408051602081019091526060815281602001516001600160401b038111156200882d576200882d6200ad7e565b6040519080825280602002602001820160405280156200886a57816020015b620088566200ac1b565b8152602001906001900390816200884c5790505b50815260005b8260200151811015620088db5782518114620088a3576200889d620088978260016200c848565b62009b65565b620088a5565b835b8251805183908110620088bc57620088bc6200c065565b602002602001018190525080620088d3906200c3c2565b905062008870565b5092915050565b6000620010a78262008735565b620088f96200ac1b565b620089048462009762565b815263ffffffff8084166020830152821660408201526200892584620088e2565b64ffffffffff1660608201526200893c84620088e2565b64ffffffffff166080820152620089538462009bdf565b60a08201529392505050565b6000620010a7620089708362008976565b62009bfe565b6060620010a782600001518360200151846040015185606001518660800151620089a48860a0015162009c15565b60408051602081019790975260e095861b6001600160e01b0319908116888301529490951b909316604486015260d891821b6001600160d81b03199081166048870152911b16604d84015260a01b6001600160a01b03191660528301528051603e818403018152605e909201905290565b6200421983838362009c96565b81831462004219576000805160206202b4fc8339815191528160405162008a4a91906200c9ad565b60405180910390a162004219838362008d6f565b600083838360405160200162008a77939291906200c9de565b6040516020818303038152906040528051906020012090509392505050565b8160405160200162008aa991906200c891565b604051602081830303815290604052805190602001208360405160200162008ad291906200c891565b604051602081830303815290604052805190602001201462004219576000805160206202b4fc8339815191528160405162008b0e91906200c9ad565b60405180910390a162004219838362009cdb565b6060620010a7826000015183602001518460400151856060015186608001516040805160208101969096528581019490945260e09290921b6001600160e01b031916606085015260d890811b6001600160d81b0319908116606486015291901b1660698301528051604e818403018152606e909201905290565b60408051602081019091526060815262008bb56200ac1b565b620017d281604051806040016040528086815260200186815250620087ff565b8051516060906001600160401b0381111562008bf55762008bf56200ad7e565b60405190808252806020026020018201604052801562008c2a57816020015b606081526020019060019003908162008c145790505b50905060005b82515181101562008c8c5762008c588360000151828151811062005b975762005b976200c065565b82828151811062008c6d5762008c6d6200c065565b60200260200101819052508062008c84906200c3c2565b905062008c30565b50919050565b8051602080830151604080850151606086810151608088015160a089015160c08a015160e0808c015188516001600160e01b03199c831b8d169b81019b909b5298901b9099166024890152602888019490945260488701919091526001600160f81b031960f89190911b1660688601526bffffffffffffffffffffffff1991811b8216606986015294851b8116607d85015291841b90911660918301528051808303608501815260a59092019052620010a7565b6000620010a762008d6162008d5b8462009ddf565b62009df6565b805160051b60209091012090565b80821462003d1d576000805160206202b4bc83398151915260405162008dd49060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f998260405162008e0d91906200ca3a565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f998160405162008e4691906200ca73565b60405180910390a162003d1d62009ee8565b80821462003d1d576000805160206202b4bc83398151915260405162008eba9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162008ef391906200ca3a565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162008e4691906200ca73565b6060600062008f3f62008d5b8462009ddf565b905080516001600160401b0381111562008f5d5762008f5d6200ad7e565b60405190808252806020026020018201604052801562008f87578160200160208202803683370190505b50915060005b825181101562008ff05781818151811062008fac5762008fac6200c065565b60200260200101516001600160801b031683828151811062008fd25762008fd26200c065565b602090810291909101015262008fe8816200c3c2565b905062008f8d565b5050919050565b60008082620090126200900c82602462009ff1565b6200a000565b9250620090256200900c8260246200a023565b915050915091565b815160009082811115620090545760405163c5360feb60e01b815260040160405180910390fd5b84915060005b8181101562009098576200908d838683815181106200907d576200907d6200c065565b602002602001015189846200a06b565b92506001016200905a565b50805b83811015620090be57620090b383600089846200a06b565b92506001016200909b565b5050949350505050565b6000805160206202b4dc83398151915263e5d6bf02620090e983426200c848565b6040518263ffffffff1660e01b8152600401620012ae91815260200190565b60606200911682516200a09a565b62009134576040516376cc6d3360e11b815260040160405180910390fd5b81516000816001600160401b038111156200915357620091536200ad7e565b6040519080825280602002602001820160405280156200917d578160200160208202803683370190505b50905060005b82811015620091e357620091b0858281518110620091a557620091a56200c065565b602002602001015190565b828281518110620091c557620091c56200c065565b6020908102919091010152620091db816200c3c2565b905062009183565b5062003b14816200a0c2565b6000620091fb6200abdf565b60408481015163ffffffff169082015283516001841618815260a08085015160028516189082015260c080850151600485161890820152606080850151600885161864ffffffffff90811691830191909152608080860151601086161890911690820152601f831615915062009271816200852d565b9250929050565b620092826200abdf565b60006200928f8762009ddf565b90506200929c816200a0f9565b825260a08201869052620092b08762008d46565b60c0830152620092c0826200852d565b5063ffffffff909316604084015264ffffffffff918216606084015216608082015292915050565b60008082604051602001620092fe91906200c891565b60408051808303601f190181529082905280516020909101206001625e79b760e01b031982526004820181905291506000805160206202b4dc8339815191529063ffa1864990602401602060405180830381865afa15801562009365573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200938b91906200c8f1565b6040516318caf8e360e31b81529092506000805160206202b4dc8339815191529063c657c71890620093c490859087906004016200bf87565b600060405180830381600087803b158015620093df57600080fd5b505af1158015620093f4573d6000803e3d6000fd5b50505050915091565b6000620010a782620088e2565b816001600160a01b0316836001600160a01b03161462004219576000805160206202b4fc833981519152816040516200944491906200c9ad565b60405180910390a16200421983836200a1e9565b620094626200abdf565b6200946d8362009762565b81526200947a8362009762565b60a082015263ffffffff821660408201526200949683620088e2565b64ffffffffff166060820152620094ad83620088e2565b64ffffffffff16608082015292915050565b606081600003620094e75750506040805180820190915260018152600360fc1b602082015290565b8160005b8115620095175780620094fe816200c3c2565b91506200950f9050600a836200ca9e565b9150620094eb565b6000816001600160401b038111156200953457620095346200ad7e565b6040519080825280601f01601f1916602001820160405280156200955f576020820181803683370190505b5090505b841562003b1457620095776001836200bf71565b915062009586600a866200c219565b620095939060306200c848565b60f81b818381518110620095ab57620095ab6200c065565b60200101906001600160f81b031916908160001a905350620095cf600a866200ca9e565b945062009563565b6200960260006040518060400160405280600681526020016547756172647360d01b81525062008059565b6200962d6103e860405180604001604052806005815260200164131bd8d85b60da1b81525062008059565b620096596105dc6040518060400160405280600681526020016552656d6f746560d01b81525062008059565b620012e56107d06040518060400160405280600581526020016427ba3432b960d91b81525062008059565b6200969082826200a2d2565b62003d1d576000805160206202b4bc833981519152604051620096f09060208082526023908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b62797460408201526265735d60e81b606082015260800190565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf18826040516200972991906200cab5565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf188160405162008e4691906200caf4565b805160408051602081018390520160408051601f19818403018152919052805160209091012090915290565b600081831115620098085760405162461bcd60e51b815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840162001246565b828410158015620098195750818411155b1562009827575082620017d2565b60006200983584846200bf71565b620098429060016200c848565b9050600385111580156200985557508481115b1562009870576200986785856200c848565b915050620017d2565b6200987f60036000196200bf71565b85101580156200989b575062009898856000196200bf71565b81115b15620098bb57620098af856000196200bf71565b6200986790846200bf71565b828511156200991d576000620098d284876200bf71565b90506000620098e283836200c219565b905080600003620098f957849350505050620017d2565b60016200990782886200c848565b6200991391906200bf71565b9350505062009979565b83851015620099795760006200993486866200bf71565b905060006200994483836200c219565b9050806000036200995b57859350505050620017d2565b6200996781866200bf71565b620099749060016200c848565b935050505b509392505050565b60006a636f6e736f6c652e6c6f676001600160a01b03168383604051602401620099ad9291906200cb1f565b60408051601f198184030181529181526020820180516001600160e01b0316632d839cb360e21b17905251620099e491906200c891565b600060405180830381855afa9150503d806000811462002262576040519150601f19603f3d011682016040523d82523d6000602084013e62002262565b8015158215151462003d1d576000805160206202b4bc83398151915260405162009a879060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a16000805160206202b4fc8339815191528262009ac9576040518060400160405280600581526020016466616c736560d81b81525062009ae7565b604051806040016040528060048152602001637472756560e01b8152505b60405162009af691906200cab5565b60405180910390a16000805160206202b4fc8339815191528162009b38576040518060400160405280600581526020016466616c736560d81b81525062009b56565b604051806040016040528060048152602001637472756560e01b8152505b60405162008e4691906200caf4565b62009b6f6200ac1b565b81815263ffffffff8216602080830182905260408084019290925264ffffffffff8416606080850182905260808086019290925260a080860180515161ffff9098169788905280519094015187905283519094015186905282510151859052815101518490525101519190915290565b62009be96200acdb565b620010a762009bf8836200a36b565b6200a407565b6000620010a762009c0f836200a4be565b6200a4d3565b805151600090620010a79060208401515160408501515160608601515160808701515160a08801515161ffff60501b605087901b1669ffff0000000000000000604087901b161767ffff000000000000603086901b161765ffff00000000602085901b161763ffff0000601084901b161761ffff8216179695505050505050565b62009ca283836200a2d2565b62004219576000805160206202b4fc8339815191528160405162009cc791906200c9ad565b60405180910390a162004219838362009684565b8060405160200162009cee91906200c891565b604051602081830303815290604052805190602001208260405160200162009d1791906200c891565b604051602081830303815290604052805190602001201462003d1d576000805160206202b4bc83398151915260405162009d8f9060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a16000805160206202b4fc8339815191528260405162009db791906200cab5565b60405180910390a16000805160206202b4fc8339815191528160405162008e4691906200caf4565b6000620010a762009df08362008624565b6200a502565b6060600062009e05836200a519565b9050806001600160401b0381111562009e225762009e226200ad7e565b60405190808252806020026020018201604052801562009e4c578160200160208202803683370190505b50915060005b8181101562008ff057600062009e6985836200a53e565b905062009ea762009e7a826200a5a8565b62009e85836200a5c0565b63ffffffff1660209190911b6fffffffffffffffffffffffff00000000161790565b84838151811062009ebc5762009ebc6200c065565b6001600160801b03909216602092830291909101909101525062009ee0816200c3c2565b905062009e52565b6000805160206202b4dc8339815191523b1562009fe057604080516000805160206202b4dc833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262009f7b92916020016200c85e565b60408051601f198184030181529082905262009f97916200c891565b6000604051808303816000865af19150503d806000811462009fd6576040519150601f19603f3d011682016040523d82523d6000602084013e62009fdb565b606091505b505050505b6000805461ff001916610100179055565b6000620010a48382846200a5d1565b6000806200a00e8360801c90565b6001600160801b039390931690922092915050565b60006001600160801b038316808311156200a0515760405163a3b99ded60e01b815260040160405180910390fd5b62003b14836200a0618660801c90565b018483036200a62e565b6000600183831c1681036200a08e576200a08685856200a67d565b905062003b14565b6200a08684866200a67d565b60008115801590620010a757506200a0b5600160066200bf71565b6001901b82111592915050565b6040518060006200a0d784602084016200a6cd565b6001600160801b0316601f8101601f1916830160200160405290915250919050565b6000806200a107836200a519565b90506000816001600160401b038111156200a126576200a1266200ad7e565b6040519080825280602002602001820160405280156200a150578160200160208202803683370190505b50905060005b828110156200a1a8576200a1756200a16f86836200a53e565b6200a758565b8282815181106200a18a576200a18a6200c065565b60209081029190910101526200a1a0816200c3c2565b90506200a156565b506200a1c2816200a1bc600160066200bf71565b6200a799565b806000815181106200a1d8576200a1d86200c065565b602002602001015192505050919050565b806001600160a01b0316826001600160a01b03161462003d1d576000805160206202b4bc8339815191526040516200a2609060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516200a29991906200cb43565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162008e4691906200cb88565b8051825160019190036200a3625760005b83518110156200a35b578281815181106200a302576200a3026200c065565b602001015160f81c60f81b6001600160f81b0319168482815181106200a32c576200a32c6200c065565b01602001516001600160f81b031916146200a34657600091505b806200a352816200c3c2565b9150506200a2e3565b50620010a7565b50600092915050565b6200a3a56040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6200a3b08262008735565b81526200a3bd8262008735565b60208201526200a3cd8262008735565b60408201526200a3dd8262008735565b60608201526200a3ed8262008735565b60808201526200a3fd8262008735565b60a0820152919050565b6200a4116200acdb565b81516200a41e906200a87f565b815161ffff909116905260208201516200a438906200a87f565b602082015161ffff909116905260408201516200a455906200a87f565b604082015161ffff909116905260608201516200a472906200a87f565b606082015161ffff909116905260808201516200a48f906200a87f565b608082015161ffff909116905260a08201516200a4ac906200a87f565b60a082015161ffff9091169052919050565b80516000906020830162003b1481836200a62e565b60006200a4e0826200a931565b6200a4fe57604051631ae8107160e21b815260040160405180910390fd5b5090565b6000620010a76200a513836200a4be565b6200a952565b60006200a529600c60326200c848565b620010a7906001600160801b0384166200ca9e565b600082816200a550600c60326200c848565b6200a55c90856200c7f4565b90506001600160801b03821681106200a58857604051631390f2a160e01b815260040160405180910390fd5b620078c162009c0f826200a59f600c60326200c848565b8591906200a5d1565b6000620010a762000a8d6032600c855b91906200a97d565b6000620010a760206004846200a5b8565b6000806200a5df8560801c90565b90506200a5ec856200a9a0565b836200a5f986846200c848565b6200a60591906200c848565b11156200a6255760405163a3b99ded60e01b815260040160405180910390fd5b620078c1848201845b6000806200a63d83856200c848565b90506040518111156200a64e575060005b806000036200a6705760405163085f79c360e11b815260040160405180910390fd5b608084901b831762003b14565b6000821580156200a68c575081155b156200a69b57506000620010a7565b6040805160208101859052908101839052606001604051602081830303815290604052805190602001209050620010a7565b604051600090808310156200a6f5576040516312ca856360e21b815260040160405180910390fd5b6000805b85518110156200a74a5760008682815181106200a71a576200a71a6200c065565b602002602001015190506200a732818488016200a9be565b506001600160801b031691909101906001016200a6f9565b50608084901b8117620078c1565b60008060006200a7688462008ff7565b6040805160208082019490945280820192909252805180830382018152606090920190528051910120949350505050565b81516001821b8111156200a7c05760405163c5360feb60e01b815260040160405180910390fd5b60005b82811015620022c65760005b828110156200a86f57600081600101905060008683815181106200a7f7576200a7f76200c065565b6020026020010151905060008583106200a8135760006200a831565b8783815181106200a828576200a8286200c065565b60200260200101515b90506200a83f82826200a67d565b88600186901c815181106200a858576200a8586200c065565b60209081029190910101525050506002016200a7cf565b506001918201821c91016200a7c3565b6000806200a8f98360016001600160801b03821160071b91821c6001600160401b03811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211871b91821c969096119490961792909217171791909117919091171790565b905060088110156200a9175761ff00600884901b1660ff17620017d2565b600719810161ff0084821c60081b1660ff82161762003b14565b60006200a941600c60326200c848565b6001600160801b0383161492915050565b60006200a95f826200aa35565b6200a4fe57604051635cb1e1ad60e11b815260040160405180910390fd5b6000806200a98d8585856200aa8d565b602084900360031b1c9150509392505050565b60006001600160801b0382166200a9b78360801c90565b0192915050565b6040516000906001600160801b03841690608085901c90808510156200a9f7576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa9050806200aa2257604051637c7d772f60e01b815260040160405180910390fd5b608086901b84175b979650505050505050565b60006001600160801b038216816200aa50600c60326200c848565b6200aa5c90836200ca9e565b9050816200aa6d600c60326200c848565b6200aa7990836200c7f4565b14801562003b14575062003b14816200a09a565b6000816000036200aaa157506000620017d2565b60208211156200aac45760405163063af09560e31b815260040160405180910390fd5b6001600160801b0384166200aada83856200c848565b11156200aafa5760405163a3b99ded60e01b815260040160405180910390fd5b600382901b60006200ab0c8660801c90565b90940151600160ff1b600019929092019190911d16949350505050565b610e89806200cbb483390190565b612783806200da3d83390190565b610f8880620101c083390190565b613e74806201114883390190565b610ff88062014fbc83390190565b614ed68062015fb483390190565b61421a806201ae8a83390190565b61097c806201f0a483390190565b610a0d806201fa2083390190565b610655806202042d83390190565b6133b48062020a8283390190565b6101a28062023e3683390190565b6114f08062023fd883390190565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b6040805160c08101825260008082526020820181905291810182905260608101829052608081019190915260a081016200ac546200acdb565b905290565b61377a80620254c883390190565b61287a8062028c4283390190565b8280548282559060005260206000209081019282156200accd579160200282015b828111156200accd57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200ac96565b506200a4fe9291506200ad44565b6040805160e081018252600060c0820181815282528251602080820185528282528084019190915283518082018552828152838501528351808201855282815260608401528351808201855282815260808401528351908101909352825260a081019190915290565b5b808211156200a4fe57600081556001016200ad45565b6001600160a01b03811681146200154657600080fd5b803562004a4f816200ad5b565b634e487b7160e01b600052604160045260246000fd5b604051602081016001600160401b03811182821017156200adb9576200adb96200ad7e565b60405290565b60405160c081016001600160401b03811182821017156200adb9576200adb96200ad7e565b604080519081016001600160401b03811182821017156200adb9576200adb96200ad7e565b60405161010081016001600160401b03811182821017156200adb9576200adb96200ad7e565b604051606081016001600160401b03811182821017156200adb9576200adb96200ad7e565b604051601f8201601f191681016001600160401b03811182821017156200ae7f576200ae7f6200ad7e565b604052919050565b60006001600160401b038211156200aea3576200aea36200ad7e565b50601f01601f191660200190565b600082601f8301126200aec357600080fd5b81356200aeda6200aed4826200ae87565b6200ae54565b8181528460208386010111156200aef057600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156200af2157600080fd5b82356200af2e816200ad5b565b915060208301356001600160401b038111156200af4a57600080fd5b6200af58858286016200aeb1565b9150509250929050565b60005b838110156200af7f5781810151838201526020016200af65565b50506000910152565b600081518084526200afa28160208601602086016200af62565b601f01601f19169290920160200192915050565b602081526000620010a460208301846200af88565b600080604083850312156200afdf57600080fd5b50508035926020909101359150565b600081518084526020808501945080840160005b838110156200b020578151875295820195908201906001016200b002565b509495945050505050565b602081526000620010a460208301846200afee565b600080600080608085870312156200b05757600080fd5b8435935060208501356200b06b816200ad5b565b925060408501356200b07d816200ad5b565b915060608501356200b08f816200ad5b565b939692955090935050565b6000806000606084860312156200b0b057600080fd5b83356200b0bd816200ad5b565b92506020840135915060408401356001600160401b038111156200b0e057600080fd5b6200b0ee868287016200aeb1565b9150509250925092565b60006001600160401b038211156200b114576200b1146200ad7e565b5060051b60200190565b63ffffffff811681146200154657600080fd5b803562004a4f816200b11e565b803564ffffffffff8116811462004a4f57600080fd5b6000602082840312156200b16757600080fd5b6200b1716200ad94565b9050813561ffff811681146200b18657600080fd5b815292915050565b60008183036101608112156200b1a357600080fd5b6200b1ad6200adbf565b91508235825260208301356200b1c3816200b11e565b602083015260408301356200b1d8816200b11e565b60408301526200b1eb606084016200b13e565b60608301526200b1fe608084016200b13e565b608083015260c0609f19820112156200b21657600080fd5b506200b2216200adbf565b6200b2308460a085016200b154565b81526200b2418460c085016200b154565b60208201526200b2558460e085016200b154565b60408201526200b26a8461010085016200b154565b60608201526200b27f8461012085016200b154565b60808201526200b2948461014085016200b154565b60a08201528060a08301525092915050565b600060208083850312156200b2ba57600080fd5b6200b2c46200ad94565b915082356001600160401b038111156200b2dd57600080fd5b8301601f810185136200b2ef57600080fd5b80356200b3006200aed4826200b0f8565b81815261016091820283018401918482019190888411156200b32157600080fd5b938501935b838510156200b34b576200b33b89866200b18e565b835293840193918501916200b326565b508552509295945050505050565b600080604083850312156200b36d57600080fd5b82356200b37a816200ad5b565b915060208301356001600160401b038111156200b39657600080fd5b6200af58858286016200b2a6565b6040815260006200b3b960408301856200af88565b8281036020840152620078c181856200af88565b6000806000606084860312156200b3e357600080fd5b83356200b3f0816200ad5b565b95602085013595506040909401359392505050565b6020808252825182820181905260009190848201906040850190845b818110156200b4485783516001600160a01b0316835292840192918401916001016200b421565b50909695505050505050565b6000602082840312156200b46757600080fd5b8135620017d2816200b11e565b6000602082840312156200b48757600080fd5b5035919050565b6000602082840312156200b4a157600080fd5b6200b4ab6200ad94565b9135825250919050565b600060e082840312156200b4c857600080fd5b60405160e081018181106001600160401b03821117156200b4ed576200b4ed6200ad7e565b8060405250809150823581526020830135602082015260408301356200b513816200b11e565b60408201526200b526606084016200b13e565b60608201526200b539608084016200b13e565b608082015260a083013560a082015260c083013560c08201525092915050565b80151581146200154657600080fd5b600080600061012084860312156200b57f57600080fd5b6200b58b85856200b48e565b92506200b59c85602086016200b4b5565b91506101008401356200b5af816200b559565b809150509250925092565b6000602082840312156200b5cd57600080fd5b8135620017d2816200ad5b565b6000806000606084860312156200b5f057600080fd5b8335925060208401356200b604816200ad5b565b915060408401356200b5af816200ad5b565b63ffffffff9290921682526001600160a01b0316602082015260400190565b6000604082840312156200b64857600080fd5b6200b6526200ade4565b9050813581526020820135602082015292915050565b60008060006101c084860312156200b67f57600080fd5b83356200b68c816200ad5b565b92506200b69d85602086016200b18e565b91506200b6af8561018086016200b635565b90509250925092565b6000602082840312156200b6cb57600080fd5b620010a483836200b48e565b600080604083850312156200b6eb57600080fd5b82356200b6f8816200b11e565b915060208301356200b70a816200ad5b565b809150509250929050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200b7bd57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156200b7a75783516001600160e01b0319168252928b019260019290920191908b01906200b77b565b50978a019795505050918701916001016200b73d565b50919998505050505050505050565b600080604083850312156200b7e057600080fd5b82356200b7ed816200b11e565b946020939093013593505050565b600080604083850312156200b80f57600080fd5b82356200b6f8816200ad5b565b6000602082840312156200b82f57600080fd5b81356001600160401b038111156200b84657600080fd5b62003b14848285016200b2a6565b60ff811681146200154657600080fd5b803562004a4f816200b854565b6000808284036101208112156200b88757600080fd5b83356200b894816200ad5b565b9250610100601f1982018113156200b8ab57600080fd5b6200b8b56200ae09565b915060208501356200b8c7816200b11e565b82526200b8d7604086016200b131565b602083015260608501356040830152608085013560608301526200b8fe60a086016200b864565b60808301526200b91160c086016200ad71565b60a08301526200b92460e086016200ad71565b60c08301526200b9368186016200ad71565b60e083015250809150509250929050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200b9a057603f198886030184526200b98d8583516200af88565b945092850192908501906001016200b96e565b5092979650505050505050565b600681106200154657600080fd5b600080600083850360a08112156200b9d257600080fd5b84356200b9df816200ad5b565b93506060601f19820112156200b9f457600080fd5b506200b9ff6200ae2f565b60208501356200ba0f816200b9ad565b815260408501356200ba21816200b11e565b602082015260608501356200ba36816200b11e565b6040820152915060808401356200b5af816200b9ad565b60008061010083850312156200ba6257600080fd5b82356200ba6f816200ad5b565b9150620017f584602085016200b4b5565b600080600080608085870312156200ba9757600080fd5b84356200baa4816200b11e565b935060208501356200b06b816200ad5b565b600061016082840312156200baca57600080fd5b620010a483836200b18e565b6000806000606084860312156200baec57600080fd5b83356200baf9816200b9ad565b925060208401356200b604816200b11e565b600080604083850312156200bb1f57600080fd5b82356200bb2c816200ad5b565b91506020838101356001600160401b038111156200bb4957600080fd5b8401601f810186136200bb5b57600080fd5b80356200bb6c6200aed4826200b0f8565b81815260059190911b820183019083810190888311156200bb8c57600080fd5b928401925b828410156200bbac578335825292840192908401906200bb91565b80955050505050509250929050565b634e487b7160e01b600052602160045260246000fd5b600681106200bbf057634e487b7160e01b600052602160045260246000fd5b9052565b6200bc018282516200bbd1565b60208181015163ffffffff9081169184019190915260409182015116910152565b60608101620010a782846200bbf4565b600080604083850312156200bc4657600080fd5b6200b7ed84846200b48e565b600080600061028084860312156200bc6957600080fd5b6200bc7585856200b18e565b92506200bc878561016086016200b4b5565b91506200b6af8561024086016200b635565b805182526020810151602083015263ffffffff6040820151166040830152606081015164ffffffffff8082166060850152806080840151166080850152505060a081015160a083015260c081015160c08301525050565b60e08101620010a782846200bc99565b60008061010083850312156200bd1557600080fd5b6200ba6f84846200b48e565b6000602082840312156200bd3457600080fd5b81356001600160401b038111156200bd4b57600080fd5b62003b14848285016200aeb1565b60008061018083850312156200bd6e57600080fd5b82356200bd7b816200ad5b565b9150620017f584602085016200b18e565b600080604083850312156200bda057600080fd5b82356200b6f8816200b9ad565b600080604083850312156200bdc157600080fd5b8235915060208301356001600160401b038111156200af4a57600080fd5b60006101a082840312156200bdf357600080fd5b6200bdfd6200ade4565b6200be0984846200b18e565b81526200be1b8461016085016200b635565b60208201529392505050565b60006101006200be3883866200bc99565b8060e0840152620078c1818401856200afee565b600080604083850312156200be6057600080fd5b82356200af2e816200b11e565b63ffffffff9490941684526001600160a01b039283166020850152908216604084015216606082015260800190565b6000602082840312156200beaf57600080fd5b5051919050565b600082601f8301126200bec857600080fd5b815160206200bedb6200aed4836200b0f8565b82815260059290921b840181019181810190868411156200befb57600080fd5b8286015b848110156200bf1857805183529183019183016200beff565b509695505050505050565b6000602082840312156200bf3657600080fd5b81516001600160401b038111156200bf4d57600080fd5b62003b14848285016200beb6565b634e487b7160e01b600052601160045260246000fd5b81810381811115620010a757620010a76200bf5b565b6001600160a01b0383168152604060208201819052600090620017cf908301846200af88565b63ffffffff9390931683526001600160a01b03918216602084015216604082015260600190565b60006200bfe56200aed4846200ae87565b90508281528383830111156200bffa57600080fd5b620017d28360208301846200af62565b600082601f8301126200c01c57600080fd5b620010a4838351602085016200bfd4565b6000602082840312156200c04057600080fd5b81516001600160401b038111156200c05757600080fd5b62003b14848285016200c00a565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156200c08e57600080fd5b8151620017d2816200b559565b600060208083850312156200c0af57600080fd5b82516001600160401b03808211156200c0c757600080fd5b818501915085601f8301126200c0dc57600080fd5b81516200c0ed6200aed4826200b0f8565b81815260059190911b830184019084810190888311156200c10d57600080fd5b8585015b838110156200c1c3578051858111156200c12b5760008081fd5b86016060818c03601f19018113156200c1445760008081fd5b6200c14e6200ae2f565b89830151888111156200c1615760008081fd5b6200c1718e8c838701016200beb6565b825250604080840151898111156200c1895760008081fd5b6200c1998f8d838801016200c00a565b838d01525092820151926200c1ae846200ad5b565b8101929092525083529186019186016200c111565b5098975050505050505050565b6001600160a01b03841681526200c1eb60208201846200bbf4565b60a060808201526000620078c160a08301846200afee565b634e487b7160e01b600052601260045260246000fd5b6000826200c22b576200c22b6200c203565b500690565b63ffffffff818116838216019080821115620088db57620088db6200bf5b565b600063ffffffff8083168181036200c26c576200c26c6200bf5b565b6001019392505050565b600181811c908216806200c28b57607f821691505b60208210810362008c8c57634e487b7160e01b600052602260045260246000fd5b601f8211156200421957600081815260208120601f850160051c810160208610156200c2d55750805b601f850160051c820191505b8181101562002262578281556001016200c2e1565b81516001600160401b038111156200c312576200c3126200ad7e565b6200c32a816200c32384546200c276565b846200c2ac565b602080601f8311600181146200c36257600084156200c3495750858301515b600019600386901b1c1916600185901b17855562002262565b600085815260208120601f198616915b828110156200c393578886015182559484019460019091019084016200c372565b50858210156200c3b25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000600182016200c3d7576200c3d76200bf5b565b5060010190565b600081546200c3ed816200c276565b8085526020600183811680156200c40d57600181146200c428576200c458565b60ff1985168884015283151560051b8801830195506200c458565b866000528260002060005b858110156200c4505781548a82018601529083019084016200c433565b890184019650505b505050505092915050565b6040815260006200c47860408301856200c3de565b8281036020840152620078c181856200c3de565b6000806000606084860312156200c4a257600080fd5b83516001600160401b03808211156200c4ba57600080fd5b6200c4c8878388016200c00a565b9450602091508186015193506040860151818111156200c4e757600080fd5b86019050601f810187136200c4fb57600080fd5b80516200c50c6200aed4826200b0f8565b81815260059190911b820183019083810190898311156200c52c57600080fd5b928401925b828410156200c54c578351825292840192908401906200c531565b80955050505050509250925092565b600080604083850312156200c56f57600080fd5b82516001600160401b03808211156200c58757600080fd5b6200c595868387016200c00a565b935060208501519150808211156200c5ac57600080fd5b506200af58858286016200c00a565b6000606082840312156200c5ce57600080fd5b604051606081018181106001600160401b03821117156200c5f3576200c5f36200ad7e565b60405282516200c603816200b9ad565b815260208301516200c615816200b11e565b602082015260408301516200c62a816200b11e565b60408201529392505050565b6000602082840312156200c64957600080fd5b81516001600160401b038111156200c66057600080fd5b8201601f810184136200c67257600080fd5b62003b14848251602084016200bfd4565b6020808252600d908201526c155b9adb9bdddb881859d95b9d609a1b604082015260600190565b8481526080602082015260006200c6c560808301866200af88565b82810360408401526200c6d981866200af88565b905082810360608401526200aa2a81856200af88565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200b9a057603f198886030184526200c7358583516200af88565b945092850192908501906001016200c716565b63ffffffff8616815260006020868184015260a060408401526200c77060a08401876200af88565b60608401869052838103608085015284518082528286019183019060005b818110156200c7ac578351835292840192918401916001016200c78e565b50909a9950505050505050505050565b815160009082906020808601845b838110156200c7e8578151855293820193908201906001016200c7ca565b50929695505050505050565b8082028115828204841417620010a757620010a76200bf5b565b6000806000606084860312156200c82457600080fd5b83516200c831816200b854565b602085015160409095015190969495509392505050565b80820180821115620010a757620010a76200bf5b565b6001600160e01b03198316815281516000906200c8838160048501602087016200af62565b919091016004019392505050565b600082516200c8a58184602087016200af62565b9190910192915050565b63ffffffff841681526001600160a01b0383166020820152606060408201819052600090620078c1908301846200afee565b60208101620010a782846200bbd1565b6000602082840312156200c90457600080fd5b8151620017d2816200ad5b565b6000602082840312156200c92457600080fd5b8151620017d2816200b11e565b6609cdee8c2e4f2560cb1b8152600082516200c9558160078501602087016200af62565b602960f81b6007939091019283015250600801919050565b600083516200c9818184602088016200af62565b600160fd1b90830190815283516200c9a18160018401602088016200af62565b01600101949350505050565b60408152600560408201526422b93937b960d91b6060820152608060208201526000620010a460808301846200af88565b6000600685106200c9ff57634e487b7160e01b600052602160045260246000fd5b5060f89390931b835260e09190911b6001600160e01b031916600183015260601b6bffffffffffffffffffffffff1916600582015260190190565b6040815260006200ca6560408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b6040815260006200ca6560408301600a8152690808080808149a59da1d60b21b602082015260400190565b6000826200cab0576200cab06200c203565b500490565b6040815260006200cae060408301600a8152690808080808081319599d60b21b602082015260400190565b828103602084015262003b1481856200af88565b6040815260006200cae060408301600a8152690808080808149a59da1d60b21b602082015260400190565b6040815260006200cb3460408301856200af88565b90508260208301529392505050565b6040815260006200cb6e60408301600a8152690808080808081319599d60b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b6040815260006200cb6e60408301600a8152690808080808149a59da1d60b21b60208201526040019056fe608060405234801561001057600080fd5b50610e69806100206000396000f3fe60806040526004361061019c5760003560e01c8063873661bd116100ec578063b81442e01161008a578063e60f5f6a11610064578063e60f5f6a14610467578063f05b335114610487578063f2437942146104a7578063fb0e722b1461033d57600080fd5b8063b81442e01461043e578063c0b56f7c14610453578063d0d0cef7146101a157600080fd5b8063a9dcf22d116100c6578063a9dcf22d146103d3578063b26406a0146101a1578063b4596b4b146103f3578063b78973d41461041457600080fd5b8063873661bd14610376578063a1c702a7146103ad578063a2155c341461030257600080fd5b80634fc6ad851161015957806361169218116101335780636116921814610302578063714141de1461031d5780637622f78d1461033d57806376fae1981461035157600080fd5b80634fc6ad8514610299578063504730ab146102cb5780635980330d146102e057600080fd5b806320b0f9b2146101a157806328f3fac9146101b15780632de5aaf7146102035780634289cf751461024d5780634a4a26a2146101a15780634e04e7a71461027a575b600080fd5b3480156101ad57600080fd5b505b005b3480156101bd57600080fd5b506101ed6101cc3660046108fb565b50604080516060810182526000808252602082018190529181019190915290565b6040516101fa9190610962565b60405180910390f35b34801561020f57600080fd5b5061023f61021e366004610970565b60408051606081018252600080825260208201819052918101829052915091565b6040516101fa929190610989565b34801561025957600080fd5b506102626104bd565b6040516001600160a01b0390911681526020016101fa565b34801561028657600080fd5b506101af6102953660046109a6565b5050565b3480156102a557600080fd5b506102bd6102b43660046109e4565b60009392505050565b6040519081526020016101fa565b3480156102d757600080fd5b506102bd61057b565b3480156102ec57600080fd5b506102f561062e565b6040516101fa9190610a19565b34801561030e57600080fd5b506101af610295366004610a67565b34801561032957600080fd5b506101af610338366004610970565b6106c0565b34801561034957600080fd5b506000610262565b34801561035d57600080fd5b506103666106ea565b60405190151581526020016101fa565b610391610384366004610b43565b6000809550959350505050565b6040805163ffffffff90931683526020830191909152016101fa565b3480156103b957600080fd5b506103916103c8366004610bb9565b600080935093915050565b3480156103df57600080fd5b506103666103ee366004610c1b565b61079d565b3480156103ff57600080fd5b506102f561040e366004610c58565b50606090565b34801561042057600080fd5b506104296107ad565b60405163ffffffff90911681526020016101fa565b34801561044a57600080fd5b506101af610860565b34801561045f57600080fd5b5060606102f5565b34801561047357600080fd5b506101af6104823660046108fb565b61086b565b34801561049357600080fd5b506101af6104a2366004610c1b565b610884565b3480156104b357600080fd5b5060006102bd565b565b60008080546104cb90610c75565b15905061057557600080546104df90610c75565b80601f016020809104026020016040519081016040528092919081815260200182805461050b90610c75565b80156105585780601f1061052d57610100808354040283529160200191610558565b820191906000526020600020905b81548152906001019060200180831161053b57829003601f168201915b50505050508060200190518101906105709190610caf565b905090565b50600090565b600080805461058990610c75565b159050610575576000805461059d90610c75565b80601f01602080910402602001604051908101604052809291908181526020018280546105c990610c75565b80156106165780601f106105eb57610100808354040283529160200191610616565b820191906000526020600020905b8154815290600101906020018083116105f957829003601f168201915b50505050508060200190518101906105709190610ccc565b60606000805461063d90610c75565b80601f016020809104026020016040519081016040528092919081815260200182805461066990610c75565b80156106b65780601f1061068b576101008083540402835291602001916106b6565b820191906000526020600020905b81548152906001019060200180831161069957829003601f168201915b5050505050905090565b6040805160208101839052015b604051602081830303815290604052600090816102959190610d34565b60008080546106f890610c75565b159050610575576000805461070c90610c75565b80601f016020809104026020016040519081016040528092919081815260200182805461073890610c75565b80156107855780601f1061075a57610100808354040283529160200191610785565b820191906000526020600020905b81548152906001019060200180831161076857829003601f168201915b50505050508060200190518101906105709190610df4565b60006107a76106ea565b92915050565b60008080546107bb90610c75565b15905061057557600080546107cf90610c75565b80601f01602080910402602001604051908101604052809291908181526020018280546107fb90610c75565b80156108485780601f1061081d57610100808354040283529160200191610848565b820191906000526020600020905b81548152906001019060200180831161082b57829003601f168201915b50505050508060200190518101906105709190610e16565b6104bb600080610890565b604080516001600160a01b0383166020820152016106cd565b60006102958282610d34565b50805461089c90610c75565b6000825580601f106108ac575050565b601f0160209004906000526020600020908101906108ca91906108cd565b50565b5b808211156108e257600081556001016108ce565b5090565b6001600160a01b03811681146108ca57600080fd5b60006020828403121561090d57600080fd5b8135610918816108e6565b9392505050565b80516006811061093f57634e487b7160e01b600052602160045260246000fd5b825260208181015163ffffffff9081169184019190915260409182015116910152565b606081016107a7828461091f565b60006020828403121561098257600080fd5b5035919050565b6001600160a01b038316815260808101610918602083018461091f565b600080604083850312156109b957600080fd5b82356109c4816108e6565b946020939093013593505050565b63ffffffff811681146108ca57600080fd5b6000806000606084860312156109f957600080fd5b8335610a04816109d2565b95602085013595506040909401359392505050565b600060208083528351808285015260005b81811015610a4657858101830151858201604001528201610a2a565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060408385031215610a7a57600080fd5b8235610a85816109d2565b91506020830135610a95816109d2565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610ac757600080fd5b813567ffffffffffffffff80821115610ae257610ae2610aa0565b604051601f8301601f19908116603f01168101908282118183101715610b0a57610b0a610aa0565b81604052838152866020858801011115610b2357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a08688031215610b5b57600080fd5b8535610b66816109d2565b9450602086013593506040860135610b7d816109d2565b925060608601359150608086013567ffffffffffffffff811115610ba057600080fd5b610bac88828901610ab6565b9150509295509295909350565b600080600060608486031215610bce57600080fd5b8335610bd9816109d2565b92506020840135610be9816109d2565b9150604084013567ffffffffffffffff811115610c0557600080fd5b610c1186828701610ab6565b9150509250925092565b600060208284031215610c2d57600080fd5b813567ffffffffffffffff811115610c4457600080fd5b610c5084828501610ab6565b949350505050565b600060208284031215610c6a57600080fd5b8135610918816109d2565b600181811c90821680610c8957607f821691505b602082108103610ca957634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610cc157600080fd5b8151610918816108e6565b600060208284031215610cde57600080fd5b5051919050565b601f821115610d2f57600081815260208120601f850160051c81016020861015610d0c5750805b601f850160051c820191505b81811015610d2b57828155600101610d18565b5050505b505050565b815167ffffffffffffffff811115610d4e57610d4e610aa0565b610d6281610d5c8454610c75565b84610ce5565b602080601f831160018114610d975760008415610d7f5750858301515b600019600386901b1c1916600185901b178555610d2b565b600085815260208120601f198616915b82811015610dc657888601518255948401946001909101908401610da7565b5085821015610de45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610e0657600080fd5b8151801515811461091857600080fd5b600060208284031215610e2857600080fd5b8151610918816109d256fea264697066735822122069da08c1914eddbdaf0ea96343f0c3c21a47b7eeb7833c84e1353ef718057ea164736f6c634300081100336101406040523480156200001257600080fd5b5060405162002783380380620027838339810160408190526200003591620000b9565b60408051808201909152600580825264302e302e3360d81b6020830152608052848484838381620000668162000120565b60a0525063ffffffff1660c052506001600160a01b0391821660e052811661010052929092166101205250620001489350505050565b80516001600160a01b0381168114620000b457600080fd5b919050565b60008060008060808587031215620000d057600080fd5b845163ffffffff81168114620000e557600080fd5b9350620000f5602086016200009c565b925062000105604086016200009c565b915062000115606086016200009c565b905092959194509250565b8051602080830151919081101562000142576000198160200360031b1b821691505b50919050565b60805160a05160c05160e0516101005161012051612597620001ec6000396000818161026e01528181610d9c01526116f2015260006104d501526000818161031c0152818161055c015281816107af01528181610994015281816109f601528181610c540152610cf101526000818161039401528181610b0c01528181611009015281816110da015261148d0152600061022a0152600061020701526125976000f3fe6080604052600436106101355760003560e01c8063873661bd116100ab578063a9dcf22d1161006f578063a9dcf22d14610429578063b4596b4b14610459578063c0b56f7c14610479578063f24379421461048e578063f2fde38b146104a3578063fb0e722b146104c357600080fd5b8063873661bd146103535780638d3638f4146103825780638da5cb5b146103cb578063a1c702a7146103e9578063a2155c341461040957600080fd5b80635d62a8dd116100fd5780635d62a8dd1461025c57806360fc8466146102a857806361169218146102d5578063715018a6146102f55780637622f78d1461030a5780638129fc1c1461033e57600080fd5b806328f3fac91461013a5780632de5aaf7146101705780634e04e7a71461019e5780634fc6ad85146101c057806354fd4d50146101ee575b600080fd5b34801561014657600080fd5b5061015a610155366004611cf1565b6104f7565b6040516101679190611d67565b60405180910390f35b34801561017c57600080fd5b5061019061018b366004611d75565b610523565b604051610167929190611d8e565b3480156101aa57600080fd5b506101be6101b9366004611dab565b610551565b005b3480156101cc57600080fd5b506101e06101db366004611de9565b610634565b604051908152602001610167565b3480156101fa57600080fd5b50604080518082019091527f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201525b6040516101679190611e6e565b34801561026857600080fd5b506102907f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610167565b3480156102b457600080fd5b506102c86102c3366004611e81565b610653565b6040516101679190611ef5565b3480156102e157600080fd5b506101be6102f0366004611f6b565b6107a4565b34801561030157600080fd5b506101be610837565b34801561031657600080fd5b506102907f000000000000000000000000000000000000000000000000000000000000000081565b34801561034a57600080fd5b506101be610898565b610366610361366004612046565b610915565b6040805163ffffffff9093168352602083019190915201610167565b34801561038e57600080fd5b506103b67f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610167565b3480156103d757600080fd5b506033546001600160a01b0316610290565b3480156103f557600080fd5b506103666104043660046120bb565b610986565b34801561041557600080fd5b506101be610424366004611f6b565b6109eb565b34801561043557600080fd5b5061044961044436600461211c565b610a6e565b6040519015158152602001610167565b34801561046557600080fd5b5061024f610474366004612150565b610a85565b34801561048557600080fd5b5061024f610b31565b34801561049a57600080fd5b5060ea546101e0565b3480156104af57600080fd5b506101be6104be366004611cf1565b610b50565b3480156104cf57600080fd5b506102907f000000000000000000000000000000000000000000000000000000000000000081565b604080516060810182526000808252602082018190529181019190915261051d82610c18565b92915050565b6040805160608101825260008082526020820181905291810182905261054883610cbf565b91509150915091565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461059a57604051637bcb136360e11b815260040160405180910390fd5b804710156105bb57604051635b6b73eb60e11b815260040160405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610608576040519150601f19603f3d011682016040523d82523d6000602084013e61060d565b606091505b505090508061062f57604051630db2c7f160e31b815260040160405180910390fd5b505050565b6000610649610644858585610d64565b610e0a565b90505b9392505050565b606081806001600160401b0381111561066e5761066e611fa4565b6040519080825280602002602001820160405280156106b457816020015b60408051808201909152600081526060602082015281526020019060019003908161068c5790505b5091503660005b8281101561079b578585828181106106d5576106d561216d565b90506020028101906106e79190612183565b915060008482815181106106fd576106fd61216d565b60200260200101519050306001600160a01b031683806020019061072191906121a3565b60405161072f9291906121f0565b600060405180830381855af49150503d806000811461076a576040519150601f19603f3d011682016040523d82523d6000602084013e61076f565b606091505b5060208301521515808252833517610792576309ad446560e31b60005260046000fd5b506001016106bb565b50505092915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107ed57604051637bcb136360e11b815260040160405180910390fd5b63ffffffff8281166000908152609760205260409020805460ff191660021790558116156108335763ffffffff81166000908152609760205260409020805460ff191690555b5050565b6033546001600160a01b031633146108965760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b565b60006108a46001610e76565b905080156108bc576000805461ff0019166101001790555b6108c4610efe565b6108cc610f2d565b8015610912576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6000806108008351111561093c57604051635cba618160e11b815260040160405180910390fd5b60006109543461094e8a888851610d64565b90610f4c565b905084600061096683338b858a610fbf565b90506109758a89600084610ff4565b945094505050509550959350505050565b600080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109d257604051637bcb136360e11b815260040160405180910390fd5b6109df8585600186610ff4565b91509150935093915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a3457604051637bcb136360e11b815260040160405180910390fd5b63ffffffff9182166000908152609760205260408082208054600160ff199182168117909255939094168252902080549091169091179055565b600080610a7a836110c3565b905061064c816110d6565b60606000610a9d60c963ffffffff808616906111ed16565b905061064c60ea8463ffffffff1681548110610abb57610abb61216d565b600091825260209182902060408051606081018252919092015464ffffffffff808216835265010000000000820416938201939093526001600160601b03600160501b9093049290921690820152827f00000000000000000000000000000000000000000000000000000000000000008661123c565b6060610b4b6001610b4160ea5490565b6104749190612216565b905090565b6033546001600160a01b03163314610baa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161088d565b6001600160a01b038116610c0f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161088d565b610912816112cd565b60408051606081018252600080825260208201819052918101919091526040516328f3fac960e01b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000016906328f3fac990602401606060405180830381865afa158015610c9b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d91906122ae565b60408051606081018252600080825260208201819052918101829052604051632de5aaf760e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632de5aaf790602401608060405180830381865afa158015610d40573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054891906122ca565b6040516372010a9360e01b815263ffffffff841660048201526024810183905260448101829052600090610649906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906372010a9390606401602060405180830381865afa158015610de3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e079190612300565b90565b6000816001600160401b0316610e208360401c90565b6001600160401b0316610e338460801c90565b6001600160401b0316610e468560c01c90565b6001600160401b0316610e599190612319565b610e639190612319565b610e6d9190612319565b60201b92915050565b60008054610100900460ff1615610ebd578160ff166001148015610e995750303b155b610eb55760405162461bcd60e51b815260040161088d9061232c565b506000919050565b60005460ff808416911610610ee45760405162461bcd60e51b815260040161088d9061232c565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff16610f255760405162461bcd60e51b815260040161088d9061237a565b61089661131f565b6000610f3960c961134f565b905061091281610f47611382565b6113c0565b600080610f5884610e0a565b905080831015610f7b5760405163429726c160e01b815260040160405180910390fd5b80830360201c6001600160401b03856001600160401b031682011115610fb457604051631b438b3360e01b815260040160405180910390fd5b939093019392505050565b60608585858585604051602001610fda9594939291906123c5565b604051602081830303815290604052905095945050505050565b60008061100060ea5490565b915060006110467f000000000000000000000000000000000000000000000000000000000000000084898989600181111561103d5761103d611d0e565b939291906114cc565b90506000611054828661152c565b905061106761106282611558565b61156b565b925061107283611612565b8763ffffffff168463ffffffff16847fcb1f6736605c149e8d69fd9f5393ff113515c28fa5848a3dc26dbde76dd16e87846040516110b09190611e6e565b60405180910390a4505094509492505050565b600061051d6110d18361162d565b611648565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661110883611674565b63ffffffff161461112c57604051630fbac77560e21b815260040160405180910390fd5b600061113783611686565b60ea5490915063ffffffff8216106111525750600092915050565b61116660c963ffffffff808416906111ed16565b61116f84611695565b1461117d5750600092915050565b61064c8360ea8363ffffffff168154811061119a5761119a61216d565b600091825260209182902060408051606081018252919092015464ffffffffff808216835265010000000000820416938201939093526001600160601b03600160501b90930492909216908201526116a3565b6020820154600090821061121457604051638397c2ad60e01b815260040160405180910390fd5b8260200182815481106112295761122961216d565b9060005260206000200154905092915050565b60606112c4848484886000015189602001518a6040015160408051602081019790975260e095861b6001600160e01b0319908116888301529490951b909316604486015260d891821b6001600160d81b03199081166048870152911b16604d84015260a01b6001600160a01b03191660528301528051603e818403018152605e909201905290565b95945050505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166113465760405162461bcd60e51b815260040161088d9061237a565b610896336112cd565b6020810154600090156113645761136461240d565b60209182018054600181018255600091825292902090910181905590565b6040805160608101825260009181019190915264ffffffffff4381168252421660208201526113af6116eb565b6001600160601b0316604082015290565b60006113cb60ea5490565b60ea805460018101825560009190915283517f61c831beab28d67d1bb40b5ae1a11e2757fa842f031a2d0bc94a7867bc5d26c29091018054602086015160408701516001600160601b0316600160501b026bffffffffffffffffffffffff60501b1964ffffffffff928316650100000000000269ffffffffffffffffffff199094169290951691909117919091179290921691909117905590507fc82fd59396134ccdeb4ce594571af6fe8f87d1df40fb6aaf1463ee06d610d0cb6114b283857f00000000000000000000000000000000000000000000000000000000000000008561123c565b6040516114bf9190611e6e565b60405180910390a1505050565b600063ffffffff821667ffffffff00000000602085901b166bffffffff0000000000000000604087901b1663ffffffff60601b606089901b1660808a600181111561151957611519611d0e565b60ff16901b171717179695505050505050565b60608282604051602001611541929190612423565b604051602081830303815290604052905092915050565b600061051d6115668361162d565b61174e565b60008061157783611776565b9050600061158d826001600160881b031661178c565b600181111561159e5761159e611d0e565b036115dd5761064c6115bf826001600160881b031660009081526020902090565b6115d86115d36115ce876117b5565b6117c1565b6117e9565b61180f565b61064c6115f9826001600160881b031660009081526020902090565b6115d861160d611608876117b5565b61185b565b611883565b600061161f60c983611893565b905061083381610f47611382565b80516000906020830161164081836118d3565b949350505050565b60006116538261191d565b61167057604051631ae8107160e21b815260040160405180910390fd5b5090565b600061051d60206004845b919061193c565b600061051d602460048461167f565b600061051d8282602061195d565b805160009064ffffffffff166116b8846119f2565b64ffffffffff1614801561064c5750816020015164ffffffffff166116dc84611a01565b64ffffffffff16149392505050565b6000610b4b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166334926b296040518163ffffffff1660e01b8152600401602060405180830381865afa158015610de3573d6000803e3d6000fd5b600061175982611a10565b6116705760405163d082b2a960e01b815260040160405180910390fd5b600061051d6117878260118561167f565b611ab2565b60006117a1826001600160881b031660801c90565b60ff16600181111561051d5761051d611d0e565b60008161064c81611add565b60006117cc82611af4565b611670576040516335c196ef60e01b815260040160405180910390fd5b600061051d6118066117fa84611b20565b60009081526020902090565b6115d884611b31565b60008215801561181d575081155b1561182a5750600061051d565b604080516020810185905290810183905260600160405160208183030381529060405280519060200120905061051d565b600061186682611b41565b611670576040516313a8c6c560e31b815260040160405180910390fd5b600061051d82611b74565b611b74565b60208201546000906118a6848285611b96565b6118b08482611c35565b602094850180546001810182556000918252959020909401849055509192915050565b6000806118e08385612319565b90506040518111156118f0575060005b806000036119115760405163085f79c360e11b815260040160405180910390fd5b608084901b8317611640565b600061192b600c6032612319565b6001600160801b0383161492915050565b60008061194a85858561195d565b602084900360031b1c9150509392505050565b60008160000361196f5750600061064c565b60208211156119915760405163063af09560e31b815260040160405180910390fd5b6001600160801b0384166119a58385612319565b11156119c45760405163a3b99ded60e01b815260040160405180910390fd5b600382901b60006119d58660801c90565b90940151600160ff1b600019929092019190911d16949350505050565b600061051d602860058461167f565b600061051d602d60058461167f565b60006001600160801b038216611a27601183612319565b811015611a375750600092915050565b6000611a4284611c8a565b9050600160ff608083901c161115611a5e575060009392505050565b6000611a7a611a6c83611ab2565b6001600160881b031661178c565b6001811115611a8b57611a8b611d0e565b03611aa157611640611a9c85611add565b611af4565b611640611aad85611add565b611b41565b6000600160ff608084901c16111561167057604051632c75dfdf60e11b815260040160405180910390fd5b600061051d611aed601183612319565b8390611c98565b60006018611b0460206040612319565b611b0e9190612319565b6001600160801b038316101592915050565b600061051d610e078260208561167f565b600061051d61188e836020611c98565b60006001600160801b0382166004811015611b5f5750600092915050565b61064c611b6d60048361245e565b601f161590565b600080611b818360801c90565b6001600160801b039390931690922092915050565b6001611ba460206002612555565b611bae919061245e565b821115611bce576040516377ae67b360e11b815260040160405180910390fd5b60005b6020811015611c2c5782600116600103611c005781848260208110611bf857611bf861216d565b015550505050565b611c1d848260208110611c1557611c1561216d565b01548361180f565b600193841c9390925001611bd1565b5061062f61240d565b6000805b6020811015611c835782600116600103611c6957611c62848260208110611c1557611c1561216d565b9150611c77565b611c7482600061180f565b91505b600192831c9201611c39565b5092915050565b600061051d8282601161193c565b60006001600160801b03831680831115611cc55760405163a3b99ded60e01b815260040160405180910390fd5b61164083611cd38660801c90565b018483036118d3565b6001600160a01b038116811461091257600080fd5b600060208284031215611d0357600080fd5b813561064c81611cdc565b634e487b7160e01b600052602160045260246000fd5b805160068110611d4457634e487b7160e01b600052602160045260246000fd5b825260208181015163ffffffff9081169184019190915260409182015116910152565b6060810161051d8284611d24565b600060208284031215611d8757600080fd5b5035919050565b6001600160a01b03831681526080810161064c6020830184611d24565b60008060408385031215611dbe57600080fd5b8235611dc981611cdc565b946020939093013593505050565b63ffffffff8116811461091257600080fd5b600080600060608486031215611dfe57600080fd5b8335611e0981611dd7565b95602085013595506040909401359392505050565b60005b83811015611e39578181015183820152602001611e21565b50506000910152565b60008151808452611e5a816020860160208601611e1e565b601f01601f19169290920160200192915050565b60208152600061064c6020830184611e42565b60008060208385031215611e9457600080fd5b82356001600160401b0380821115611eab57600080fd5b818501915085601f830112611ebf57600080fd5b813581811115611ece57600080fd5b8660208260051b8501011115611ee357600080fd5b60209290920196919550909350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611f5d57888303603f190185528151805115158452870151878401879052611f4a87850182611e42565b9588019593505090860190600101611f1c565b509098975050505050505050565b60008060408385031215611f7e57600080fd5b8235611f8981611dd7565b91506020830135611f9981611dd7565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611fcb57600080fd5b81356001600160401b0380821115611fe557611fe5611fa4565b604051601f8301601f19908116603f0116810190828211818310171561200d5761200d611fa4565b8160405283815286602085880101111561202657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561205e57600080fd5b853561206981611dd7565b945060208601359350604086013561208081611dd7565b92506060860135915060808601356001600160401b038111156120a257600080fd5b6120ae88828901611fba565b9150509295509295909350565b6000806000606084860312156120d057600080fd5b83356120db81611dd7565b925060208401356120eb81611dd7565b915060408401356001600160401b0381111561210657600080fd5b61211286828701611fba565b9150509250925092565b60006020828403121561212e57600080fd5b81356001600160401b0381111561214457600080fd5b61164084828501611fba565b60006020828403121561216257600080fd5b813561064c81611dd7565b634e487b7160e01b600052603260045260246000fd5b60008235603e1983360301811261219957600080fd5b9190910192915050565b6000808335601e198436030181126121ba57600080fd5b8301803591506001600160401b038211156121d457600080fd5b6020019150368190038213156121e957600080fd5b9250929050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b63ffffffff828116828216039080821115611c8357611c83612200565b60006060828403121561224557600080fd5b604051606081018181106001600160401b038211171561226757612267611fa4565b806040525080915082516006811061227e57600080fd5b8152602083015161228e81611dd7565b602082015260408301516122a181611dd7565b6040919091015292915050565b6000606082840312156122c057600080fd5b61064c8383612233565b600080608083850312156122dd57600080fd5b82516122e881611cdc565b91506122f78460208501612233565b90509250929050565b60006020828403121561231257600080fd5b5051919050565b8082018082111561051d5761051d612200565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8581528460208201528360408201526001600160401b03198360401b166060820152600082516123fc816078850160208701611e1e565b919091016078019695505050505050565b634e487b7160e01b600052600160045260246000fd5b6effffffffffffffffffffffffffffff198360781b16815260008251612450816011850160208701611e1e565b919091016011019392505050565b8181038181111561051d5761051d612200565b600181815b808511156124ac57816000190482111561249257612492612200565b8085161561249f57918102915b93841c9390800290612476565b509250929050565b6000826124c35750600161051d565b816124d05750600061051d565b81600181146124e657600281146124f05761250c565b600191505061051d565b60ff84111561250157612501612200565b50506001821b61051d565b5060208310610133831016604e8410600b841016171561252f575081810a61051d565b6125398383612471565b806000190482111561254d5761254d612200565b029392505050565b600061064c83836124b456fea2646970667358221220d2e740b026ba694dd80093d94321ca69bea3c2b5d13fcf137ac7087d332f09fa64736f6c63430008110033608060405234801561001057600080fd5b50610f68806100206000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c8063611692181161010f578063b81442e0116100a2578063e2f006f711610071578063e2f006f71461042e578063e60f5f6a14610441578063f05b335114610454578063fb0e722b146103ad57600080fd5b8063b81442e0146103d8578063c897f01d146101ea578063d0dd0675146103e0578063daa74a9e1461041a57600080fd5b8063a2155c34116100de578063a2155c3414610388578063a554d1e3146103bc578063b26406a0146101ea578063b78973d4146103d057600080fd5b80636116921814610388578063714141de1461039a5780637622f78d146103ad57806376fae198146103b457600080fd5b80633cf7b120116101875780634f127567116101565780634f12756714610343578063504730ab1461036b57806355252dd1146102f35780635980330d1461037357600080fd5b80633cf7b120146102f357806340989152146103045780634289cf75146103235780634a4a26a2146101ea57600080fd5b80632de5aaf7116101c35780632de5aaf71461025557806332ff14d21461029257806339fe2736146102a95780633c6cf473146102d257600080fd5b806306454f74146101ea57806328f3fac9146101ec57806329be4db214610231575b600080fd5b005b61021b6101fa3660046108ab565b50604080516060810182526000808252602082018190529181019190915290565b604051610228919061091a565b60405180910390f35b61024761023f366004610928565b606080915091565b604051610228929190610987565b610284610263366004610928565b60408051606081018252600080825260208201819052918101829052915091565b6040516102289291906109b5565b6101ea6102a0366004610ad5565b50505050505050565b6102c26102b7366004610b9f565b600095945050505050565b6040519015158152602001610228565b6102e66102e0366004610928565b50600090565b6040516102289190610cb4565b60005b604051908152602001610228565b6040805160008082526020820181905291810191909152606001610228565b61032b610469565b6040516001600160a01b039091168152602001610228565b610356610351366004610928565b610521565b60405163ffffffff9091168152602001610228565b6102f6610531565b61037b6105e4565b6040516102289190610cce565b6101ea610396366004610ce1565b5050565b6101ea6103a8366004610928565b610676565b600061032b565b6102c26106a0565b604080516000808252602082015201610228565b610356610753565b6101ea610806565b6103f66103ee366004610d1a565b600080915091565b604080516bffffffffffffffffffffffff9093168352602083019190915201610228565b61037b610428366004610928565b50606090565b6102c261043c366004610d37565b610811565b6101ea61044f3660046108ab565b61081b565b6101ea610462366004610d37565b610834565b565b600080805461047790610d74565b1590506102e0576000805461048b90610d74565b80601f01602080910402602001604051908101604052809291908181526020018280546104b790610d74565b80156105045780601f106104d957610100808354040283529160200191610504565b820191906000526020600020905b8154815290600101906020018083116104e757829003601f168201915b505050505080602001905181019061051c9190610dae565b905090565b600061052b610753565b92915050565b600080805461053f90610d74565b1590506102e0576000805461055390610d74565b80601f016020809104026020016040519081016040528092919081815260200182805461057f90610d74565b80156105cc5780601f106105a1576101008083540402835291602001916105cc565b820191906000526020600020905b8154815290600101906020018083116105af57829003601f168201915b505050505080602001905181019061051c9190610dcb565b6060600080546105f390610d74565b80601f016020809104026020016040519081016040528092919081815260200182805461061f90610d74565b801561066c5780601f106106415761010080835404028352916020019161066c565b820191906000526020600020905b81548152906001019060200180831161064f57829003601f168201915b5050505050905090565b6040805160208101839052015b604051602081830303815290604052600090816103969190610e33565b60008080546106ae90610d74565b1590506102e057600080546106c290610d74565b80601f01602080910402602001604051908101604052809291908181526020018280546106ee90610d74565b801561073b5780601f106107105761010080835404028352916020019161073b565b820191906000526020600020905b81548152906001019060200180831161071e57829003601f168201915b505050505080602001905181019061051c9190610ef3565b600080805461076190610d74565b1590506102e0576000805461077590610d74565b80601f01602080910402602001604051908101604052809291908181526020018280546107a190610d74565b80156107ee5780601f106107c3576101008083540402835291602001916107ee565b820191906000526020600020905b8154815290600101906020018083116107d157829003601f168201915b505050505080602001905181019061051c9190610f15565b610467600080610840565b600061052b6106a0565b604080516001600160a01b038316602082015201610683565b60006103968282610e33565b50805461084c90610d74565b6000825580601f1061085c575050565b601f01602090049060005260206000209081019061087a919061087d565b50565b5b80821115610892576000815560010161087e565b5090565b6001600160a01b038116811461087a57600080fd5b6000602082840312156108bd57600080fd5b81356108c881610896565b9392505050565b634e487b7160e01b600052602160045260246000fd5b8051600681106108f7576108f76108cf565b825260208181015163ffffffff9081169184019190915260409182015116910152565b6060810161052b82846108e5565b60006020828403121561093a57600080fd5b5035919050565b6000815180845260005b818110156109675760208185018101518683018201520161094b565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061099a6040830185610941565b82810360208401526109ac8185610941565b95945050505050565b6001600160a01b0383168152608081016108c860208301846108e5565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610a1157610a116109d2565b604052919050565b600082601f830112610a2a57600080fd5b813567ffffffffffffffff811115610a4457610a446109d2565b610a57601f8201601f19166020016109e8565b818152846020838601011115610a6c57600080fd5b816020850160208301376000918101602001919091529392505050565b60008083601f840112610a9b57600080fd5b50813567ffffffffffffffff811115610ab357600080fd5b6020830191508360208260051b8501011115610ace57600080fd5b9250929050565b600080600080600080600060a0888a031215610af057600080fd5b873567ffffffffffffffff80821115610b0857600080fd5b610b148b838c01610a19565b985060208a0135915080821115610b2a57600080fd5b610b368b838c01610a89565b909850965060408a0135915080821115610b4f57600080fd5b610b5b8b838c01610a89565b909650945060608a0135935060808a013591508082168214610b7c57600080fd5b508091505092959891949750929550565b63ffffffff8116811461087a57600080fd5b600080600080600060a08688031215610bb757600080fd5b8535610bc281610b8d565b94506020868101359450604087013567ffffffffffffffff80821115610be757600080fd5b610bf38a838b01610a19565b9550606089013594506080890135915080821115610c1057600080fd5b818901915089601f830112610c2457600080fd5b813581811115610c3657610c366109d2565b8060051b9150610c478483016109e8565b818152918301840191848101908c841115610c6157600080fd5b938501935b83851015610ca157843592506fffffffffffffffffffffffffffffffff83168314610c915760008081fd5b8282529385019390850190610c66565b8096505050505050509295509295909350565b6020810160038310610cc857610cc86108cf565b91905290565b6020815260006108c86020830184610941565b60008060408385031215610cf457600080fd5b8235610cff81610b8d565b91506020830135610d0f81610b8d565b809150509250929050565b600060208284031215610d2c57600080fd5b81356108c881610b8d565b600060208284031215610d4957600080fd5b813567ffffffffffffffff811115610d6057600080fd5b610d6c84828501610a19565b949350505050565b600181811c90821680610d8857607f821691505b602082108103610da857634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610dc057600080fd5b81516108c881610896565b600060208284031215610ddd57600080fd5b5051919050565b601f821115610e2e57600081815260208120601f850160051c81016020861015610e0b5750805b601f850160051c820191505b81811015610e2a57828155600101610e17565b5050505b505050565b815167ffffffffffffffff811115610e4d57610e4d6109d2565b610e6181610e5b8454610d74565b84610de4565b602080601f831160018114610e965760008415610e7e5750858301515b600019600386901b1c1916600185901b178555610e2a565b600085815260208120601f198616915b82811015610ec557888601518255948401946001909101908401610ea6565b5085821015610ee35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610f0557600080fd5b815180151581146108c857600080fd5b600060208284031215610f2757600080fd5b81516108c881610b8d56fea2646970667358221220cef98e77e57d75001bdd0588b6600d6905379f2fb0c6dc82d8cbb96711da921664736f6c634300081100336101206040523480156200001257600080fd5b5060405162003e7438038062003e748339810160408190526200003591620000b0565b60408051808201909152600580825264302e302e3360d81b6020830152608052838383838381620000668162000104565b60a0525063ffffffff1660c052506001600160a01b0391821660e0521661010052506200012c9350505050565b80516001600160a01b0381168114620000ab57600080fd5b919050565b600080600060608486031215620000c657600080fd5b835163ffffffff81168114620000db57600080fd5b9250620000eb6020850162000093565b9150620000fb6040850162000093565b90509250925092565b8051602080830151919081101562000126576000198160200360031b1b821691505b50919050565b60805160a05160c05160e05161010051613c696200020b600039600081816104b6015281816106d501528181610c060152611d9601526000818161038f01528181610e420152818161102301528181611186015281816112620152818161131a015281816114510152818161170b015281816117a80152611ccd0152600081816103ce0152818161068c0152818161080f01528181610e0b0152818161113d015281816112e301528181611d4f015281816120bc015281816121a20152818161247b015261252401526000610315015260006102f20152613c696000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806361169218116100de578063a2155c3411610097578063daa74a9e11610071578063daa74a9e14610478578063e2f006f71461048b578063f2fde38b1461049e578063fb0e722b146104b157600080fd5b8063a2155c3414610414578063a554d1e314610427578063d0dd06751461044657600080fd5b8063611692181461036f578063715018a6146103825780637622f78d1461038a5780638d3638f4146103c95780638da5cb5b146103f05780639498bd711461040157600080fd5b80633cf7b120116101305780633cf7b1201461023b578063409891521461024d5780634f127567146102a457806354fd4d50146102e657806355252dd11461034757806360fc84661461034f57600080fd5b806328f3fac91461017857806329be4db2146101a15780632de5aaf7146101c257806332ff14d2146101e357806339fe2736146101f85780633c6cf4731461021b575b600080fd5b61018b6101863660046132ef565b6104d8565b6040516101989190613357565b60405180910390f35b6101b46101af366004613365565b610504565b6040516101989291906133ce565b6101d56101d0366004613365565b610757565b6040516101989291906133f3565b6101f66101f136600461351e565b610785565b005b61020b6102063660046135e7565b610bf9565b6040519015158152602001610198565b61022e610229366004613365565b610d67565b60405161019891906136f2565b60fd545b604051908152602001610198565b61012e5461027a9064ffffffffff80821691600160281b810490911690600160501b900463ffffffff1683565b6040805164ffffffffff948516815293909216602084015263ffffffff1690820152606001610198565b6102d16102b2366004613365565b600090815260fe6020526040902054600160201b900463ffffffff1690565b60405163ffffffff9091168152602001610198565b604080518082019091527f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201525b604051610198919061370c565b61023f610e07565b61036261035d36600461371f565b610ec7565b6040516101989190613760565b6101f661037d3660046137d6565b611018565b6101f66110ab565b6103b17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610198565b6102d17f000000000000000000000000000000000000000000000000000000000000000081565b6033546001600160a01b03166103b1565b6101f661040f366004613365565b611107565b6101f66104223660046137d6565b611257565b61042f6112da565b604080519215158352901515602083015201610198565b61045961045436600461380f565b6114c3565b604080516001600160601b039093168352602083019190915201610198565b61033a610486366004613365565b61155f565b61020b61049936600461382c565b6115f1565b6101f66104ac3660046132ef565b611604565b6103b17f000000000000000000000000000000000000000000000000000000000000000081565b60408051606081018252600080825260208201819052918101919091526104fe826116cf565b92915050565b60fd546060908190831061052b57604051631390f2a160e01b815260040160405180910390fd5b600060fd848154811061054057610540613860565b600091825260208083209091015480835260fe82526040808420815160e081018352815463ffffffff8082168352600160201b820481169683019690965264ffffffffff600160401b8204811694830194909452600160681b810484166060830152600160901b81049095166080820152600160b01b90940490911660a08401526001015460c083015261012f805491945091929190879081106105e6576105e6613860565b90600052602060002090600202016040518060400160405290816000820154815260200160018201548152505090506106888382602001518460200151856040015186606001516040805160208101969096528581019490945260e09290921b6001600160e01b031916606085015260d890811b6001600160d81b0319908116606486015291901b1660698301528051604e818403018152606e909201905290565b94507f000000000000000000000000000000000000000000000000000000000000000063ffffffff166103851461074f5760c0820151604051636ef7fd3360e11b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ddeffa6690602401600060405180830381865afa158015610724573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261074c9190810190613876565b93505b505050915091565b6040805160608101825260008082526020820181905291810182905261077c83611776565b91509150915091565b600260c954036107dc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260c95560006107ec8861181b565b905060006107f98261182e565b9050600061080683611847565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016602083901c6cffffffffffffffffffffffffff1663ffffffff1614610867576040516353a9611960e11b815260040160405180910390fd5b600081815260fb60209081526040918290208251608081018452905463ffffffff8082168352600160201b82041692820192909252600160401b820460ff1692810192909252600160481b90046001600160a01b031660608201819052156108e257604051630dc1019760e01b815260040160405180910390fd5b60006108f384848d8d8d8d8d6118e9565b905060008160a0015164ffffffffff164261090e91906138f9565b905063ffffffff851681101561093757604051630bcae51d60e31b815260040160405180910390fd5b6000808061094d886001600160881b0316611ab4565b600181111561095e5761095e61330c565b036109975760006109766109718a611add565b611ae9565b905061098488858c84611b15565b915061098f81611c5c565b9250506109ad565b6109aa87846109a58b611add565b611c6d565b90505b845163ffffffff16600003610a9b5763ffffffff606088901c81168652608085015116602086015260ff8a16604086015280156109ef57336060860152610a0e565b600086815260fc6020526040902080546001600160a01b031916331790555b600086815260fb602090815260409182902087518154928901519389015160608a01516001600160a01b0316600160481b02600160481b600160e81b031960ff909216600160401b0291909116600160401b600160e81b031963ffffffff968716600160201b0267ffffffffffffffff199096169690931695909517939093171692909217179055610b4d565b80610ab95760405163589a41b760e01b815260040160405180910390fd5b3360608601908152600087815260fb602090815260409182902088518154928a0151938a015194516001600160a01b0316600160481b02600160481b600160e81b031960ff909616600160401b0295909516600160401b600160e81b031963ffffffff958616600160201b0267ffffffffffffffff1990951695909216949094179290921791909116919091179190911790555b6040518115158152869063ffffffff60608a901c16907f39c48fd1b2185b07007abc7904a8cdf782cfe449fd0e9bba1c2223a691e15f0b9060200160405180910390a3610ba584600001518560200151888589611d4b565b610be35760408051878152602081018490527f22bd0cccf7173839e6f30c797b419921d48a23b0732d0b120c600a49247d3016910160405180910390a15b5050600160c95550505050505050505050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c445760405163dbc2fa8560e01b815260040160405180910390fd5b610c4d86611e3c565b15610c6b57604051636893014360e01b815260040160405180910390fd5b600080610c766112da565b915091508115610c8b57600092505050610d5e565b6000610c9687611e71565b9050610ca3818a8a611e84565b61012f6040518060400160405280888152602001610cc08461204b565b9052815460018181018455600093845260209384902083516002909302019182559290910151910155610cf482878b61205c565b805161012e8054602084015160409094015163ffffffff16600160501b0263ffffffff60501b1964ffffffffff958616600160281b0269ffffffffffffffffffff1990931695909416949094171791909116919091179055610d56858a612161565b600193505050505b95945050505050565b600081815260fb602090815260408083208151608081018352905463ffffffff8082168352600160201b82041693820193909352600160401b830460ff1691810191909152600160481b9091046001600160a01b03166060820181905215610dd25750600292915050565b600083815260fc60205260409020546001600160a01b031615610df85750600192915050565b50600092915050565b50919050565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661038514610e40575061012d5490565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166336cba43c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec2919061390c565b905090565b606081806001600160401b03811115610ee257610ee2613410565b604051908082528060200260200182016040528015610f2857816020015b604080518082019091526000815260606020820152815260200190600190039081610f005790505b5091503660005b8281101561100f57858582818110610f4957610f49613860565b9050602002810190610f5b9190613925565b91506000848281518110610f7157610f71613860565b60200260200101519050306001600160a01b0316838060200190610f959190613945565b604051610fa392919061398b565b600060405180830381855af49150503d8060008114610fde576040519150601f19603f3d011682016040523d82523d6000602084013e610fe3565b606091505b5060208301521515808252833517611006576309ad446560e31b60005260046000fd5b50600101610f2f565b50505092915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461106157604051637bcb136360e11b815260040160405180910390fd5b63ffffffff8281166000908152609760205260409020805460ff191660021790558116156110a75763ffffffff81166000908152609760205260409020805460ff191690555b5050565b6033546001600160a01b031633146111055760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107d3565b565b600061111360016122f9565b9050801561112b576000805461ff0019166101001790555b611133612381565b61113b6123b0565b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff166103851461120e5761012d829055604051632c3340bb60e11b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635866817690602401600060405180830381600087803b1580156111d257600080fd5b505af11580156111e6573d6000803e3d6000fd5b505061012e805469ffffffffff00000000001916600160281b4264ffffffffff160217905550505b80156110a7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146112a057604051637bcb136360e11b815260040160405180910390fd5b63ffffffff9182166000908152609760205260408082208054600160ff199182168117909255939094168252902080549091169091179055565b600080610384197f000000000000000000000000000000000000000000000000000000000000000063ffffffff16016113165750600091829150565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166336cba43c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611376573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139a919061390c565b61012d549091508082036113b45750600093849350915050565b6040805160608101825261012e5464ffffffffff8082168352600160281b8204166020830152600160501b900463ffffffff16918101829052906113f790611e3c565b1561140b57505061012d5550600091829150565b6020810151429061142090620151809061399b565b64ffffffffff16111561143b57506000946001945092505050565b604051632c3340bb60e11b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635866817690602401600060405180830381600087803b15801561149d57600080fd5b505af11580156114b1573d6000803e3d6000fd5b50600198600098509650505050505050565b63ffffffff818116600090815261013060209081526040808320815160608101835290546001600160601b0381168252600160601b810490951692810192909252600160801b90930464ffffffffff1692810183905290918291901580159061153657506115348160200151611e3c565b155b1561155957805160408201519093506115569064ffffffffff16426138f9565b91505b50915091565b600081815260fb602090815260408083208151608081018352905463ffffffff808216808452600160201b830490911694830194909452600160401b810460ff1692820192909252600160481b9091046001600160a01b031660608083019190915292909190036115e0575050604080516020810190915260008152919050565b6115ea83826123df565b9392505050565b60006104fe6115ff8361250d565b612520565b6033546001600160a01b0316331461165e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107d3565b6001600160a01b0381166116c35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107d3565b6116cc816127a2565b50565b60408051606081018252600080825260208201819052918101919091526040516328f3fac960e01b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000016906328f3fac990602401606060405180830381865afa158015611752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fe9190613a3b565b60408051606081018252600080825260208201819052918101829052604051632de5aaf760e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632de5aaf790602401608060405180830381865afa1580156117f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077c9190613a57565b60006104fe611829836127f4565b612807565b60006104fe611842826011855b919061282f565b612850565b6000806118538361182e565b90506000611869826001600160881b0316611ab4565b600181111561187a5761187a61330c565b036118b4576115ea61189b826001600160881b031660009081526020902090565b6118af6118aa61097187611add565b61287b565b6128a1565b6115ea6118d0826001600160881b031660009081526020902090565b6118af6118e46118df87611add565b6128ed565b612915565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091526000611986600160408b901c68ffffffffffffffffff166119439190613a8d565b63ffffffff168989898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525060209250612925915050565b905060006119d58260608c901c64ffffffffff168888808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508a92506129aa915050565b600081815260fe60209081526040808320815160e081018352815463ffffffff8082168352600160201b820481169583019590955264ffffffffff600160401b8204811694830194909452600160681b810484166060830152600160901b81049094166080820152600160b01b90930490911660a0830181905260019091015460c083015290955091925003611a7e576040516312a37cf560e11b815260040160405180910390fd5b8251611a8990611e3c565b15611aa757604051636893014360e01b815260040160405180910390fd5b5050979650505050505050565b6000611ac9826001600160881b031660801c90565b60ff1660018111156104fe576104fe61330c565b6000816115ea816129ed565b6000611af482612a04565b611b11576040516335c196ef60e01b815260040160405180910390fd5b5090565b600080611b2183612a30565b90506001600160401b03602082901c81169085161015611b54576040516376a1e1d360e11b815260040160405180910390fd5b6000611b65611b6285612a4c565b90565b9050846001600160401b03165a11611b905760405163aa6c898560e01b815260040160405180910390fd5b6001600160a01b03811663032f287e6001600160401b03871660608a901c64ffffffffff1660408b901c68ffffffffffffffffff16611bce8961204b565b8b6001600160c01b038916611bea611be58d612a5b565b612a7e565b6040518863ffffffff1660e01b8152600401611c0b96959493929190613aaa565b600060405180830381600088803b158015611c2557600080fd5b5087f193505050508015611c37575060015b611c4657600092505050611c54565b600192505050611c54565b50505b949350505050565b60006104fe611b628260208561183b565b600080611c79836128ed565b90506000611cbc606087901c64ffffffffff166040805163ffffffff9092166020830152810187905260600160408051601f198184030181529190528390612ab4565b90506000611cf36001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683612bb1565b905080516020141580611d205750611d0a83612bf3565b6001600160e01b031916611d1d82613ae7565b14155b15611d3e57604051631f16844360e31b815260040160405180910390fd5b5060019695505050505050565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661038514611d8457506000610d5e565b82600003611d9457506000610d5e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636b47b3bc878786611dd089886123df565b6040518563ffffffff1660e01b8152600401611def9493929190613b0b565b6020604051808303816000875af1158015611e0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e329190613b3a565b9695505050505050565b60008063ffffffff831660009081526097602052604090205460ff166002811115611e6957611e6961330c565b141592915050565b60006104fe611e7f836127f4565b612c02565b6000611e8f84612c2a565b600081815260fe6020526040902054909150600160b01b900464ffffffffff1615611ecd5760405163a789712960e01b815260040160405180910390fd5b6040518060e001604052808463ffffffff168152602001611eed86612c38565b63ffffffff168152602001611f0186612c47565b64ffffffffff168152602001611f1686612c56565b64ffffffffff908116825260fd805463ffffffff908116602080860191909152428416604080870191909152606095860198909852600087815260fe825288812087518154938901519a8901519789015160808a015160a08b01518916600160b01b0264ffffffffff60b01b19918816600160901b029190911668ffffffffffffffffff60901b19928a16600160681b0264ffffffffff60681b199b909a16600160401b029a909a1671ffffffffffffffffffff0000000000000000199d8816600160201b0267ffffffffffffffff199097169390971692909217949094179a909a169390931794909417169390931795909517825560c090920151600191820155835490810184559290527f9346ac6dd7de6b96975fec380d4d994c4c12e6a8897544f22915316cc6cca280909101555050565b60006104fe602080845b9190612c65565b6040805160608101825260008082526020820181905291810191909152506040805160608101825261012e54600160281b810464ffffffffff908116602084015263ffffffff600160501b909204821693830193909352429092168152907f000000000000000000000000000000000000000000000000000000000000000016610385148015906120eb575083155b80156120fa57508261012d5414155b156115ea5764ffffffffff4216602082015263ffffffff821660408083019190915261012d849055517fc8ba82607c756c8ae67c7e47c27ade0b0718d492495044a1f8619663f26ebaa3906121529085815260200190565b60405180910390a19392505050565b815160005b818110156122f357600084828151811061218257612182613860565b60200260200101519050600061219e826001600160801b031690565b90507f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff16036121da5750506122e1565b63ffffffff81811660009081526101306020908152604091829020825160608101845290546001600160601b03808216808452600160601b830490961683850152600160801b90910464ffffffffff1693820193909352929085901c90911690810361224957505050506122e1565b604080516060810182526001600160601b03928316815263ffffffff89811660208084019182524264ffffffffff9081168587019081529884166000908152610130909252949020925183549151975195166fffffffffffffffffffffffffffffffff1990911617600160601b96909116959095029490941764ffffffffff60801b1916600160801b92909116919091021790915550505b806122eb81613b5c565b915050612166565b50505050565b60008054610100900460ff1615612340578160ff16600114801561231c5750303b155b6123385760405162461bcd60e51b81526004016107d390613b75565b506000919050565b60005460ff8084169116106123675760405162461bcd60e51b81526004016107d390613b75565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff166123a85760405162461bcd60e51b81526004016107d390613bc3565b611105612cfa565b600054610100900460ff166123d75760405162461bcd60e51b81526004016107d390613bc3565b611105612d2a565b600082815260fc60205260409020546060906001600160a01b031680612406575060608201515b600060fd846020015163ffffffff168154811061242557612425613860565b600091825260208083209091015480835260fe90915260408220549092506124529063ffffffff16611776565b5085516040808801516060808a0151835160e095861b6001600160e01b031990811660208301527f000000000000000000000000000000000000000000000000000000000000000090961b9095166024860152602885018c90526048850188905260f89290921b6001600160f81b031916606885015284811b6bffffffffffffffffffffffff19908116606986015288821b8116607d86015291901b1660918301528051608581840301815260a59092019052909150611e32565b60006104fe61251b836127f4565b612d58565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661255283612d80565b63ffffffff1614612576576040516353a9611960e11b815260040160405180910390fd5b600061258183612d8e565b600081815260fb602090815260408083208151608081018352905463ffffffff808216808452600160201b830490911694830194909452600160401b810460ff1692820192909252600160481b9091046001600160a01b0316606082015292935090036125f2575060009392505050565b805163ffffffff1661260385612d9d565b63ffffffff161415806126285750806040015160ff1661262285612dab565b60ff1614155b15612637575060009392505050565b600061264285612dba565b600081815260fe6020526040812054919250906126649063ffffffff16611776565b50905060fd836020015163ffffffff168154811061268457612684613860565b9060005260206000200154821415806126b75750806001600160a01b03166126ab87612dc9565b6001600160a01b031614155b156126c85750600095945050505050565b600084815260fc60205260409020546001600160a01b03168061273a5783606001516001600160a01b03166126fc88612dd8565b6001600160a01b031614801561272f575083606001516001600160a01b031661272488612de5565b6001600160a01b0316145b979650505050505050565b600061274588612de5565b9050816001600160a01b031661275a89612dd8565b6001600160a01b031614801561279657506001600160a01b0381161580612796575084606001516001600160a01b0316816001600160a01b0316145b98975050505050505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b805160009060208301611c548183612df2565b600061281282612e3c565b611b115760405163d082b2a960e01b815260040160405180910390fd5b60008061283d858585612c65565b602084900360031b1c9150509392505050565b6000600160ff608084901c161115611b1157604051632c75dfdf60e11b815260040160405180910390fd5b60006104fe61289861288c84611c5c565b60009081526020902090565b6118af84612ede565b6000821580156128af575081155b156128bc575060006104fe565b60408051602081018590529081018390526060016040516020818303038152906040528051906020012090506104fe565b60006128f882612eee565b611b11576040516313a8c6c560e31b815260040160405180910390fd5b60006104fe82612f21565b612f21565b81516000908281111561294b5760405163c5360feb60e01b815260040160405180910390fd5b84915060005b818110156129885761297e8386838151811061296f5761296f613860565b60200260200101518984612f43565b9250600101612951565b50805b83811015611c51576129a08360008984612f43565b925060010161298b565b6000600182901b604081106129d257604051631390f2a160e01b815260040160405180910390fd5b60006129de8787612f6c565b905061272f8282876006612925565b60006104fe6129fd601183613c0e565b8390612fb5565b60006018612a1460206040613c0e565b612a1e9190613c0e565b6001600160801b038316101592915050565b60006104fe611b62612a4460206040613c0e565b60188561183b565b60006104fe6040602084612055565b60006104fe6018612a6e60206040613c0e565b6129fd9190613c0e565b90612fb5565b60405180612a8f8360208301612ff9565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b6060612ac28251601f161590565b612adf57604051631a93d3a360e31b815260040160405180910390fd5b6040805160038082526080820190925260009160208201606080368337019050509050612b39612b0e85612bf3565b6040516001600160e01b031990911660208201526024016040516020818303038152906040526127f4565b81600081518110612b4c57612b4c613860565b602002602001018181525050612b61836127f4565b81600181518110612b7457612b74613860565b602002602001018181525050612b8984613067565b81600281518110612b9c57612b9c613860565b602002602001018181525050611c5481613075565b60606115ea83836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c656400008152506130aa565b6000816115ea81836004612c65565b6000612c0d826130b9565b611b1157604051633ae4998b60e21b815260040160405180910390fd5b60006104fe81602084612055565b60006104fe604060048461183b565b60006104fe604460058461183b565b60006104fe604960058461183b565b600081600003612c77575060006115ea565b6020821115612c995760405163063af09560e31b815260040160405180910390fd5b6001600160801b038416612cad8385613c0e565b1115612ccc5760405163a3b99ded60e01b815260040160405180910390fd5b600382901b6000612cdd8660801c90565b90940151600160ff1b600019929092019190911d16949350505050565b600054610100900460ff16612d215760405162461bcd60e51b81526004016107d390613bc3565b611105336127a2565b600054610100900460ff16612d515760405162461bcd60e51b81526004016107d390613bc3565b600160c955565b6000612d63826130cf565b611b1157604051631dad384f60e21b815260040160405180910390fd5b60006104fe6004808461183b565b60006104fe6008602084612055565b60006104fe8160048461183b565b60006104fe604860018461183b565b60006104fe6028602084612055565b60006104fe6049835b906130e2565b60006104fe605d83612dd2565b60006104fe607183612dd2565b600080612dff8385613c0e565b9050604051811115612e0f575060005b80600003612e305760405163085f79c360e11b815260040160405180910390fd5b608084901b8317611c54565b60006001600160801b038216612e53601183613c0e565b811015612e635750600092915050565b6000612e6e846130f0565b9050600160ff608083901c161115612e8a575060009392505050565b6000612ea6612e9883612850565b6001600160881b0316611ab4565b6001811115612eb757612eb761330c565b03612ecd57611c54612ec8856129ed565b612a04565b611c54612ed9856129ed565b612eee565b60006104fe612920602084612a78565b60006001600160801b0382166004811015612f0c5750600092915050565b6115ea612f1a6004836138f9565b601f161590565b600080612f2e8360801c90565b6001600160801b039390931690922092915050565b6000600183831c168103612f6257612f5b85856128a1565b9050611c54565b612f5b84866128a1565b60008282604051602001612f9792919091825260e01b6001600160e01b031916602082015260240190565b60405160208183030381529060405280519060200120905092915050565b60006001600160801b03831680831115612fe25760405163a3b99ded60e01b815260040160405180910390fd5b611c5483612ff08660801c90565b01848303612df2565b6040516000906001600160801b03841690608085901c9080851015613031576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa90508061305b57604051637c7d772f60e01b815260040160405180910390fd5b608086901b841761272f565b6000816115ea816004612fb5565b60405180600061308884602084016130fe565b6001600160801b0316601f8101601f1916830160200160405290915250919050565b6060611c548484600085613180565b6000604e6001600160801b0383165b1492915050565b600060856001600160801b0383166130c8565b60006115ea8383601461282f565b60006104fe8282601161282f565b60405160009080831015613125576040516312ca856360e21b815260040160405180910390fd5b6000805b855181101561317357600086828151811061314657613146613860565b6020026020010151905061315c81848801612ff9565b506001600160801b03169190910190600101613129565b50608084901b8117610d5e565b6060824710156131e15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016107d3565b6001600160a01b0385163b6132385760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107d3565b600080866001600160a01b031685876040516132549190613c21565b60006040518083038185875af1925050503d8060008114613291576040519150601f19603f3d011682016040523d82523d6000602084013e613296565b606091505b509150915061272f828286606083156132b05750816115ea565b8251156132c05782518084602001fd5b8160405162461bcd60e51b81526004016107d3919061370c565b6001600160a01b03811681146116cc57600080fd5b60006020828403121561330157600080fd5b81356115ea816132da565b634e487b7160e01b600052602160045260246000fd5b8051600681106133345761333461330c565b825260208181015163ffffffff9081169184019190915260409182015116910152565b606081016104fe8284613322565b60006020828403121561337757600080fd5b5035919050565b60005b83811015613399578181015183820152602001613381565b50506000910152565b600081518084526133ba81602086016020860161337e565b601f01601f19169290920160200192915050565b6040815260006133e160408301856133a2565b8281036020840152610d5e81856133a2565b6001600160a01b0383168152608081016115ea6020830184613322565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561344e5761344e613410565b604052919050565b60006001600160401b0382111561346f5761346f613410565b50601f01601f191660200190565b600082601f83011261348e57600080fd5b81356134a161349c82613456565b613426565b8181528460208386010111156134b657600080fd5b816020850160208301376000918101602001919091529392505050565b60008083601f8401126134e557600080fd5b5081356001600160401b038111156134fc57600080fd5b6020830191508360208260051b850101111561351757600080fd5b9250929050565b600080600080600080600060a0888a03121561353957600080fd5b87356001600160401b038082111561355057600080fd5b61355c8b838c0161347d565b985060208a013591508082111561357257600080fd5b61357e8b838c016134d3565b909850965060408a013591508082111561359757600080fd5b6135a38b838c016134d3565b909650945060608a0135935060808a0135915080821682146135c457600080fd5b508091505092959891949750929550565b63ffffffff811681146116cc57600080fd5b600080600080600060a086880312156135ff57600080fd5b853561360a816135d5565b9450602086810135945060408701356001600160401b038082111561362e57600080fd5b61363a8a838b0161347d565b955060608901359450608089013591508082111561365757600080fd5b818901915089601f83011261366b57600080fd5b81358181111561367d5761367d613410565b8060051b915061368e848301613426565b818152918301840191848101908c8411156136a857600080fd5b938501935b838510156136df57843592506001600160801b03831683146136cf5760008081fd5b82825293850193908501906136ad565b8096505050505050509295509295909350565b60208101600383106137065761370661330c565b91905290565b6020815260006115ea60208301846133a2565b6000806020838503121561373257600080fd5b82356001600160401b0381111561374857600080fd5b613754858286016134d3565b90969095509350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156137c857888303603f1901855281518051151584528701518784018790526137b5878501826133a2565b9588019593505090860190600101613787565b509098975050505050505050565b600080604083850312156137e957600080fd5b82356137f4816135d5565b91506020830135613804816135d5565b809150509250929050565b60006020828403121561382157600080fd5b81356115ea816135d5565b60006020828403121561383e57600080fd5b81356001600160401b0381111561385457600080fd5b611c548482850161347d565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561388857600080fd5b81516001600160401b0381111561389e57600080fd5b8201601f810184136138af57600080fd5b80516138bd61349c82613456565b8181528560208385010111156138d257600080fd5b610d5e82602083016020860161337e565b634e487b7160e01b600052601160045260246000fd5b818103818111156104fe576104fe6138e3565b60006020828403121561391e57600080fd5b5051919050565b60008235603e1983360301811261393b57600080fd5b9190910192915050565b6000808335601e1984360301811261395c57600080fd5b8301803591506001600160401b0382111561397657600080fd5b60200191503681900382131561351757600080fd5b8183823760009101908152919050565b64ffffffffff8181168382160190808211156139b9576139b96138e3565b5092915050565b6000606082840312156139d257600080fd5b604051606081018181106001600160401b03821117156139f4576139f4613410565b8060405250809150825160068110613a0b57600080fd5b81526020830151613a1b816135d5565b60208201526040830151613a2e816135d5565b6040919091015292915050565b600060608284031215613a4d57600080fd5b6115ea83836139c0565b60008060808385031215613a6a57600080fd5b8251613a75816132da565b9150613a8484602085016139c0565b90509250929050565b63ffffffff8281168282160390808211156139b9576139b96138e3565b600063ffffffff8089168352808816602084015286604084015285606084015280851660808401525060c060a083015261279660c08301846133a2565b80516020808301519190811015610e015760001960209190910360031b1b16919050565b600063ffffffff808716835280861660208401525083604083015260806060830152611e3260808301846133a2565b600060208284031215613b4c57600080fd5b815180151581146115ea57600080fd5b600060018201613b6e57613b6e6138e3565b5060010190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b808201808211156104fe576104fe6138e3565b6000825161393b81846020870161337e56fea2646970667358221220fac975a8459888f884f2af33422d8136ab0f240b8961da4f9ea0a6ac6ea421eb64736f6c63430008110033608060405234801561001057600080fd5b50610fd8806100206000396000f3fe608060405234801561001057600080fd5b50600436106102105760003560e01c806376fae19811610125578063c79a431b116100ad578063e60f5f6a1161007c578063e60f5f6a1461049c578063e8c12f80146104af578063f05b3351146104bd578063f52307191461047a578063fb0e722b146103dc57600080fd5b8063c79a431b14610460578063cace200f14610389578063caecc6db1461047a578063d17db53a1461048857600080fd5b8063a5ba1a55116100f4578063a5ba1a5514610426578063b26406a014610389578063b78973d41461042d578063b81442e01461044a578063bf1aae261461045257600080fd5b806376fae198146103e35780639cc1bb31146103eb578063a2155c34146103a9578063a23d9bae146103fe57600080fd5b806347ca1b14116101a85780635980330d116101775780635980330d146103a157806361169218146103a95780636170e4e6146103bb578063714141de146103c95780637622f78d146103dc57600080fd5b806347ca1b14146103495780634a4a26a2146103895780634c4e8ce414610389578063504730ab1461038b57600080fd5b806328f3fac9116101e457806328f3fac91461029d5780632de5aaf7146102d95780634289cf75146103165780634362fd111461033657600080fd5b8062f340541461021557806302eef8dc146102435780630729ae8a14610267578063229b5b1e1461027a575b600080fd5b61022d6102233660046109b0565b6060949350505050565b60405161023a9190610a59565b60405180910390f35b610259610251366004610a73565b606080915091565b60405161023a929190610ab0565b60005b604051901515815260200161023a565b610290610288366004610ade565b606092915050565b60405161023a9190610b0a565b6102cc6102ab366004610b63565b50604080516060810182526000808252602082018190529181019190915290565b60405161023a9190610bc3565b6103086102e7366004610bd1565b60408051606081018252600080825260208201819052918101829052915091565b60405161023a929190610bea565b61031e6104d0565b6040516001600160a01b03909116815260200161023a565b61026a610344366004610a73565b61058e565b610360610357366004610c07565b50600091829150565b604080516fffffffffffffffffffffffffffffffff93841681529290911660208301520161023a565b005b6103936105a0565b60405190815260200161023a565b61022d610653565b6103896103b7366004610c40565b5050565b6103896103b7366004610ade565b6103896103d7366004610bd1565b6106e5565b600061031e565b61026a61070f565b6103896103f9366004610c5e565b505050565b61041761040c366004610cb7565b506060906000908290565b60405161023a93929190610cd4565b6000610393565b6104356107c2565b60405163ffffffff909116815260200161023a565b610389610875565b61041761040c366004610b63565b61026a61046e366004610d30565b60009695505050505050565b610259610251366004610bd1565b61022d610496366004610cb7565b50606090565b6103896104aa366004610b63565b610880565b61022d610288366004610db7565b6103896104cb366004610a73565b610899565b60008080546104de90610de5565b15905061058857600080546104f290610de5565b80601f016020809104026020016040519081016040528092919081815260200182805461051e90610de5565b801561056b5780601f106105405761010080835404028352916020019161056b565b820191906000526020600020905b81548152906001019060200180831161054e57829003601f168201915b50505050508060200190518101906105839190610e1f565b905090565b50600090565b600061059861070f565b92915050565b565b60008080546105ae90610de5565b15905061058857600080546105c290610de5565b80601f01602080910402602001604051908101604052809291908181526020018280546105ee90610de5565b801561063b5780601f106106105761010080835404028352916020019161063b565b820191906000526020600020905b81548152906001019060200180831161061e57829003601f168201915b50505050508060200190518101906105839190610e3c565b60606000805461066290610de5565b80601f016020809104026020016040519081016040528092919081815260200182805461068e90610de5565b80156106db5780601f106106b0576101008083540402835291602001916106db565b820191906000526020600020905b8154815290600101906020018083116106be57829003601f168201915b5050505050905090565b6040805160208101839052015b604051602081830303815290604052600090816103b79190610ea3565b600080805461071d90610de5565b159050610588576000805461073190610de5565b80601f016020809104026020016040519081016040528092919081815260200182805461075d90610de5565b80156107aa5780601f1061077f576101008083540402835291602001916107aa565b820191906000526020600020905b81548152906001019060200180831161078d57829003601f168201915b50505050508060200190518101906105839190610f63565b60008080546107d090610de5565b15905061058857600080546107e490610de5565b80601f016020809104026020016040519081016040528092919081815260200182805461081090610de5565b801561085d5780601f106108325761010080835404028352916020019161085d565b820191906000526020600020905b81548152906001019060200180831161084057829003601f168201915b50505050508060200190518101906105839190610f85565b61059e6000806108a5565b604080516001600160a01b0383166020820152016106f2565b60006103b78282610ea3565b5080546108b190610de5565b6000825580601f106108c1575050565b601f0160209004906000526020600020908101906108df91906108e2565b50565b5b808211156108f757600081556001016108e3565b5090565b63ffffffff811681146108df57600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261093457600080fd5b813567ffffffffffffffff8082111561094f5761094f61090d565b604051601f8301601f19908116603f011681019082821181831017156109775761097761090d565b8160405283815286602085880101111561099057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080608085870312156109c657600080fd5b84356109d1816108fb565b93506020850135925060408501359150606085013567ffffffffffffffff8111156109fb57600080fd5b610a0787828801610923565b91505092959194509250565b6000815180845260005b81811015610a3957602081850181015186830182015201610a1d565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610a6c6020830184610a13565b9392505050565b600060208284031215610a8557600080fd5b813567ffffffffffffffff811115610a9c57600080fd5b610aa884828501610923565b949350505050565b604081526000610ac36040830185610a13565b8281036020840152610ad58185610a13565b95945050505050565b60008060408385031215610af157600080fd5b8235610afc816108fb565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b81811015610b4257835183529284019291840191600101610b26565b50909695505050505050565b6001600160a01b03811681146108df57600080fd5b600060208284031215610b7557600080fd5b8135610a6c81610b4e565b805160068110610ba057634e487b7160e01b600052602160045260246000fd5b825260208181015163ffffffff9081169184019190915260409182015116910152565b606081016105988284610b80565b600060208284031215610be357600080fd5b5035919050565b6001600160a01b038316815260808101610a6c6020830184610b80565b60008060408385031215610c1a57600080fd5b8235610c2581610b4e565b91506020830135610c35816108fb565b809150509250929050565b60008060408385031215610c5357600080fd5b8235610c25816108fb565b600080600060608486031215610c7357600080fd5b8335610c7e816108fb565b925060208401359150604084013567ffffffffffffffff811115610ca157600080fd5b610cad86828701610923565b9150509250925092565b600060208284031215610cc957600080fd5b8135610a6c816108fb565b606081526000610ce76060830186610a13565b6020838101869052838203604085015284518083528582019282019060005b81811015610d2257845183529383019391830191600101610d06565b509098975050505050505050565b60008060008060008060c08789031215610d4957600080fd5b8635610d54816108fb565b95506020870135610d64816108fb565b9450604087013593506060870135610d7b816108fb565b92506080870135915060a087013567ffffffffffffffff811115610d9e57600080fd5b610daa89828a01610923565b9150509295509295509295565b60008060408385031215610dca57600080fd5b8235610dd5816108fb565b91506020830135610c3581610b4e565b600181811c90821680610df957607f821691505b602082108103610e1957634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610e3157600080fd5b8151610a6c81610b4e565b600060208284031215610e4e57600080fd5b5051919050565b601f8211156103f957600081815260208120601f850160051c81016020861015610e7c5750805b601f850160051c820191505b81811015610e9b57828155600101610e88565b505050505050565b815167ffffffffffffffff811115610ebd57610ebd61090d565b610ed181610ecb8454610de5565b84610e55565b602080601f831160018114610f065760008415610eee5750858301515b600019600386901b1c1916600185901b178555610e9b565b600085815260208120601f198616915b82811015610f3557888601518255948401946001909101908401610f16565b5085821015610f535787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610f7557600080fd5b81518015158114610a6c57600080fd5b600060208284031215610f9757600080fd5b8151610a6c816108fb56fea264697066735822122074cd0eb7f40f7d421eec7968c37e1dce1ff8607f36beb94deb2a491622cf892464736f6c634300081100336101206040523480156200001257600080fd5b5060405162004ed638038062004ed68339810160408190526200003591620000da565b60408051808201909152600580825264302e302e3360d81b602083015260805283838383838162000066816200012e565b60a0525063ffffffff90811660c0526001600160a01b0393841660e05291909216610100528616610385149250620000b491505057604051632b3a807f60e01b815260040160405180910390fd5b50505062000156565b80516001600160a01b0381168114620000d557600080fd5b919050565b600080600060608486031215620000f057600080fd5b835163ffffffff811681146200010557600080fd5b92506200011560208501620000bd565b91506200012560408501620000bd565b90509250925092565b8051602080830151919081101562000150576000198160200360031b1b821691505b50919050565b60805160a05160c05160e05161010051614cf5620001e16000396000818161052d0152818161055c015281816110ff0152818161144e0152611bae0152600081816103b601528181610e0d01528181610fad0152818161116001528181611536015281816120ea0152612187015260006103fd01526000610338015260006103150152614cf56000f3fe608060405234801561001057600080fd5b50600436106101ce5760003560e01c80638129fc1c11610104578063bf1aae26116100a2578063e8c12f8011610071578063e8c12f80146104ef578063f2fde38b14610502578063f523071914610515578063fb0e722b1461052857600080fd5b8063bf1aae26146104a3578063c79a431b146104b6578063caecc6db146104c9578063d17db53a146104dc57600080fd5b80639cc1bb31116100de5780639cc1bb3114610445578063a2155c3414610458578063a23d9bae1461046b578063a5ba1a551461048d57600080fd5b80638129fc1c146103f05780638d3638f4146103f85780638da5cb5b1461043457600080fd5b806347ca1b1411610171578063611692181161014b57806361169218146103815780636170e4e614610396578063715018a6146103a95780637622f78d146103b157600080fd5b806347ca1b14146102a957806354fd4d501461030957806360fc84661461036157600080fd5b8063229b5b1e116101ad578063229b5b1e1461023557806328f3fac9146102555780632de5aaf7146102755780634362fd111461029657600080fd5b8062f34054146101d357806302eef8dc146101fc5780630729ae8a1461021d575b600080fd5b6101e66101e136600461435d565b61054f565b6040516101f3919061440f565b60405180910390f35b61020f61020a366004614422565b6105de565b6040516101f3929190614456565b6102256106c2565b60405190151581526020016101f3565b61024861024336600461447b565b61095c565b6040516101f391906144a7565b610268610263366004614500565b610c3f565b6040516101f39190614576565b610288610283366004614584565b610c65565b6040516101f392919061459d565b6102256102a4366004614422565b610c93565b6102e96102b73660046145ba565b6101006020908152600092835260408084209091529082529020546001600160801b0380821691600160801b90041682565b604080516001600160801b039384168152929091166020830152016101f3565b604080518082019091527f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201526101e6565b61037461036f3660046145f3565b610cb1565b6040516101f39190614667565b61039461038f3660046146dd565b610e02565b005b6103946103a436600461447b565b610e95565b610394611016565b6103d87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101f3565b610394611077565b61041f7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101f3565b6033546001600160a01b03166103d8565b6103946104533660046146fb565b6110f4565b6103946104663660046146dd565b611155565b61047e610479366004614753565b6111d8565b6040516101f393929190614770565b610495611336565b6040519081526020016101f3565b61047e6104b1366004614500565b611356565b6102256104c43660046147be565b611441565b61020f6104d7366004614584565b6114d6565b6101e66104ea366004614753565b611513565b6101e66104fd366004614844565b611643565b610394610510366004614500565b61168f565b61020f610523366004614584565b611757565b6103d87f000000000000000000000000000000000000000000000000000000000000000081565b6060336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461059a5760405163dbc2fa8560e01b815260040160405180910390fd5b6105a3856117a2565b156105c157604051636893014360e01b815260040160405180910390fd5b6105d56105cd836117d7565b8487876117ea565b95945050505050565b60608060006105ec846119f3565b90506105f781611a06565b6106145760405163d6ab3b2160e01b815260040160405180910390fd5b6106b860cb61062283611aa7565b63ffffffff168154811061063857610638614872565b9060005260206000209060020201604051806040016040529081600082018054806020026020016040519081016040528092919081815260200182805480156106a057602002820191906000526020600020905b81548152602001906001019080831161068c575b50505050508152602001600182015481525050611ab9565b9250925050915091565b60006106de60fe54600f81810b600160801b909204900b131590565b156106e95750600090565b60006106f560fe611c33565b600081815260fc6020526040808220815160a0810190925280549394509192909190829060ff16600281111561072d5761072d61451d565b600281111561073e5761073e61451d565b8152905460ff6101008204811615156020840152620100008204161515604083015263ffffffff6301000000820416606083015264ffffffffff600160381b90910481166080928301529082015191925061079e9162015180911661489e565b4210156107ae5760009250505090565b6107bc828260600151611c87565b156107ca5760019250505090565b600082815260fb6020908152604091829020825160e081018452815463ffffffff80821683526401000000008204811694830194909452600160401b810484169482019490945260ff600160601b8504166060820152600160681b9093049091166080830181905260018201546001600160a01b0390811660a085015260029092015490911660c0830152610860908490611c87565b1561086f576001935050505090565b61088482606001518260800151858486611cf8565b600060208084018290526001604080860182905286845260fc9092529120835181548593839160ff1916908360028111156108c1576108c161451d565b0217905550602082015181546040840151606085015160809095015164ffffffffff16600160381b0264ffffffffff60381b1963ffffffff909616630100000002959095166bffffffffffffffffff00000019911515620100000262ff000019941515610100029490941662ffff00199093169290921792909217919091161791909117905561095160fe611df4565b506001935050505090565b606063ffffffff83161580610979575060cb5463ffffffff841610155b156109975760405163dad9fe3360e01b815260040160405180910390fd5b600060cb8463ffffffff16815481106109b2576109b2614872565b906000526020600020906002020160405180604001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610a1a57602002820191906000526020600020905b815481526020019060010190808311610a06575b505050918352505060019190910154602090910152805151909150808410610a5557604051631390f2a160e01b815260040160405180910390fd5b6000610a628260026148b1565b6001600160401b03811115610a7957610a7961429a565b604051908082528060200260200182016040528015610aa2578160200160208202803683370190505b50905060005b82811015610c1e57600084600001518281518110610ac857610ac8614872565b6020026020010151905080600003610ae257610ae26148c8565b6000610ba5610ba060c9610af76001866148de565b81548110610b0757610b07614872565b60009182526020918290206040805161010081018252600390930290910180548352600181015463ffffffff8082169585019590955264010000000080820486169385019390935264ffffffffff600160401b820481166060860152600160681b82041660808501526001600160601b03600160901b9091041660a08401526002015480841660c08401520490911660e0820152611e6a565b611efe565b9050610bb081611f11565b85610bbc8660026148b1565b81518110610bcc57610bcc614872565b6020026020010186866002610be191906148b1565b610bec90600161489e565b81518110610bfc57610bfc614872565b60209081029190910101919091525250610c179050816148f1565b9050610aa8565b50610c3381610c2e8760026148b1565b611f40565b93505050505b92915050565b6040805160608101825260008082526020820181905291810191909152610c39826120ae565b60408051606081018252600080825260208201819052918101829052610c8a83612155565b91509150915091565b600080610c9f836119f3565b9050610caa81611a06565b9392505050565b606081806001600160401b03811115610ccc57610ccc61429a565b604051908082528060200260200182016040528015610d1257816020015b604080518082019091526000815260606020820152815260200190600190039081610cea5790505b5091503660005b82811015610df957858582818110610d3357610d33614872565b9050602002810190610d45919061490a565b91506000848281518110610d5b57610d5b614872565b60200260200101519050306001600160a01b0316838060200190610d7f919061492a565b604051610d8d929190614970565b600060405180830381855af49150503d8060008114610dc8576040519150601f19603f3d011682016040523d82523d6000602084013e610dcd565b606091505b5060208301521515808252833517610df0576309ad446560e31b60005260046000fd5b50600101610d19565b50505092915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610e4b57604051637bcb136360e11b815260040160405180910390fd5b63ffffffff8281166000908152609760205260409020805460ff19166002179055811615610e915763ffffffff81166000908152609760205260409020805460ff191690555b5050565b80600003610eb65760405163488f8cdd60e11b815260040160405180910390fd5b3360009081526101006020908152604080832063ffffffff861684528252918290208251808401909352546001600160801b038082168452600160801b90910416908201819052610f07908361489e565b81516001600160801b03161015610f31576040516331bf27dd60e01b815260040160405180910390fd5b8181602001516001600160801b0316610f4a919061489e565b3360008181526101006020908152604080832063ffffffff891680855292529182902080546001600160801b03958616600160801b029516949094179093555163cc87550160e01b815260048101919091526024810191909152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063cc87550190606401600060405180830381600087803b158015610ff957600080fd5b505af115801561100d573d6000803e3d6000fd5b50505050505050565b6033546001600160a01b031633146110755760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b565b600061108360016121fa565b9050801561109b576000805461ff0019166101001790555b6110a3612282565b6110ab6122b1565b80156110f1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461113d5760405163dbc2fa8560e01b815260040160405180910390fd5b611150611149826117d7565b848461243c565b505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461119e57604051637bcb136360e11b815260040160405180910390fd5b63ffffffff9182166000908152609760205260408082208054600160ff199182168117909255939094168252902080549091169091179055565b60606000606060cc805490508463ffffffff16106112095760405163dad9fe3360e01b815260040160405180910390fd5b600060cc8563ffffffff168154811061122457611224614872565b60009182526020918290206040805160a08101825260049093029091018054835260018101549383019390935260028301549082015260039091015464ffffffffff8082166060840152600160281b90910416608082015290506112888186612516565b93508060200151925061132d60cb8663ffffffff16815481106112ad576112ad614872565b90600052602060002090600202016040518060400160405290816000820180548060200260200160405190810160405280929190818152602001828054801561131557602002820191906000526020600020905b815481526020019060010190808311611301575b505050505081526020016001820154815250506125bf565b93959294505050565b600061135160fe54600f81810b600160801b909204900b0390565b905090565b606060006060600060cf600061136b876120ae565b60409081015163ffffffff908116835260208301939093520160002054169050801561143957600060cc8263ffffffff16815481106113ac576113ac614872565b60009182526020918290206040805160a08101825260049093029091018054835260018101549383019390935260028301549082015260039091015464ffffffffff8082166060840152600160281b90910416608082015290506114108183612516565b94508060200151935061143560cb8363ffffffff16815481106112ad576112ad614872565b9250505b509193909250565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461148c5760405163dbc2fa8560e01b815260040160405180910390fd5b611495876117a2565b156114b357604051636893014360e01b815260040160405180910390fd5b6114c96114bf8361271d565b8489898989612730565b90505b9695505050505050565b60ca54606090819083106114fd57604051631390f2a160e01b815260040160405180910390fd5b610c8a60ca848154811061063857610638614872565b6040516360e07a7b60e11b81526000600482018190526060916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c1c0f4f690602401600060405180830381865afa15801561157d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115a59190810190614980565b90506115af6141ed565b60005b825181101561161f5760006115ec866115e38685815181106115d6576115d6614872565b60200260200101516120ae565b60400151612bc6565b9050826040015163ffffffff16816040015163ffffffff16111561160e578092505b50611618816148f1565b90506115b2565b50604081015163ffffffff161561163c5761163981611e6a565b92505b5050919050565b60606000611654846115e3856120ae565b9050806040015163ffffffff1660000361167e575050604080516020810190915260008152610c39565b61168781611e6a565b949350505050565b6033546001600160a01b031633146116e95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161106c565b6001600160a01b03811661174e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161106c565b6110f181612cb1565b606080600061176784600161489e565b60cb54909150811061178c57604051631390f2a160e01b815260040160405180910390fd5b6106b860cb828154811061063857610638614872565b60008063ffffffff831660009081526097602052604090205460ff1660028111156117cf576117cf61451d565b141592915050565b6000610c396117e583612d03565b612d16565b606060006117f786612d42565b90506000816001600160401b038111156118135761181361429a565b60405190808252806020026020018201604052801561183c578160200160208202803683370190505b50905060005b828110156119da5760006118568983612d63565b9050600061186382612dc3565b90508060000361188657604051630508c93960e41b815260040160405180910390fd5b8084848151811061189957611899614872565b60200260200101818152505060006118b083612e0d565b90506118bc818a612bc6565b6040015163ffffffff166118cf84612e1c565b63ffffffff16116118f357604051633dbfe96160e11b815260040160405180910390fd5b60c96119006001846148de565b8154811061191057611910614872565b6000918252602082206002600390920201015463ffffffff640100000000909104169003611986578860c96119466001856148de565b8154811061195657611956614872565b906000526020600020906003020160020160046101000a81548163ffffffff021916908363ffffffff1602179055505b84848151811061199857611998614872565b60209081029190910181015163ffffffff928316600090815260ce83526040808220948d1682529390925291902055506119d39050816148f1565b9050611842565b506119e88782888888612e2b565b979650505050505050565b6000610c39611a0183612d03565b61305d565b600080611a1283611aa7565b60cc5490915063ffffffff821610611a2d5750600092915050565b610caa8360cc8363ffffffff1681548110611a4a57611a4a614872565b60009182526020918290206040805160a08101825260049093029091018054835260018101549383019390935260028301549082015260039091015464ffffffffff8082166060840152600160281b909104166080820152613085565b6000610c3960406004845b9190613124565b80515160609081906000816001600160401b03811115611adb57611adb61429a565b604051908082528060200260200182016040528015611b04578160200160208202803683370190505b50905060005b82811015611b8557600086600001518281518110611b2a57611b2a614872565b6020026020010151905080600003611b4457611b446148c8565b611b57610ba060c9610af76001856148de565b838381518110611b6957611b69614872565b602090810291909101015250611b7e816148f1565b9050611b0a565b50611b8f81613145565b6020860151604051636ef7fd3360e11b81529195506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163ddeffa6691611be59160040190815260200190565b600060405180830381865afa158015611c02573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c2a9190810190614a31565b92505050915091565b6000611c4e8254600f81810b600160801b909204900b131590565b15611c6c57604051631ed9509560e11b815260040160405180910390fd5b508054600f0b60009081526001909101602052604090205490565b63ffffffff811660009081526097602052604081205460ff166002816002811115611cb457611cb461451d565b03611ccb57611cc284613218565b60019150611cf1565b6001816002811115611cdf57611cdf61451d565b03611cf157611cec61328e565b600191505b5092915050565b600083815260fd60209081526040808320815160808101835290546001600160401b038082168352600160401b8204811694830194909452600160801b8104841682840152600160c01b900490921660608301528301519091901590600284516002811115611d6957611d6961451d565b1490508115611db857611d8e85604001518660600151876000015186600001516132a7565b611da187866000015185602001516132da565b611db88560a0015186600001518560400151613335565b611dcd88838388600001518760000151613410565b8015611dea57611dea8560c0015186600001518560600151613335565b5050505050505050565b6000611e0f8254600f81810b600160801b909204900b131590565b15611e2d57604051631ed9509560e11b815260040160405180910390fd5b508054600f0b6000818152600180840160205260408220805492905583546001600160801b03191692016001600160801b03169190911790915590565b6060610c39826000015183602001518460400151856060015186608001518760a0015160408051602081019790975260e095861b6001600160e01b0319908116888301529490951b909316604486015260d891821b6001600160d81b03199081166048870152911b16604d84015260a01b6001600160a01b03191660528301528051603e818403018152605e909201905290565b6000610c39611f0c83612d03565b613476565b60008082611f28611f2382602461349e565b6134ab565b9250611f38611f238260246134cd565b915050915091565b60606000611f6684518410611f5f57611f5a84600161489e565b613511565b8451613511565b9050806001600160401b03811115611f8057611f8061429a565b604051908082528060200260200182016040528015611fa9578160200160208202803683370190505b50845190925060005b82811015610df957818560011810611fcb576000611fe9565b858560011881518110611fe057611fe0614872565b60200260200101515b848281518110611ffb57611ffb614872565b60200260200101818152505060005b8281101561209b576000816001019050600088838151811061202e5761202e614872565b602002602001015190506000858310612048576000612063565b89838151811061205a5761205a614872565b60200260200101515b905061206f8282613530565b8a600186901c8151811061208557612085614872565b602090810291909101015250505060020161200a565b50600194851c94918201821c9101611fb2565b60408051606081018252600080825260208201819052918101919091526040516328f3fac960e01b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000016906328f3fac990602401606060405180830381865afa158015612131573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c399190614b19565b60408051606081018252600080825260208201819052918101829052604051632de5aaf760e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632de5aaf790602401608060405180830381865afa1580156121d6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8a9190614b35565b60008054610100900460ff1615612241578160ff16600114801561221d5750303b155b6122395760405162461bcd60e51b815260040161106c90614b6b565b506000919050565b60005460ff8084169116106122685760405162461bcd60e51b815260040161106c90614b6b565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff166122a95760405162461bcd60e51b815260040161106c90614bb9565b61107561357c565b60cc54156122c1576122c16148c8565b6040805160a0810182526000808252602080830182815283850183815264ffffffffff43811660608088019182524283166080890190815260cc805460018082018355918a5299517f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebe6004909b029a8b015595517f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebf8a015593517f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ec089015590517f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ec1909701805493518316600160281b0269ffffffffffffffffffff199094169790921696909617919091179055845180860184815294810190955292845283810182905260cb80549384018155909152825180517fa7ce836d032b2bf62b7e2097a8e0a6d8aeb35405ad15271e96d3b0188a1d06fb6002909402939093019261242d9284920190614231565b50602082015181600101555050565b600061244784612d42565b90506000816001600160401b038111156124635761246361429a565b60405190808252806020026020018201604052801561248c578160200160208202803683370190505b50905060005b82811015612504576124ad6124a78783612d63565b866135ac565b8282815181106124bf576124bf614872565b6020026020010181815250508181815181106124dd576124dd614872565b60200260200101516000036124f4576124f46148c8565b6124fd816148f1565b9050612492565b5061250f8184613815565b5050505050565b6060610caa836000015161255985602001518660400151604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b84866060015187608001516040805160208101969096528581019490945260e09290921b6001600160e01b031916606085015260d890811b6001600160d81b0319908116606486015291901b1660698301528051604e818403018152606e909201905290565b805151606090806001600160401b038111156125dd576125dd61429a565b604051908082528060200260200182016040528015612606578160200160208202803683370190505b50915060005b8181101561163c5760008460000151828151811061262c5761262c614872565b6020026020010151905080600003612646576126466148c8565b6126e660c96126566001846148de565b8154811061266657612666614872565b906000526020600020906003020160010160129054906101000a90046001600160601b031660c960018461269a91906148de565b815481106126aa576126aa614872565b600091825260209091206001600390920201015463ffffffff1663ffffffff1660209190911b6fffffffffffffffffffffffff00000000161790565b6001600160801b031684838151811061270157612701614872565b602090810291909101015250612716816148f1565b905061260c565b6000610c3961272b83612d03565b613886565b600061273b866138ae565b60000361274a575060006114cc565b60006127558861391a565b600081815260fc6020526040808220815160a0810190925280549394509192909190829060ff16600281111561278d5761278d61451d565b600281111561279e5761279e61451d565b81529054610100810460ff9081161515602080850191909152620100008304909116151560408401526301000000820463ffffffff166060840152600160381b90910464ffffffffff1660809092019190915281015190915015612807576000925050506114cc565b6000806128138b61392c565b6001600160a01b03161461282857600261282b565b60015b905080600281111561283f5761283f61451d565b825160028111156128525761285261451d565b1061286357600093505050506114cc565b6040518060e001604052806128778c61393b565b63ffffffff16815260200161288b8c613949565b63ffffffff1681526020018663ffffffff1681526020016128ab8c613957565b60ff1681526020018863ffffffff1681526020016128c88c613966565b6001600160a01b031681526020016128df8c61392c565b6001600160a01b03908116909152600085815260fb60209081526040918290208451815492860151868501516060880151608089015163ffffffff908116600160681b0263ffffffff60681b1960ff909316600160601b0260ff60601b19948316600160401b02949094166cffffffffff0000000000000000199583166401000000000267ffffffffffffffff199099169290961691909117969096179290921692909217919091171691909117815560a0808501516001830180549186166001600160a01b031992831617905560c090950151600292830180549190951695169490941790925580519283019052819083908111156129e1576129e161451d565b81526020016001151581526020018360400151151581526020018963ffffffff1681526020014264ffffffffff1681525060fc600085815260200190815260200160002060008201518160000160006101000a81548160ff02191690836002811115612a4f57612a4f61451d565b021790555060208201518154604080850151606086015160809687015164ffffffffff16600160381b0264ffffffffff60381b1963ffffffff909216630100000002919091166bffffffffffffffffff00000019921515620100000262ff000019961515610100029690961662ffff001990951694909417949094171691909117919091179091558051918201905280612ae98b60c01c90565b6001600160401b03168152602001612b018b60801c90565b6001600160401b03168152602001612b198b60401c90565b6001600160401b031681526020018a6001600160401b03908116909152600085815260fd60209081526040918290208451815492860151938601516060909601518516600160c01b026001600160c01b03968616600160801b02969096166001600160801b03948616600160401b026001600160801b03199094169190951617919091179190911691909117919091179055612bb660fe84613973565b5060019998505050505050505050565b612bce6141ed565b63ffffffff808416600090815260ce60209081526040808320938616835292905220548015611cf15760c9612c046001836148de565b81548110612c1457612c14614872565b60009182526020918290206040805161010081018252600390930290910180548352600181015463ffffffff8082169585019590955264010000000080820486169385019390935264ffffffffff600160401b820481166060860152600160681b82041660808501526001600160601b03600160901b9091041660a08401526002015480841660c08401520490911660e082015291505092915050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516000906020830161163981836139af565b6000612d21826139f9565b612d3e57604051635cb1e1ad60e11b815260040160405180910390fd5b5090565b6000612d50600c603261489e565b610c39906001600160801b038416614c1a565b60008281612d73600c603261489e565b612d7d90856148b1565b90506001600160801b0382168110612da857604051631390f2a160e01b815260040160405180910390fd5b6105d5611f0c82612dbb600c603261489e565b859190613a46565b600060cd6000612dd284612e0d565b63ffffffff1663ffffffff1681526020019081526020016000206000612df784613a9e565b8152602001908152602001600020549050919050565b6000610c396020600484611ab2565b6000610c396024600484611ab2565b60cc546060906000612e4d612e3f89613add565b805160051b60209091012090565b90506000612e8e612e5d8a613bbb565b6040805160a081018252918252602082018a9052810184905264ffffffffff43811660608301524216608082015290565b9050612e9a8184612516565b63ffffffff808816600090815260cf60209081526040808320805494891663ffffffff199095169490941790935560cc805460018181018355918452865160049091027f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebe810191909155868301517f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebf820155868501517f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ec082015560608701517f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ec19091018054608089015164ffffffffff908116600160281b0269ffffffffffffffffffff1990921693169290921791909117905583518085019094528c84528382018a905260cb805491820181559092528251805194985092936002929092027fa7ce836d032b2bf62b7e2097a8e0a6d8aeb35405ad15271e96d3b0188a1d06fb019261300d9284929190910190614231565b506020820151816001015550507f60c3a1f5763d1f5370168d8e60a7e6c27c5200c3327a20af481c738a9b11d7de84604051613049919061440f565b60405180910390a150505095945050505050565b600061306882613c93565b612d3e57604051633ae4998b60e21b815260040160405180910390fd5b805160009061309384613ca9565b1480156130d45750602080830151604080850151815180850193909352828201528051808303820181526060909201905280519101206130d284613cb7565b145b80156130f95750816060015164ffffffffff166130f084613cc5565b64ffffffffff16145b8015610caa5750816080015164ffffffffff1661311584613cd4565b64ffffffffff16149392505050565b600080613132858585613ce3565b602084900360031b1c9150509392505050565b60606131518251613d78565b61316e576040516376cc6d3360e11b815260040160405180910390fd5b81516000816001600160401b0381111561318a5761318a61429a565b6040519080825280602002602001820160405280156131b3578160200160208202803683370190505b50905060005b8281101561320e576131e18582815181106131d6576131d6614872565b602002602001015190565b8282815181106131f3576131f3614872565b6020908102919091010152613207816148f1565b90506131b9565b5061163981613d9d565b600081815260fb60209081526040808320805470ffffffffffffffffffffffffffffffffff191681556001810180546001600160a01b031990811690915560029091018054909116905560fc825280832080546bffffffffffffffffffffffff1916905560fd909152812055610e9160fe611df4565b600061329a60fe611df4565b90506110f160fe82613973565b60006132b282613dd2565b90506000806132c4878760ff16613ddf565b915091506132d38286856132da565b61100d8186855b6000806132ec8563ffffffff16612155565b90925090506004815160058111156133065761330661451d565b148061332457506005815160058111156133225761332261451d565b145b1561332e57600091505b61250f8285855b6001600160a01b03831660009081526101006020908152604080832063ffffffff86168452909152812080546001600160401b03841692906133819084906001600160801b0316614c2e565b92506101000a8154816001600160801b0302191690836001600160801b031602179055507f028eefe3e6e6c46784170a285345379538ad119d61613ffeae882dfe14498b9c838383604051613403939291906001600160a01b0393909316835263ffffffff9190911660208301526001600160401b0316604082015260600190565b60405180910390a1505050565b600061341b82613eb1565b905060008580156134295750845b1561343557508061346b565b851561344d57613446600283614c4e565b905061346b565b841561346b5761345e600283614c4e565b6134689083614c74565b90505b61100d8785836132da565b600061348182613ed1565b612d3e57604051631ae8107160e21b815260040160405180910390fd5b6000610caa838284613a46565b6000806134b88360801c90565b6001600160801b039390931690922092915050565b60006001600160801b038316808311156134fa5760405163a3b99ded60e01b815260040160405180910390fd5b611687836135088660801c90565b018483036139af565b600060015b8281101561352a576001918201911b613516565b50919050565b60008215801561353e575081155b1561354b57506000610c39565b6040805160208101859052908101839052606001604051602081830303815290604052805190602001209050610c39565b600054610100900460ff166135a35760405162461bcd60e51b815260040161106c90614bb9565b61107533612cb1565b6000806135b884612e0d565b90506135c48184612bc6565b6040015163ffffffff166135d785612e1c565b63ffffffff16116135fb57604051633dbfe96160e11b815260040160405180910390fd5b600061360685613a9e565b63ffffffff8316600090815260cd6020908152604080832084845290915281205494509091508390036137e657600061363f8686613eee565b60c98054600181018255600082815283517f66be4f155c5ef2ebd3772b228f2f00681e4ed5826cdb3b1943cc11ad15ad1d286003909302928301556020808501517f66be4f155c5ef2ebd3772b228f2f00681e4ed5826cdb3b1943cc11ad15ad1d298401805460408089015160608a015160808b015160a08c015163ffffffff97881667ffffffffffffffff199687161764010000000094891685021771ffffffffffffffffffff00000000000000001916600160401b64ffffffffff9485160264ffffffffff60681b191617600160681b9390921692909202176bffffffffffffffffffffffff60901b1916600160901b6001600160601b03909216919091021790935560c08901517f66be4f155c5ef2ebd3772b228f2f00681e4ed5826cdb3b1943cc11ad15ad1d2a909701805460e08b0151988616931692909217968416909202959095179094559354938816825260cd8152828220878352905220819055945090507fc82fd59396134ccdeb4ce594571af6fe8f87d1df40fb6aaf1463ee06d610d0cb6137cf87613f7c565b6040516137dc919061440f565b60405180910390a1505b5063ffffffff908116600090815260ce6020908152604080832095909316825293909352909120819055919050565b60408051808201909152828152602080820183905260ca80546001810182556000919091528251805160029092027f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee1019261387592849290910190614231565b506020820151816001015550505050565b600061389182613fb2565b612d3e57604051631dad384f60e21b815260040160405180910390fd5b6000816001600160401b03166138c48360401c90565b6001600160401b03166138d78460801c90565b6001600160401b03166138ea8560c01c90565b6001600160401b03166138fd919061489e565b613907919061489e565b613911919061489e565b60201b92915050565b6000610c3960086020845b9190613ce3565b6000610c396071835b90613fc5565b6000610c3981600484611ab2565b6000610c3960048084611ab2565b6000610c396048600184611ab2565b6000610c39605d83613935565b8154600160801b90819004600f0b6000818152600180860160205260409091209390935583546001600160801b03908116939091011602179055565b6000806139bc838561489e565b90506040518111156139cc575060005b806000036139ed5760405163085f79c360e11b815260040160405180910390fd5b608084901b8317611687565b60006001600160801b03821681613a12600c603261489e565b613a1c9083614c1a565b905081613a2b600c603261489e565b613a3590836148b1565b148015611639575061163981613d78565b600080613a538560801c90565b9050613a5e85613fd3565b83613a69868461489e565b613a73919061489e565b1115613a925760405163a3b99ded60e01b815260040160405180910390fd5b6105d5848201846139af565b6000806000613aac84611f11565b6040805160208082019490945280820192909252805180830382018152606090920190528051910120949350505050565b60606000613aea83612d42565b9050806001600160401b03811115613b0457613b0461429a565b604051908082528060200260200182016040528015613b2d578160200160208202803683370190505b50915060005b8181101561163c576000613b478583612d63565b9050613b80613b5582613ff0565b613b5e83612e0d565b63ffffffff1660209190911b6fffffffffffffffffffffffff00000000161790565b848381518110613b9257613b92614872565b6001600160801b039092166020928302919091019091015250613bb4816148f1565b9050613b33565b600080613bc783612d42565b90506000816001600160401b03811115613be357613be361429a565b604051908082528060200260200182016040528015613c0c578160200160208202803683370190505b50905060005b82811015613c5957613c2c613c278683612d63565b613a9e565b828281518110613c3e57613c3e614872565b6020908102919091010152613c52816148f1565b9050613c12565b50613c6f81613c6a600160066148de565b614005565b80600081518110613c8257613c82614872565b602002602001015192505050919050565b6000604e6001600160801b0383165b1492915050565b6000610c3981602084613925565b6000610c3960208084613925565b6000610c396044600584611ab2565b6000610c396049600584611ab2565b600081600003613cf557506000610caa565b6020821115613d175760405163063af09560e31b815260040160405180910390fd5b6001600160801b038416613d2b838561489e565b1115613d4a5760405163a3b99ded60e01b815260040160405180910390fd5b600382901b6000613d5b8660801c90565b90940151600160ff1b600019929092019190911d16949350505050565b60008115801590610c395750613d90600160066148de565b6001901b82111592915050565b604051806000613db084602084016140df565b6001600160801b0316601f8101601f1916830160200160405290915250919050565b6000610c39600383614c4e565b600080600060cb8563ffffffff1681548110613dfd57613dfd614872565b90600052602060002090600202016000018481548110613e1f57613e1f614872565b9060005260206000200154905060c9600182613e3b91906148de565b81548110613e4b57613e4b614872565b600091825260209091206002600390920201015463ffffffff1660c9613e726001846148de565b81548110613e8257613e82614872565b906000526020600020906003020160020160049054906101000a900463ffffffff1692509250505b9250929050565b6000613ebc82613dd2565b613ec7906002614c94565b610c399083614c74565b6000613edf600c603261489e565b6001600160801b038316613ca2565b613ef66141ed565b613eff83613ca9565b8152613f0a83612e0d565b63ffffffff166020820152613f1e83612e1c565b63ffffffff166040820152613f3283614161565b64ffffffffff166060820152613f4783614170565b64ffffffffff166080820152613f5c83613ff0565b6001600160601b031660a082015263ffffffff90911660c0820152919050565b60405180613f8d836020830161417f565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b600060856001600160801b038316613ca2565b6000610caa83836014613124565b60006001600160801b038216613fe98360801c90565b0192915050565b6000610c396140026032600c85611ab2565b90565b81516001821b81111561402b5760405163c5360feb60e01b815260040160405180910390fd5b60005b828110156140d95760005b828110156140ca576000816001019050600086838151811061405d5761405d614872565b602002602001015190506000858310614077576000614092565b87838151811061408957614089614872565b60200260200101515b905061409e8282613530565b88600186901c815181106140b4576140b4614872565b6020908102919091010152505050600201614039565b506001918201821c910161402e565b50505050565b60405160009080831015614106576040516312ca856360e21b815260040160405180910390fd5b6000805b855181101561415457600086828151811061412757614127614872565b6020026020010151905061413d8184880161417f565b506001600160801b0316919091019060010161410a565b50608084901b81176105d5565b6000610c396028600584611ab2565b6000610c39602d600584611ab2565b6040516000906001600160801b03841690608085901c90808510156141b7576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa9050806141e157604051637c7d772f60e01b815260040160405180910390fd5b608086901b84176119e8565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b82805482825590600052602060002090810192821561426c579160200282015b8281111561426c578251825591602001919060010190614251565b50612d3e9291505b80821115612d3e5760008155600101614274565b63ffffffff811681146110f157600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156142d8576142d861429a565b604052919050565b60006001600160401b038211156142f9576142f961429a565b50601f01601f191660200190565b600082601f83011261431857600080fd5b813561432b614326826142e0565b6142b0565b81815284602083860101111561434057600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561437357600080fd5b843561437e81614288565b9350602085013592506040850135915060608501356001600160401b038111156143a757600080fd5b6143b387828801614307565b91505092959194509250565b60005b838110156143da5781810151838201526020016143c2565b50506000910152565b600081518084526143fb8160208601602086016143bf565b601f01601f19169290920160200192915050565b602081526000610caa60208301846143e3565b60006020828403121561443457600080fd5b81356001600160401b0381111561444a57600080fd5b61168784828501614307565b60408152600061446960408301856143e3565b82810360208401526105d581856143e3565b6000806040838503121561448e57600080fd5b823561449981614288565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b818110156144df578351835292840192918401916001016144c3565b50909695505050505050565b6001600160a01b03811681146110f157600080fd5b60006020828403121561451257600080fd5b8135610caa816144eb565b634e487b7160e01b600052602160045260246000fd5b80516006811061455357634e487b7160e01b600052602160045260246000fd5b825260208181015163ffffffff9081169184019190915260409182015116910152565b60608101610c398284614533565b60006020828403121561459657600080fd5b5035919050565b6001600160a01b038316815260808101610caa6020830184614533565b600080604083850312156145cd57600080fd5b82356145d8816144eb565b915060208301356145e881614288565b809150509250929050565b6000806020838503121561460657600080fd5b82356001600160401b038082111561461d57600080fd5b818501915085601f83011261463157600080fd5b81358181111561464057600080fd5b8660208260051b850101111561465557600080fd5b60209290920196919550909350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156146cf57888303603f1901855281518051151584528701518784018790526146bc878501826143e3565b958801959350509086019060010161468e565b509098975050505050505050565b600080604083850312156146f057600080fd5b82356145d881614288565b60008060006060848603121561471057600080fd5b833561471b81614288565b92506020840135915060408401356001600160401b0381111561473d57600080fd5b61474986828701614307565b9150509250925092565b60006020828403121561476557600080fd5b8135610caa81614288565b60608152600061478360608301866143e3565b6020838101869052838203604085015284518083528582019282019060005b818110156146cf578451835293830193918301916001016147a2565b60008060008060008060c087890312156147d757600080fd5b86356147e281614288565b955060208701356147f281614288565b945060408701359350606087013561480981614288565b92506080870135915060a08701356001600160401b0381111561482b57600080fd5b61483789828a01614307565b9150509295509295509295565b6000806040838503121561485757600080fd5b823561486281614288565b915060208301356145e8816144eb565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610c3957610c39614888565b8082028115828204841417610c3957610c39614888565b634e487b7160e01b600052600160045260246000fd5b81810381811115610c3957610c39614888565b60006001820161490357614903614888565b5060010190565b60008235603e1983360301811261492057600080fd5b9190910192915050565b6000808335601e1984360301811261494157600080fd5b8301803591506001600160401b0382111561495b57600080fd5b602001915036819003821315613eaa57600080fd5b8183823760009101908152919050565b6000602080838503121561499357600080fd5b82516001600160401b03808211156149aa57600080fd5b818501915085601f8301126149be57600080fd5b8151818111156149d0576149d061429a565b8060051b91506149e18483016142b0565b81815291830184019184810190888411156149fb57600080fd5b938501935b83851015614a255784519250614a15836144eb565b8282529385019390850190614a00565b98975050505050505050565b600060208284031215614a4357600080fd5b81516001600160401b03811115614a5957600080fd5b8201601f81018413614a6a57600080fd5b8051614a78614326826142e0565b818152856020838501011115614a8d57600080fd5b6105d58260208301602086016143bf565b600060608284031215614ab057600080fd5b604051606081018181106001600160401b0382111715614ad257614ad261429a565b8060405250809150825160068110614ae957600080fd5b81526020830151614af981614288565b60208201526040830151614b0c81614288565b6040919091015292915050565b600060608284031215614b2b57600080fd5b610caa8383614a9e565b60008060808385031215614b4857600080fd5b8251614b53816144eb565b9150614b628460208501614a9e565b90509250929050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b600082614c2957614c29614c04565b500490565b6001600160801b03818116838216019080821115611cf157611cf1614888565b60006001600160401b0380841680614c6857614c68614c04565b92169190910492915050565b6001600160401b03828116828216039080821115611cf157611cf1614888565b6001600160401b03818116838216028082169190828114614cb757614cb7614888565b50509291505056fea26469706673582212205ce0458d9b98ffbb0286276c5415ce5212bfebe2387515c91b2e9f996859d19e64736f6c6343000811003360e06040523480156200001157600080fd5b506040516200421a3803806200421a83398101604081905262000034916200009d565b60408051808201909152600580825264302e302e3360d81b602083015260805281816200006181620000cc565b60a0525063ffffffff90811660c05282166103851490506200009657604051632b3a807f60e01b815260040160405180910390fd5b50620000f4565b600060208284031215620000b057600080fd5b815163ffffffff81168114620000c557600080fd5b9392505050565b80516020808301519190811015620000ee576000198160200360031b1b821691505b50919050565b60805160a05160c0516140e8620001326000396000818161039501528181611e770152611eae015260006102ac0152600061028901526140e86000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80637be8e73811610104578063b269681d116100a2578063ddeffa6611610071578063ddeffa6614610470578063dfe3967514610483578063f2fde38b14610496578063f8c8765e146104a957600080fd5b8063b269681d14610416578063b2a4b45514610429578063c25aa5851461043c578063c495912b1461044f57600080fd5b80638da5cb5b116100de5780638da5cb5b146103cc57806391af2e5d146103dd578063938b5f32146103f05780639fbcb9cb1461040357600080fd5b80637be8e7381461036a578063892465031461037d5780638d3638f41461039057600080fd5b806354fd4d50116101715780636b47b3bc1161014b5780636b47b3bc14610311578063715018a614610324578063756ed01d1461032e5780637622f78d1461033f57600080fd5b806354fd4d501461027d57806360fc8466146102de57806362389709146102fe57600080fd5b8063200f6b66116101ad578063200f6b6614610222578063213a6ddb1461023557806331e8df5a146102485780634bb73ea51461025b57600080fd5b80630b6b985c146101d45780630ca77473146101fc5780630db27e771461020f575b600080fd5b6101e76101e2366004613324565b6104bc565b60405190151581526020015b60405180910390f35b6101e761020a3660046133da565b6105ee565b6101e761021d3660046134b1565b61073a565b6101e761023036600461358a565b6107a8565b6101e761024336600461361b565b61094f565b6101e76102563660046133da565b610aad565b61026e6102693660046133da565b610b7f565b6040516101f3939291906136d7565b604080518082019091527f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201525b6040516101f39190613733565b6102f16102ec366004613746565b610e20565b6040516101f391906137ba565b6101e761030c36600461358a565b610f68565b6101e761031f366004613834565b61105a565b61032c611110565b005b609b546040519081526020016101f3565b609754610352906001600160a01b031681565b6040516001600160a01b0390911681526020016101f3565b6101e7610378366004613893565b611171565b6101e761038b3660046138f7565b6112de565b6103b77f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101f3565b6033546001600160a01b0316610352565b6101e76103eb3660046133da565b6113a9565b609854610352906001600160a01b031681565b60c954610352906001600160a01b031681565b609954610352906001600160a01b031681565b6101e7610437366004613945565b61147b565b6101e761044a3660046133da565b611740565b61046261045d3660046139c3565b611811565b6040516101f39291906139dc565b6102d161047e3660046139c3565b6119bd565b6101e76104913660046133da565b611a6c565b61032c6104a4366004613a18565b611b3e565b61032c6104b7366004613a33565b611c09565b6000806104c885611ca0565b905060006104d68289611cb9565b905060006104e48289611d1e565b5090506104f081611d82565b60006104fb87611db5565b905060006105098288611dc8565b50905061051581611e21565b6105228160200151611e75565b61052b82611ef7565b61053486611f08565b14610552576040516312a37cf560e11b815260040160405180910390fd5b61056961056385611fe0565b611fe0565b8b612016565b609754604084810151838201519151632885570d60e21b815263ffffffff9182166004820152911660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b1580156105c557600080fd5b505af11580156105d9573d6000803e3d6000fd5b5060019e9d5050505050505050505050505050565b6000806105fa84611db5565b90506000806106098386611dc8565b9150915061061682611e21565b60c954604051634362fd1160e01b81526001600160a01b0390911690634362fd1190610646908990600401613733565b602060405180830381865afa158015610663573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106879190613a87565b935083610731577f5ce497fe75d0d52e5ee139d2cd651d0ff00692a94d7052cb37faef5592d74b2b86866040516106bf9291906139dc565b60405180910390a16097546020830151604051631429d07360e11b81526001600160a01b0390921691632853a0e6916106fe9185903390600401613aa9565b600060405180830381600087803b15801561071857600080fd5b505af115801561072c573d6000803e3d6000fd5b505050505b50505092915050565b600080610746876120b0565b905060006107548288611d1e565b50905061076081611d82565b600061076b86611db5565b905060006107798287611dc8565b50905061078581611e21565b6107928160200151611e75565b61079e828c868b6120be565b6105698a8a612016565b6000806107b484611db5565b90506000806107c38386611dc8565b915091506107d082611e21565b60006107db88611ca0565b90506107e684611ef7565b6107ef82611f08565b1461080d576040516312a37cf560e11b815260040160405180910390fd5b600061082261055e61081f848d611cb9565b90565b60985460405163a9dcf22d60e01b81529192506001600160a01b03169063a9dcf22d90610853908490600401613733565b602060405180830381865afa158015610870573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108949190613a87565b955085610942577f541491c63a99c21d0612ba7b3c4d90f7662f54a123363e65fae5c51e34e8a4928a828a8a6040516108d09493929190613ad0565b60405180910390a16097546020850151604051631429d07360e11b81526001600160a01b0390921691632853a0e69161090f9187903390600401613aa9565b600060405180830381600087803b15801561092957600080fd5b505af115801561093d573d6000803e3d6000fd5b505050505b5050505050949350505050565b60008061095b84611ca0565b905060008061096c8386600061214e565b9150915061097982611e21565b6098546001600160a01b031663a9dcf22d61099a61055e61081f878c611cb9565b6040518263ffffffff1660e01b81526004016109b69190613733565b602060405180830381865afa1580156109d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f79190613a87565b935083610aa3577f8ec8481d2e38a1ffe2c6ec35459332dc9e6248b1219d287dfa4143a68a75bbd1878787604051610a3193929190613b0f565b60405180910390a16097546020830151604051631429d07360e11b81526001600160a01b0390921691632853a0e691610a709185903390600401613aa9565b600060405180830381600087803b158015610a8a57600080fd5b505af1158015610a9e573d6000803e3d6000fd5b505050505b5050509392505050565b600080610ab984611db5565b9050600080610ac883866121bd565b91509150610ad582611e21565b60c954604051634362fd1160e01b81526001600160a01b0390911690634362fd1190610b05908990600401613733565b602060405180830381865afa158015610b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b469190613a87565b15935083610731577f6f83f9b71f5c687c7dd205d520001d4e5adc1f16e4e2ee5b798c720d643e5a9e86866040516106bf9291906139dc565b6060600060606000610b9086611ca0565b9050600080610ba18388600061214e565b91509150610bae82611d82565b6000610bb9886121e6565b9050826020015163ffffffff16600003610c3b5760c9546040808501519051639cc1bb3160e01b81526001600160a01b0390921691639cc1bb3191610c049185908e90600401613b44565b600060405180830381600087803b158015610c1e57600080fd5b505af1158015610c32573d6000803e3d6000fd5b50505050610dc7565b609760009054906101000a90046001600160a01b03166001600160a01b03166336cba43c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb29190613b69565b60c9546040808601519051623cd01560e21b81529298506001600160a01b039091169162f3405491610cec9185908b908f90600401613b82565b6000604051808303816000875af1158015610d0b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d339190810190613bad565b96506000610d4085612229565b6099546040808701519051631cff139b60e11b81529293506001600160a01b03909116916339fe273691610d8091600019908d908d908890600401613c1a565b6020604051808303816000875af1158015610d9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc39190613a87565b5094505b816001600160a01b0316836020015163ffffffff167f5ca3d740e03650b41813a4b418830f6ba39700ae010fe8c4d1bca0e8676b9c568b8b604051610e0d9291906139dc565b60405180910390a3505050509250925092565b606081806001600160401b03811115610e3b57610e3b613261565b604051908082528060200260200182016040528015610e8157816020015b604080518082019091526000815260606020820152815260200190600190039081610e595790505b5091503660005b8281101561073157858582818110610ea257610ea2613c93565b9050602002810190610eb49190613ca9565b91506000848281518110610eca57610eca613c93565b60200260200101519050306001600160a01b0316838060200190610eee9190613cc9565b604051610efc929190613d0f565b600060405180830381855af49150503d8060008114610f37576040519150601f19603f3d011682016040523d82523d6000602084013e610f3c565b606091505b5060208301521515808252833517610f5f576309ad446560e31b60005260046000fd5b50600101610e88565b600080610f7484611ca0565b90506000610f848285600161214e565b509050610f9081611e21565b610f9d8160200151611e75565b6000610fa98389611cb9565b90506000610fb78289611d1e565b509050610fc381611d82565b610fd5610fcf83611fe0565b89612016565b609754604082810151858201519151632885570d60e21b815263ffffffff9182166004820152911660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b15801561103157600080fd5b505af1158015611045573d6000803e3d6000fd5b5050505060019450505050505b949350505050565b6099546000906001600160a01b0316331461108857604051636efcc49f60e01b815260040160405180910390fd5b60c95460405163c79a431b60e01b81526001600160a01b039091169063c79a431b906110c49088908190600019908a908a908a90600401613d1f565b6020604051808303816000875af11580156110e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111079190613a87565b95945050505050565b6033546001600160a01b0316331461116f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b565b60008061117d84611db5565b905060008061118c8386611dc8565b9150915061119982611e21565b60006111a4896120b0565b90506111b2848b838b6120be565b60985460405163a9dcf22d60e01b81526001600160a01b039091169063a9dcf22d906111e2908c90600401613733565b602060405180830381865afa1580156111ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112239190613a87565b9450846112d1577f541491c63a99c21d0612ba7b3c4d90f7662f54a123363e65fae5c51e34e8a4928a8a898960405161125f9493929190613ad0565b60405180910390a16097546020840151604051631429d07360e11b81526001600160a01b0390921691632853a0e69161129e9186903390600401613aa9565b600060405180830381600087803b1580156112b857600080fd5b505af11580156112cc573d6000803e3d6000fd5b505050505b5050505095945050505050565b6000806112ea8561230e565b905060006112f88285612321565b50905061130481611d82565b6000611310838761234a565b50905061131c81611e21565b6113268786612016565b609754604083810151838201519151632885570d60e21b815263ffffffff9182166004820152911660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b15801561138257600080fd5b505af1158015611396573d6000803e3d6000fd5b50505050600193505050505b9392505050565b6000806113b58461230e565b90506000806113c48386612321565b915091506113d182611e21565b60995460405163e2f006f760e01b81526001600160a01b039091169063e2f006f790611401908990600401613733565b602060405180830381865afa15801561141e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114429190613a87565b15935083610731577fa0cb383b7028fbeae86e018eb9fe765c15c869483a584edbb95bf5509344658786866040516106bf9291906139dc565b60006114856131ff565b60006114908861230e565b905061149c818861234a565b6001600160a01b031660208401528083526114b690611d82565b6099546001600160a01b0316634f1275676114d083612373565b6040518263ffffffff1660e01b81526004016114ee91815260200190565b602060405180830381865afa15801561150b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152f9190613d68565b63ffffffff166040830181905260000361155c576040516312a37cf560e11b815260040160405180910390fd5b6097546001600160a01b03166328f3fac961157683612382565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401606060405180830381865afa1580156115ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115de9190613d85565b60608301526115ec8161238f565b63ffffffff1682606001516020015163ffffffff161461161f57604051630b09697760e11b815260040160405180910390fd5b61163361162b826123a0565b8787876123af565b600061163e886121e6565b905060c960009054906101000a90046001600160a01b03166001600160a01b031663c79a431b8460000151604001518560600151604001518487604001518c8f6040518763ffffffff1660e01b815260040161169f96959493929190613d1f565b6020604051808303816000875af11580156116be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e29190613a87565b93508315611734577f9377955fede38ca63bc09f7b3fae7dd349934c78c058963a6d3c05d4eed0411283600001516020015184602001518b8b60405161172b9493929190613dfa565b60405180910390a15b50505095945050505050565b60008061174c8461230e565b905060008061175b838661234a565b9150915061176882611e21565b60995460405163e2f006f760e01b81526001600160a01b039091169063e2f006f790611798908990600401613733565b602060405180830381865afa1580156117b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d99190613a87565b935083610731577f4d4c3a87f0d5fbcea3c51d5baa727fceedb200dd7c9287f7ef85b60b794d6a8d86866040516106bf9291906139dc565b609b546060908190831061183857604051631390f2a160e01b815260040160405180910390fd5b6000609b848154811061184d5761184d613c93565b90600052602060002090600202016040518060400160405290816000820154815260200160018201805461188090613e3c565b80601f01602080910402602001604051908101604052809291908181526020018280546118ac90613e3c565b80156118f95780601f106118ce576101008083540402835291602001916118f9565b820191906000526020600020905b8154815290600101906020018083116118dc57829003601f168201915b505050505081525050905080602001519250609a81600001518154811061192257611922613c93565b90600052602060002001805461193790613e3c565b80601f016020809104026020016040519081016040528092919081815260200182805461196390613e3c565b80156119b05780601f10611985576101008083540402835291602001916119b0565b820191906000526020600020905b81548152906001019060200180831161199357829003601f168201915b5050505050915050915091565b6060609a82815481106119d2576119d2613c93565b9060005260206000200180546119e790613e3c565b80601f0160208091040260200160405190810160405280929190818152602001828054611a1390613e3c565b8015611a605780601f10611a3557610100808354040283529160200191611a60565b820191906000526020600020905b815481529060010190602001808311611a4357829003601f168201915b50505050509050919050565b600080611a78846120b0565b9050600080611a878386611d1e565b91509150611a9482611e21565b60985460405163a9dcf22d60e01b81526001600160a01b039091169063a9dcf22d90611ac4908990600401613733565b602060405180830381865afa158015611ae1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b059190613a87565b15935083610731577f9b0db5e74572fe0188dcef5afafe498161864c5706c3003c98ee506ae5c0282d86866040516106bf9291906139dc565b6033546001600160a01b03163314611b985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611166565b6001600160a01b038116611bfd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401611166565b611c06816123f5565b50565b6000611c156001612447565b90508015611c2d576000805461ff0019166101001790555b611c388585856124d4565b60c980546001600160a01b0319166001600160a01b0384161790558015611c99576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6000611cb3611cae83612545565b612558565b92915050565b60008281611cc9600c6032613e86565b611cd39085613e99565b90506001600160801b0382168110611cfe57604051631390f2a160e01b815260040160405180910390fd5b611107611d1982611d11600c6032613e86565b859190612584565b6125dc565b6040805160608101825260008082526020820181905291810182905290611d4d611d4785612604565b84612632565b6020820151919350915063ffffffff1615611d7b576040516370488f8b60e01b815260040160405180910390fd5b9250929050565b600181516005811115611d9757611d97613eb0565b14611c0657604051632437e77160e11b815260040160405180910390fd5b6000611cb3611dc383612545565b612738565b6040805160608101825260008082526020820181905291810182905290611df1611d4785612760565b6020820151919350915063ffffffff16600003611d7b576040516354cc70e560e11b815260040160405180910390fd5b600181516005811115611e3657611e36613eb0565b14158015611e575750600281516005811115611e5457611e54613eb0565b14155b15611c065760405163ec3d0d8560e01b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff1614158015611ed957507f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661038514155b15611c0657604051630b09697760e11b815260040160405180910390fd5b6000611cb3816020845b919061278c565b600080611f1483612821565b90506000816001600160401b03811115611f3057611f30613261565b604051908082528060200260200182016040528015611f59578160200160208202803683370190505b50905060005b82811015611fa657611f79611f748683611cb9565b612842565b828281518110611f8b57611f8b613c93565b6020908102919091010152611f9f81613ec6565b9050611f5f565b50611fbc81611fb760016006613edf565b612881565b80600081518110611fcf57611fcf613c93565b602002602001015192505050919050565b60405180611ff1836020830161295b565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b6000612021826121e6565b6040805180820190915281815260208101858152609b8054600181018255600091909152825160029091027fbba9db4cdbea0a37c207bbb83e20f828cd4441c49891101dc94fd20dc8efc3498101918255915193945091927fbba9db4cdbea0a37c207bbb83e20f828cd4441c49891101dc94fd20dc8efc34a909101906120a89082613f38565b505050505050565b6000611cb3611d1983612545565b60006120c9836129d0565b91505080826000815181106120e0576120e0613c93565b602002602001015114612106576040516339bbd1f360e21b815260040160405180910390fd5b600061212461211485611ef7565b61211d866129ff565b8588612a0e565b90508061213087611ef7565b146120a8576040516312a37cf560e11b815260040160405180910390fd5b604080516060810182526000808252602082018190529181018290529061217d61217786612a51565b85612632565b90925090508280156121975750602082015163ffffffff16155b156121b5576040516354cc70e560e11b815260040160405180910390fd5b935093915050565b6040805160608101825260008082526020820181905291810182905290611d4d611d4785612a7d565b609a80546001810182556000919091527f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be481016122238382613f38565b50919050565b6060600061223683612821565b9050806001600160401b0381111561225057612250613261565b604051908082528060200260200182016040528015612279578160200160208202803683370190505b50915060005b818110156123075760006122938583611cb9565b90506122cc6122a182612aa9565b6122aa836129ff565b63ffffffff1660209190911b6fffffffffffffffffffffffff00000000161790565b8483815181106122de576122de613c93565b6001600160801b03909216602092830291909101909101525061230081613ec6565b905061227f565b5050919050565b6000611cb361231c83612545565b612abb565b6040805160608101825260008082526020820181905291810182905290611d4d611d4785612ae3565b6040805160608101825260008082526020820181905291810182905290611df1611d4785612b0f565b6000611cb36028602084611f01565b6000611cb3826049612b3b565b6000611cb3600480845b9190612b45565b6000611cb36008602084611f01565b6000839050846123d7846123d26123cc8560009081526020902090565b86612b66565b612b66565b14611c99576040516335a072f760e21b815260040160405180910390fd5b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff161561248e578160ff16600114801561246a5750303b155b6124865760405162461bcd60e51b815260040161116690613ff7565b506000919050565b60005460ff8084169116106124b55760405162461bcd60e51b815260040161116690613ff7565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166124fb5760405162461bcd60e51b815260040161116690614045565b609780546001600160a01b038086166001600160a01b031992831617909255609880548584169083161790556099805492841692909116919091179055612540612bb2565b505050565b8051600090602083016110528183612be1565b600061256382612c2b565b61258057604051635cb1e1ad60e11b815260040160405180910390fd5b5090565b6000806125918560801c90565b905061259c85612c78565b836125a78684613e86565b6125b19190613e86565b11156125d05760405163a3b99ded60e01b815260040160405180910390fd5b61110784820184612be1565b60006125e782612c95565b61258057604051631ae8107160e21b815260040160405180910390fd5b6000611cb37f43713cd927f8eb63b519f3b180bd5f3708ebbe93666be9ba4b9624b7bc57e663835b90612cb5565b60408051606081018252600080825260208201819052918101919091526000806126a9856040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b90506126b58185612cf2565b6097546040516328f3fac960e01b81526001600160a01b0380841660048301529294509116906328f3fac990602401606060405180830381865afa158015612701573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127259190613d85565b925061273083612d16565b509250929050565b600061274382612d49565b61258057604051633ae4998b60e21b815260040160405180910390fd5b6000611cb37f3464bf887f210604c594030208052a323ac6628785466262d7524176912016418361262c565b60008160000361279e575060006113a2565b60208211156127c05760405163063af09560e31b815260040160405180910390fd5b6001600160801b0384166127d48385613e86565b11156127f35760405163a3b99ded60e01b815260040160405180910390fd5b600382901b60006128048660801c90565b90940151600160ff1b600019929092019190911d16949350505050565b600061282f600c6032613e86565b611cb3906001600160801b038416614090565b6000806000612850846129d0565b6040805160208082019490945280820192909252805180830382018152606090920190528051910120949350505050565b81516001821b8111156128a75760405163c5360feb60e01b815260040160405180910390fd5b60005b828110156129555760005b8281101561294657600081600101905060008683815181106128d9576128d9613c93565b6020026020010151905060008583106128f357600061290e565b87838151811061290557612905613c93565b60200260200101515b905061291a8282612b66565b88600186901c8151811061293057612930613c93565b60209081029190910101525050506002016128b5565b506001918201821c91016128aa565b50505050565b6040516000906001600160801b03841690608085901c9080851015612993576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa9050806129bd57604051637c7d772f60e01b815260040160405180910390fd5b608086901b84175b979650505050505050565b600080826129e76129e2826024612d5c565b612d69565b92506129f76129e2826024612d8b565b915050915091565b6000611cb36020600484612399565b6000600182901b60408110612a3657604051631390f2a160e01b815260040160405180910390fd5b6000612a428787612dcf565b90506129c58282876006612dfa565b6000611cb37ff304ae6578b1582b0b5b512e0a7070d6f76973b1f360f99dd500082d3bc948778361262c565b6000611cb37fccfadb9c399e4e4257b6d0c3f92e1f9a9c00b1802b55a2f7d511702faa7690908361262c565b6000611cb361081f6032600c85612399565b6000612ac682612e89565b61258057604051631dad384f60e21b815260040160405180910390fd5b6000611cb37fdf42b2c0137811ba604f5c79e20c4d6b94770aa819cc524eca444056544f8ab78361262c565b6000611cb37fb38669e8ca41a27fcd85729b868e8ab047d0f142073a017213e58f0a91e88ef38361262c565b60006113a2838360145b600080612b5385858561278c565b602084900360031b1c9150509392505050565b600082158015612b74575081155b15612b8157506000611cb3565b6040805160208101859052908101839052606001604051602081830303815290604052805190602001209050611cb3565b600054610100900460ff16612bd95760405162461bcd60e51b815260040161116690614045565b61116f612e9c565b600080612bee8385613e86565b9050604051811115612bfe575060005b80600003612c1f5760405163085f79c360e11b815260040160405180910390fd5b608084901b8317611052565b60006001600160801b03821681612c44600c6032613e86565b612c4e9083614090565b905081612c5d600c6032613e86565b612c679083613e99565b148015611052575061105281612ecc565b60006001600160801b038216612c8e8360801c90565b0192915050565b6000612ca3600c6032613e86565b6001600160801b0383165b1492915050565b600081612cc184612d69565b6040805160208101939093528201526060015b60405160208183030381529060405280519060200120905092915050565b6000806000612d018585612ef1565b91509150612d0e81612f33565b509392505050565b600081516005811115612d2b57612d2b613eb0565b03611c065760405163dc449cb760e01b815260040160405180910390fd5b6000604e6001600160801b038316612cae565b60006113a2838284612584565b600080612d768360801c90565b6001600160801b039390931690922092915050565b60006001600160801b03831680831115612db85760405163a3b99ded60e01b815260040160405180910390fd5b61105283612dc68660801c90565b01848303612be1565b60008282604051602001612cd492919091825260e01b6001600160e01b031916602082015260240190565b815160009082811115612e205760405163c5360feb60e01b815260040160405180910390fd5b84915060005b81811015612e5d57612e5383868381518110612e4457612e44613c93565b602002602001015189846130e9565b9250600101612e26565b50805b83811015612e7f57612e7583600089846130e9565b9250600101612e60565b5050949350505050565b600060856001600160801b038316612cae565b600054610100900460ff16612ec35760405162461bcd60e51b815260040161116690614045565b61116f336123f5565b60008115801590611cb35750612ee460016006613edf565b6001901b82111592915050565b6000808251604103612f275760208301516040840151606085015160001a612f1b87828585613112565b94509450505050611d7b565b50600090506002611d7b565b6000816004811115612f4757612f47613eb0565b03612f4f5750565b6001816004811115612f6357612f63613eb0565b03612fb05760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401611166565b6002816004811115612fc457612fc4613eb0565b036130115760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401611166565b600381600481111561302557613025613eb0565b0361307d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401611166565b600481600481111561309157613091613eb0565b03611c065760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401611166565b6000600183831c168103613108576131018585612b66565b9050611052565b6131018486612b66565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561314957506000905060036131f6565b8460ff16601b1415801561316157508460ff16601c14155b1561317257506000905060046131f6565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156131c6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166131ef576000600192509250506131f6565b9150600090505b94509492505050565b6040805160e0810190915260006080820181815260a0830182905260c083019190915281908152600060208201819052604082015260600161325c6040805160608101909152806000815260006020820181905260409091015290565b905290565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561329f5761329f613261565b604052919050565b60006001600160401b038211156132c0576132c0613261565b50601f01601f191660200190565b600082601f8301126132df57600080fd5b81356132f26132ed826132a7565b613277565b81815284602083860101111561330757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561333c57600080fd5b8535945060208601356001600160401b038082111561335a57600080fd5b61336689838a016132ce565b9550604088013591508082111561337c57600080fd5b61338889838a016132ce565b9450606088013591508082111561339e57600080fd5b6133aa89838a016132ce565b935060808801359150808211156133c057600080fd5b506133cd888289016132ce565b9150509295509295909350565b600080604083850312156133ed57600080fd5b82356001600160401b038082111561340457600080fd5b613410868387016132ce565b9350602085013591508082111561342657600080fd5b50613433858286016132ce565b9150509250929050565b600082601f83011261344e57600080fd5b813560206001600160401b0382111561346957613469613261565b8160051b613478828201613277565b928352848101820192828101908785111561349257600080fd5b83870192505b848310156129c557823582529183019190830190613498565b60008060008060008060c087890312156134ca57600080fd5b8635955060208701356001600160401b03808211156134e857600080fd5b6134f48a838b016132ce565b9650604089013591508082111561350a57600080fd5b6135168a838b016132ce565b9550606089013591508082111561352c57600080fd5b6135388a838b0161343d565b9450608089013591508082111561354e57600080fd5b61355a8a838b016132ce565b935060a089013591508082111561357057600080fd5b5061357d89828a016132ce565b9150509295509295509295565b600080600080608085870312156135a057600080fd5b8435935060208501356001600160401b03808211156135be57600080fd5b6135ca888389016132ce565b945060408701359150808211156135e057600080fd5b6135ec888389016132ce565b9350606087013591508082111561360257600080fd5b5061360f878288016132ce565b91505092959194509250565b60008060006060848603121561363057600080fd5b8335925060208401356001600160401b038082111561364e57600080fd5b61365a878388016132ce565b9350604086013591508082111561367057600080fd5b5061367d868287016132ce565b9150509250925092565b60005b838110156136a257818101518382015260200161368a565b50506000910152565b600081518084526136c3816020860160208601613687565b601f01601f19169290920160200192915050565b6060815260006136ea60608301866136ab565b6020838101869052838203604085015284518083528582019282019060005b8181101561372557845183529383019391830191600101613709565b509098975050505050505050565b6020815260006113a260208301846136ab565b6000806020838503121561375957600080fd5b82356001600160401b038082111561377057600080fd5b818501915085601f83011261378457600080fd5b81358181111561379357600080fd5b8660208260051b85010111156137a857600080fd5b60209290920196919550909350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561372557888303603f19018552815180511515845287015187840187905261380f878501826136ab565b95880195935050908601906001016137e1565b63ffffffff81168114611c0657600080fd5b6000806000806080858703121561384a57600080fd5b843561385581613822565b9350602085013561386581613822565b92506040850135915060608501356001600160401b0381111561388757600080fd5b61360f878288016132ce565b600080600080600060a086880312156138ab57600080fd5b8535945060208601356001600160401b03808211156138c957600080fd5b6138d589838a016132ce565b955060408801359150808211156138eb57600080fd5b61338889838a0161343d565b60008060006060848603121561390c57600080fd5b83356001600160401b038082111561392357600080fd5b61392f878388016132ce565b9450602086013591508082111561364e57600080fd5b600080600080600060a0868803121561395d57600080fd5b85356001600160401b038082111561397457600080fd5b61398089838a016132ce565b9650602088013591508082111561399657600080fd5b506139a3888289016132ce565b959895975050505060408401359360608101359360809091013592509050565b6000602082840312156139d557600080fd5b5035919050565b6040815260006139ef60408301856136ab565b828103602084015261110781856136ab565b80356001600160a01b03811681146124cf57600080fd5b600060208284031215613a2a57600080fd5b6113a282613a01565b60008060008060808587031215613a4957600080fd5b613a5285613a01565b9350613a6060208601613a01565b9250613a6e60408601613a01565b9150613a7c60608601613a01565b905092959194509250565b600060208284031215613a9957600080fd5b815180151581146113a257600080fd5b63ffffffff9390931683526001600160a01b03918216602084015216604082015260600190565b848152608060208201526000613ae960808301866136ab565b8281036040840152613afb81866136ab565b905082810360608401526129c581856136ab565b838152606060208201526000613b2860608301856136ab565b8281036040840152613b3a81856136ab565b9695505050505050565b63ffffffff8416815282602082015260606040820152600061110760608301846136ab565b600060208284031215613b7b57600080fd5b5051919050565b63ffffffff85168152836020820152826040820152608060608201526000613b3a60808301846136ab565b600060208284031215613bbf57600080fd5b81516001600160401b03811115613bd557600080fd5b8201601f81018413613be657600080fd5b8051613bf46132ed826132a7565b818152856020838501011115613c0957600080fd5b611107826020830160208601613687565b63ffffffff8616815260006020868184015260a06040840152613c4060a08401876136ab565b60608401869052838103608085015284518082528286019183019060005b81811015613c835783516001600160801b031683529284019291840191600101613c5e565b50909a9950505050505050505050565b634e487b7160e01b600052603260045260246000fd5b60008235603e19833603018112613cbf57600080fd5b9190910192915050565b6000808335601e19843603018112613ce057600080fd5b8301803591506001600160401b03821115613cfa57600080fd5b602001915036819003821315611d7b57600080fd5b8183823760009101908152919050565b600063ffffffff8089168352808816602084015286604084015280861660608401525083608083015260c060a0830152613d5c60c08301846136ab565b98975050505050505050565b600060208284031215613d7a57600080fd5b81516113a281613822565b600060608284031215613d9757600080fd5b604051606081018181106001600160401b0382111715613db957613db9613261565b604052825160068110613dcb57600080fd5b81526020830151613ddb81613822565b60208201526040830151613dee81613822565b60408201529392505050565b63ffffffff851681526001600160a01b0384166020820152608060408201819052600090613e2a908301856136ab565b82810360608401526129c581856136ab565b600181811c90821680613e5057607f821691505b60208210810361222357634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115611cb357611cb3613e70565b8082028115828204841417611cb357611cb3613e70565b634e487b7160e01b600052602160045260246000fd5b600060018201613ed857613ed8613e70565b5060010190565b81810381811115611cb357611cb3613e70565b601f82111561254057600081815260208120601f850160051c81016020861015613f195750805b601f850160051c820191505b818110156120a857828155600101613f25565b81516001600160401b03811115613f5157613f51613261565b613f6581613f5f8454613e3c565b84613ef2565b602080601f831160018114613f9a5760008415613f825750858301515b600019600386901b1c1916600185901b1785556120a8565b600085815260208120601f198616915b82811015613fc957888601518255948401946001909101908401613faa565b5085821015613fe75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000826140ad57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f28918c99354ca5da6f3a15221ff400e574f1d25899294bfc1a7b66c5aef250964736f6c63430008110033608060405234801561001057600080fd5b5061095c806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806322e912481161005b57806322e91248146100d45780632d287e43146100e75780637fa5bd55146100fc5780639b24b3b01461010f57600080fd5b806308f62313146100825780630e753781146100ab5780631f35a204146100be575b600080fd5b61009561009036600461069e565b610122565b6040516100a291906106c0565b60405180910390f35b6100956100b936600461076f565b610261565b6100c6602081565b6040519081526020016100a2565b6100c66100e2366004610805565b61034d565b6100fa6100f5366004610805565b61039c565b005b61009561010a366004610805565b61048a565b6100c661011d366004610805565b6104fc565b60608183106101675760405162461bcd60e51b815260206004820152600c60248201526b4f7574206f662072616e676560a01b60448201526064015b60405180910390fd5b6001548211156101b55760405162461bcd60e51b8152602060048201526019602482015278139bdd08195b9bdd59da081b1958599cc81a5b9cd95c9d1959603a1b604482015260640161015e565b60408051602080825261042082019092526000918082016104008036833701905050905060005b602081101561024d5760006001861615610200576101fb600187610834565b61020b565b61020b866001610847565b9050610218828287610555565b83838151811061022a5761022a61085a565b60209081029190910101525060019490941c9361024681610870565b90506101dc565b5061025781610261565b9150505b92915050565b80516060905b60008111801561029a5750600083610280600184610834565b815181106102905761029061085a565b6020026020010151145b156102af576102a881610889565b9050610267565b8067ffffffffffffffff8111156102c8576102c8610704565b6040519080825280602002602001820160405280156102f1578160200160208202803683370190505b50915060005b81811015610346578381815181106103115761031161085a565b602002602001015183828151811061032b5761032b61085a565b602090810291909101015261033f81610870565b90506102f7565b5050919050565b60008181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb56020526040812081610386846001610847565b8152602001908152602001600020549050919050565b60018054906000906103af908390610847565b60008381527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602090815260408083208484529091529020849055905060015b6020811161047157600192831c926104419061041a9061040f9084610834565b600186901b85610555565b61043c610428600185610834565b610436600188811b90610847565b86610555565b610651565b600082815260208181526040808320878452825280832086845290915290205561046a81610870565b90506103ef565b5060016000815461048190610870565b90915550505050565b6001546040516308f6231360e01b815260048101839052602481019190915260609030906308f6231390604401600060405180830381865afa1580156104d4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261025b91908101906108a0565b600060015482111561054c5760405162461bcd60e51b8152602060048201526019602482015278139bdd08195b9bdd59da081b1958599cc81a5b9cd95c9d1959603a1b604482015260640161015e565b61025b60206000845b600082841b6001851b81841161056e5760009250610648565b6105788183610847565b84116105dc5760008681526020818152604080832088845282528083208784529091529020549250826105d75760405162461bcd60e51b815260206004820152600760248201526629ba30b3b2902160c91b604482015260640161015e565b610648565b6000868152602081815260408083208884529091528120906105fe8385610847565b81526020810191909152604001600020549250826106485760405162461bcd60e51b81526020600482015260076024820152665374616765204360c81b604482015260640161015e565b50509392505050565b60008215158061066057508115155b1561069657604080516020810185905290810183905260600160405160208183030381529060405280519060200120905061025b565b50600061025b565b600080604083850312156106b157600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156106f8578351835292840192918401916001016106dc565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561074357610743610704565b604052919050565b600067ffffffffffffffff82111561076557610765610704565b5060051b60200190565b6000602080838503121561078257600080fd5b823567ffffffffffffffff81111561079957600080fd5b8301601f810185136107aa57600080fd5b80356107bd6107b88261074b565b61071a565b81815260059190911b820183019083810190878311156107dc57600080fd5b928401925b828410156107fa578335825292840192908401906107e1565b979650505050505050565b60006020828403121561081757600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561025b5761025b61081e565b8082018082111561025b5761025b61081e565b634e487b7160e01b600052603260045260246000fd5b6000600182016108825761088261081e565b5060010190565b6000816108985761089861081e565b506000190190565b600060208083850312156108b357600080fd5b825167ffffffffffffffff8111156108ca57600080fd5b8301601f810185136108db57600080fd5b80516108e96107b88261074b565b81815260059190911b8201830190838101908783111561090857600080fd5b928401925b828410156107fa5783518252928401929084019061090d56fea26469706673582212202c58e4504db0e488d386b4e87363e649ce8232944c673c5661f04b8f0ac7f7b264736f6c63430008110033608060405234801561001057600080fd5b506109ed806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e75378114610051578063471a4c341461007a578063671dc16f1461008d578063ebf0c717146100a2575b600080fd5b61006461005f366004610724565b6100b9565b60405161007191906107ba565b60405180910390f35b6100646100883660046107fe565b6101a5565b6100a061009b366004610817565b61028c565b005b6100ab60005481565b604051908152602001610071565b80516060905b6000811180156100f257506000836100d8600184610934565b815181106100e8576100e8610947565b6020026020010151145b15610107576101008161095d565b90506100bf565b8067ffffffffffffffff811115610120576101206106b9565b604051908082528060200260200182016040528015610149578160200160208202803683370190505b50915060005b8181101561019e5783818151811061016957610169610947565b602002602001015183828151811061018357610183610947565b602090810291909101015261019781610974565b905061014f565b5050919050565b606060006101b483600261098d565b9050604081106101f95760405162461bcd60e51b815260206004820152600c60248201526b4f7574206f662072616e676560a01b604482015260640160405180910390fd5b60408051600680825260e082019092526000916020820160c08036833701905050905060005b600681101561027a5760008181526001602081815260408084209287188452919052902054825183908390811061025857610258610947565b602090810291909101015260019290921c9161027381610974565b905061021f565b50610284816100b9565b949350505050565b60406000805b8351811015610345576102c56102c08583815181106102b3576102b3610947565b602002602001015161048d565b6104a6565b6000848152600160205260408120906102df85600261098d565b81526020019081526020016000206000600160008781526020019081526020016000206000866002610311919061098d565b61031c9060016109a4565b8152602081019190915260400160002092909255919091555061033e81610974565b9050610292565b50600083516002610356919061098d565b90505b8281101561038b57600082815260016020908152604080832084845290915281205561038481610974565b9050610359565b505b600182111561046d5761039f81610974565b9050600182901c915060005b828110156104675761043d600160006103c48286610934565b815260200190815260200160002060008360026103e1919061098d565b815260200190815260200160002054600160006001866104019190610934565b8152602001908152602001600020600084600261041e919061098d565b6104299060016109a4565b8152602001908152602001600020546104d5565b600083815260016020908152604080832085845290915290205561046081610974565b90506103ab565b5061038d565b600090815260016020908152604080832083805290915281205490555050565b60006104a061049b8361051d565b610530565b92915050565b600080826104bd6104b882602461055c565b610570565b92506104cd6104b8826024610592565b915050915091565b6000821580156104e3575081155b156104f0575060006104a0565b50604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b80516000906020830161028481836105d2565b600061053b8261061c565b61055857604051631ae8107160e21b815260040160405180910390fd5b5090565b600061056983828461063b565b9392505050565b60008061057d8360801c90565b6001600160801b039390931690922092915050565b60006001600160801b038316808311156105bf5760405163a3b99ded60e01b815260040160405180910390fd5b610284836105cd8660801c90565b018483035b6000806105df83856109a4565b90506040518111156105ef575060005b806000036106105760405163085f79c360e11b815260040160405180910390fd5b608084901b8317610284565b600061062a600c60326109a4565b6001600160801b0383161492915050565b6000806106488560801c90565b90506106538561069c565b8361065e86846109a4565b61066891906109a4565b11156106875760405163a3b99ded60e01b815260040160405180910390fd5b610693848201846105d2565b95945050505050565b60006001600160801b0382166106b28360801c90565b0192915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156106f8576106f86106b9565b604052919050565b600067ffffffffffffffff82111561071a5761071a6106b9565b5060051b60200190565b6000602080838503121561073757600080fd5b823567ffffffffffffffff81111561074e57600080fd5b8301601f8101851361075f57600080fd5b803561077261076d82610700565b6106cf565b81815260059190911b8201830190838101908783111561079157600080fd5b928401925b828410156107af57833582529284019290840190610796565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156107f2578351835292840192918401916001016107d6565b50909695505050505050565b60006020828403121561081057600080fd5b5035919050565b6000602080838503121561082a57600080fd5b823567ffffffffffffffff8082111561084257600080fd5b8185019150601f868184011261085757600080fd5b823561086561076d82610700565b81815260059190911b8401850190858101908983111561088457600080fd5b8686015b83811015610910578035868111156108a05760008081fd5b8701603f81018c136108b25760008081fd5b888101356040888211156108c8576108c86106b9565b6108d9828901601f19168c016106cf565b8281528e828486010111156108ee5760008081fd5b828285018d83013760009281018c019290925250845250918701918701610888565b509998505050505050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156104a0576104a061091e565b634e487b7160e01b600052603260045260246000fd5b60008161096c5761096c61091e565b506000190190565b6000600182016109865761098661091e565b5060010190565b80820281158282048414176104a0576104a061091e565b808201808211156104a0576104a061091e56fea26469706673582212203102dff0fa7527ec90bfe7055b099d94ba4ae4fb12d06868d6fb0f9555139f4264736f6c63430008110033608060405234801561001057600080fd5b50610635806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630e7537811461005c57806311149ada1461008557806322e91248146100985780635ca1e165146100e5578063d3b7576c14610134575b600080fd5b61006f61006a366004610429565b610149565b60405161007c91906104e7565b60405180910390f35b61006f61009336600461052b565b610235565b6100d76100a636600461052b565b60009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205490565b60405190815260200161007c565b600080527f569e75fc77c1a856f6daaf9e69d8a9566ca34aa47f9133711ce065a571af0cfd6020527f066740d20359684b7060c341b0db781ceb27b386bb40645634f3feaab75c003d546100d7565b610147610142366004610544565b6102cb565b005b80516060905b600081118015610182575060008361016860018461057c565b815181106101785761017861058f565b6020026020010151145b1561019757610190816105a5565b905061014f565b8067ffffffffffffffff8111156101b0576101b0610413565b6040519080825280602002602001820160405280156101d9578160200160208202803683370190505b50915060005b8181101561022e578381815181106101f9576101f961058f565b60200260200101518382815181106102135761021361058f565b6020908102919091010152610227816105bc565b90506101df565b5050919050565b6040805160208082526104208201909252606091600091908082016104008036833701905050905060005b60208110156102ba5760008181526020818152604080832060018818845290915290205482518390839081106102985761029861058f565b602090810291909101015260019390931c926102b3816105bc565b9050610260565b506102c481610149565b9392505050565b60008281527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb56020526040902081905560015b602081116103c057600183901c9250610398600080600184610320919061057c565b8152602001908152602001600020600085600261033d91906105d5565b81526020019081526020016000205460008060018561035c919061057c565b8152602001908152602001600020600086600261037991906105d5565b6103849060016105ec565b8152602001908152602001600020546103c5565b6000828152602081815260408083208784529091529020556103b9816105bc565b90506102fe565b505050565b6000821580156103d3575081155b156103e05750600061040d565b60408051602081018590529081018390526060016040516020818303038152906040528051906020012090505b92915050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561043c57600080fd5b823567ffffffffffffffff8082111561045457600080fd5b818501915085601f83011261046857600080fd5b81358181111561047a5761047a610413565b8060051b604051601f19603f8301168101818110858211171561049f5761049f610413565b6040529182528482019250838101850191888311156104bd57600080fd5b938501935b828510156104db578435845293850193928501926104c2565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561051f57835183529284019291840191600101610503565b50909695505050505050565b60006020828403121561053d57600080fd5b5035919050565b6000806040838503121561055757600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b8181038181111561040d5761040d610566565b634e487b7160e01b600052603260045260246000fd5b6000816105b4576105b4610566565b506000190190565b6000600182016105ce576105ce610566565b5060010190565b808202811582820484141761040d5761040d610566565b8082018082111561040d5761040d61056656fea26469706673582212205b83e9bdc42f5b1bd507705b8ab3a0e8cd9076d55198941e873ea27665fcf82864736f6c6343000811003360e06040523480156200001157600080fd5b50604051620033b4380380620033b48339810160408190526200003491620000a0565b60408051808201909152600580825264302e302e3360d81b6020830152608052819081816200006381620000cf565b60a0525063ffffffff90811660c05282166103851490506200009857604051632b3a807f60e01b815260040160405180910390fd5b5050620000f7565b600060208284031215620000b357600080fd5b815163ffffffff81168114620000c857600080fd5b9392505050565b80516020808301519190811015620000f1576000198160200360031b1b821691505b50919050565b60805160a05160c0516132866200012e6000396000818161043b01526115ec015260006103b80152600061039501526132866000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c8063715018a611610130578063b269681d116100b8578063e3a96cbd1161007c578063e3a96cbd1461057b578063f2fde38b146105a0578063f8c8765e146105b3578063fb0e722b146105c6578063fbc5265e146105d957600080fd5b8063b269681d1461050f578063c1c0f4f614610522578063c99dcb9e14610542578063c9f1a03f14610555578063cc8755011461056857600080fd5b8063938b5f32116100ff578063938b5f32146104975780639d228a51146104aa5780639fbcb9cb146104d6578063a149352c146104e9578063a2155c34146104fc57600080fd5b8063715018a61461041b57806389791e17146104235780638d3638f4146104365780638da5cb5b1461047257600080fd5b806333d1b2e8116101b35780633eea79d1116101825780633eea79d1146103645780634c3e1c1f1461037757806354fd4d501461038a57806360fc8466146103e857806369978b0d1461040857600080fd5b806333d1b2e81461031e5780633463d1b11461033157806336cba43c146103545780633aaeccc61461035c57600080fd5b8063237a85a5116101fa578063237a85a5146102af5780632853a0e6146102c257806328f3fac9146102d55780632de5aaf7146102f557806333c3a8f31461031657600080fd5b80630e6bfcd51461022c578063127a2c9d1461026457806312db2ef614610285578063130c56731461029a575b600080fd5b61023f61023a3660046127b3565b6105ec565b604080516001600160e01b031990931683526020830191909152015b60405180910390f35b61027761027236600461281f565b61062f565b60405190815260200161025b565b61028d61067e565b60405161025b9190612853565b6102ad6102a83660046128f0565b610695565b005b6102ad6102bd3660046128f0565b61076d565b6102ad6102d03660046129bb565b610945565b6102e86102e3366004612a00565b610980565b60405161025b9190612a71565b610308610303366004612a7f565b610a0b565b60405161025b929190612a98565b60cc54610277565b61028d61032c366004612ab5565b610a52565b61034461033f366004612a00565b610b2d565b60405161025b9493929190612ad7565b60cd54610277565b609b54610277565b61028d610372366004612a00565b610c69565b6102ad6103853660046128f0565b610cc8565b6040805180820182527f000000000000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006020820152905161025b9190612b5e565b6103fb6103f6366004612b71565b610d6b565b60405161025b9190612be6565b6102ad6104163660046129bb565b610970565b6102ad610ebd565b6102ad610431366004612c5c565b610ee9565b61045d7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161025b565b6033546001600160a01b03165b6040516001600160a01b03909116815260200161025b565b60975461047f906001600160a01b031681565b6104bd6104b8366004612c91565b6110b4565b6040516001600160e01b0319909116815260200161025b565b60c95461047f906001600160a01b031681565b6104bd6104f7366004612cf3565b611123565b6102ad61050a366004612d28565b611161565b60985461047f906001600160a01b031681565b610535610530366004612d61565b611456565b60405161025b9190612d7e565b610277610550366004612a00565b611583565b6102ad6105633660046127b3565b611594565b6102ad610576366004612dbf565b6115bf565b61058e610589366004612a7f565b61173f565b60405161025b96959493929190612ded565b6102ad6105ae366004612a00565b6118b9565b6102ad6105c1366004612e48565b611954565b60995461047f906001600160a01b031681565b6102ad6105e73660046128f0565b611a32565b60985460009081906001600160a01b0316331461061c57604051636efcc49f60e01b815260040160405180910390fd5b50630e6bfcd560e01b9491935090915050565b6098546000906001600160a01b0316331461065d57604051636efcc49f60e01b815260040160405180910390fd5b8161066b5761474d60f01b91505b5063127a2c9d60e01b81185b9392505050565b6060610690600060cc80549050610a52565b905090565b6033546001600160a01b031633146106c85760405162461bcd60e51b81526004016106bf90612e9c565b60405180910390fd5b60006106d383610980565b90506106de81611aa7565b8363ffffffff16816020015163ffffffff161461070e57604051630b09697760e11b815260040160405180910390fd5b600061071c60018686611ada565b9050610766818460405180606001604052806002600581111561074157610741612a1b565b81526020018963ffffffff168152602001866040015163ffffffff1681525087611b10565b5050505050565b6033546001600160a01b031633146107975760405162461bcd60e51b81526004016106bf90612e9c565b6103841963ffffffff8416016107c05760405163079597d560e51b815260040160405180910390fd5b60006107cb83611c59565b905060008080835160058111156107e4576107e4612a1b565b036108905760cc5463ffffffff1161080f576040516377ae67b360e11b815260040160405180910390fd5b60cc805460018082019092557f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebe810180546001600160a01b0389166001600160a01b0319918216811790925563ffffffff8a16600090815260cb602090815260408220805496870181558252902090930180549093161790915591506108f9565b6003835160058111156108a5576108a5612a1b565b1480156108c157508563ffffffff16836020015163ffffffff16145b156108e057826040015191506108d960038787611ada565b90506108f9565b6040516386511bd960e01b815260040160405180910390fd5b61093d818560405180606001604052806001600581111561091c5761091c612a1b565b81526020018a63ffffffff1681526020018663ffffffff1681525088611b10565b505050505050565b6099546001600160a01b031633146109705760405163dbc2fa8560e01b815260040160405180910390fd5b61097b838383611cee565b505050565b60408051606081018252600080825260208201819052918101919091526109a682611c59565b90506002609a60006109b785611d90565b815260208101919091526040016000205460ff1660028111156109dc576109dc612a1b565b1480156109fc57506005815160058111156109f9576109f9612a1b565b14155b15610a0657600481525b919050565b60408051606081018252600080825260208201819052918101829052610a3083611dba565b91506001600160a01b03821615610a4d57610a4a82610980565b90505b915091565b60cc54606090808410610a7857604051631390f2a160e01b815260040160405180910390fd5b80610a838486612ee7565b1115610a9657610a938482612efa565b92505b8267ffffffffffffffff811115610aaf57610aaf6128a9565b604051908082528060200260200182016040528015610ad8578160200160208202803683370190505b50915060005b83811015610b2557610af8610af38287612ee7565b611df5565b838281518110610b0a57610b0a612f0d565b6020908102919091010152610b1e81612f23565b9050610ade565b505092915050565b6000806000806000610b3e86611d90565b6000818152609a602052604080822081516060810190925280549394509192909190829060ff166002811115610b7657610b76612a1b565b6002811115610b8757610b87612a1b565b8152905461010081046001600160581b03908116602080850191909152600160601b9092046001600160a01b03166040938401528351928401519184015192995090965016935090508215610c60576000609b610be5600186612efa565b81548110610bf557610bf5612f0d565b600091825260209182902060408051606081018252929091015463ffffffff8082168085526401000000008304821695850195909552600160401b90910416908201529150610c5c908414610c4b578151610c51565b81602001515b63ffffffff16611dba565b9550505b50509193509193565b60606000610c7561067e565b90506000610c8284611c59565b905060008082516005811115610c9a57610c9a612a1b565b14610caf57816040015163ffffffff16610cb3565b60cc545b9050610cbf8382611e2d565b95945050505050565b6033546001600160a01b03163314610cf25760405162461bcd60e51b81526004016106bf90612e9c565b6000610cfd83610980565b9050610d0881611f9c565b8363ffffffff16816020015163ffffffff1614610d3857604051630b09697760e11b815260040160405180910390fd5b6000610d4660028686611ada565b9050610766818460405180606001604052806003600581111561074157610741612a1b565b6060818067ffffffffffffffff811115610d8757610d876128a9565b604051908082528060200260200182016040528015610dcd57816020015b604080518082019091526000815260606020820152815260200190600190039081610da55790505b5091503660005b82811015610eb457858582818110610dee57610dee612f0d565b9050602002810190610e009190612f3c565b91506000848281518110610e1657610e16612f0d565b60200260200101519050306001600160a01b0316838060200190610e3a9190612f5c565b604051610e48929190612faa565b600060405180830381855af49150503d8060008114610e83576040519150601f19603f3d011682016040523d82523d6000602084013e610e88565b606091505b5060208301521515808252833517610eab576309ad446560e31b60005260046000fd5b50600101610dd4565b50505092915050565b6033546001600160a01b03163314610ee75760405162461bcd60e51b81526004016106bf90612e9c565b565b6033546001600160a01b03163314610f135760405162461bcd60e51b81526004016106bf90612e9c565b6000609a6000610f2284611d90565b8152602081019190915260409081016000208151606081019092528054829060ff166002811115610f5557610f55612a1b565b6002811115610f6657610f66612a1b565b8152905461010081046001600160581b03166020830152600160601b90046001600160a01b03166040909101529050600081516002811115610faa57610faa612a1b565b03610fc8576040516359d38fd160e11b815260040160405180910390fd5b600281516002811115610fdd57610fdd612a1b565b03610ffb5760405163f10068b560e01b815260040160405180910390fd5b6098546040805163204c48a960e11b815290516000926001600160a01b03169163409891529160048083019260609291908290030181865afa158015611045573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110699190612fcf565b505090508064ffffffffff166138406110829190612ee7565b4210156110a2576040516301bf715b60e61b815260040160405180910390fd5b6110ae84846000611cee565b50505050565b6098546000906001600160a01b031633146110e257604051636efcc49f60e01b815260040160405180910390fd5b6201518085101561110657604051630a8928dd60e41b815260040160405180910390fd5b611111848484611cee565b50639d228a5160e01b95945050505050565b6098546000906001600160a01b0316331461115157604051636efcc49f60e01b815260040160405180910390fd5b506328524d4b60e21b9392505050565b6099546001600160a01b0316331461118c5760405163dbc2fa8560e01b815260040160405180910390fd5b63ffffffff82166000908152609a602052604081205460ff1660028111156111b6576111b6612a1b565b146111d45760405163367526d360e21b815260040160405180910390fd5b63ffffffff81166000908152609a602052604081205460ff1660028111156111fe576111fe612a1b565b1461121c57604051636893014360e01b815260040160405180910390fd5b604080516060808201835263ffffffff8086168352848116602084019081526000848601818152609b8054600181810183559382905296517fbba9db4cdbea0a37c207bbb83e20f828cd4441c49891101dc94fd20dc8efc3499097018054945192518616600160401b0263ffffffff60401b199387166401000000000267ffffffffffffffff1990961698909616979097179390931716929092179093559154835191820190935290819081526001600160581b0383166020808301919091526000604092830181905263ffffffff87168152609a9091522081518154829060ff1916600183600281111561131357611313612a1b565b0217905550602082015181546040938401516001600160a01b0316600160601b026001600160601b036001600160581b03909316610100029290921660ff9091161717905580516060810190915280600181526001600160581b0383166020808301919091526000604092830181905263ffffffff86168152609a9091522081518154829060ff191660018360028111156113b0576113b0612a1b565b0217905550602082015181546040909301516001600160a01b0316600160601b026001600160601b036001600160581b03909216610100029190911660ff909316929092179190911790557fd0672fae056abe2bf0637742527d49add67fdb68192a6c6f6bf86eac19fe0530611427600183612efa565b6040805191825263ffffffff808716602084015285169082015260600160405180910390a161097b8383611fcf565b63ffffffff8116600090815260cb60205260409020546060908067ffffffffffffffff811115611488576114886128a9565b6040519080825280602002602001820160405280156114b1578160200160208202803683370190505b5091506000805b828110156115705763ffffffff8516600090815260cb602052604081208054839081106114e7576114e7612f0d565b6000918252602090912001546001600160a01b03169050600161150982610980565b51600581111561151b5761151b612a1b565b0361155f5780858461152c81612f23565b95508151811061153e5761153e612f0d565b60200260200101906001600160a01b031690816001600160a01b0316815250505b5061156981612f23565b90506114b8565b5081811461157c578083525b5050919050565b600061158e826120a2565b92915050565b6098546001600160a01b0316331461097b57604051636efcc49f60e01b815260040160405180910390fd5b60c9546001600160a01b031633146115ea576040516364e24e7360e11b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168263ffffffff160361168857609754604051634e04e7a760e01b81526001600160a01b0385811660048301526024820184905290911690634e04e7a790604401600060405180830381600087803b15801561166b57600080fd5b505af115801561167f573d6000803e3d6000fd5b50505050505050565b609754604080516001600160a01b038681166024830152604480830186905283518084039091018152606490920183526020820180516001600160e01b03166303f40e2760e31b179052915163a1c702a760e01b8152919092169163a1c702a7916116fd918691620151809190600401613016565b60408051808303816000875af115801561171b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610766919061303f565b600080600080606080609b80549050871061176d57604051631390f2a160e01b815260040160405180910390fd5b6000609b888154811061178257611782612f0d565b600091825260209182902060408051606081018252929091015463ffffffff8082168085526401000000008304821695850195909552600160401b909104169082015291506117d090611dba565b96506117e5816020015163ffffffff16611dba565b604082015190965063ffffffff16156118395761180b816040015163ffffffff16611dba565b60408281015163ffffffff166000908152609a6020522054909550600160601b90046001600160a01b031693505b60995460405163c495912b60e01b8152600481018a90526001600160a01b039091169063c495912b90602401600060405180830381865afa158015611882573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118aa91908101906130d1565b97999698509496939592505050565b6033546001600160a01b031633146118e35760405162461bcd60e51b81526004016106bf90612e9c565b6001600160a01b0381166119485760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106bf565b611951816120e3565b50565b60006119606001612135565b90508015611978576000805461ff0019166101001790555b6119838585856121bd565b60c980546001600160a01b0319166001600160a01b0384161790556119a6612223565b60cc80546001810182556000919091527f47197230e1e4b29fc0bd84d7d78966c0925452aff72a2a121538b102457e9ebe0180546001600160a01b03191690558015610766576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050505050565b6000611a3d83610980565b9050611a4881612252565b8363ffffffff16816020015163ffffffff1614611a7857604051630b09697760e11b815260040160405180910390fd5b6000611a83846120a2565b90506107668184604051806060016040528060058081111561074157610741612a1b565b600181516005811115611abc57611abc612a1b565b1461195157604051632437e77160e11b815260040160405180910390fd5b6000838383604051602001611af193929190613135565b6040516020818303038152906040528051906020012090509392505050565b6000611b258360000151846020015184611ada565b90506000611b4d846040015163ffffffff1687878560cd61228590949392919063ffffffff16565b6001600160a01b038416600090815260ca60205260409020855181549293508692829060ff19166001836005811115611b8857611b88612a1b565b0217905550602082810151825460409485015168ffffffffffffffff001990911661010063ffffffff9384160268ffffffff0000000000191617650100000000009183169190910217909255860151865192516001600160a01b0387169391909216917f8f9b8b0f4f062833bec85ea9a8465e4a1207b4be6eb565bbd0ae8b913588d04e91611c1691613182565b60405180910390a36040518181527f2cbc14f49c068133583f7cb530018af451c87c1cf1327cf2a4ff4698c4730aa49060200160405180910390a1505050505050565b60408051606081018252600080825260208201819052918101919091526001600160a01b038216600090815260ca6020526040908190208151606081019092528054829060ff166005811115611cb157611cb1612a1b565b6005811115611cc257611cc2612a1b565b8152905463ffffffff610100820481166020840152650100000000009091041660409091015292915050565b6000611cf983611c59565b9050611d04816122d0565b8363ffffffff16816020015163ffffffff1614611d3457604051630b09697760e11b815260040160405180910390fd5b826001600160a01b03168463ffffffff167f8f9b8b0f4f062833bec85ea9a8465e4a1207b4be6eb565bbd0ae8b913588d04e6004604051611d759190613182565b60405180910390a3611d8b816040015183612324565b6110ae565b6001600160a01b0316600090815260ca602052604090205465010000000000900463ffffffff1690565b60cc54600090821015610a065760cc8281548110611dda57611dda612f0d565b6000918252602090912001546001600160a01b031692915050565b60008115610a065761158e60cc8381548110611e1357611e13612f0d565b6000918252602090912001546001600160a01b03166120a2565b60606000611e5384518410611e4c57611e47846001612ee7565b6125b9565b84516125b9565b90508067ffffffffffffffff811115611e6e57611e6e6128a9565b604051908082528060200260200182016040528015611e97578160200160208202803683370190505b50845190925060005b82811015610eb457818560011810611eb9576000611ed7565b858560011881518110611ece57611ece612f0d565b60200260200101515b848281518110611ee957611ee9612f0d565b60200260200101818152505060005b82811015611f895760008160010190506000888381518110611f1c57611f1c612f0d565b602002602001015190506000858310611f36576000611f51565b898381518110611f4857611f48612f0d565b60200260200101515b9050611f5d82826125d2565b8a600186901c81518110611f7357611f73612f0d565b6020908102919091010152505050600201611ef8565b50600194851c94918201821c9101611ea0565b600281516005811115611fb157611fb1612a1b565b146119515760405163398debe560e21b815260040160405180910390fd5b609854604051632885570d60e21b815263ffffffff8085166004830152831660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b15801561202257600080fd5b505af1158015612036573d6000803e3d6000fd5b505060c954604051632885570d60e21b815263ffffffff8087166004830152851660248201526001600160a01b03909116925063a2155c3491506044015b600060405180830381600087803b15801561208e57600080fd5b505af115801561093d573d6000803e3d6000fd5b6000806120ae83611c59565b90506000815160058111156120c5576120c5612a1b565b146120dd576106778160000151826020015185611ada565b50919050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff161561217c578160ff1660011480156121585750303b155b6121745760405162461bcd60e51b81526004016106bf90613190565b506000919050565b60005460ff8084169116106121a35760405162461bcd60e51b81526004016106bf90613190565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff166121e45760405162461bcd60e51b81526004016106bf906131de565b609780546001600160a01b039485166001600160a01b031991821617909155609880549385169382169390931790925560998054919093169116179055565b600054610100900460ff1661224a5760405162461bcd60e51b81526004016106bf906131de565b610ee761261a565b60048151600581111561226757612267612a1b565b1461195157604051630a06903760e01b815260040160405180910390fd5b8454600090612297868686602061264a565b146122b557604051630c5805f160e11b815260040160405180910390fd5b6122c2858385602061264a565b958690555093949350505050565b6001815160058111156122e5576122e5612a1b565b14158015612306575060028151600581111561230357612303612a1b565b14155b156119515760405163ec3d0d8560e01b815260040160405180910390fd5b63ffffffff82166000908152609a60205260408082208151606081019092528054829060ff16600281111561235b5761235b612a1b565b600281111561236c5761236c612a1b565b8152905461010081046001600160581b03166020830152600160601b90046001600160a01b031660409091015290506002815160028111156123b0576123b0612a1b565b036123ce5760405163f10068b560e01b815260040160405180910390fd5b60028082526001600160a01b03831660408084019190915263ffffffff85166000908152609a60205220825181548493839160ff191690600190849081111561241957612419612a1b565b021790555060208281015182546040909401516001600160a01b0316600160601b026001600160601b036001600160581b03928316610100021660ff909516949094179390931790915582015160009116156125af576000600183602001516124829190613229565b6001600160581b031690506000609b82815481106124a2576124a2612f0d565b600091825260209182902060408051606081018252919092015463ffffffff80821683526401000000008204811694830194909452600160401b900490921690820152609b80549192508791849081106124fe576124fe612f0d565b600091825260209182902001805463ffffffff60401b1916600160401b63ffffffff9485160217905582015187821691161461253e578060200151612541565b80515b63ffffffff8181166000818152609a60209081526040808320929092558151878152938b16908401528201526001600160a01b03871660608201529093507fb4cad5624e1d1c6c622ec70516ee582fe3f6519440c5b47e5165141edc9c54cf9060800160405180910390a150505b6110ae84826126d9565b600060015b828110156120dd576001918201911b6125be565b6000821580156125e0575081155b156125ed5750600061158e565b50604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600054610100900460ff166126415760405162461bcd60e51b81526004016106bf906131de565b610ee7336120e3565b8151600090828111156126705760405163c5360feb60e01b815260040160405180910390fd5b84915060005b818110156126ad576126a38386838151811061269457612694612f0d565b60200260200101518984612782565b9250600101612676565b50805b838110156126cf576126c58360008984612782565b92506001016126b0565b5050949350505050565b609854604051630c22d24360e31b815263ffffffff8085166004830152831660248201526001600160a01b0390911690636116921890604401600060405180830381600087803b15801561272c57600080fd5b505af1158015612740573d6000803e3d6000fd5b505060c954604051630c22d24360e31b815263ffffffff8087166004830152851660248201526001600160a01b03909116925063611692189150604401612074565b6000600183831c1681036127a15761279a85856125d2565b90506127ab565b61279a84866125d2565b949350505050565b6000806000606084860312156127c857600080fd5b833561ffff811681146127da57600080fd5b925060208401356001600160e01b0319811681146127f757600080fd5b929592945050506040919091013590565b80356001600160a01b0381168114610a0657600080fd5b60008060006060848603121561283457600080fd5b61283d84612808565b9250602084013560ff811681146127f757600080fd5b6020808252825182820181905260009190848201906040850190845b8181101561288b5783518352928401929184019160010161286f565b50909695505050505050565b63ffffffff8116811461195157600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156128e8576128e86128a9565b604052919050565b60008060006060848603121561290557600080fd5b833561291081612897565b9250602061291f858201612808565b9250604085013567ffffffffffffffff8082111561293c57600080fd5b818701915087601f83011261295057600080fd5b813581811115612962576129626128a9565b8060051b91506129738483016128bf565b818152918301840191848101908a84111561298d57600080fd5b938501935b838510156129ab57843582529385019390850190612992565b8096505050505050509250925092565b6000806000606084860312156129d057600080fd5b83356129db81612897565b92506129e960208501612808565b91506129f760408501612808565b90509250925092565b600060208284031215612a1257600080fd5b61067782612808565b634e487b7160e01b600052602160045260246000fd5b60068110612a4157612a41612a1b565b9052565b612a50828251612a31565b60208181015163ffffffff9081169184019190915260409182015116910152565b6060810161158e8284612a45565b600060208284031215612a9157600080fd5b5035919050565b6001600160a01b0383168152608081016106776020830184612a45565b60008060408385031215612ac857600080fd5b50508035926020909101359150565b6080810160038610612aeb57612aeb612a1b565b9481526001600160a01b0393841660208201529190921660408201526060015290565b60005b83811015612b29578181015183820152602001612b11565b50506000910152565b60008151808452612b4a816020860160208601612b0e565b601f01601f19169290920160200192915050565b6020815260006106776020830184612b32565b60008060208385031215612b8457600080fd5b823567ffffffffffffffff80821115612b9c57600080fd5b818501915085601f830112612bb057600080fd5b813581811115612bbf57600080fd5b8660208260051b8501011115612bd457600080fd5b60209290920196919550909350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015612c4e57888303603f190185528151805115158452870151878401879052612c3b87850182612b32565b9588019593505090860190600101612c0d565b509098975050505050505050565b60008060408385031215612c6f57600080fd5b8235612c7a81612897565b9150612c8860208401612808565b90509250929050565b600080600080600060a08688031215612ca957600080fd5b8535612cb481612897565b9450602086013593506040860135612ccb81612897565b9250612cd960608701612808565b9150612ce760808701612808565b90509295509295909350565b600080600060608486031215612d0857600080fd5b8335612d1381612897565b95602085013595506040909401359392505050565b60008060408385031215612d3b57600080fd5b8235612d4681612897565b91506020830135612d5681612897565b809150509250929050565b600060208284031215612d7357600080fd5b813561067781612897565b6020808252825182820181905260009190848201906040850190845b8181101561288b5783516001600160a01b031683529284019291840191600101612d9a565b600080600060608486031215612dd457600080fd5b612ddd84612808565b925060208401356127f781612897565b6001600160a01b038781168252868116602083015285811660408301528416606082015260c060808201819052600090612e2990830185612b32565b82810360a0840152612e3b8185612b32565b9998505050505050505050565b60008060008060808587031215612e5e57600080fd5b612e6785612808565b9350612e7560208601612808565b9250612e8360408601612808565b9150612e9160608601612808565b905092959194509250565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561158e5761158e612ed1565b8181038181111561158e5761158e612ed1565b634e487b7160e01b600052603260045260246000fd5b600060018201612f3557612f35612ed1565b5060010190565b60008235603e19833603018112612f5257600080fd5b9190910192915050565b6000808335601e19843603018112612f7357600080fd5b83018035915067ffffffffffffffff821115612f8e57600080fd5b602001915036819003821315612fa357600080fd5b9250929050565b8183823760009101908152919050565b805164ffffffffff81168114610a0657600080fd5b600080600060608486031215612fe457600080fd5b612fed84612fba565b9250612ffb60208501612fba565b9150604084015161300b81612897565b809150509250925092565b600063ffffffff808616835280851660208401525060606040830152610cbf6060830184612b32565b6000806040838503121561305257600080fd5b825161305d81612897565b6020939093015192949293505050565b600082601f83011261307e57600080fd5b815167ffffffffffffffff811115613098576130986128a9565b6130ab601f8201601f19166020016128bf565b8181528460208386010111156130c057600080fd5b6127ab826020830160208701612b0e565b600080604083850312156130e457600080fd5b825167ffffffffffffffff808211156130fc57600080fd5b6131088683870161306d565b9350602085015191508082111561311e57600080fd5b5061312b8582860161306d565b9150509250929050565b60006006851061314757613147612a1b565b5060f89390931b835260e09190911b6001600160e01b031916600183015260601b6bffffffffffffffffffffffff1916600582015260190190565b6020810161158e8284612a31565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160581b0382811682821603908082111561324957613249612ed1565b509291505056fea26469706673582212204f4c65b49baa7f804cf8a3d6ef70a191cdd7e127a9fb8c7b53cd55e035f0033964736f6c63430008110033608060405234801561001057600080fd5b50610182806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806334926b2914610051578063556517b71461006757806372010a93146100b4578063867baea5146100cb575b600080fd5b60005b6040519081526020015b60405180910390f35b6100876100753660046100f7565b60008060008060008091939550919395565b604080519687526020870195909552938501929092526060840152608083015260a082015260c00161005e565b6100546100c2366004610119565b60009392505050565b6100dc6100d93660046100f7565b50565b005b803563ffffffff811681146100f257600080fd5b919050565b60006020828403121561010957600080fd5b610112826100de565b9392505050565b60008060006060848603121561012e57600080fd5b610137846100de565b9560208501359550604090940135939250505056fea2646970667358221220c6b8b160af51d8f19d6999f4f5aed3e2f694f3c5ad995c0927e6c33c7f3fdb8a64736f6c6343000811003361010060405234801561001157600080fd5b506040516114f03803806114f08339810160408190526100309161007b565b60408051808201909152600580825264302e302e3360d81b6020830152608052828161005b816100ca565b60a0525063ffffffff1660c052506001600160a01b031660e052506100f1565b6000806040838503121561008e57600080fd5b825163ffffffff811681146100a257600080fd5b60208401519092506001600160a01b03811681146100bf57600080fd5b809150509250929050565b805160208083015191908110156100eb576000198160200360031b1b821691505b50919050565b60805160a05160c05160e0516113a361014d600039600081816102f00152610ccf0152600081816101230152818161028f01528181610693015281816106df0152610c74015260006101930152600061017001526113a36000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a6116100975780638d3638f4116100665780638d3638f41461028a5780638da5cb5b146102c6578063b269681d146102eb578063f2fde38b1461031257600080fd5b8063715018a61461025457806372010a931461025c5780638129fc1c1461026f578063867baea51461027757600080fd5b806360fc8466116100d357806360fc846614610203578063621b58de1461022357806364619d661461022c57806367fb40931461024157600080fd5b806333ae7bb71461010557806334926b291461012157806354fd4d5014610165578063556517b7146101c3575b600080fd5b61010e61012c81565b6040519081526020015b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff166000908152609760205260409020546001600160601b031661010e565b6040805180820182527f000000000000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000602082015290516101189190610f64565b6101d66101d1366004610f8b565b610325565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610118565b610216610211366004610fa6565b6103dd565b604051610118919061101b565b61010e610e1081565b61023f61023a366004611091565b61052f565b005b61023f61024f3660046110e4565b610634565b61023f610663565b61010e61026a3660046110fd565b61068f565b61023f61090d565b61023f610285366004610f8b565b610982565b6102b17f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610118565b6033546001600160a01b03165b6040516001600160a01b039091168152602001610118565b6102d37f000000000000000000000000000000000000000000000000000000000000000081565b61023f610320366004611130565b6109a7565b63ffffffff8116600090815260976020526040812054819081908190819081906001600160601b038116906103609060501c61ffff16610a3f565b9650610375604082901c63ffffffff16610a3f565b955061038c603082901c65ffffffffffff16610a3f565b94506103a5602082901c67ffffffffffffffff16610a3f565b93506103bd601082901c6001600160501b0316610a3f565b92506103d16001600160601b038216610a3f565b91505091939550919395565b6060818067ffffffffffffffff8111156103f9576103f9611159565b60405190808252806020026020018201604052801561043f57816020015b6040805180820190915260008152606060208201528152602001906001900390816104175790505b5091503660005b82811015610526578585828181106104605761046061116f565b90506020028101906104729190611185565b915060008482815181106104885761048861116f565b60200260200101519050306001600160a01b03168380602001906104ac91906111a5565b6040516104ba9291906111f3565b600060405180830381855af49150503d80600081146104f5576040519150601f19603f3d011682016040523d82523d6000602084013e6104fa565b606091505b506020830152151580825283351761051d576309ad446560e31b60005260046000fd5b50600101610446565b50505092915050565b6033546001600160a01b031633146105625760405162461bcd60e51b815260040161055990611203565b60405180910390fd5b60006105f561057088610a6b565b61057988610a6b565b61058288610a6b565b61058b88610a6b565b61059488610a6b565b61059d88610a6b565b61ffff60501b605087901b1669ffff0000000000000000604087901b161767ffff000000000000603086901b161765ffff00000000602085901b161763ffff0000601084901b161761ffff8216179695505050505050565b63ffffffff89166000908152609760205260409020549091506001600160601b0380831691161461062a5761062a8882610b1d565b5050505050505050565b6033546001600160a01b0316331461065e5760405162461bcd60e51b815260040161055990611203565b609855565b6033546001600160a01b0316331461068d5760405162461bcd60e51b815260040161055990611203565b565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff168463ffffffff16036106dd576040516353a9611960e11b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff166000908152609760205260408120546001600160601b03811691906107399060101c6001600160501b03165b61ffff16610a3f565b90508060000361075c57604051631a0b055d60e21b815260040160405180910390fd5b63ffffffff86166000908152609760205260408120546001600160601b03811691906107939060101c6001600160501b0316610730565b9050806000036107b657604051630ffb739760e01b815260040160405180910390fd5b60985487906000906107cc90869060401b61124e565b9050600085846107e9602088901c67ffffffffffffffff16610730565b6107f39190611270565b6107fd919061124e565b905060008685610818603089901c65ffffffffffff16610730565b8c61082c60408b901c63ffffffff16610730565b6108369190611270565b67ffffffffffffffff602089901c1661085661ffff60508d901c16610730565b6108609190611270565b61086a9190611287565b6108749190611287565b61087e9190611270565b610888919061124e565b9050600060406108a06001600160601b038916610730565b6108aa9084611270565b901c905067ffffffffffffffff602082811c919091169083901b6fffffffffffffffff000000000000000016606085901b67ffffffffffffffff60801b1660a087901b6001600160c01b03191617171799505050505050505050505b9392505050565b60006109196001610b8f565b90508015610931576000805461ff0019166101001790555b610939610c1c565b801561097f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b60008061098e83610c4b565b9150915081156109a2576109a28382610b1d565b505050565b6033546001600160a01b031633146109d15760405162461bcd60e51b815260040161055990611203565b6001600160a01b038116610a365760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610559565b61097f81610e3e565b600060ff600883901c81169080841690819003610a5d575092915050565b610100909101901b92915050565b600080610aee8360016fffffffffffffffffffffffffffffffff821160071b91821c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211871b91821c969096119490961792909217171791909117919091171790565b90506008811015610b04576109068360ff610e90565b6007198101610b1584821c82610e90565b949350505050565b63ffffffff821660008181526097602090815260409182902080546bffffffffffffffffffffffff19166001600160601b0386169081179091558251938452908301527fae7a6216b3de7722222303567564b3f11777a9665d278ef3762110de410e12b3910160405180910390a15050565b60008054610100900460ff1615610bd6578160ff166001148015610bb25750303b155b610bce5760405162461bcd60e51b81526004016105599061129a565b506000919050565b60005460ff808416911610610bfd5760405162461bcd60e51b81526004016105599061129a565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610c435760405162461bcd60e51b8152600401610559906112e8565b61068d610ea5565b63ffffffff808216600081815260976020526040812054909283926001600160601b03909216917f00000000000000000000000000000000000000000000000000000000000000009091169003610ca757600094909350915050565b60405163d0dd067560e01b815263ffffffff8516600482015260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d0dd0675906024016040805180830381865afa158015610d15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d399190611333565b9150915080600003610d5357506000959194509092505050565b610e1c610d71605085901c61ffff16605085901c61ffff1684610ed5565b610d90604086901c63ffffffff16604086901c63ffffffff1685610ed5565b610db3603087901c65ffffffffffff16603087901c65ffffffffffff1686610ed5565b610dda602088901c67ffffffffffffffff16602088901c67ffffffffffffffff1687610ed5565b610dff601089901c6001600160501b0316601089901c6001600160501b031688610ed5565b61059d6001600160601b038a166001600160601b038a1689610ed5565b9350826001600160601b0316846001600160601b031614159450505050915091565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61ff00600883901b1660ff8216175b92915050565b600054610100900460ff16610ecc5760405162461bcd60e51b8152600401610559906112e8565b61068d33610e3e565b6000610ee48461ffff16610a3f565b610ef18461ffff16610a3f565b1115610f0f5761012c8210610f065782610f08565b835b9050610906565b610e108210610f065782610f08565b6000815180845260005b81811015610f4457602081850181015186830182015201610f28565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006109066020830184610f1e565b803563ffffffff81168114610c1757600080fd5b600060208284031215610f9d57600080fd5b61090682610f77565b60008060208385031215610fb957600080fd5b823567ffffffffffffffff80821115610fd157600080fd5b818501915085601f830112610fe557600080fd5b813581811115610ff457600080fd5b8660208260051b850101111561100957600080fd5b60209290920196919550909350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561108357888303603f19018552815180511515845287015187840187905261107087850182610f1e565b9588019593505090860190600101611042565b509098975050505050505050565b600080600080600080600060e0888a0312156110ac57600080fd5b6110b588610f77565b9960208901359950604089013598606081013598506080810135975060a0810135965060c00135945092505050565b6000602082840312156110f657600080fd5b5035919050565b60008060006060848603121561111257600080fd5b61111b84610f77565b95602085013595506040909401359392505050565b60006020828403121561114257600080fd5b81356001600160a01b038116811461090657600080fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008235603e1983360301811261119b57600080fd5b9190910192915050565b6000808335601e198436030181126111bc57600080fd5b83018035915067ffffffffffffffff8211156111d757600080fd5b6020019150368190038213156111ec57600080fd5b9250929050565b8183823760009101908152919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008261126b57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610e9f57610e9f611238565b80820180821115610e9f57610e9f611238565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000806040838503121561134657600080fd5b82516001600160601b038116811461135d57600080fd5b602093909301519294929350505056fea2646970667358221220cd3a7fb501d201391861ed02c7640ed683908c8c8f28c5270f7c874de267ebb864736f6c6343000811003360e06040523480156200001157600080fd5b506040516200377a3803806200377a83398101604081905262000034916200009e565b60408051808201909152600580825264302e302e3360d81b602083015260805281816200006181620000cd565b60a0525063ffffffff90811660c052821661038419019050620000975760405163079597d560e51b815260040160405180910390fd5b50620000f5565b600060208284031215620000b157600080fd5b815163ffffffff81168114620000c657600080fd5b9392505050565b80516020808301519190811015620000ef576000198160200360031b1b821691505b50919050565b60805160a05160c05161364762000133600039600081816102d60152818161172a0152611761015260006101ed015260006101ca01526136476000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80637be8e738116100c3578063c0c53b8b1161007c578063c0c53b8b14610357578063c25aa5851461036a578063c495912b1461037d578063ddeffa661461039e578063dfe39675146103b1578063f2fde38b146103c457600080fd5b80637be8e738146102be5780638d3638f4146102d15780638da5cb5b1461030d57806391af2e5d1461031e578063938b5f3214610331578063b269681d1461034457600080fd5b80636238970911610115578063623897091461023f5780636c38f72314610252578063715018a614610265578063756ed01d1461026f5780637622f78d1461028057806377ec5c10146102ab57600080fd5b80630b6b985c1461015d5780630db27e7714610185578063200f6b6614610198578063213a6ddb146101ab57806354fd4d50146101be57806360fc84661461021f575b600080fd5b61017061016b366004612a08565b6103d7565b60405190151581526020015b60405180910390f35b610170610193366004612b4c565b610509565b6101706101a6366004612c25565b610577565b6101706101b9366004612cb6565b61071e565b604080518082019091527f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201525b60405161017c9190612d68565b61023261022d366004612d7b565b61087c565b60405161017c9190612def565b61017061024d366004612c25565b6109cd565b610170610260366004612e65565b610abf565b61026d610c14565b005b609b5460405190815260200161017c565b609754610293906001600160a01b031681565b6040516001600160a01b03909116815260200161017c565b6101706102b9366004612f4a565b610c75565b6101706102cc366004612f98565b610d4d565b6102f87f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161017c565b6033546001600160a01b0316610293565b61017061032c366004612ffc565b610eba565b609854610293906001600160a01b031681565b609954610293906001600160a01b031681565b61026d610365366004613076565b611006565b610170610378366004612ffc565b611081565b61039061038b3660046130b9565b611152565b60405161017c9291906130d2565b6102126103ac3660046130b9565b6112fe565b6101706103bf366004612ffc565b6113ad565b61026d6103d23660046130f7565b61147f565b6000806103e38561154a565b905060006103f18289611563565b905060006103ff82896115d1565b50905061040b81611635565b600061041687611668565b90506000610424828861167b565b509050610430816116d4565b61043d8160200151611728565b610446826117aa565b61044f866117bb565b1461046d576040516312a37cf560e11b815260040160405180910390fd5b61048461047e85611893565b611893565b8b6118c9565b609754604084810151838201519151632885570d60e21b815263ffffffff9182166004820152911660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b1580156104e057600080fd5b505af11580156104f4573d6000803e3d6000fd5b5060019e9d5050505050505050505050505050565b60008061051587611963565b9050600061052382886115d1565b50905061052f81611635565b600061053a86611668565b90506000610548828761167b565b509050610554816116d4565b6105618160200151611728565b61056d828c868b611971565b6104848a8a6118c9565b60008061058384611668565b9050600080610592838661167b565b9150915061059f826116d4565b60006105aa8861154a565b90506105b5846117aa565b6105be826117bb565b146105dc576040516312a37cf560e11b815260040160405180910390fd5b60006105f16104796105ee848d611563565b90565b60985460405163a9dcf22d60e01b81529192506001600160a01b03169063a9dcf22d90610622908490600401612d68565b602060405180830381865afa15801561063f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106639190613112565b955085610711577f541491c63a99c21d0612ba7b3c4d90f7662f54a123363e65fae5c51e34e8a4928a828a8a60405161069f9493929190613134565b60405180910390a16097546020850151604051631429d07360e11b81526001600160a01b0390921691632853a0e6916106de9187903390600401613173565b600060405180830381600087803b1580156106f857600080fd5b505af115801561070c573d6000803e3d6000fd5b505050505b5050505050949350505050565b60008061072a8461154a565b905060008061073b83866000611a01565b91509150610748826116d4565b6098546001600160a01b031663a9dcf22d6107696104796105ee878c611563565b6040518263ffffffff1660e01b81526004016107859190612d68565b602060405180830381865afa1580156107a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c69190613112565b935083610872577f8ec8481d2e38a1ffe2c6ec35459332dc9e6248b1219d287dfa4143a68a75bbd18787876040516108009392919061319a565b60405180910390a16097546020830151604051631429d07360e11b81526001600160a01b0390921691632853a0e69161083f9185903390600401613173565b600060405180830381600087803b15801561085957600080fd5b505af115801561086d573d6000803e3d6000fd5b505050505b5050509392505050565b606081806001600160401b0381111561089757610897612953565b6040519080825280602002602001820160405280156108dd57816020015b6040805180820190915260008152606060208201528152602001906001900390816108b55790505b5091503660005b828110156109c4578585828181106108fe576108fe6131cf565b905060200281019061091091906131e5565b91506000848281518110610926576109266131cf565b60200260200101519050306001600160a01b031683806020019061094a9190613205565b60405161095892919061324b565b600060405180830381855af49150503d8060008114610993576040519150601f19603f3d011682016040523d82523d6000602084013e610998565b606091505b50602083015215158082528335176109bb576309ad446560e31b60005260046000fd5b506001016108e4565b50505092915050565b6000806109d98461154a565b905060006109e982856001611a01565b5090506109f5816116d4565b610a028160200151611728565b6000610a0e8389611563565b90506000610a1c82896115d1565b509050610a2881611635565b610a3a610a3483611893565b896118c9565b609754604082810151858201519151632885570d60e21b815263ffffffff9182166004820152911660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b158015610a9657600080fd5b505af1158015610aaa573d6000803e3d6000fd5b5050505060019450505050505b949350505050565b600080610acb86611668565b9050600080610ada838861167b565b91509150610ae782611635565b610af48260200151611728565b845160051b60208601208590610b0b908890611a70565b610b1485611aa6565b14610b325760405163184fb2df60e01b815260040160405180910390fd5b6000610b3d89611ab4565b6099546040808701519051631cff139b60e11b81529293506001600160a01b03909116916339fe273691610b7b9185908f908e90899060040161325b565b6020604051808303816000875af1158015610b9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbe9190613112565b95508515610711577f5fb28b72a4ff089027990125e187d936f30d65013d66fac1e54e0625f7ea00658460200151848c8c604051610bff94939291906132d4565b60405180910390a15050505050949350505050565b6033546001600160a01b03163314610c735760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b565b600080610c8185611668565b90506000610c8f8286611af7565b509050610c9b81611635565b6000610ca7838661167b565b509050610cb3816116d4565b610cc08160200151611728565b610cca87876118c9565b609754604083810151838201519151632885570d60e21b815263ffffffff9182166004820152911660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b158015610d2657600080fd5b505af1158015610d3a573d6000803e3d6000fd5b50505050600193505050505b9392505050565b600080610d5984611668565b9050600080610d68838661167b565b91509150610d75826116d4565b6000610d8089611963565b9050610d8e848b838b611971565b60985460405163a9dcf22d60e01b81526001600160a01b039091169063a9dcf22d90610dbe908c90600401612d68565b602060405180830381865afa158015610ddb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dff9190613112565b945084610ead577f541491c63a99c21d0612ba7b3c4d90f7662f54a123363e65fae5c51e34e8a4928a8a8989604051610e3b9493929190613134565b60405180910390a16097546020840151604051631429d07360e11b81526001600160a01b0390921691632853a0e691610e7a9186903390600401613173565b600060405180830381600087803b158015610e9457600080fd5b505af1158015610ea8573d6000803e3d6000fd5b505050505b5050505095945050505050565b600080610ec684611b20565b9050600080610ed58386611b33565b91509150610ee2826116d4565b60995460405163e2f006f760e01b81526001600160a01b039091169063e2f006f790610f12908990600401612d68565b602060405180830381865afa158015610f2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f539190613112565b159350836109c4577fa0cb383b7028fbeae86e018eb9fe765c15c869483a584edbb95bf550934465878686604051610f8c9291906130d2565b60405180910390a16097546020830151604051631429d07360e11b81526001600160a01b0390921691632853a0e691610fcb9185903390600401613173565b600060405180830381600087803b158015610fe557600080fd5b505af1158015610ff9573d6000803e3d6000fd5b5050505050505092915050565b60006110126001611b5c565b9050801561102a576000805461ff0019166101001790555b611035848484611be9565b801561107b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60008061108d84611b20565b905060008061109c8386611c5a565b915091506110a9826116d4565b60995460405163e2f006f760e01b81526001600160a01b039091169063e2f006f7906110d9908990600401612d68565b602060405180830381865afa1580156110f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111a9190613112565b9350836109c4577f4d4c3a87f0d5fbcea3c51d5baa727fceedb200dd7c9287f7ef85b60b794d6a8d8686604051610f8c9291906130d2565b609b546060908190831061117957604051631390f2a160e01b815260040160405180910390fd5b6000609b848154811061118e5761118e6131cf565b9060005260206000209060020201604051806040016040529081600082015481526020016001820180546111c190613316565b80601f01602080910402602001604051908101604052809291908181526020018280546111ed90613316565b801561123a5780601f1061120f5761010080835404028352916020019161123a565b820191906000526020600020905b81548152906001019060200180831161121d57829003601f168201915b505050505081525050905080602001519250609a816000015181548110611263576112636131cf565b90600052602060002001805461127890613316565b80601f01602080910402602001604051908101604052809291908181526020018280546112a490613316565b80156112f15780601f106112c6576101008083540402835291602001916112f1565b820191906000526020600020905b8154815290600101906020018083116112d457829003601f168201915b5050505050915050915091565b6060609a8281548110611313576113136131cf565b90600052602060002001805461132890613316565b80601f016020809104026020016040519081016040528092919081815260200182805461135490613316565b80156113a15780601f10611376576101008083540402835291602001916113a1565b820191906000526020600020905b81548152906001019060200180831161138457829003601f168201915b50505050509050919050565b6000806113b984611963565b90506000806113c883866115d1565b915091506113d5826116d4565b60985460405163a9dcf22d60e01b81526001600160a01b039091169063a9dcf22d90611405908990600401612d68565b602060405180830381865afa158015611422573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114469190613112565b159350836109c4577f9b0db5e74572fe0188dcef5afafe498161864c5706c3003c98ee506ae5c0282d8686604051610f8c9291906130d2565b6033546001600160a01b031633146114d95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610c6a565b6001600160a01b03811661153e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c6a565b61154781611c83565b50565b600061155d61155883611cd5565b611ce8565b92915050565b60008281611573600c6032613360565b61157d9085613373565b90506001600160801b03821681106115a857604051631390f2a160e01b815260040160405180910390fd5b6115c86115c3826115bb600c6032613360565b859190611d14565b611d6c565b95945050505050565b60408051606081018252600080825260208201819052918101829052906116006115fa85611d94565b84611dc2565b6020820151919350915063ffffffff161561162e576040516370488f8b60e01b815260040160405180910390fd5b9250929050565b60018151600581111561164a5761164a61338a565b1461154757604051632437e77160e11b815260040160405180910390fd5b600061155d61167683611cd5565b611ec8565b60408051606081018252600080825260208201819052918101829052906116a46115fa85611ef0565b6020820151919350915063ffffffff1660000361162e576040516354cc70e560e11b815260040160405180910390fd5b6001815160058111156116e9576116e961338a565b1415801561170a57506002815160058111156117075761170761338a565b14155b156115475760405163ec3d0d8560e01b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161415801561178c57507f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661038514155b1561154757604051630b09697760e11b815260040160405180910390fd5b600061155d816020845b9190611f1c565b6000806117c783611fb1565b90506000816001600160401b038111156117e3576117e3612953565b60405190808252806020026020018201604052801561180c578160200160208202803683370190505b50905060005b828110156118595761182c6118278683611563565b611fd2565b82828151811061183e5761183e6131cf565b6020908102919091010152611852816133a0565b9050611812565b5061186f8161186a600160066133b9565b612011565b80600081518110611882576118826131cf565b602002602001015192505050919050565b604051806118a483602083016120e5565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b60006118d482611ab4565b6040805180820190915281815260208101858152609b8054600181018255600091909152825160029091027fbba9db4cdbea0a37c207bbb83e20f828cd4441c49891101dc94fd20dc8efc3498101918255915193945091927fbba9db4cdbea0a37c207bbb83e20f828cd4441c49891101dc94fd20dc8efc34a9091019061195b9082613412565b505050505050565b600061155d6115c383611cd5565b600061197c8361215a565b9150508082600081518110611993576119936131cf565b6020026020010151146119b9576040516339bbd1f360e21b815260040160405180910390fd5b60006119d76119c7856117aa565b6119d086612189565b8588612198565b9050806119e3876117aa565b1461195b576040516312a37cf560e11b815260040160405180910390fd5b6040805160608101825260008082526020820181905291810182905290611a30611a2a866121db565b85611dc2565b9092509050828015611a4a5750602082015163ffffffff16155b15611a68576040516354cc70e560e11b815260040160405180910390fd5b935093915050565b60408051602081018490529081018290526000906060015b60405160208183030381529060405280519060200120905092915050565b600061155d602080846117b4565b609a80546001810182556000919091527f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be48101611af18382613412565b50919050565b60408051606081018252600080825260208201819052918101829052906116006115fa85612207565b600061155d611b2e83611cd5565b612233565b60408051606081018252600080825260208201819052918101829052906116006115fa8561225b565b60008054610100900460ff1615611ba3578160ff166001148015611b7f5750303b155b611b9b5760405162461bcd60e51b8152600401610c6a906134d1565b506000919050565b60005460ff808416911610611bca5760405162461bcd60e51b8152600401610c6a906134d1565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16611c105760405162461bcd60e51b8152600401610c6a9061351f565b609780546001600160a01b038086166001600160a01b031992831617909255609880548584169083161790556099805492841692909116919091179055611c55612287565b505050565b60408051606081018252600080825260208201819052918101829052906116a46115fa856122b6565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b805160009060208301610ab781836122e2565b6000611cf38261232c565b611d1057604051635cb1e1ad60e11b815260040160405180910390fd5b5090565b600080611d218560801c90565b9050611d2c85612379565b83611d378684613360565b611d419190613360565b1115611d605760405163a3b99ded60e01b815260040160405180910390fd5b6115c8848201846122e2565b6000611d7782612396565b611d1057604051631ae8107160e21b815260040160405180910390fd5b600061155d7f43713cd927f8eb63b519f3b180bd5f3708ebbe93666be9ba4b9624b7bc57e663835b906123b6565b6040805160608101825260008082526020820181905291810191909152600080611e39856040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050611e4581856123d9565b6097546040516328f3fac960e01b81526001600160a01b0380841660048301529294509116906328f3fac990602401606060405180830381865afa158015611e91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eb5919061357e565b9250611ec0836123fd565b509250929050565b6000611ed382612430565b611d1057604051633ae4998b60e21b815260040160405180910390fd5b600061155d7f3464bf887f210604c594030208052a323ac6628785466262d75241769120164183611dbc565b600081600003611f2e57506000610d46565b6020821115611f505760405163063af09560e31b815260040160405180910390fd5b6001600160801b038416611f648385613360565b1115611f835760405163a3b99ded60e01b815260040160405180910390fd5b600382901b6000611f948660801c90565b90940151600160ff1b600019929092019190911d16949350505050565b6000611fbf600c6032613360565b61155d906001600160801b0384166135ef565b6000806000611fe08461215a565b6040805160208082019490945280820192909252805180830382018152606090920190528051910120949350505050565b81516001821b8111156120375760405163c5360feb60e01b815260040160405180910390fd5b60005b8281101561107b5760005b828110156120d65760008160010190506000868381518110612069576120696131cf565b60200260200101519050600085831061208357600061209e565b878381518110612095576120956131cf565b60200260200101515b90506120aa8282612443565b88600186901c815181106120c0576120c06131cf565b6020908102919091010152505050600201612045565b506001918201821c910161203a565b6040516000906001600160801b03841690608085901c908085101561211d576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa90508061214757604051637c7d772f60e01b815260040160405180910390fd5b608086901b84175b979650505050505050565b6000808261217161216c82602461248f565b61249c565b925061218161216c8260246124be565b915050915091565b600061155d8260206004612502565b6000600182901b604081106121c057604051631390f2a160e01b815260040160405180910390fd5b60006121cc8787612523565b905061214f828287600661254e565b600061155d7ff304ae6578b1582b0b5b512e0a7070d6f76973b1f360f99dd500082d3bc9487783611dbc565b600061155d7fccfadb9c399e4e4257b6d0c3f92e1f9a9c00b1802b55a2f7d511702faa76909083611dbc565b600061223e826125dd565b611d1057604051631dad384f60e21b815260040160405180910390fd5b600061155d7fdf42b2c0137811ba604f5c79e20c4d6b94770aa819cc524eca444056544f8ab783611dbc565b600054610100900460ff166122ae5760405162461bcd60e51b8152600401610c6a9061351f565b610c736125f0565b600061155d7fb38669e8ca41a27fcd85729b868e8ab047d0f142073a017213e58f0a91e88ef383611dbc565b6000806122ef8385613360565b90506040518111156122ff575060005b806000036123205760405163085f79c360e11b815260040160405180910390fd5b608084901b8317610ab7565b60006001600160801b03821681612345600c6032613360565b61234f90836135ef565b90508161235e600c6032613360565b6123689083613373565b148015610ab75750610ab781612620565b60006001600160801b03821661238f8360801c90565b0192915050565b60006123a4600c6032613360565b6001600160801b0383165b1492915050565b6000816123c28461249c565b604080516020810193909352820152606001611a88565b60008060006123e88585612645565b915091506123f581612687565b509392505050565b6000815160058111156124125761241261338a565b036115475760405163dc449cb760e01b815260040160405180910390fd5b6000604e6001600160801b0383166123af565b600082158015612451575081155b1561245e5750600061155d565b604080516020810185905290810183905260600160405160208183030381529060405280519060200120905061155d565b6000610d46838284611d14565b6000806124a98360801c90565b6001600160801b039390931690922092915050565b60006001600160801b038316808311156124eb5760405163a3b99ded60e01b815260040160405180910390fd5b610ab7836124f98660801c90565b018483036122e2565b600080612510858585611f1c565b602084900360031b1c9150509392505050565b60008282604051602001611a8892919091825260e01b6001600160e01b031916602082015260240190565b8151600090828111156125745760405163c5360feb60e01b815260040160405180910390fd5b84915060005b818110156125b1576125a783868381518110612598576125986131cf565b6020026020010151898461283d565b925060010161257a565b50805b838110156125d3576125c9836000898461283d565b92506001016125b4565b5050949350505050565b600060856001600160801b0383166123af565b600054610100900460ff166126175760405162461bcd60e51b8152600401610c6a9061351f565b610c7333611c83565b6000811580159061155d5750612638600160066133b9565b6001901b82111592915050565b600080825160410361267b5760208301516040840151606085015160001a61266f87828585612866565b9450945050505061162e565b5060009050600261162e565b600081600481111561269b5761269b61338a565b036126a35750565b60018160048111156126b7576126b761338a565b036127045760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610c6a565b60028160048111156127185761271861338a565b036127655760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610c6a565b60038160048111156127795761277961338a565b036127d15760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610c6a565b60048160048111156127e5576127e561338a565b036115475760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610c6a565b6000600183831c16810361285c576128558585612443565b9050610ab7565b6128558486612443565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561289d575060009050600361294a565b8460ff16601b141580156128b557508460ff16601c14155b156128c6575060009050600461294a565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561291a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166129435760006001925092505061294a565b9150600090505b94509492505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561299157612991612953565b604052919050565b600082601f8301126129aa57600080fd5b81356001600160401b038111156129c3576129c3612953565b6129d6601f8201601f1916602001612969565b8181528460208386010111156129eb57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215612a2057600080fd5b8535945060208601356001600160401b0380821115612a3e57600080fd5b612a4a89838a01612999565b95506040880135915080821115612a6057600080fd5b612a6c89838a01612999565b94506060880135915080821115612a8257600080fd5b612a8e89838a01612999565b93506080880135915080821115612aa457600080fd5b50612ab188828901612999565b9150509295509295909350565b60006001600160401b03821115612ad757612ad7612953565b5060051b60200190565b600082601f830112612af257600080fd5b81356020612b07612b0283612abe565b612969565b82815260059290921b84018101918181019086841115612b2657600080fd5b8286015b84811015612b415780358352918301918301612b2a565b509695505050505050565b60008060008060008060c08789031215612b6557600080fd5b8635955060208701356001600160401b0380821115612b8357600080fd5b612b8f8a838b01612999565b96506040890135915080821115612ba557600080fd5b612bb18a838b01612999565b95506060890135915080821115612bc757600080fd5b612bd38a838b01612ae1565b94506080890135915080821115612be957600080fd5b612bf58a838b01612999565b935060a0890135915080821115612c0b57600080fd5b50612c1889828a01612999565b9150509295509295509295565b60008060008060808587031215612c3b57600080fd5b8435935060208501356001600160401b0380821115612c5957600080fd5b612c6588838901612999565b94506040870135915080821115612c7b57600080fd5b612c8788838901612999565b93506060870135915080821115612c9d57600080fd5b50612caa87828801612999565b91505092959194509250565b600080600060608486031215612ccb57600080fd5b8335925060208401356001600160401b0380821115612ce957600080fd5b612cf587838801612999565b93506040860135915080821115612d0b57600080fd5b50612d1886828701612999565b9150509250925092565b6000815180845260005b81811015612d4857602081850181015186830182015201612d2c565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d466020830184612d22565b60008060208385031215612d8e57600080fd5b82356001600160401b0380821115612da557600080fd5b818501915085601f830112612db957600080fd5b813581811115612dc857600080fd5b8660208260051b8501011115612ddd57600080fd5b60209290920196919550909350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015612e5757888303603f190185528151805115158452870151878401879052612e4487850182612d22565b9588019593505090860190600101612e16565b509098975050505050505050565b60008060008060808587031215612e7b57600080fd5b84356001600160401b0380821115612e9257600080fd5b612e9e88838901612999565b9550602091508187013581811115612eb557600080fd5b612ec189828a01612999565b95505060408701359350606087013581811115612edd57600080fd5b87019050601f81018813612ef057600080fd5b8035612efe612b0282612abe565b81815260059190911b8201830190838101908a831115612f1d57600080fd5b928401925b82841015612f3b57833582529284019290840190612f22565b979a9699509497505050505050565b600080600060608486031215612f5f57600080fd5b83356001600160401b0380821115612f7657600080fd5b612f8287838801612999565b94506020860135915080821115612ce957600080fd5b600080600080600060a08688031215612fb057600080fd5b8535945060208601356001600160401b0380821115612fce57600080fd5b612fda89838a01612999565b95506040880135915080821115612ff057600080fd5b612a6c89838a01612ae1565b6000806040838503121561300f57600080fd5b82356001600160401b038082111561302657600080fd5b61303286838701612999565b9350602085013591508082111561304857600080fd5b5061305585828601612999565b9150509250929050565b80356001600160a01b0381168114611be457600080fd5b60008060006060848603121561308b57600080fd5b6130948461305f565b92506130a26020850161305f565b91506130b06040850161305f565b90509250925092565b6000602082840312156130cb57600080fd5b5035919050565b6040815260006130e56040830185612d22565b82810360208401526115c88185612d22565b60006020828403121561310957600080fd5b610d468261305f565b60006020828403121561312457600080fd5b81518015158114610d4657600080fd5b84815260806020820152600061314d6080830186612d22565b828103604084015261315f8186612d22565b9050828103606084015261214f8185612d22565b63ffffffff9390931683526001600160a01b03918216602084015216604082015260600190565b8381526060602082015260006131b36060830185612d22565b82810360408401526131c58185612d22565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b60008235603e198336030181126131fb57600080fd5b9190910192915050565b6000808335601e1984360301811261321c57600080fd5b8301803591506001600160401b0382111561323657600080fd5b60200191503681900382131561162e57600080fd5b8183823760009101908152919050565b63ffffffff8616815260006020868184015260a0604084015261328160a0840187612d22565b60608401869052838103608085015284518082528286019183019060005b818110156132c45783516001600160801b03168352928401929184019160010161329f565b50909a9950505050505050505050565b63ffffffff851681526001600160a01b038416602082015260806040820181905260009061330490830185612d22565b828103606084015261214f8185612d22565b600181811c9082168061332a57607f821691505b602082108103611af157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561155d5761155d61334a565b808202811582820484141761155d5761155d61334a565b634e487b7160e01b600052602160045260246000fd5b6000600182016133b2576133b261334a565b5060010190565b8181038181111561155d5761155d61334a565b601f821115611c5557600081815260208120601f850160051c810160208610156133f35750805b601f850160051c820191505b8181101561195b578281556001016133ff565b81516001600160401b0381111561342b5761342b612953565b61343f816134398454613316565b846133cc565b602080601f831160018114613474576000841561345c5750858301515b600019600386901b1c1916600185901b17855561195b565b600085815260208120601f198616915b828110156134a357888601518255948401946001909101908401613484565b50858210156134c15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b805163ffffffff81168114611be457600080fd5b60006060828403121561359057600080fd5b604051606081018181106001600160401b03821117156135b2576135b2612953565b6040528251600681106135c457600080fd5b81526135d26020840161356a565b60208201526135e36040840161356a565b60408201529392505050565b60008261360c57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f2fcc8778241de27a5e9b5f9abc7825262a19b3b0d368dbec44d92113a92620d64736f6c6343000811003360e06040523480156200001157600080fd5b506040516200287a3803806200287a8339810160408190526200003491620000a1565b60408051808201909152600580825264302e302e3360d81b6020830152608052819081816200006381620000d0565b60a0525063ffffffff90811660c052821661038419019050620000995760405163079597d560e51b815260040160405180910390fd5b5050620000f8565b600060208284031215620000b457600080fd5b815163ffffffff81168114620000c957600080fd5b9392505050565b80516020808301519190811015620000f2576000198160200360031b1b821691505b50919050565b60805160a05160c051612752620001286000396000610381015260006102eb015260006102c801526127526000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c8063715018a6116100f9578063b269681d11610097578063cbd0596511610071578063cbd059651461044f578063e3a96cbd14610462578063f2fde38b14610487578063fb0e722b1461049a57600080fd5b8063b269681d14610416578063c0c53b8b14610429578063c9f1a03f1461043c57600080fd5b80638da5cb5b116100d35780638da5cb5b146103b8578063938b5f32146103dd578063a149352c146103f0578063a2155c341461040357600080fd5b8063715018a61461036157806389791e17146103695780638d3638f41461037c57600080fd5b80633463d1b11161016657806354fd4d501161014057806354fd4d50146102bd578063586681761461031b57806360fc84661461032e57806369978b0d1461034e57600080fd5b80633463d1b11461028957806336cba43c146102ac5780633aaeccc6146102b557600080fd5b80630e6bfcd5146101ae578063127a2c9d146101e65780631fa07138146102075780632853a0e61461023357806328f3fac9146102485780632de5aaf714610268575b600080fd5b6101c16101bc366004611d4d565b6104ad565b604080516001600160e01b031990931683526020830191909152015b60405180910390f35b6101f96101f4366004611db9565b6104f0565b6040519081526020016101dd565b61021a610215366004611dff565b61053f565b6040516001600160e01b031990911681526020016101dd565b610246610241366004611e45565b610632565b005b61025b610256366004611e8a565b61066d565b6040516101dd9190611efb565b61027b610276366004611f09565b61070e565b6040516101dd929190611f22565b61029c610297366004611e8a565b61075b565b6040516101dd9493929190611f3f565b6101f960c95481565b609b546101f9565b6040805180820182527f000000000000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000602082015290516101dd9190611fc6565b610246610329366004611f09565b6108c3565b61034161033c366004611fd9565b6108fa565b6040516101dd919061204e565b61024661035c366004611e45565b61065d565b610246610a4c565b6102466103773660046120c4565b610a81565b6103a37f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101dd565b6033546001600160a01b03165b6040516001600160a01b0390911681526020016101dd565b6097546103c5906001600160a01b031681565b61021a6103fe3660046120f9565b610c62565b61024661041136600461212e565b610ca0565b6098546103c5906001600160a01b031681565b610246610437366004612167565b610f95565b61024661044a366004611d4d565b611017565b61024661045d366004612275565b611042565b610475610470366004611f09565b61125a565b6040516101dd9695949392919061231d565b610246610495366004611e8a565b6113e8565b6099546103c5906001600160a01b031681565b60985460009081906001600160a01b031633146104dd57604051636efcc49f60e01b815260040160405180910390fd5b50630e6bfcd560e01b9491935090915050565b6098546000906001600160a01b0316331461051e57604051636efcc49f60e01b815260040160405180910390fd5b8161052c5761474d60f01b91505b5063127a2c9d60e01b81185b9392505050565b6098546000906001600160a01b0316331461056d57604051636efcc49f60e01b815260040160405180910390fd5b63ffffffff85166103851461059557604051632b3a807f60e01b815260040160405180910390fd5b620151808410156105b95760405163df5728f360e01b815260040160405180910390fd5b609754604051634e04e7a760e01b81526001600160a01b0385811660048301526024820185905290911690634e04e7a790604401600060405180830381600087803b15801561060757600080fd5b505af115801561061b573d6000803e3d6000fd5b506303f40e2760e31b93505050505b949350505050565b6099546001600160a01b0316331461065d5760405163dbc2fa8560e01b815260040160405180910390fd5b610668838383611480565b505050565b604080516060810182526000808252602082018190529181019190915261069382611528565b90506002609a60006106ba856001600160a01b0316600090815260cc602052604090205490565b815260208101919091526040016000205460ff1660028111156106df576106df611ea5565b1480156106ff57506005815160058111156106fc576106fc611ea5565b14155b1561070957600481525b919050565b60408051606081018252600080825260208201819052918101829052600083815260cb60205260409020546001600160a01b031691508115610756576107538261066d565b90505b915091565b6000806000806000610782866001600160a01b0316600090815260cc602052604090205490565b6000818152609a602052604080822081516060810190925280549394509192909190829060ff1660028111156107ba576107ba611ea5565b60028111156107cb576107cb611ea5565b8152905461010081046001600160581b03908116602080850191909152600160601b9092046001600160a01b031660409384015283519284015191840151929950909650169350905082156108ba576000609b61082960018661238e565b81548110610839576108396123a1565b600091825260209182902060408051606081018252929091015463ffffffff8082168085526401000000008304821695850195909552600160401b909104169082015291506108b690841461088f578151610895565b81602001515b63ffffffff16600090815260cb60205260409020546001600160a01b031690565b9550505b50509193509193565b6098546001600160a01b031633146108ee57604051636efcc49f60e01b815260040160405180910390fd5b6108f7816115c4565b50565b6060818067ffffffffffffffff81111561091657610916612185565b60405190808252806020026020018201604052801561095c57816020015b6040805180820190915260008152606060208201528152602001906001900390816109345790505b5091503660005b82811015610a435785858281811061097d5761097d6123a1565b905060200281019061098f91906123b7565b915060008482815181106109a5576109a56123a1565b60200260200101519050306001600160a01b03168380602001906109c991906123d7565b6040516109d7929190612425565b600060405180830381855af49150503d8060008114610a12576040519150601f19603f3d011682016040523d82523d6000602084013e610a17565b606091505b5060208301521515808252833517610a3a576309ad446560e31b60005260046000fd5b50600101610963565b50505092915050565b6033546001600160a01b03163314610a7f5760405162461bcd60e51b8152600401610a7690612435565b60405180910390fd5b565b6033546001600160a01b03163314610aab5760405162461bcd60e51b8152600401610a7690612435565b6000609a6000610ad0846001600160a01b0316600090815260cc602052604090205490565b8152602081019190915260409081016000208151606081019092528054829060ff166002811115610b0357610b03611ea5565b6002811115610b1457610b14611ea5565b8152905461010081046001600160581b03166020830152600160601b90046001600160a01b03166040909101529050600081516002811115610b5857610b58611ea5565b03610b76576040516359d38fd160e11b815260040160405180910390fd5b600281516002811115610b8b57610b8b611ea5565b03610ba95760405163f10068b560e01b815260040160405180910390fd5b6098546040805163204c48a960e11b815290516000926001600160a01b03169163409891529160048083019260609291908290030181865afa158015610bf3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c17919061247f565b505090508064ffffffffff16613840610c3091906124c6565b421015610c50576040516301bf715b60e61b815260040160405180910390fd5b610c5c84846000611480565b50505050565b6098546000906001600160a01b03163314610c9057604051636efcc49f60e01b815260040160405180910390fd5b506328524d4b60e21b9392505050565b6099546001600160a01b03163314610ccb5760405163dbc2fa8560e01b815260040160405180910390fd5b63ffffffff82166000908152609a602052604081205460ff166002811115610cf557610cf5611ea5565b14610d135760405163367526d360e21b815260040160405180910390fd5b63ffffffff81166000908152609a602052604081205460ff166002811115610d3d57610d3d611ea5565b14610d5b57604051636893014360e01b815260040160405180910390fd5b604080516060808201835263ffffffff8086168352848116602084019081526000848601818152609b8054600181810183559382905296517fbba9db4cdbea0a37c207bbb83e20f828cd4441c49891101dc94fd20dc8efc3499097018054945192518616600160401b0263ffffffff60401b199387166401000000000267ffffffffffffffff1990961698909616979097179390931716929092179093559154835191820190935290819081526001600160581b0383166020808301919091526000604092830181905263ffffffff87168152609a9091522081518154829060ff19166001836002811115610e5257610e52611ea5565b0217905550602082015181546040938401516001600160a01b0316600160601b026001600160601b036001600160581b03909316610100029290921660ff9091161717905580516060810190915280600181526001600160581b0383166020808301919091526000604092830181905263ffffffff86168152609a9091522081518154829060ff19166001836002811115610eef57610eef611ea5565b0217905550602082015181546040909301516001600160a01b0316600160601b026001600160601b036001600160581b03909216610100029190911660ff909316929092179190911790557fd0672fae056abe2bf0637742527d49add67fdb68192a6c6f6bf86eac19fe0530610f6660018361238e565b6040805191825263ffffffff808716602084015285169082015260600160405180910390a16106688383611608565b6000610fa16001611670565b90508015610fb9576000805461ff0019166101001790555b610fc48484846116f8565b610fcc61175e565b8015610c5c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b6098546001600160a01b0316331461066857604051636efcc49f60e01b815260040160405180910390fd5b60408083015163ffffffff16600090815260cb60205220546001600160a01b031680158015906110845750836001600160a01b0316816001600160a01b031614155b156110a2576040516312b88bb960e21b815260040160405180910390fd5b60006110b7846000015185602001518761178d565b9050600060c9549050806110d8866040015163ffffffff16848760206117c3565b146110f657604051634cc472e760e01b815260040160405180910390fd5b6001600160a01b038316611150576040858101805163ffffffff908116600090815260cb602090815284822080546001600160a01b0319166001600160a01b038d16908117909155935193825260cc905292909220911690555b600081815260ca602090815260408083206001600160a01b038a16845290915290208551815487929190829060ff1916600183600581111561119457611194611ea5565b0217905550602082810151825460409485015168ffffffffffffffff001990911661010063ffffffff9384160268ffffffff0000000000191617650100000000009183169190910217909255870151875192516001600160a01b038a169391909216917f8f9b8b0f4f062833bec85ea9a8465e4a1207b4be6eb565bbd0ae8b913588d04e91611222916124d9565b60405180910390a360058551600581111561123f5761123f611ea5565b0361125257611252856040015133611852565b505050505050565b600080600080606080609b80549050871061128857604051631390f2a160e01b815260040160405180910390fd5b6000609b888154811061129d5761129d6123a1565b6000918252602080832060408051606081018252939091015463ffffffff80821680865264010000000083048216868601908152600160401b909304821686850152865260cb9093528185205490519092168452909220546001600160a01b03928316995090925016604082015190965063ffffffff16156113685760408082015163ffffffff16600090815260cb60205220546001600160a01b031660408281015163ffffffff166000908152609a6020522054909550600160601b90046001600160a01b031693505b60995460405163c495912b60e01b8152600481018a90526001600160a01b039091169063c495912b90602401600060405180830381865afa1580156113b1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113d9919081019061254b565b97999698509496939592505050565b6033546001600160a01b031633146114125760405162461bcd60e51b8152600401610a7690612435565b6001600160a01b0381166114775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a76565b6108f781611ae7565b600061148b83611528565b905061149681611b39565b8363ffffffff16816020015163ffffffff16146114c657604051630b09697760e11b815260040160405180910390fd5b826001600160a01b03168463ffffffff167f8f9b8b0f4f062833bec85ea9a8465e4a1207b4be6eb565bbd0ae8b913588d04e600460405161150791906124d9565b60405180910390a361151d816040015183611852565b610c5c848484611b8d565b60408051606080820183526000808352602080840182905283850182905260c954825260ca81528482206001600160a01b038716835290528390208351918201909352825491929091829060ff16600581111561158757611587611ea5565b600581111561159857611598611ea5565b8152905463ffffffff610100820481166020840152650100000000009091041660409091015292915050565b8060c954146108f75760c98190556040518181527f2cbc14f49c068133583f7cb530018af451c87c1cf1327cf2a4ff4698c4730aa49060200160405180910390a150565b609854604051632885570d60e21b815263ffffffff8085166004830152831660248201526001600160a01b039091169063a2155c34906044015b600060405180830381600087803b15801561165c57600080fd5b505af1158015611252573d6000803e3d6000fd5b60008054610100900460ff16156116b7578160ff1660011480156116935750303b155b6116af5760405162461bcd60e51b8152600401610a76906125af565b506000919050565b60005460ff8084169116106116de5760405162461bcd60e51b8152600401610a76906125af565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff1661171f5760405162461bcd60e51b8152600401610a76906125fd565b609780546001600160a01b039485166001600160a01b031991821617909155609880549385169382169390931790925560998054919093169116179055565b600054610100900460ff166117855760405162461bcd60e51b8152600401610a76906125fd565b610a7f611b98565b60008383836040516020016117a493929190612648565b6040516020818303038152906040528051906020012090509392505050565b8151600090828111156117e95760405163c5360feb60e01b815260040160405180910390fd5b84915060005b818110156118265761181c8386838151811061180d5761180d6123a1565b60200260200101518984611bc8565b92506001016117ef565b50805b838110156118485761183e8360008984611bc8565b9250600101611829565b5050949350505050565b63ffffffff82166000908152609a60205260408082208151606081019092528054829060ff16600281111561188957611889611ea5565b600281111561189a5761189a611ea5565b8152905461010081046001600160581b03166020830152600160601b90046001600160a01b031660409091015290506002815160028111156118de576118de611ea5565b036118fc5760405163f10068b560e01b815260040160405180910390fd5b60028082526001600160a01b03831660408084019190915263ffffffff85166000908152609a60205220825181548493839160ff191690600190849081111561194757611947611ea5565b021790555060208281015182546040909401516001600160a01b0316600160601b026001600160601b036001600160581b03928316610100021660ff90951694909417939093179091558201516000911615611add576000600183602001516119b09190612695565b6001600160581b031690506000609b82815481106119d0576119d06123a1565b600091825260209182902060408051606081018252919092015463ffffffff80821683526401000000008204811694830194909452600160401b900490921690820152609b8054919250879184908110611a2c57611a2c6123a1565b600091825260209182902001805463ffffffff60401b1916600160401b63ffffffff94851602179055820151878216911614611a6c578060200151611a6f565b80515b63ffffffff8181166000818152609a60209081526040808320929092558151878152938b16908401528201526001600160a01b03871660608201529093507fb4cad5624e1d1c6c622ec70516ee582fe3f6519440c5b47e5165141edc9c54cf9060800160405180910390a150505b610c5c8482611bf1565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600181516005811115611b4e57611b4e611ea5565b14158015611b6f5750600281516005811115611b6c57611b6c611ea5565b14155b156108f75760405163ec3d0d8560e01b815260040160405180910390fd5b610668838383611c2f565b600054610100900460ff16611bbf5760405162461bcd60e51b8152600401610a76906125fd565b610a7f33611ae7565b6000600183831c168103611be757611be08585611cff565b905061062a565b611be08486611cff565b609854604051630c22d24360e31b815263ffffffff8085166004830152831660248201526001600160a01b0390911690636116921890604401611642565b6097546040805163ffffffff861660248201526001600160a01b03858116604483015284811660648084019190915283518084039091018152608490920183526020820180516001600160e01b0316639d228a5160e01b179052915163a1c702a760e01b8152919092169163a1c702a791611cb691610385916201518091906004016126bc565b60408051808303816000875af1158015611cd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cf891906126ee565b5050505050565b600082158015611d0d575081155b15611d1a57506000611d47565b60408051602081018590529081018390526060016040516020818303038152906040528051906020012090505b92915050565b600080600060608486031215611d6257600080fd5b833561ffff81168114611d7457600080fd5b925060208401356001600160e01b031981168114611d9157600080fd5b929592945050506040919091013590565b80356001600160a01b038116811461070957600080fd5b600080600060608486031215611dce57600080fd5b611dd784611da2565b9250602084013560ff81168114611d9157600080fd5b63ffffffff811681146108f757600080fd5b60008060008060808587031215611e1557600080fd5b8435611e2081611ded565b935060208501359250611e3560408601611da2565b9396929550929360600135925050565b600080600060608486031215611e5a57600080fd5b8335611e6581611ded565b9250611e7360208501611da2565b9150611e8160408501611da2565b90509250925092565b600060208284031215611e9c57600080fd5b61053882611da2565b634e487b7160e01b600052602160045260246000fd5b60068110611ecb57611ecb611ea5565b9052565b611eda828251611ebb565b60208181015163ffffffff9081169184019190915260409182015116910152565b60608101611d478284611ecf565b600060208284031215611f1b57600080fd5b5035919050565b6001600160a01b0383168152608081016105386020830184611ecf565b6080810160038610611f5357611f53611ea5565b9481526001600160a01b0393841660208201529190921660408201526060015290565b60005b83811015611f91578181015183820152602001611f79565b50506000910152565b60008151808452611fb2816020860160208601611f76565b601f01601f19169290920160200192915050565b6020815260006105386020830184611f9a565b60008060208385031215611fec57600080fd5b823567ffffffffffffffff8082111561200457600080fd5b818501915085601f83011261201857600080fd5b81358181111561202757600080fd5b8660208260051b850101111561203c57600080fd5b60209290920196919550909350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156120b657888303603f1901855281518051151584528701518784018790526120a387850182611f9a565b9588019593505090860190600101612075565b509098975050505050505050565b600080604083850312156120d757600080fd5b82356120e281611ded565b91506120f060208401611da2565b90509250929050565b60008060006060848603121561210e57600080fd5b833561211981611ded565b95602085013595506040909401359392505050565b6000806040838503121561214157600080fd5b823561214c81611ded565b9150602083013561215c81611ded565b809150509250929050565b60008060006060848603121561217c57600080fd5b611e6584611da2565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156121be576121be612185565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156121ed576121ed612185565b604052919050565b600082601f83011261220657600080fd5b8135602067ffffffffffffffff82111561222257612222612185565b8160051b6122318282016121c4565b928352848101820192828101908785111561224b57600080fd5b83870192505b8483101561226a57823582529183019190830190612251565b979650505050505050565b600080600083850360a081121561228b57600080fd5b61229485611da2565b93506060601f19820112156122a857600080fd5b506122b161219b565b6020850135600681106122c357600080fd5b815260408501356122d381611ded565b602082015260608501356122e681611ded565b60408201529150608084013567ffffffffffffffff81111561230757600080fd5b612313868287016121f5565b9150509250925092565b6001600160a01b038781168252868116602083015285811660408301528416606082015260c06080820181905260009061235990830185611f9a565b82810360a084015261236b8185611f9a565b9998505050505050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115611d4757611d47612378565b634e487b7160e01b600052603260045260246000fd5b60008235603e198336030181126123cd57600080fd5b9190910192915050565b6000808335601e198436030181126123ee57600080fd5b83018035915067ffffffffffffffff82111561240957600080fd5b60200191503681900382131561241e57600080fd5b9250929050565b8183823760009101908152919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b805164ffffffffff8116811461070957600080fd5b60008060006060848603121561249457600080fd5b61249d8461246a565b92506124ab6020850161246a565b915060408401516124bb81611ded565b809150509250925092565b80820180821115611d4757611d47612378565b60208101611d478284611ebb565b600082601f8301126124f857600080fd5b815167ffffffffffffffff81111561251257612512612185565b612525601f8201601f19166020016121c4565b81815284602083860101111561253a57600080fd5b61062a826020830160208701611f76565b6000806040838503121561255e57600080fd5b825167ffffffffffffffff8082111561257657600080fd5b612582868387016124e7565b9350602085015191508082111561259857600080fd5b506125a5858286016124e7565b9150509250929050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006006851061265a5761265a611ea5565b5060f89390931b835260e09190911b6001600160e01b031916600183015260601b6bffffffffffffffffffffffff1916600582015260190190565b6001600160581b038281168282160390808211156126b5576126b5612378565b5092915050565b600063ffffffff8086168352808516602084015250606060408301526126e56060830184611f9a565b95945050505050565b6000806040838503121561270157600080fd5b825161270c81611ded565b602093909301519294929350505056fea2646970667358221220bdc74e5c2bf06c17aa5a56aacc699a1174ca950d98c8ae0e49cc470dee4e180564736f6c6343000811003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f500000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12db9c6de81004e18dedadca3e5eabaab449ca91dff6f58efc9461da635fe77f84ba26469706673582212205d40f11a6b6391c8a84168617151bd2efa8fee4e741550196993867f1195e10e64736f6c63430008110033",
    "sourceMapi;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8361:597:182;;;:::i;:::-;;3964:96:181;;;:::i;:::-;;;4018:25:199;;;4006:2;3991:18;3964:96:181;3872:177:199;1829:143:181;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1574:428:147:-;;;:::i;2609:601:151:-;;;;;;:::i;:::-;;:::i;18961:94:147:-;19042:6;;-1:-1:-1;;;;;19042:6:147;18961:94;;;-1:-1:-1;;;;;5780:32:199;;;5762:51;;5750:2;5735:18;18961:94:147;5616:203:199;4099:213:179;;;;;;:::i;:::-;;:::i;8416:167:151:-;8556:6:::1;::::0;-1:-1:-1;;;;;8556:6:151::1;8416:167:::0;;6729:264:179;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;7726:629:182:-;;;:::i;3830:198:179:-;;;;;;:::i;:::-;;:::i;2161:134:74:-;;;:::i;:::-;;;;;;;:::i;15867::147:-;;;;;;:::i;:::-;;:::i;1978:110:181:-;;;;;;:::i;:::-;;:::i;2644:134::-;;;;;;:::i;:::-;;:::i;7274:188:179:-;;;;;;:::i;:::-;;:::i;2784:97:181:-;;;:::i;6616:514:182:-;;;:::i;5103:1264:147:-;;;;;;:::i;:::-;;:::i;9994:184:182:-;;;;;;:::i;:::-;;:::i;3641:104:147:-;;;:::i;8964:496:182:-;;;:::i;7405:190:151:-;7573:14:::1;::::0;-1:-1:-1;;;;;7573:14:151::1;7405:190:::0;3964:96:181;2088:515:151;;;;;;:::i;:::-;;:::i;1392:145::-;;;:::i;5260:88:182:-;;;:::i;2930:133:74:-;;;:::i;2631:141::-;;;:::i;5627:174:179:-;;;;;;:::i;:::-;;:::i;2698:235::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1083:184:181:-;;;:::i;6446:302:151:-;;;;;;:::i;:::-;;:::i;7493:2453:147:-;;;;;;:::i;:::-;;:::i;7909:192:151:-;8075:18:::1;::::0;-1:-1:-1;;;;;8075:18:151::1;7909:192:::0;3964:96:181;1189:123:184;;;;;;:::i;:::-;1299:3;1189:123;7663:172:151;7822:5:::1;::::0;-1:-1:-1;;;;;7822:5:151::1;7663:172:::0;3964:96:181;3207:418;;;;;;:::i;:::-;;:::i;3109:122:179:-;;;;;;:::i;:::-;;:::i;4026:267:147:-;;;;;;:::i;:::-;;:::i;4671:183:182:-;;;:::i;2008:961:147:-;;;:::i;863:58:184:-;;;:::i;2447:178:74:-;;;:::i;:::-;;;;;;;:::i;4066:195:181:-;;;;;;:::i;:::-;;:::i;2962:332:182:-;;;:::i;8170:177:151:-;8326:13:::1;::::0;-1:-1:-1;;;;;8326:13:151::1;8170:177:::0;3964:96:181;2939:164:179;;;;;;:::i;:::-;;:::i;3532:585:151:-;;;;;;:::i;:::-;;:::i;2524:114:181:-;;;;;;:::i;:::-;;:::i;7136:584:182:-;;;:::i;5807:251:179:-;;;;;;:::i;:::-;;:::i;4267:182:181:-;;;:::i;653:109:184:-;;;:::i;4809:418:151:-;;;;;;:::i;:::-;;:::i;3300:745:182:-;;;:::i;9952:5909:147:-;;;;;;:::i;:::-;;:::i;1684:139:181:-;;;;;;:::i;:::-;;:::i;6064:190:179:-;;;;;;:::i;:::-;;:::i;1058:125:184:-;;;;;;:::i;:::-;-1:-1:-1;;;;;1153:22:184;;1058:125;2301:140:74;;;:::i;:::-;;;;;;;:::i;10184:291:182:-;;;;;;:::i;:::-;;:::i;4822:275:179:-;;;;;;:::i;:::-;;:::i;5504:514:182:-;;;:::i;19122:99:147:-;;;801:2:183;22791:42:199;;22779:2;22764:18;19122:99:147;22647:192:199;574:396:150;;;;;;:::i;:::-;;:::i;1589:89:181:-;;;;;;:::i;:::-;;:::i;2778:146:74:-;;;:::i;6373:1114:147:-;;;;;;:::i;:::-;;:::i;5119:135:182:-;;;:::i;1493:325:184:-;;;;;;:::i;:::-;;:::i;2094:110:181:-;;;;;;:::i;:::-;;:::i;5354:144:182:-;;;:::i;4441:191:151:-;;;;;;:::i;:::-;;:::i;4540:125:182:-;;;:::i;927::184:-;;;;;;:::i;:::-;;:::i;3237:226:179:-;;;;;;:::i;:::-;;:::i;1866:141:74:-;;;:::i;1819:584:67:-;;;:::i;:::-;;;23936:14:199;;23929:22;23911:41;;23899:2;23884:18;1819:584:67;23771:187:199;6024:586:182;;;:::i;9784:204::-;;;;;;:::i;:::-;;:::i;6260:279:179:-;;;;;;:::i;:::-;;:::i;16811:984:147:-;;;;;;:::i;:::-;;:::i;768:89:184:-;;;:::i;8650:178:151:-;;;;;;:::i;:::-;;:::i;1919:163::-;;;;;;:::i;:::-;;:::i;6999:269:179:-;;;;;;:::i;:::-;;:::i;8902:145:151:-;;;;;;:::i;:::-;;:::i;3751:269:147:-;;;;;;:::i;:::-;;:::i;16007:500::-;;;:::i;4455:253:181:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4299:473:147:-;;;;;;:::i;:::-;;:::i;5701:423:151:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4778:319:147:-;;;;;;:::i;:::-;;:::i;2013:142:74:-;;;:::i;5012:101:182:-;;;:::i;4363:171::-;;;:::i;2505:187:179:-;;;;;;:::i;:::-;;:::i;2975:660:147:-;;;;;;:::i;:::-;;:::i;7468:270:179:-;;;;;;:::i;:::-;;:::i;4714:114:181:-;;;;;;:::i;:::-;;:::i;3631:327::-;;;;;;:::i;:::-;;:::i;1318:169:184:-;;;;;;:::i;:::-;;:::i;4860:146:182:-;;;:::i;6130:310:151:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;4626:190:179:-;;;;;;:::i;:::-;;:::i;5333:288::-;;;;;;:::i;:::-;;:::i;1572:26:67:-;;;;;;;;;1625:542:179;;;;;;:::i;:::-;;:::i;5103:224::-;;;;;;:::i;:::-;;:::i;17801:828:147:-;;;;;;:::i;:::-;;:::i;4638:165:151:-;;;;;;:::i;:::-;;:::i;6545:178:179:-;6626:22;6667:49;6679:5;2924:32:45;6707:8:179;6667:11;:49::i;:::-;6660:56;;6545:178;;;;;:::o;8361:597:182:-;8434:10;1927:7:183;8434:39:182;;8483:418;;8563:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8539:13:182;:41;;-1:-1:-1;;;;;;8539:41:182;-1:-1:-1;;;;;8539:41:182;;;;;;;;;;8483:418;;;2120:7:183;8601:6:182;:36;8597:304;;8728:14;;8753:5;;8761:16;;8693:85;;801:2:183;;-1:-1:-1;;;;;8728:14:182;;;;8753:5;;;-1:-1:-1;;;8761:16:182;;;;8693:85;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8653:13:182;:126;;-1:-1:-1;;;;;;8653:126:182;-1:-1:-1;;;;;8653:126:182;;;;;;;;;8793:34;;;-1:-1:-1;;;8793:34:182;;;;:32;;:34;;;;;-1:-1:-1;;8793:34:182;;;;;;;;-1:-1:-1;8653:126:182;8793:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8597:304;;;8858:32;;-1:-1:-1;;;8858:32:182;;32261:2:199;8858:32:182;;;32243:21:199;32300:2;32280:18;;;32273:30;-1:-1:-1;;;32319:18:199;;;32312:52;32381:18;;8858:32:182;;;;;;;;8597:304;8919:13;;8910:41;;;-1:-1:-1;;;8910:41:182;;-1:-1:-1;;;;;8919:13:182;;;8910:41;;;32622:51:199;32689:18;;;32682:30;32748:2;32728:18;;;32721:30;-1:-1:-1;;;32767:18:199;;;32760:44;-1:-1:-1;;;;;;;;;;;8910:8:182;;;32821:19:199;;8910:41:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8407:551;8361:597::o;604:43:184:-;:::o;3964:96:181:-;4035:8;;;:18;;;-1:-1:-1;;;4035:18:181;;;;4009:7;;-1:-1:-1;;;;;4035:8:181;;;;:16;;:18;;;;;;;;;;;:8;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4028:25;;3964:96;:::o;1829:143::-;1933:9;;:32;;-1:-1:-1;;;1933:32:181;;;;;33214:25:199;;;33255:18;;;33248:34;;;1898:16:181;;-1:-1:-1;;;;;1933:9:181;;:18;;33187::199;;1933:32:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1933:32:181;;;;;;;;;;;;:::i;1574:428:147:-;1655:249;;;;;;;;1625:27;1655:249;;;;;;;;;;;;;;;;1832:12;1655:249;;;;;;1877:15;1655:249;;;;;;;;;;;;;;;;;;1914:19;1655:249;1914:17;:19::i;:::-;1943:21;;;:18;:21;;;;:29;;:21;:29;;;;;;:21;:29;;;;;;;;;;;;;;;;;;-1:-1:-1;;1943:29:147;;;;;;;-1:-1:-1;;;1943:29:147;;;;;;-1:-1:-1;;;;1943:29:147;-1:-1:-1;;;1943:29:147;;;;;;;;;;;;;;;;;;;;;;;1982:13;:11;:13::i;:::-;1615:387;1574:428::o;2609:601:151:-;2730:15;;2726:160;;-1:-1:-1;;;;;;;;;;;309:37:68;;-1:-1:-1;;;;;2761:13:151;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2795:80;2824:1;2811:10;:14;;;;:::i;:::-;-1:-1:-1;;;;;2827:19:151;;;;;;;:10;:19;;;;;;;;;2848:18;;;;;;;;;;2795:80;;34825:25:199;;;2827:19:151;;;;34895:18:199;;;34888:43;;;;2848:18:151;;34947::199;;;34940:43;35019:32;;35014:2;34999:18;;34992:60;34812:3;34797:19;2795:80:151;;;;;;;2726:160;-1:-1:-1;;;;;2997:19:151;;;2895:25;2997:19;;;:10;:19;;;;;;;;;3018:18;;;;;;;;;;2935:102;;2997:19;;;;2935:102;;;35262:34:199;3018:18:151;;35312::199;;;;35305:43;;;;2935:102:151;;;;;;;;;;35206:18:199;;;;2935:102:151;;;;;;;-1:-1:-1;;;;;2935:102:151;-1:-1:-1;;;2935:102:151;;;-1:-1:-1;;;;;;;;;;;3047:13:151;3061:18;8075::::1;::::0;-1:-1:-1;;;;;8075:18:151::1;::::0;3964:96:181;3061:18:151;3081:12;3047:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8556:6:151::1;::::0;-1:-1:-1;;;;;8556:6:151::1;3108:27:::0;;-1:-1:-1;3104:100:151;;-1:-1:-1;3104:100:151;-1:-1:-1;;;;;;;;;;;3151:13:151;3165;8556:6:::1;::::0;-1:-1:-1;;;;;8556:6:151::1;::::0;8416:167;3165:13;3180:12;3151:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:494;2609:601;;;;:::o;4099:213:179:-;4216:22;4261:44;4273:5;4280:4;4296:7;4286:18;;;;;;4261:11;:44::i;:::-;4254:51;;4099:213;;;;;;:::o;6729:264::-;6839:21;6862:22;6911:24;:7;:22;:24::i;:::-;6900:35;;6957:29;6970:5;6977:8;6957:12;:29::i;:::-;6945:41;;6729:264;;;;;:::o;7726:629:182:-;7804:10;1650:7:183;7804:44:182;;7858:430;;7948:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7919:18:182;:51;;-1:-1:-1;;;;;;7919:51:182;-1:-1:-1;;;;;7919:51:182;;;;;;;;;;7858:430;;;1858:7:183;7991:6:182;:41;7987:301;;8117:14;;8142:5;;8077:72;;801:2:183;;-1:-1:-1;;;;;8117:14:182;;;;8142:5;;8077:72;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8048:18:182;:102;;-1:-1:-1;;;;;;8048:102:182;-1:-1:-1;;;;;8048:102:182;;;;;;;;;8164:45;;-1:-1:-1;;;8164:45:182;;-1:-1:-1;8164:45:182;;;4018:25:199;8164:42:182;;3991:18:199;;8164:45:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7987:301;;;8240:37;;-1:-1:-1;;;8240:37:182;;36818:2:199;8240:37:182;;;36800:21:199;36857:2;36837:18;;;36830:30;36896:29;36876:18;;;36869:57;36943:18;;8240:37:182;36616:351:199;7987:301:182;8306:18;;8297:51;;;-1:-1:-1;;;8297:51:182;;-1:-1:-1;;;;;8306:18:182;;;8297:51;;;37184::199;37251:18;;;37244:30;37310:2;37290:18;;;37283:30;-1:-1:-1;;;37329:18:199;;;37322:49;-1:-1:-1;;;;;;;;;;;8297:8:182;;;37388:19:199;;8297:51:182;36972:441:199;3830:198:179;3920:22;3961:60;3973:5;4003:4;4009:9;3990:29;;;;;;;;37575:19:199;;;37619:2;37610:12;;37603:28;37656:2;37647:12;;37418:247;3990:29:179;;;;;;;;;;;;;3980:40;;;;;;3961:11;:60::i;2161:134:74:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:74;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;15867::147:-;15959:6;;15943:46;;-1:-1:-1;;;15943:46:147;;22821:10:199;22809:23;;15943:46:147;;;22791:42:199;15934:60:147;;-1:-1:-1;;;;;15959:6:147;;15943:38;;22764:18:199;;15943:46:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15943:46:147;;;;;;;;;;;;:::i;:::-;15934:60;;;;;;;;;;;;:8;:60::i;1978:110:181:-;2057:9;;:24;;-1:-1:-1;;;2057:24:181;;;;;4018:25:199;;;2031:7:181;;-1:-1:-1;;;;;2057:9:181;;:17;;3991:18:199;;2057:24:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2644:134::-;2741:9;;:30;;-1:-1:-1;;;2741:30:181;;;;;4018:25:199;;;2706:16:181;;-1:-1:-1;;;;;2741:9:181;;:23;;3991:18:199;;2741:30:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2741:30:181;;;;;;;;;;;;:::i;7274:188:179:-;7362:22;7403:52;7415:5;2996:31:45;7442:12:179;7403:11;:52::i;2784:97:181:-;2858:9;;:16;;;-1:-1:-1;;;2858:16:181;;;;2832:7;;-1:-1:-1;;;;;2858:9:181;;:14;;:16;;;;;;;;;;;;;;:9;:16;;;;;;;;;;;;;;6616:514:182;6682:10;1422:4:183;6682:31:182;;6723:359;;6788:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6771:6:182;:34;;-1:-1:-1;;;;;;6771:34:182;-1:-1:-1;;;;;6771:34:182;;;;;;;;;;6723:359;;;1579:4:183;6826:6:182;:28;6822:260;;6920:12;;6943:10;;6956:9;;6887:79;;609:4:183;;-1:-1:-1;;;;;6920:12:182;;;;6943:10;;;6956:9;;6887:79;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6870:6:182;:97;;-1:-1:-1;;;;;;6870:97:182;-1:-1:-1;;;;;6870:97:182;;;;;;;;;6981:27;;;-1:-1:-1;;;6981:27:182;;;;:25;;:27;;;;;-1:-1:-1;;6981:27:182;;;;;;;;-1:-1:-1;6870:97:182;6981:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6822:260;7100:6;;7091:32;;;-1:-1:-1;;;7091:32:182;;-1:-1:-1;;;;;7100:6:182;;;7091:32;;;38969:51:199;39036:18;;;39029:30;39095:2;39075:18;;;39068:30;-1:-1:-1;;;39114:18:199;;;39107:42;-1:-1:-1;;;;;;;;;;;7091:8:182;;;39166:19:199;;7091:32:182;38757:434:199;5103:1264:147;5252:19;5274:53;5280:20;:6;:18;:20::i;:::-;5305:10;:17;5302:1;;5305:21;;5302:1;;5305:21;:::i;:::-;5274:5;:53::i;:::-;5252:75;;5337:13;5353:10;5364:11;5353:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5438:49:147;5444:20;:6;:18;:20::i;:::-;5466:1;5469:17;5485:1;852::183;5469:17:147;:::i;5438:49::-;5514:15;;;5497:14;5514:15;;;:7;:15;;;;;:22;;:35;;5416:71;;-1:-1:-1;5497:14:147;;5416:71;;5514:35;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;5514:35:147;;-1:-1:-1;5514:35:147;5608:27;5514:35;5632:2;5608:15;:27::i;:::-;5559:76;;;;5650:7;5645:379;;5716:37;;-1:-1:-1;;;5716:37:147;;5730:4;5716:37;;;39535:41:199;;;39592:18;;;39585:50;;;39651:18;;;39644:50;;;39710:18;;;39703:50;-1:-1:-1;;;;;;;;;;;5716:13:147;;;39507:19:199;;5716:37:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5772:38;5791:10;5803:6;5772:38;;;;;;;:::i;:::-;;;;;;;;5883:57;5903:20;5925:6;5933;5883:19;:57::i;:::-;5954:59;5976:1;5979:6;5995:1;6007:4;5954:21;:59::i;:::-;-1:-1:-1;;;;;;;;;;;309:37:68;;-1:-1:-1;;;;;6033:13:147;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6067:5:147;;:43;;-1:-1:-1;;;6067:43:147;;6058:78;;-1:-1:-1;;;;;;6067:5:147;;;;-1:-1:-1;6067:23:147;;:43;;6091:10;;6103:6;;6067:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6112:7;6058:78;;;;;;;;;;;;;-1:-1:-1;;;6058:78:147;;;:8;:78::i;:::-;6150:7;6146:109;;;6173:71;-1:-1:-1;;;;;;;;;;;309:37:68;;-1:-1:-1;;;;;6182:18:147;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6182:20:147;;;;;;;;;;;;:::i;:::-;:27;6211:1;6173:71;;;;;;;;;;;;;;;;;:8;:71::i;:::-;6316:44;6340:6;6348:2;6352:7;6316:23;:44::i;9994:184:182:-;10049:22;10074:20;10088:5;10074:13;:20::i;:::-;10104:12;;10049:45;;-1:-1:-1;;;;;;10104:12:182;:30;10135:5;10142:21;10135:5;10142:14;:21::i;:::-;10165:5;10104:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10039:139;9994:184;:::o;3641:104:147:-;19042:6;;-1:-1:-1;;;;;19042:6:147;-1:-1:-1;;;;;3702:34:147;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3641:104::o;8964:496:182:-;9030:10;2181::183;9030:31:182;;9071:347;;9136:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9119:6:182;:34;;-1:-1:-1;;;;;;9119:34:182;-1:-1:-1;;;;;9119:34:182;;;;;;;;;;9071:347;;;2366:10:183;9174:6:182;:28;9170:248;;9270:14;;9295:5;;9235:67;;801:2:183;;-1:-1:-1;;;;;9270:14:182;;;;9295:5;;9235:67;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9218:6:182;:85;;-1:-1:-1;;;;;;9218:85:182;-1:-1:-1;;;;;9218:85:182;;;;;;;;;9317:27;;;-1:-1:-1;;;9317:27:182;;;;:25;;:27;;;;;-1:-1:-1;;9317:27:182;;;;;;;;-1:-1:-1;9218:85:182;9317:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9170:248;;;9375:32;;-1:-1:-1;;;9375:32:182;;42797:2:199;9375:32:182;;;42779:21:199;42836:2;42816:18;;;42809:30;-1:-1:-1;;;42855:18:199;;;42848:52;42917:18;;9375:32:182;42595:346:199;9170:248:182;9436:6;;9427:26;;;-1:-1:-1;;;9427:26:182;;-1:-1:-1;;;;;9436:6:182;;;9427:26;;;43158:51:199;43225:18;;;43218:30;43284:1;43264:18;;;43257:29;-1:-1:-1;;;43302:18:199;;;43295:36;-1:-1:-1;;;;;;;;;;;9427:8:182;;;43348:19:199;;9427:26:182;42946:427:199;2088:515:151;-1:-1:-1;;;;;;;;;;;309:37:68;;-1:-1:-1;;;;;2187:13:151;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;2245:17:151;;;;;;;:10;:17;;;;;;;;;2264:18;;;;;;;;;;2217:66;;43576:25:199;;;2245:17:151;;;;43646:18:199;;;43639:43;;;;2264:18:151;;;;43698::199;;;43691:43;2217:66:151;;;;;;43564:2:199;2217:66:151;;;-1:-1:-1;;;;;2392:17:151;;;2293:25;2392:17;;;:10;:17;;;;;;;;;2411:18;;;;;;;;;;2333:97;;2392:17;;;;2333:97;;;35262:34:199;2411:18:151;;35312::199;;;;35305:43;;;;2333:97:151;;;;;;;;;;35206:18:199;;;;2333:97:151;;;;;;;-1:-1:-1;;;;;2333:97:151;-1:-1:-1;;;2333:97:151;;;-1:-1:-1;;;;;;;;;;;2440:13:151;2454:18;8075::::1;::::0;-1:-1:-1;;;;;8075:18:151::1;::::0;3964:96:181;2454:18:151;2474:12;2440:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8556:6:151::1;::::0;-1:-1:-1;;;;;8556:6:151::1;2501:27:::0;;-1:-1:-1;2497:100:151;;-1:-1:-1;2497:100:151;-1:-1:-1;;;;;;;;;;;2544:13:151;2558;8556:6:::1;::::0;-1:-1:-1;;;;;8556:6:151::1;::::0;8416:167;2558:13;2573:12;2544:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2177:426;2088:515;;;:::o;1392:145::-;1463:32;:30;:32::i;:::-;1505:25;:23;:25::i;5260:88:182:-;801:2:183;5316:25:182;;;;;:::i;:::-;22821:10:199;22809:23;;;22791:42;;22779:2;22764:18;5316:25:182;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5308:5:182;:33;;-1:-1:-1;;;;;;5308:33:182;-1:-1:-1;;;;;5308:33:182;;;;;;;;;;5260:88::o;2930:133:74:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:74;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:74;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;5627:174:179:-;5706:22;5747:47;5759:5;2777:31:45;5786:7:179;5747:11;:47::i;2698:235::-;2821:10;2843:17;;2772:13;;;;2832:28;;:8;:28;:::i;:::-;2821:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2879:15;;;:7;:15;;;;;;;2821:40;;-1:-1:-1;2879:22:179;;;;;2902:23;;:7;:23;:::i;:::-;2879:47;;;;;;;;:::i;:::-;;;;;;;;;;;2698:235;;-1:-1:-1;;;;;2879:47:179;;;;-1:-1:-1;2698:235:179;;-1:-1:-1;;2698:235:179:o;1083:184:181:-;1129:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1117:9:181;:42;;-1:-1:-1;;;;;;1117:42:181;-1:-1:-1;;;;;1117:42:181;;;;;;;;;;1181:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1169:9:181;:43;;-1:-1:-1;;;;;;1169:43:181;-1:-1:-1;;;;;1169:43:181;;;;;;;;;;1233:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1222:8:181;:38;;-1:-1:-1;;;;;;1222:38:181;-1:-1:-1;;;;;1222:38:181;;;;;;;;;;1083:184::o;6446:302:151:-;6583:24;6609:20;6645:26;6674:21;6687:2;6691:3;6674:12;:21::i;:::-;6645:50;;6712:29;6725:6;6733:7;6712:12;:29::i;:::-;6705:36;;;;;6446:302;;;;;;:::o;7493:2453:147:-;7664:8;7659:682;852:1:183;7678::147;:17;;;7659:682;;;7740:19;;;1230:2;7740:19;;;;;;;;;7716:21;;7740:19;;;;;;;;;;-1:-1:-1;7740:19:147;7716:43;;7778:8;7773:346;1230:2;7792:1;:10;;;7773:346;;;7888:12;7910:47;7916:19;:6;:17;:19::i;:::-;7910:47;;7937:1;7940:16;7910:47;;:5;:47::i;:::-;7888:70;-1:-1:-1;7996:47:147;8022:5;:1;8026;8022:5;:::i;:::-;7996:6;;8036:5;7996:16;:47::i;:::-;7976:11;:14;7988:1;7976:14;;;;;;;;;;;;;:17;7991:1;7976:17;;;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8073:31;:11;:14;8085:1;8073:14;;;;;;;;;;;;;:17;8088:1;8073:17;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:31::i;:::-;8061:6;8068:1;8061:9;;;;;;;;;;:::i;:::-;;;;;;;;;;:43;-1:-1:-1;7804:3:147;;;:::i;:::-;;;7773:346;;;-1:-1:-1;8132:13:147;8148:10;;;:7;:10;;-1:-1:-1;;;;;;;;;;;8148:20:147;;:10;:20;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;8148:20:147;;-1:-1:-1;8148:20:147;8233:27;8148:20;8253:6;8233:12;:27::i;:::-;8294:36;;;;;;;;;;;;;;;;;;8274:17;;;-1:-1:-1;8274:17:147;;;:14;:17;;;;;;;:56;;8182:78;;-1:-1:-1;8182:78:147;;-1:-1:-1;8294:36:147;8274:17;;:56;;:17;:56;:::i;:::-;-1:-1:-1;8274:56:147;;;;;;;;;;;;:::i;:::-;;;;;7702:639;;;;7697:3;;;;:::i;:::-;;;7659:682;;;;8356:8;8351:1192;852:1:183;8370::147;:17;;;8351:1192;;;8460:9;8455:173;1230:2;8475:1;:10;8455:173;;;8510:37;;-1:-1:-1;;;8510:37:147;;8524:4;8510:37;;;39535:41:199;;;39592:18;;;39585:50;;;39651:18;;;39644:50;;;39710:18;;;39703:50;-1:-1:-1;;;;;;;;;;;8510:13:147;;;39507:19:199;;8510:37:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8581:14:147;;;;;;;;:11;:14;;;;;;;;:17;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8581:29:147;;;;;;;;;;-1:-1:-1;;;8581:29:147;;;;;;;;;;;;-1:-1:-1;;;8581:29:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8581:29:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8570:43;;-1:-1:-1;8581:31:147;;:29;:31::i;:::-;8570:43;;;;;;:::i;:::-;;;;;;;;8487:3;;;:::i;:::-;;;8455:173;;;-1:-1:-1;8641:37:147;;-1:-1:-1;;;8641:37:147;;8655:4;8641:37;;;39535:41:199;;;39592:18;;;39585:50;;;39651:18;;;39644:50;;;39710:18;;;39703:50;-1:-1:-1;;;;;;;;;;;8641:13:147;;;39507:19:199;;8641:37:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8717:10:147;;;-1:-1:-1;;8717:7:147;:10;;-1:-1:-1;;;;;;;;;;;8717:20:147;;:10;:20;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8739:17;;;;;:14;:17;;;;;;;8697:98;;-1:-1:-1;;;;;8717:20:147;;;;;8697:98;;;;8717:20;8767:27;;;8697:98;:::i;:::-;;;;;;;;8898:5;;8919:17;;;8810:23;8919:17;;;:14;:17;;;;;;8898:77;;-1:-1:-1;;;8898:77:147;;8810:23;;;;;;-1:-1:-1;;;;;8898:5:147;;;;:20;;:77;;8919:17;8898:5;8947:27;;;8898:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8898:77:147;;;;;;;;;;;;:::i;:::-;8809:166;;;;;;8989:56;8998:10;8989:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:8;:56::i;:::-;9059:62;9068:9;9087:1;9079:10;;9059:62;;;;;;;;;;;;;;;;;:8;:62::i;:::-;9135:61;9144:7;:14;9160:1;9135:61;;;;;;;;;;;;;;;;;:8;:61::i;:::-;9256:8;9251:282;1230:2;9270:1;:10;;;9251:282;;;9348:6;;9305:213;;-1:-1:-1;;;;;9348:6:147;9335:40;9376:5;:1;9348:6;9376:5;:::i;:::-;9383:10;;;:7;:10;;-1:-1:-1;;;;;;;;;;;9383:20:147;;:10;:20;;;;;;;;;:::i;:::-;;;;;;;;;;;9335:69;;-1:-1:-1;;;;;;9335:69:147;;;;;;;;;;-1:-1:-1;;;;;9383:20:147;;9335:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9335:69:147;;;;;;;;;;;;:::i;:::-;9426:14;;;;;;;;:11;:14;;;;;;;;:17;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9426:29:147;;;;;;;;;;-1:-1:-1;;;9426:29:147;;;;;;;;;;;;-1:-1:-1;;;9426:29:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9426:29:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:31;;:29;:31::i;:::-;9305:213;;;;;;;;;;;;;-1:-1:-1;;;9305:213:147;;;:8;:213::i;:::-;9282:3;;;:::i;:::-;;;9251:282;;;;8394:1149;;;8389:3;;;;:::i;:::-;;;8351:1192;;;;9558:8;9553:321;852:1:183;9572::147;:17;;;9553:321;;;9680:6;;9667:40;;-1:-1:-1;;;9667:40:147;;22821:10:199;22809:23;;9667:40:147;;;22791:42:199;9611:24:147;;;;-1:-1:-1;;;;;9680:6:147;;;;9667:37;;22764:18:199;;9667:40:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9667:40:147;;;;;;;;;;;;:::i;:::-;9610:97;;;;9721:62;9730:11;9743:14;:17;9758:1;9743:17;;;;;;;;;;;;;:26;;9721:62;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9721:62:147;;;:8;:62::i;:::-;9821:17;;;;;;;:14;:17;;;;;:27;;9797:66;;;;9806:13;;9797:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9797:66:147;;;:8;:66::i;:::-;9596:278;;9591:3;;;;:::i;:::-;;;9553:321;;;;9921:18;:16;:18::i;3207:418:181:-;-1:-1:-1;;;;;3309:17:181;;3274:15;3309:17;;;:10;:17;;;;;;;;:22;3301:48;;;;-1:-1:-1;;;3301:48:181;;50409:2:199;3301:48:181;;;50391:21:199;50448:2;50428:18;;;50421:30;-1:-1:-1;;;50467:18:199;;;50460:43;50520:18;;3301:48:181;50207:337:199;3301:48:181;3376:11;3374:13;;3359:12;;3376:11;3359:12;;3374:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3397:17:181;;-1:-1:-1;3397:17:181;;;:10;:17;;;;;;;;:25;;-1:-1:-1;;3397:25:181;;;;;;;;3432:11;:18;;;;;:27;;;;;;;;;;;;;;;3469:9;:16;;;;;:35;;3374:13;;-1:-1:-1;;;;;3469:35:181;-1:-1:-1;;3469:35:181;;;;-1:-1:-1;3514:8:181;;-1:-1:-1;;;;;3514:8:181;:15;3530:5;3537:45;3514:8;3568:6;3576:5;3537:12;:45::i;:::-;3514:69;;-1:-1:-1;;;;;;3514:69:181;;;;;;;;50740:23:199;;;;3514:69:181;;;50722:42:199;50780:18;;;50773:34;50695:18;;3514:69:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3600:8:181;;;:18;;;-1:-1:-1;;;3600:18:181;;;;-1:-1:-1;;;;;3600:8:181;;;;-1:-1:-1;3600:16:181;;-1:-1:-1;3600:18:181;;;;;:8;:18;;;;;;:8;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3593:25;3207:418;-1:-1:-1;;;;3207:418:181:o;3109:122:179:-;3165:13;3198:26;3213:1;3216:7;3198:14;:26::i;4026:267:147:-;-1:-1:-1;;;;;;;;;;;4110:9:147;4130:12;7822:5:151::1;::::0;-1:-1:-1;;;;;7822:5:151::1;::::0;3964:96:181;4130:12:147;-1:-1:-1;;;;;4120:22:147;:6;-1:-1:-1;;;;;4120:22:147;;;4110:33;;;;;;;;;;;;;23936:14:199;23929:22;23911:41;;23899:2;23884:18;;23771:187;4110:33:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4153:40:147;;-1:-1:-1;;;4153:40:147;;-1:-1:-1;;;4153:40:147;;;50962:52:199;-1:-1:-1;;;;;;;;;;;4153:15:147;-1:-1:-1;4153:15:147;;-1:-1:-1;50935:18:199;;4153:40:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4203:16:147;;-1:-1:-1;;;4203:16:147;;-1:-1:-1;;;;;5780:32:199;;4203:16:147;;;5762:51:199;-1:-1:-1;;;;;;;;;;;4203:8:147;-1:-1:-1;4203:8:147;;-1:-1:-1;5735:18:199;;4203:16:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4245:6:147;;4229:57;;-1:-1:-1;;;4229:57:147;;4245:6;4229:57;;;51315:42:199;;;51373:18;;;51366:34;;;51416:18;;;51409:34;;;51479:3;51459:18;;;51452:31;51499:19;;;51492:30;-1:-1:-1;;;;;4245:6:147;;;;-1:-1:-1;4229:44:147;;-1:-1:-1;51539:19:199;;4229:57:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4229:57:147;;;;;;;;;;;;:::i;:::-;;4026:267;:::o;4671:183:182:-;801:2:183;4745:41:182;;;;;:::i;:::-;22821:10:199;22809:23;;;22791:42;;22779:2;22764:18;4745:41:182;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4728:14:182;:58;;-1:-1:-1;;;;;;4728:58:182;-1:-1:-1;;;;;4728:58:182;;;;;;;;;4796:51;;;-1:-1:-1;;;4796:51:182;;;;;51781::199;;;;51848:18;;;51841:30;51907:2;51887:18;;;51880:30;-1:-1:-1;;;51926:18:199;;;51919:44;-1:-1:-1;;;;;;;;;;;4796:8:182;;;51980:19:199;;4796:51:182;;;;;;;;;;;;;;;;;;;;2008:961:147;2163:9;2158:350;2182:10;:17;2178:21;;2158:350;;;2220:13;2236:10;2247:1;2236:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2263:235:147;2287:15;;;;;;;:7;:15;;;;;:22;;:29;2283:33;;2263:235;;;2357:15;;;2341:13;2357:15;;;:7;:15;;;;;:22;;:25;;2380:1;;2357:25;;;;;;:::i;:::-;;;;;;;;;;;2438:6;;2424:40;;-1:-1:-1;;;2424:40:147;;-1:-1:-1;;;;;2357:25:147;;;2424:40;;;5762:51:199;;;2357:25:147;-1:-1:-1;2400:83:147;;2357:25;;2438:6;;2424:33;;5735:18:199;;2424:40:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2466:16;2400;:83::i;:::-;-1:-1:-1;2318:3:147;;;:::i;:::-;;;2263:235;;;;2206:302;2201:3;;;;:::i;:::-;;;2158:350;;;-1:-1:-1;2561:6:147;;2551:27;;;-1:-1:-1;;;2551:27:147;;;;2542:65;;-1:-1:-1;;;;;2561:6:147;;2551:25;;:27;;;;;2561:6;;2551:27;;;;;;;2561:6;2551:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2551:27:147;;;;;;;;;;;;:::i;:::-;2580:14;;;;;;;;;;;;;-1:-1:-1;;;2580:14:147;;;2542:65;;;;;;;;;;;;;-1:-1:-1;;;2542:65:147;;;:8;:65::i;:::-;2754:6;;2741:38;;-1:-1:-1;;;2741:38:147;;2669:23;2741:38;;;22791:42:199;;;2669:23:147;;;;;-1:-1:-1;;;;;2754:6:147;;2741:35;;22764:18:199;;2741:38:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2741:38:147;;;;;;;;;;;;:::i;:::-;2810:21;;;:18;:21;;;;;:39;;;;;;;:21;:39;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2810:39:147;;;;;;;;-1:-1:-1;;;2810:39:147;;;;;;;;;;;;;;;;;;;;2668:111;;-1:-1:-1;2668:111:147;;-1:-1:-1;2668:111:147;-1:-1:-1;2789:78:147;;2668:111;;2810:41;;:39;:41::i;:::-;2789:78;;;;;;;;;;;;;-1:-1:-1;;;2789:78:147;;;:8;:78::i;:::-;2877:36;2886:9;2897:1;2877:36;;;;;;;;;;;;;;;-1:-1:-1;;;2877:36:147;;;:8;:36::i;:::-;2923:39;2932:7;:14;2948:1;2923:39;;;;;;;;;;;;;-1:-1:-1;;;2923:39:147;;;:8;:39::i;:::-;2046:923;;;2008:961::o;863:58:184:-;901:13;912:1;901:10;:13::i;2447:178:74:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;4066:195:181:-;-1:-1:-1;;;;;4161:17:181;;;;;;:10;:17;;;;;;4125:16;;4161:17;;;;:22;;4153:48;;;;-1:-1:-1;;;4153:48:181;;;;;;;:::i;:::-;4218:8;;;-1:-1:-1;;;;;4236:17:181;;;4218:8;4236:17;;;:10;:17;;;;;;;;;4218:36;;-1:-1:-1;;;4218:36:181;;4236:17;;;;4218:36;;;22791:42:199;4218:8:181;;:17;;22764:18:199;;4218:36:181;22647:192:199;2962:332:182;3017:9;3012:276;3036:10;:17;3032:21;;3012:276;;;3074:13;3090:10;3101:1;3090:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3117:161:182;852:1:183;3137::182;:17;3117:161;;;3195:15;;;3179:13;3195:15;;;:7;:15;;;;;:22;;:25;;3218:1;;3195:25;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;3195:25:182;;-1:-1:-1;3238:25:182;3249:6;3195:25;3238:10;:25::i;:::-;-1:-1:-1;3156:3:182;;;:::i;:::-;;;3117:161;;;;3060:228;3055:3;;;;:::i;:::-;;;3012:276;;2939:164:179;3049:15;;;3016:13;3049:15;;;:7;:15;;;;;:22;;3072:23;852:1:183;3072:7:179;:23;:::i;:::-;3049:47;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;3049:47:179;;2939:164;-1:-1:-1;;;2939:164:179:o;3532:585:151:-;-1:-1:-1;;;;;3609:17:151;;;;;;:10;:17;;;;;;;;:22;;;;:49;;-1:-1:-1;;;;;;3635:18:151;;;;;;:11;:18;;;;;;;;:23;3609:49;3601:75;;;;-1:-1:-1;;;3601:75:151;;54011:2:199;3601:75:151;;;53993:21:199;54050:2;54030:18;;;54023:30;-1:-1:-1;;;54069:18:199;;;54062:43;54122:18;;3601:75:151;53809:337:199;3601:75:151;-1:-1:-1;;;;;3694:18:151;;;;;;:10;:18;;;;;;;;:23;;;;:51;;-1:-1:-1;;;;;;3721:19:151;;;;;;:11;:19;;;;;;;;:24;;3694:51;3686:78;;;;-1:-1:-1;;;3686:78:151;;54353:2:199;3686:78:151;;;54335:21:199;54392:2;54372:18;;;54365:30;-1:-1:-1;;;54411:18:199;;;54404:44;54465:18;;3686:78:151;54151:338:199;3686:78:151;3774:21;3798:31;3826:1;3798:12;:31::i;:::-;3774:55;;3840:24;3866:26;3896:24;3909:6;3917:2;3896:12;:24::i;:::-;3839:81;;;;3933:24;3961:36;3977:5;3984:2;:9;;;3994:1;3984:12;;;;;;;;:::i;:::-;;;;;;;3961:15;:36::i;:::-;3930:67;;;4023:12;7822:5:::1;::::0;-1:-1:-1;;;;;7822:5:151::1;::::0;3964:96:181;4023:12:151;-1:-1:-1;;;;;4007:59:151;;4067:1;4070:11;4083;4096:13;4007:103;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3591:526;;;;3532:585;;:::o;2524:114:181:-;2588:9;;-1:-1:-1;;;;;2588:9:181;:24;2613:17;:2;:15;:17::i;:::-;2588:43;;;;;;;;;;;;;;;:::i;7136:584:182:-;7212:10;2691:13:183;7212:43:182;;7265:392;;7352:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7325:16;;:47;;;;;-1:-1:-1;;;;;7325:47:182;;;;;-1:-1:-1;;;;;7325:47:182;;;;;;7265:392;;;2910:13:183;7393:6:182;:40;7389:268;;7506:18;;7476:49;;801:2:183;;-1:-1:-1;;;;;7506:18:182;;7476:49;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7449:16;;:77;;;;;-1:-1:-1;;;;;7449:77:182;;;;;-1:-1:-1;;;;;7449:77:182;;;;;;7550:16;;;;;;;;;-1:-1:-1;;;;;7550:16:182;-1:-1:-1;;;;;7540:38:182;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7389:268;;;7611:35;;-1:-1:-1;;;7611:35:182;;56124:2:199;7611:35:182;;;56106:21:199;56163:2;56143:18;;;56136:30;56202:27;56182:18;;;56175:55;56247:18;;7611:35:182;55922:349:199;7389:268:182;7675:16;;;7666:47;;;-1:-1:-1;;;7666:47:182;;-1:-1:-1;;;7675:16:182;;;-1:-1:-1;;;;;7675:16:182;;7666:47;;56488:51:199;56555:18;;;56548:30;;;;56614:2;56594:18;;;56587:30;-1:-1:-1;;;56633:18:199;;;56626:47;-1:-1:-1;;;;;;;;;;;7666:8:182;;;56690:19:199;;7666:47:182;56276:439:199;5807:251:179;5914:20;5936:22;5984:18;:2;:16;:18::i;:::-;5974:28;;6024:27;6036:5;6043:7;6024:11;:27::i;4267:182:181:-;4408:8;;4426:11;;4312:16;;-1:-1:-1;;;;;4408:8:181;;:17;;4426:15;;:11;;4408:8;4426:15;:::i;:::-;4408:34;;-1:-1:-1;;;;;;4408:34:181;;;;;;;;22809:23:199;;;;4408:34:181;;;22791:42:199;22764:18;;4408:34:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4408:34:181;;;;;;;;;;;;:::i;653:109:184:-;728:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;712:15:184;;;728:26;;;;;712:43;;;;;;;;;;;;;;;:::i;4809:418:151:-;4874:14;5157:53;5167:20;:6;:18;:20::i;:::-;5189;:6;:18;:20::i;4900:321::-;4809:418;;;:::o;3300:745:182:-;1364:4:183;1192;3354:10:182;:36;:63;3350:409;;3517:11;;-1:-1:-1;;;;;3517:11:182;3505:35;3541:14;:12;:14::i;:::-;3505:51;;;;;;;;;;;;;4018:25:199;;4006:2;3991:18;;3872:177;3505:51:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3350:409;;;3639:12;3654:14;:12;:14::i;:::-;3691:11;;3682:21;;-1:-1:-1;;;3682:21:182;;-1:-1:-1;;;;;3691:11:182;;;3682:21;;;5762:51:199;3639:29:182;;-1:-1:-1;;;;;;;;;;;;3682:8:182;;;5735:18:199;;3682:21:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3717:12:182;;:31;;-1:-1:-1;;;3717:31:182;;;;;4018:25:199;;;-1:-1:-1;;;;;3717:12:182;;;;-1:-1:-1;3717:25:182;;-1:-1:-1;3991:18:199;;3717:31:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3573:186;3350:409;3773:9;3768:271;3792:10;:17;3788:21;;3768:271;;;3830:13;3846:10;3857:1;3846:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3873:156:182;852:1:183;3893::182;:17;3873:156;;;3951:15;;;3935:13;3951:15;;;:7;:15;;;;;:22;;:25;;3974:1;;3951:25;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;3951:25:182;;-1:-1:-1;3994:20:182;3951:25;3994:13;:20::i;:::-;-1:-1:-1;3912:3:182;;;:::i;:::-;;;3873:156;;;;3816:223;3811:3;;;;:::i;:::-;;;3768:271;;9952:5909:147;10119:27;10139:6;10119:19;:27::i;:::-;10187:26;;;852:1:183;10187:26:147;;;;;;;;;10157:27;;10187:26;;;;;;;;;;;;;;;;;-1:-1:-1;;10255:26:147;;;852:1:183;10255:26:147;;;;;;;;;10157:56;;-1:-1:-1;10223:29:147;;10255:26;;;;;;;;;;;;;;;;;;;;;10223:58;;10382:8;10377:4649;852:1:183;10396::147;:17;;;10377:4649;;;10487:24;;:::i;:::-;10542:19;:6;:17;:19::i;:::-;10525:36;;:14;;;:36;10590:19;:6;:17;:19::i;:::-;10575:34;;;;:12;;;:34;10631:14;;;;10623:23;;-1:-1:-1;;;10623:23:147;;56883:25:199;;10623:23:147;;;56865:44:199;-1:-1:-1;;;;;;;;;;;10623:7:147;;;56838:18:199;;10623:23:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;10668:12:147;;;;10660:21;;-1:-1:-1;;;10660:21:147;;56895:12:199;56883:25;;;10660:21:147;;;56865:44:199;-1:-1:-1;;;;;;;;;;;10660:7:147;;;56838:18:199;;10660:21:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10696;-1:-1:-1;;;;;;;;;;;;;;10696:21:147;10743:22;;;1230:2;10743:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;10731:34:147;;:9;10779:426;1230:2;10799:1;:10;10779:426;;;11061:18;11082:6;;:49;;852:1:183;11095:20:147;:6;:18;:20::i;:::-;:36;;;;:::i;:::-;11082:49;;;11091:1;11082:49;;;11164:23;;;;:11;:23;;;;;;;;:26;;;;;;;;;11149:41;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11149:41:147;;;;;;;;-1:-1:-1;;;11149:41:147;;;;;;;;;;;;-1:-1:-1;;;11149:41:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11149:41:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;;:12;;11061:70;;-1:-1:-1;11149:41:147;;11188:1;;11149:12;;;;;;:::i;:::-;;;;;;:41;;;;10816:389;10811:3;;;;:::i;:::-;;;10779:426;;;;11292:18;11307:2;11292:14;:18::i;:::-;11338:17;:15;:17::i;:::-;11324:31;;11385:14;:12;:14::i;:::-;11369:13;;;:30;11431:16;:2;:14;:16::i;:::-;11413:15;;;:34;11461:16;11413:2;11461:14;:16::i;:::-;11596:5;:1;11600;11596:5;:::i;:::-;11585:16;;;;:8;;;;:16;;;11615:28;;;;:18;:28;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11615:33:147;;;;-1:-1:-1;;;11615:33:147;;;;;;-1:-1:-1;;;;11615:33:147;-1:-1:-1;;;11615:33:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11689:22;11585:8;11689:20;:22::i;:::-;609:4:183;11726:14:147;11743:21;;;:7;:21;;:28;:31;;11662:49;;-1:-1:-1;11726:14:147;;11743:21;:31;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;11743:31:147;;-1:-1:-1;11827:24:147;11743:31;11848:2;11827:12;:24::i;:::-;11789:12;11802:1;11789:15;;;;;;;;;;:::i;:::-;;;;;;11806:14;11821:1;11806:17;;;;;;;;;;:::i;:::-;;;;;;;;;;11788:63;;;;;12051:6;;12038:55;;-1:-1:-1;;;12038:55:147;;-1:-1:-1;;;;;5780:32:199;;;12038:55:147;;;5762:51:199;11950:23:147;;;;;;12051:6;;;;12038:47;;5735:18:199;;12038:55:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12038:55:147;;;;;;;;;;;;:::i;:::-;11949:144;;;;;;12107:24;12116:10;12107:24;;;;;;;;;;;;:8;:24::i;:::-;12145:31;12154:9;12173:1;12145:8;:31::i;:::-;12190:27;12199:7;:14;12215:1;12190:8;:27::i;:::-;12232:37;;-1:-1:-1;;;12232:37:147;;12246:4;12232:37;;;39535:41:199;;;39592:18;;;39585:50;;;39651:18;;;39644:50;;;39710:18;;;39703:50;-1:-1:-1;;;;;;;;;;;12232:13:147;;;39507:19:199;;12232:37:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12288:29;12305:11;12288:29;;;;;;:::i;:::-;;;;;;;;12331:37;;-1:-1:-1;;;12331:37:147;;12345:4;12331:37;;;39535:41:199;;;39592:18;;;39585:50;;;39651:18;;;39644:50;;;39710:18;;;39703:50;-1:-1:-1;;;;;;;;;;;12331:13:147;;;39507:19:199;;12331:37:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12418:6;-1:-1:-1;;;;;12387:74:147;609:4:183;12387:74:147;;;12426:12;12439:1;12426:15;;;;;;;;;;:::i;:::-;;;;;;;12443:14;12458:1;12443:17;;;;;;;;;;:::i;:::-;;;;;;;12387:74;;;;;;;:::i;:::-;;;;;;;;12618:18;;-1:-1:-1;;;;;12767:18:147;;;309:37:68;12767:18:147;;;:10;:18;;;;;;12879:13;;;;-1:-1:-1;;;;;;;;;;;12587:13:147;;;12618:18;;-1:-1:-1;;;12698:47:147;12767:18;;;;;-1:-1:-1;;12807:17:147;12846:11;;12914:12;:2;:10;:12::i;:::-;12654:290;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12654:290:147;;;;;;;;;;;;;;-1:-1:-1;;;;;12654:290:147;-1:-1:-1;;;;;;12654:290:147;;;;;;12587:371;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13008:5:147;;13029:15;;-1:-1:-1;;;;;13008:5:147;;;;-1:-1:-1;13008:20:147;;-1:-1:-1;13029:12:147;;:15;;;;;;;;;;:::i;:::-;;;;;;;13046:14;13061:1;13046:17;;;;;;;;;;:::i;:::-;;;;;;;13008:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13008:56:147;;;;;;;;;;;;:::i;:::-;13078:66;;;;;;;;;;;;;;;;;12973:91;;-1:-1:-1;12973:91:147;;-1:-1:-1;12973:91:147;-1:-1:-1;13078:66:147;;12973:91;;13099:11;;13078:8;:66::i;:::-;13158;13167:9;13178:2;:13;;;13158:66;;;;;;;;;;;;;;;;;:8;:66::i;:::-;13238:98;13274:7;13257:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;13247:36;;;;;;13285:2;:15;;;13238:98;;;;;;;;;;;;;;;;;:8;:98::i;:::-;13438:6;;13461:8;;;;;13425:45;;-1:-1:-1;;;13425:45:147;;22821:10:199;22809:23;;;13425:45:147;;;22791:42:199;-1:-1:-1;;;;;13438:6:147;;;;13425:35;;22764:18:199;;13425:45:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13425:45:147;;;;;;;;;;;;:::i;:::-;13484:52;;;;;;;;;;;;-1:-1:-1;;;13484:52:147;;;;13390:80;;-1:-1:-1;13390:80:147;;-1:-1:-1;13390:80:147;-1:-1:-1;13484:52:147;;13390:80;;13505:11;;13484:8;:52::i;:::-;13550:65;13559:9;13570:2;:13;;;13550:65;;;;;;;;;;;;;;;;;:8;:65::i;:::-;13629:92;13665:7;13648:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;13638:36;;;;;;13676:2;:15;;;13629:92;;;;;;;;;;;;;;;;;:8;:92::i;:::-;13783:6;;13770:55;;-1:-1:-1;;;13770:55:147;;-1:-1:-1;;;;;5780:32:199;;;13770:55:147;;;5762:51:199;13783:6:147;;;;13770:47;;5735:18:199;;13770:55:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13770:55:147;;;;;;;;;;;;:::i;:::-;13839;;;;;;;;;;;;-1:-1:-1;;;13839:55:147;;;;13735:90;;-1:-1:-1;13735:90:147;;-1:-1:-1;13735:90:147;-1:-1:-1;13839:55:147;;13735:90;;13860:11;;13839:8;:55::i;:::-;13908:68;13917:9;13928:2;:13;;;13908:68;;;;;;;;;;;;;;;;;:8;:68::i;:::-;13990:95;14026:7;14009:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;13999:36;;;;;;14037:2;:15;;;13990:95;;;;;;;;;;;;;;;;;:8;:95::i;:::-;14172:9;14167:529;1230:2;14187:1;:10;14167:529;;;14264:6;;14289:8;;;;;14251:50;;-1:-1:-1;;;14251:50:147;;50752:10:199;50740:23;;;14251:50:147;;;50722:42:199;50780:18;;;50773:34;;;14222:26:147;;-1:-1:-1;;;;;14264:6:147;;14251:37;;50695:18:199;;14251:50:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14251:50:147;;;;;;;;;;;;:::i;:::-;14222:79;;14380:12;14397:37;:26;:2;:9;;;14407:1;14397:12;;;;;;;;:::i;:::-;;;;;;;:24;:26::i;:::-;:35;:37::i;:::-;-1:-1:-1;14379:55:147;-1:-1:-1;14533:148:147;14563:66;14584:5;14588:1;14584;:5;:::i;:::-;14591:4;14597:9;645:1:45;14563:20:147;:66::i;:::-;14631:11;;14533:148;;;;;;;;;;;;-1:-1:-1;;;14533:148:147;;;;:8;:148::i;:::-;14204:492;;14199:3;;;;:::i;:::-;;;14167:529;;;;14757:8;14752:264;1230:2;14771:1;:10;;;14752:264;;;14849:6;;14806:195;;-1:-1:-1;;;;;14849:6:147;14836:40;14877:5;:1;14849:6;14877:5;:::i;:::-;14884:6;14836:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14836:55:147;;;;;;;;;;;;:::i;:::-;14913:26;:2;:9;;;14923:1;14913:12;;;;;;;;;;:::i;:::-;;;;;;;:24;:26::i;:::-;14806:195;;;;;;;;;;;;;-1:-1:-1;;;14806:195:147;;;:8;:195::i;:::-;14783:3;;;:::i;:::-;;;14752:264;;;;10420:4606;;;;;;;10415:3;;;;:::i;:::-;;;10377:4649;;;;15041:8;15036:300;852:1:183;15055::147;:17;;;15036:300;;;15163:6;;15150:41;;-1:-1:-1;;;15150:41:147;;22821:10:199;22809:23;;15150:41:147;;;22791:42:199;15094:24:147;;;;-1:-1:-1;;;;;15163:6:147;;;;15150:38;;22764:18:199;;15150:41:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15150:41:147;;;;;;;;;;;;:::i;:::-;15093:98;;;;15205:50;15214:11;15227:12;15240:1;15227:15;;;;;;;;;;:::i;:::-;;;;;;;15205:50;;;;;;;;;;;;;-1:-1:-1;;;15205:50:147;;;:8;:50::i;:::-;15269:56;15278:13;15293:14;15308:1;15293:17;;;;;;;;;;:::i;:::-;;;;;;;15269:56;;;;;;;;;;;;;-1:-1:-1;;;15269:56:147;;;:8;:56::i;:::-;15079:257;;15074:3;;;;:::i;:::-;;;15036:300;;;;15351:8;15346:443;852:1:183;15365::147;:17;;;15346:443;;;15403:13;15419:10;;;:7;:10;;-1:-1:-1;;;;;;;;;;;15419:20:147;;:10;:20;;;;;;;;;:::i;:::-;;;;;;;;;;15613:6;;15600:54;;-1:-1:-1;;;15600:54:147;;-1:-1:-1;;;;;15419:20:147;;;15600:54;;;5762:51:199;;;15419:20:147;-1:-1:-1;15419:20:147;;;;15613:6;;15600:47;;5735:18:199;;15600:54:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15600:54:147;;;;;;;;;;;;:::i;:::-;15511:143;;;;;;15668:24;15677:10;15668:24;;;;;;;;;;;;:8;:24::i;:::-;15706:31;15715:9;15734:1;15706:8;:31::i;:::-;15751:27;15760:7;:14;15776:1;15751:8;:27::i;:::-;15389:400;;;;15384:3;;;;:::i;:::-;;;15346:443;;;;15836:18;:16;:18::i;1684:139:181:-;1785:9;;:31;;-1:-1:-1;;;1785:31:181;;;;;4018:25:199;;;1744:22:181;;-1:-1:-1;;;;;1785:9:181;;:24;;3991:18:199;;1785:31:181;3872:177:199;6064:190:179;6153:22;6194:53;6206:5;2850:33:45;6235:11:179;6194;:53::i;2301:140:74:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10184:291:182;10308:11;;10293:50;;10302:18;;;;;;;;:::i;:::-;10293:50;;10328:4;10322:11;;;;;;;;:::i;:::-;10293:50;;;;;;;;;;;;;;;-1:-1:-1;;;10293:50:182;;;:8;:50::i;:::-;10362:13;;;;;-1:-1:-1;;;;;10377:18:182;;;;;;:11;:18;;;;;;;;10353:54;;;;;;;;;;;-1:-1:-1;;;10353:54:182;;;;;;;;;;;;;;10377:18;;10353:8;:54::i;:::-;10426:12;;;;;-1:-1:-1;;;;;10440:17:182;;;;;;:10;:17;;;;;;;;;10417:51;;;;;;;;;;;-1:-1:-1;;;10417:51:182;;;;;;;;;;;;;;10440:17;;;;10417:8;:51::i;4822:275:179:-;4933:24;4959:22;5011;:2;:20;:22::i;:::-;4997:36;;5055:35;5071:5;5078:11;5055:15;:35::i;5504:514:182:-;5573:10;2434::183;5573:35:182;;5618:346;;5690:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5670:9:182;:40;;-1:-1:-1;;;;;;5670:40:182;-1:-1:-1;;;;;5670:40:182;;;;;;;;;;5618:346;;;2615:10:183;5731:6:182;:32;5727:237;;5827:11;;5799:40;;609:4:183;;-1:-1:-1;;;;;5827:11:182;;5799:40;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5779:9:182;:61;;-1:-1:-1;;;;;;5779:61:182;-1:-1:-1;;;;;5779:61:182;;;;;;;;;5854:33;;;-1:-1:-1;;;5854:33:182;;;;:31;;:33;;;;;-1:-1:-1;;5854:33:182;;;;;;;;-1:-1:-1;5779:61:182;5854:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5727:237;5982:9;;5973:38;;;-1:-1:-1;;;5973:38:182;;-1:-1:-1;;;;;5982:9:182;;;5973:38;;;59117:51:199;59184:18;;;59177:30;59243:2;59223:18;;;59216:30;-1:-1:-1;;;59262:18:199;;;59255:45;-1:-1:-1;;;;;;;;;;;5973:8:182;;;59317:19:199;;5973:38:182;58905:437:199;574:396:150;758:11;783:6;791:12;805:6;813:10;772:52;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;758:66:150;-1:-1:-1;;;;;;;;;;;;921:7:150;929:13;8326::151::1;::::0;-1:-1:-1;;;;;8326:13:151::1;::::0;3964:96:181;929:13:150;952:4;-1:-1:-1;;;;;944:18:150;;;;;;;;;;;;;;;;;;;;;;;;921:42;;;;;;;;;;;;;;;;:::i;1589:89:181:-;1646:9;;:25;;-1:-1:-1;;;1646:25:181;;;;;4018::199;;;-1:-1:-1;;;;;1646:9:181;;;;:16;;3991:18:199;;1646:25:181;3872:177:199;2778:146:74;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6373:1114:147;6585:19;;6570:12;6664:49;6670:20;:6;:18;:20::i;6664:49::-;6723:13;6739:10;;;:7;:10;;-1:-1:-1;;;;;;;;;;;6739:29:147;;6643:70;;-1:-1:-1;6723:13:147;;6643:70;;6739:29;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;6739:29:147;;-1:-1:-1;6739:29:147;6826:32;6739:29;6855:2;6826:21;:32::i;:::-;6778:80;;;;6873:7;6868:377;;6939:37;;-1:-1:-1;;;6939:37:147;;6953:4;6939:37;;;39535:41:199;;;39592:18;;;39585:50;;;39651:18;;;39644:50;;;39710:18;;;39703:50;-1:-1:-1;;;;;;;;;;;6939:13:147;;;39507:19:199;;6939:37:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6995:43;7020:10;7032:5;6995:43;;;;;;;:::i;:::-;;;;;;;;7111:51;7131:20;7153:1;7156:5;7111:19;:51::i;:::-;7176:58;7198:1;7201:5;7216:1;7228:4;7176:21;:58::i;:::-;-1:-1:-1;;;;;;;;;;;309:37:68;;-1:-1:-1;;;;;7254:13:147;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7288:5:147;;:48;;-1:-1:-1;;;7288:48:147;;7279:83;;-1:-1:-1;;;;;;7288:5:147;;;;-1:-1:-1;7288:29:147;;:48;;7318:10;;7330:5;;7288:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7338:7;7279:83;;;;;;;;;;;;;-1:-1:-1;;;7279:83:147;;;:8;:83::i;:::-;7376:7;7372:109;;;7399:71;-1:-1:-1;;;;;;;;;;;309:37:68;;-1:-1:-1;;;;;7408:18:147;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5119:135:182;5181:10;;5212:12;;5227:6;;5235:11;;5170:77;;-1:-1:-1;;;5170:77:182;;-1:-1:-1;;;;;5212:12:182;;;5170:77;;;59587:34:199;5227:6:182;;;59637:18:199;;;59630:43;5235:11:182;;59689:18:199;;;59682:43;5181:10:182;;;5170:33;;59522:18:199;;5170:77:182;59347:384:199;1493:325:184;1632:63;;59978:66:199;1632:63:184;;;59966:79:199;60061:12;;;60054:28;;;1571:22:184;;1605:14;;60098:12:199;;1632:63:184;;;;;;-1:-1:-1;;1632:63:184;;;;;;;1622:74;;1632:63;1622:74;;;;-1:-1:-1;;;1740:24:184;;;;;33214:25:199;;;33255:18;;;33248:34;;;1622:74:184;-1:-1:-1;1707:7:184;;;;;;-1:-1:-1;;;;;;;;;;;1740:7:184;;;33187:18:199;;1740:24:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1786:25;;;;;;60929:19:199;;;;60964:12;;;60957:28;;;;61041:3;61019:16;;;;-1:-1:-1;;;;;;61015:36:199;61001:12;;;60994:58;1786:25:184;;;;;;;;;61068:12:199;;;;1786:25:184;;;;1493:325;-1:-1:-1;;;;;;;1493:325:184:o;2094:110:181:-;2173:9;;:24;;-1:-1:-1;;;2173:24:181;;;;;4018:25:199;;;2147:7:181;;-1:-1:-1;;;;;2173:9:181;;:17;;3991:18:199;;2173:24:181;3872:177:199;5354:144:182;5406:5;;5432:14;;5449:13;;5464:18;;5484:6;;5400:91;;-1:-1:-1;;;5400:91:182;;-1:-1:-1;;;;;5432:14:182;;;5400:91;;;61360:34:199;5449:13:182;;;61410:18:199;;;61403:43;5464:18:182;;;61462::199;;;61455:43;5484:6:182;;61514:18:199;;;61507:43;5406:5:182;;;5400:23;;61294:19:199;;5400:91:182;61091:465:199;4441:191:151;4505:13;4573:52;4582:20;:6;:18;:20::i;:::-;4604;:6;:18;:20::i;4540:125:182:-;4593:12;;4617:6;;4625:11;;4646:10;;4593:65;;-1:-1:-1;;;4593:65:182;;-1:-1:-1;;;;;4617:6:182;;;4593:65;;;59587:34:199;4625:11:182;;;59637:18:199;;;59630:43;4646:10:182;;59689:18:199;;;59682:43;4593:12:182;;;:23;;59522:18:199;;4593:65:182;59347:384:199;927:125:184;-1:-1:-1;;;;;;;;;;;980:7:184;988:21;1003:6;988:12;:21;:::i;:::-;980:30;;;;;;;;;;;;;4018:25:199;;4006:2;3991:18;;3872:177;980:30:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:25;3886:10:183;1025:6:184;:19;;;;:::i;:::-;1020:4;:25::i;3237:226:179:-;3354:10;3382:17;;3312:14;;;;3382:21;;3402:1;;3382:21;:::i;:::-;3370:34;;:8;:34;:::i;:::-;3365:40;;:1;:40;:::i;:::-;3354:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3338:68;;3425:31;3440:6;3448:7;3425:14;:31::i;1866:141:74:-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:67;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:67;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2985:55:67;3066:16;1980:374;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:67;;;61865:51:199;;;-1:-1:-1;;;61932:18:199;;;61925:34;2196:43:67;;;;;;;;;61838:18:199;;;2196:43:67;;;-1:-1:-1;;1671:64:67;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:67;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;6024:586:182:-;6095:10;1192:4:183;6095:36:182;;6141:411;;6216:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6194:11:182;:44;;-1:-1:-1;;;;;;6194:44:182;-1:-1:-1;;;;;6194:44:182;;;;;;;;;;6141:411;;;1364:4:183;6259:6:182;:33;6255:297;;6368:12;;6391:10;;6330:73;;609:4:183;;-1:-1:-1;;;;;6368:12:182;;;;6391:10;;6330:73;;;:::i;:::-;;;;;;;:::i;6255:297::-;6570:11;;6561:42;;;-1:-1:-1;;;6561:42:182;;-1:-1:-1;;;;;6570:11:182;;;6561:42;;;62863:51:199;62930:18;;;62923:30;62989:2;62969:18;;;62962:30;-1:-1:-1;;;63008:18:199;;;63001:47;-1:-1:-1;;;;;;;;;;;6561:8:182;;;63065:19:199;;6561:42:182;62651:439:199;9784:204:182;9851:22;9876:14;:12;:14::i;:::-;9900;;:45;;-1:-1:-1;;;9900:45:182;;9851:39;;-1:-1:-1;;;;;;9900:14:182;;:23;;:45;;9924:6;;9932:5;;9851:39;;9900:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9955:26;9967:6;9975:5;9955:11;:26::i;6260:279:179:-;6373:24;6399;6453:18;:2;:16;:18::i;:::-;6439:32;;6495:37;6513:5;6520:11;6495:17;:37::i;16811:984:147:-;16901:16;16919:24;16948:1;16951:19;;;;;;;;16965:1;16951:19;;;;16968:1;16951:19;;;16900:71;;;;16981:13;16997:10;17008:8;16997:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;17091:10;;;:7;:10;;;-1:-1:-1;;;;;;;;;;;17091:20:147;;16997;;;;;;;;;;;;;;-1:-1:-1;16997:20:147;;;;17091:17;16997:20;;17091;;;;:::i;:::-;;;;;;;;;;;;;17113:10;;;:7;:10;;-1:-1:-1;;;;;;;;;;;17113:20:147;;-1:-1:-1;;;;;17091:20:147;;;;;;17113;;;;;;:::i;:::-;;;;;;;;;;;;;17135:15;;;;;:7;:15;;;;;;:22;;:25;;-1:-1:-1;;;;;17113:20:147;;;;17135:22;;:25;;;;:::i;:::-;;;;;;;;;;;17027:134;;-1:-1:-1;17027:134:147;-1:-1:-1;;;;;;17135:25:147;;-1:-1:-1;17218:44:147;17027:134;17135:25;17218:11;:44::i;:::-;17321:2;:8;;;:13;;17333:1;17321:13;17317:31;;17347:1;17336:8;;;:12;17317:31;17394:24;17420:21;17445:37;17466:6;17474:2;17478:3;17445:20;:37::i;:::-;17528:5;;:43;;-1:-1:-1;;;17528:43:147;;17393:89;;-1:-1:-1;17393:89:147;;-1:-1:-1;;;;;;17528:5:147;;:20;;:43;;17393:89;;;;17528:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17528:43:147;;;;;;;;;;;;:::i;:::-;;;;17625:22;17650:33;17663:6;17671:11;17650:12;:33::i;:::-;17693:41;;-1:-1:-1;;;17693:41:147;;-1:-1:-1;;;17693:41:147;;;50962:52:199;17625:58:147;;-1:-1:-1;;;;;;;;;;;;17693:15:147;;;50935:18:199;;17693:41:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17744:5:147;;:44;;-1:-1:-1;;;17744:44:147;;-1:-1:-1;;;;;17744:5:147;;;;-1:-1:-1;17744:20:147;;-1:-1:-1;17744:44:147;;17765:11;;17778:9;;17744:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17744:44:147;;;;;;;;;;;;:::i;:::-;;;;16890:905;;;;;;;;;16811:984;:::o;768:89:184:-;833:16;;;;;;;;;;;;;;;;;817:33;;-1:-1:-1;;;817:33:184;;-1:-1:-1;;;;;;;;;;;817:15:184;;;:33;;833:16;817:33;;;:::i;8650:178:151:-;8716:4;8747:19;7573:14:::1;::::0;-1:-1:-1;;;;;7573:14:151::1;::::0;3964:96:181;8747:19:151;-1:-1:-1;;;;;8739:27:151;:4;-1:-1:-1;;;;;8739:27:151;;:57;;;-1:-1:-1;8075:18:151::1;::::0;-1:-1:-1;;;;;8075:18:151::1;8778::::0;-1:-1:-1;;;;;8770:26:151;:4;-1:-1:-1;;;;;8770:26:151;;8739:57;:82;;;-1:-1:-1;;8326:13:151::1;::::0;-1:-1:-1;;;;;8800:21:151;;;8326:13;::::1;8800:21:::0;;8650:178::o;1919:163::-;-1:-1:-1;;;;;;;;;;;309:37:68;;-1:-1:-1;;;;;2011:13:151;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2069:5;-1:-1:-1;;;;;2041:34:151;2061:6;2041:34;;;2055:4;2041:34;;;;;;:::i;:::-;;;;;;;;1919:163;;;:::o;6999:269:179:-;7104:21;7127:22;7176:34;7203:6;7176:26;:34::i;8902:145:151:-;8966:4;8997:18;8075::::1;::::0;-1:-1:-1;;;;;8075:18:151::1;::::0;3964:96:181;3751:269:147;-1:-1:-1;;;;;;;;;;;3834:9:147;3854:19;7573:14:151::1;::::0;-1:-1:-1;;;;;7573:14:151::1;::::0;3964:96:181;3854:19:147;-1:-1:-1;;;;;3844:29:147;:6;-1:-1:-1;;;;;3844:29:147;;;3834:40;;;;;;;;;;;;;23936:14:199;23929:22;23911:41;;23899:2;23884:18;;23771:187;3834:40:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3884:40:147;;-1:-1:-1;;;3884:40:147;;-1:-1:-1;;;3884:40:147;;;50962:52:199;-1:-1:-1;;;;;;;;;;;3884:15:147;-1:-1:-1;3884:15:147;;-1:-1:-1;50935:18:199;;3884:40:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3934:16:147;;-1:-1:-1;;;3934:16:147;;-1:-1:-1;;;;;5780:32:199;;3934:16:147;;;5762:51:199;-1:-1:-1;;;;;;;;;;;3934:8:147;-1:-1:-1;3934:8:147;;-1:-1:-1;5735:18:199;;3934:16:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3976:6:147;;3960:53;;-1:-1:-1;;;3960:53:147;;3976:6;3960:53;;;64012:42:199;;;64070:18;;;64063:34;;;64133:2;64113:18;;;64106:30;64152:18;;;64145:29;-1:-1:-1;;;;;3976:6:147;;;;-1:-1:-1;3960:43:147;;-1:-1:-1;64191:19:199;;3960:53:147;63758:458:199;16007:500:147;16094:8;16089:412;1230:2;16108:1;:10;;;16089:412;;;16139:27;;:::i;:::-;16185:8;16180:196;852:1:183;16199::147;:17;;;16180:196;;;16271:17;;;;;16245:43;:14;;;;;;;:11;:14;;;;;;;:17;;;;;;;;;;;:23;;;:43;;;-1:-1:-1;;;16245:23:147;;;;;;:43;16241:121;;;16326:14;;;;;;;;:11;:14;;;;;;;;:17;;;;;;;;;;;16312:31;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16312:31:147;;;;;;;;;;-1:-1:-1;;;16312:31:147;;;;;;;;;;;;-1:-1:-1;;;16312:31:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16312:31:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16241:121:147;16218:3;;;:::i;:::-;;;16180:196;;;-1:-1:-1;16414:6:147;;16389:101;;-1:-1:-1;;;;;16414:6:147;16398:38;16437:5;:1;16414:6;16437:5;:::i;:::-;16398:45;;-1:-1:-1;;;;;;16398:45:147;;;;;;;;22809:23:199;;;;16398:45:147;;;22791:42:199;22764:18;;16398:45:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16398:45:147;;;;;;;;;;;;:::i;:::-;16445:25;:11;:23;:25::i;:::-;16389:101;;;;;;;;;;;;;-1:-1:-1;;;16389:101:147;;;:8;:101::i;:::-;-1:-1:-1;16120:3:147;;;:::i;:::-;;;16089:412;;4455:253:181;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4553:17:181;;;;;;:10;:17;;;;;;;;:22;;4545:48;;;;-1:-1:-1;;;4545:48:181;;;;;;;:::i;:::-;4610:91;;;;;;;;-1:-1:-1;;;;;4629:16:181;;-1:-1:-1;4629:16:181;;;:9;:16;;;;;;;4610:91;;4629:16;;4610:91;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;4655:18:181;;;;;;;:11;4610:91;4655:18;;;;;;;;;;;;4610:91;;;;4682:17;;;:10;:17;;;;;;;;;;;4610:91;;;;;;-1:-1:-1;4603:98:181;4455:253::o;4299:473:147:-;4398:28;4419:6;4398:20;:28::i;:::-;4479:12;4501:44;4507:19;:6;:17;:19::i;:::-;4501:44;;4528:1;852::183;4501:5:147;:44::i;:::-;4668:25;;;;4626:12;4668:25;;;:18;:25;;;;;;;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4668:43:147;;;;;;;;-1:-1:-1;;;4668:43:147;;;;;;;;;;;;;;;;;;;;;;;;;4479:67;;-1:-1:-1;4626:12:147;;;4668:49;;:43;4712:4;;4668:43;:49;:::i;:::-;4625:92;;;;4727:38;4745:6;4753:2;4757:7;4727:17;:38::i;5701:423:151:-;5838:21;;:::i;:::-;5875:26;5904:27;5917:8;5927:3;5904:12;:27::i;:::-;5875:56;;5941:23;5956:7;5941:14;:23::i;:::-;6034:83;6063:2;:13;;;6078:2;:8;;;6088:2;:14;;;6104:2;:12;;;6034:7;:28;;:83;;;;;;;:::i;:::-;6027:90;5701:423;-1:-1:-1;;;;;5701:423:151:o;4778:319:147:-;4888:28;4909:6;4888:20;:28::i;:::-;4997:8;;;;4991:52;;;;5007:17;852:1:183;5023::147;5007:17;:::i;:::-;5026:16;4991:5;:52::i;:::-;4973:71;;:8;;;:71;5054:36;5072:6;4973:2;5084:5;5054:17;:36::i;2013:142:74:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:74;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;5012:101:182:-;609:4:183;5078:28:182;;;;;:::i;:::-;22821:10:199;22809:23;;;22791:42;;22779:2;22764:18;5078:28:182;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5065:10:182;:41;;-1:-1:-1;;;;;;5065:41:182;-1:-1:-1;;;;;5065:41:182;;;;;;;;;;5012:101::o;4363:171::-;609:4:183;4433:37:182;;;;;:::i;:::-;22821:10:199;22809:23;;;22791:42;;22779:2;22764:18;4433:37:182;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4418:12:182;:52;;-1:-1:-1;;;;;;4418:52:182;-1:-1:-1;;;;;4418:52:182;;;;;;;;;4480:47;;;-1:-1:-1;;;4480:47:182;;;;;64433:51:199;;;;64500:18;;;64493:30;64559:2;64539:18;;;64532:30;-1:-1:-1;;;64578:18:199;;;64571:42;-1:-1:-1;;;;;;;;;;;4480:8:182;;;64630:19:199;;4480:47:182;64221:434:199;2505:187:179;2562:13;2587:15;2631:20;2646:4;2631:14;:20::i;:::-;-1:-1:-1;;;;;2661:14:179;;;;;;:7;:14;;;;;:24;2612:39;2505:187;-1:-1:-1;;;2505:187:179:o;2975:660:147:-;801:2:183;3048:13:147;3111:20;:6;:18;:20::i;:::-;3088:43;;3141:14;3158:20;:6;:18;:20::i;:::-;3141:37;;3188:14;3205:20;:6;:18;:20::i;:::-;3188:37;;3235:20;3269:6;3277:12;3291:6;3258:40;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3308:16:147;;-1:-1:-1;;;3308:16:147;;-1:-1:-1;;;;;5780:32:199;;3308:16:147;;;5762:51:199;3235:63:147;;-1:-1:-1;;;;;;;;;;;;3308:8:147;;;5735:18:199;;3308:16:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3334:13;-1:-1:-1;;;;;3334:24:147;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3370:49;3379:13;-1:-1:-1;;;;;3379:19:147;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3402:6;3370:49;;;;;;;;;;;;;-1:-1:-1;;;3370:49:147;;;:8;:49::i;:::-;3429:69;3438:13;-1:-1:-1;;;;;3438:26:147;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3468:12;3429:69;;;;;;;;;;;;;-1:-1:-1;;;3429:69:147;;;:8;:69::i;:::-;3508:49;3517:13;-1:-1:-1;;;;;3517:19:147;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3540:6;3508:49;;;;;;;;;;;;;-1:-1:-1;;;3508:49:147;;;:8;:49::i;:::-;3567:61;3576:13;-1:-1:-1;;;;;3576:25:147;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3567:61;;3605:6;3567:61;;;;;;;;;;;;;;;-1:-1:-1;;;3567:61:147;;;:8;:61::i;7468:270:179:-;7573:25;7600:24;7655:16;:2;:14;:16::i;:::-;7640:31;;7695:36;7711:5;7718:12;7695:15;:36::i;4714:114:181:-;4798:8;;:23;;-1:-1:-1;;;4798:23:181;;;;;4018:25:199;;;4772:7:181;;-1:-1:-1;;;;;4798:8:181;;:16;;3991:18:199;;4798:23:181;3872:177:199;3631:327:181;-1:-1:-1;;;;;3741:17:181;;3699:15;3741:17;;;:10;:17;;;;;;;;3776:10;;;3768:36;;;;-1:-1:-1;;;3768:36:181;;;;;;;:::i;:::-;-1:-1:-1;;;;;3814:16:181;;;;;;:9;:16;;;;;:23;;3833:4;;3814:16;-1:-1:-1;;3814:23:181;;3833:4;3814:23;;;;;;;;:::i;:::-;;;;;-1:-1:-1;3847:8:181;;;-1:-1:-1;;;;;3889:18:181;;;3847:8;3889:18;;;:11;:18;;;;;;;;3847:8;;;:15;;3863:5;;3870:45;;3883:4;;3889:18;;3901:5;3870:12;:45::i;1318:169:184:-;1399:22;1440:40;1452:7;1471;1461:18;;;;;;1440:11;:40::i;4860:146:182:-;4915:14;;4941:13;;4956:18;;4984:5;;4992:6;;4915:84;;-1:-1:-1;;;4915:84:182;;-1:-1:-1;;;;;4941:13:182;;;4915:84;;;61360:34:199;4956:18:182;;;61410::199;;;61403:43;4984:5:182;;;61462:18:199;;;61455:43;4992:6:182;;61514:18:199;;;61507:43;4915:14:182;;;:25;;61294:19:199;;4915:84:182;61091:465:199;6130:310:151;6215:24;;:::i;:::-;6288:18;;;;;;;;;6295:5;;:10;6288:18;;6241:26;;6288:37;;6323:1;6288:34;:37::i;:::-;6283:42;;6340:36;6358:2;:5;;;6365:2;6369;:6;;;6340:17;:36::i;:::-;6335:41;;6398:35;6415:2;:6;;;:17;;;6398:16;:35::i;:::-;6386:47;;6130:310;;;:::o;4626:190:179:-;4713:22;4754:55;4766:5;2619:35:45;4797:11:179;4754;:55::i;5333:288::-;5450:23;5475:24;5528:22;:2;:20;:22::i;:::-;5515:35;;5574:40;5596:5;5603:10;5574:21;:40::i;1625:542::-;1706:10;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1739:15:179;;;:7;1706:23;1739:15;;;;:27;1762:4;1739:15;:27;:::i;:::-;-1:-1:-1;1776:27:179;1806:11;;;;:59;;1855:4;1830:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;1806:59;;;;;;;;;;;;;;;;-1:-1:-1;;;1806:59:179;;;;1900:28;;;852:1:183;1900:28:179;;;;;;;;;1776:89;;-1:-1:-1;1900:28:179;;;;;;;;-1:-1:-1;;;1875:15:179;;;;;;;:7;:15;;;;;;;;:53;;;;:22;;;;;:53;;;;;;:::i;:::-;;1943:9;1938:164;852:1:183;1958::179;:17;1938:164;;;2024:67;2050:13;2070:19;2087:1;2070:16;:19::i;:::-;2036:54;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2024:11;:67::i;:::-;1996:15;;;;;;;:7;:15;;;;;:22;;:25;;2019:1;;1996:25;;;;;;:::i;:::-;;;;;;;;;;:95;;-1:-1:-1;;;;;;1996:95:179;-1:-1:-1;;;;;1996:95:179;;;;;;;;;;1977:3;;;:::i;:::-;;;1938:164;;;-1:-1:-1;2135:15:179;;;;;;;:7;:15;;;;;:22;;:25;;:22;;:15;:25;;;;:::i;:::-;;;;;;;;;;;;;2111:15;;;;;;:7;:15;;;;;2135:25;2111:21;:49;;-1:-1:-1;;;;;;2111:49:179;-1:-1:-1;;;;;2135:25:179;;;2111:49;;;;;;;-1:-1:-1;;1625:542:179:o;5103:224::-;5219:22;5264:56;5276:5;2700:37:45;5309:10:179;5264:11;:56::i;17801:828:147:-;17891:16;17909:24;17938:1;17941:19;;;;;;;;17955:1;17941:19;;;;17958:1;17941:19;;;17890:71;;;;17971:13;17987:10;17998:8;17987:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;18052:10;;;:7;:10;;;-1:-1:-1;;;;;;;;;;;18052:20:147;;17987;;;;;;;;;;;;;;-1:-1:-1;17987:20:147;;;;18052;;;;:::i;:::-;;;;;;;;;;;;;18074:15;;;;;:7;:15;;;;;;:22;;:25;;-1:-1:-1;;;;;18052:20:147;;;;18074:22;;:25;;;;:::i;:::-;;;;;;;;;;;18017:83;;-1:-1:-1;;;;;;18074:25:147;;-1:-1:-1;18157:43:147;18017:83;18074:25;18157:11;:43::i;:::-;18259:2;:8;;;:13;;18271:1;18259:13;18255:31;;18285:1;18274:8;;;:12;18255:31;18297:24;18323:21;18348:36;18369:5;18376:2;18380:3;18348:20;:36::i;:::-;18296:88;;;;-1:-1:-1;;;;;;;;;;;309:37:68;;-1:-1:-1;;;;;18490:13:147;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18540:5;-1:-1:-1;;;;;18520:49:147;18537:1;18520:49;18547:11;18560:8;18520:49;;;;;;;:::i;:::-;;;;;;;;18579:5;;:43;;-1:-1:-1;;;18579:43:147;;-1:-1:-1;;;;;18579:5:147;;;;:20;;:43;;18600:11;;18613:8;;18579:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18579:43:147;;;;;;;;;;;;:::i;:::-;;;;17880:749;;;;;;;17801:828;:::o;4638:165:151:-;4702:13;4766:30;4775:20;:6;:18;:20::i;19545:147:189:-;19653:13;;;;19668:15;;;;19640:44;;;;;;37575:19:199;;;;37610:12;;37603:28;37647:12;;19640:44:189;;;-1:-1:-1;;19640:44:189;;;;;;;;;19630:55;;19640:44;19630:55;;;;19616:11;;:69;19545:147::o;2093:863:182:-;2196:13;:11;:13::i;:::-;2291:22;:20;:22::i;:::-;2323:13;:11;:13::i;:::-;2346:14;:12;:14::i;:::-;2370:26;:24;:26::i;:::-;2406:24;:22;:24::i;:::-;2440:21;:19;:21::i;:::-;2513:20;:18;:20::i;:::-;2543:11;:9;:11::i;:::-;2564:15;:13;:15::i;:::-;2659:20;:18;:20::i;:::-;2689:18;:16;:18::i;:::-;2717:19;:17;:19::i;:::-;2746:17;:15;:17::i;:::-;2773:14;:12;:14::i;:::-;2837:18;:16;:18::i;:::-;2865:16;:14;:16::i;:::-;2891:15;:13;:15::i;:::-;2938:11;:9;:11::i;17646:357:189:-;17721:21;17754;17790:7;:14;;;:21;-1:-1:-1;;;;;17778:34:189;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17778:34:189;;17754:58;;17827:9;17822:120;17846:14;;:21;17842:25;;17822:120;;;17900:31;:7;:14;;;17915:1;17900:17;;;;;;;;:::i;:31::-;17888:6;17895:1;17888:9;;;;;;;;:::i;:::-;;;;;;;;;;:43;17869:3;;;:::i;:::-;;;17822:120;;;;17962:34;17989:6;17962:26;:34::i;3529:246:179:-;-1:-1:-1;;;;;3658:14:179;;3640:15;3658:14;;;:7;:14;;;;;;3606:22;;3690:12;;;3682:38;;;;-1:-1:-1;;;3682:38:179;;;;;;;:::i;:::-;3737:31;3749:7;3758:9;3737:11;:31::i;1299:99:70:-;1376:15;1386:1;1389;1376:9;:15::i;2095:117:188:-;2156:13;2196:8;:1;:6;:8::i;2703:190:79:-;2786:14;2821:19;2828:1;2831:3;2836;2821:6;:19::i;:::-;2812:28;;2850:36;;;;;;;;;;;;;;-1:-1:-1;;;2850:36:79;;;2879:6;2850:12;:36::i;1107:186:70:-;1196:1;1191:6;;:1;:6;;;1187:100;;-1:-1:-1;;;;;;;;;;;1244:3:70;1218:30;;;;;;:::i;:::-;;;;;;;;1262:14;1271:1;1274;1262:8;:14::i;5476:178:67:-;5557:1;5552;:6;5548:100;;-1:-1:-1;;;;;;;;;;;5605:3:67;5579:30;;;;;;:::i;:::-;;;;;;;;5623:14;5632:1;5635;5623:8;:14::i;1107:358:187:-;-1:-1:-1;;;;;;;;;;;;1258:3:187;:16;;;-1:-1:-1;;;;;1243:32:187;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;1226:49:187;;:14;1281:182;1305:3;:16;;;1301:1;:20;1281:182;;;1415:14;;1410:19;;:46;;1440:16;1450:5;:1;1454;1450:5;:::i;:::-;1440:9;:16::i;:::-;1410:46;;;1432:5;1410:46;1390:14;;:17;;1405:1;;1390:17;;;;;;:::i;:::-;;;;;;:66;;;;1323:3;;;;:::i;:::-;;;1281:182;;;;1107:358;;;;:::o;3347:121:188:-;3407:12;3445:15;:1;:13;:15::i;4692:336::-;4780:21;;:::i;:::-;4826:8;:1;:6;:8::i;:::-;4813:21;;4844;;;;:12;;;:21;4875:19;;:11;;;:19;4924:14;:1;:12;:14::i;:::-;4904:34;;:17;;;:34;4966:14;:1;:12;:14::i;:::-;4948:32;;:15;;;:32;5006:15;:1;:13;:15::i;:::-;4990:13;;;:31;:5;4692:336;-1:-1:-1;;;4692:336:188:o;15021:128:189:-;15085:9;15112:30;:16;:2;:14;:16::i;:::-;:28;:30::i;14654:361::-;14718:18;14756:252;14798:2;:7;;;14828:2;:9;;;14859:2;:8;;;14895:2;:14;;;14935:2;:12;;;14971:26;:2;:10;;;:24;:26::i;:::-;3551:76:56;;;;;;75826:19:199;;;;75868:3;75918:16;;;-1:-1:-1;;;;;;75914:25:199;;;75900:12;;;75893:47;75974:16;;;;75970:25;;;75956:12;;;75949:47;76019:3;76071:16;;;-1:-1:-1;;;;;;76067:25:199;;;76053:12;;;76046:47;76127:16;;76123:25;76109:12;;;76102:47;76205:3;76183:16;-1:-1:-1;;;;;;76179:59:199;76165:12;;;76158:81;3551:76:56;;;;;;;;;76255:12:199;;;;3551:76:56;;;3318:316;1404:123:70;1500:20;1510:1;1513;1516:3;1500:9;:20::i;4377:185:67:-;4464:1;4459;:6;4455:101;;-1:-1:-1;;;;;;;;;;;4513:3:67;4486:31;;;;;;:::i;:::-;;;;;;;;4531:14;4540:1;4543;4531:8;:14::i;4834:172:181:-;4925:7;4978:4;4984:6;4992:5;4961:37;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4951:48;;;;;;4944:55;;4834:172;;;;;:::o;15044:254:67:-;15199:1;15182:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;15172:30;;;;;;15165:1;15148:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;15138:30;;;;;;:64;15134:158;;-1:-1:-1;;;;;;;;;;;15249:3:67;15223:30;;;;;;:::i;:::-;;;;;;;;15267:14;15276:1;15279;15267:8;:14::i;19016:359:189:-;19092:24;19142:226;19200:2;:11;;;19236:2;:11;;;19269:2;:8;;;19305:2;:14;;;19345:2;:12;;;5058:72:49;;;;;;76918:19:199;;;;76953:12;;;76946:28;;;;77030:3;77008:16;;;;-1:-1:-1;;;;;;77004:43:199;5027:12:49;76990::199;;76983:65;77071:3;77123:16;;;-1:-1:-1;;;;;;77119:25:199;;;77105:12;;;77098:47;77179:16;;;77175:25;77161:12;;;77154:47;5058:72:49;;;;;;;;;77217:12:199;;;;5058:72:49;;;4838:299;1524:191:187;-1:-1:-1;;;;;;;;;;;;1616:21:187;;:::i;:::-;1650:62;1663:5;1670:41;;;;;;;;1684:12;1670:41;;;;1698:12;1670:41;;;1650:12;:62::i;16808:285:189:-;16935:14;;:21;16881;;-1:-1:-1;;;;;16923:34:189;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16914:43;;16972:9;16967:120;16991:14;;:21;16987:25;;16967:120;;;17045:31;:7;:14;;;17060:1;17045:17;;;;;;;;:::i;:31::-;17033:6;17040:1;17033:9;;;;;;;;:::i;:::-;;;;;;:43;;;;17014:3;;;;:::i;:::-;;;16967:120;;;;16808:285;;;:::o;9870:365::-;10011:9;;10034:14;;;;;10062;;;;;9942:12;10090:15;;;;10119:13;;;;10146:12;;;;10172:16;;;;10202;;;;;4049:147:54;;-1:-1:-1;;;;;;77612:16:199;;;77608:25;;4049:147:54;;;77596:38:199;;;;77667:16;;;77663:25;;;77650:11;;;77643:46;77705:11;;;77698:27;;;;77741:12;;;77734:28;;;;-1:-1:-1;;;;;;77818:3:199;77796:16;;;;77792:36;77778:12;;;77771:58;-1:-1:-1;;77913:15:199;;;77909:24;;77895:12;;;77888:46;77968:15;;;77964:24;;77950:12;;;77943:46;78024:15;;;78020:24;;;78005:13;;;77998:47;4049:147:54;;;;;;;;;78061:13:199;;;;4049:147:54;;9973:255:189;3733:470:54;18525:163:189;18597:7;18623:58;18646:34;:24;:7;:22;:24::i;:::-;:32;:34::i;:::-;9249:14:59;;9246:1;9242:22;9050:4;9037:18;;;9340:19;;8417:958;4095:277:67;4163:1;4158;:6;4154:212;;-1:-1:-1;;;;;;;;;;;4185:44:67;;;;69252:2:199;69234:21;;;69291:2;69271:18;;;69264:30;69330:34;69325:2;69310:18;;69303:62;-1:-1:-1;;;69396:2:199;69381:18;;69374:35;69441:3;69426:19;;69050:401;4185:44:67;;;;;;;;4248:34;4280:1;4248:34;;;;;;:::i;:::-;;;;;;;;4301;4333:1;4301:34;;;;;;:::i;:::-;;;;;;;;4349:6;:4;:6::i;5209:262::-;5271:1;5266;:6;5262:203;;-1:-1:-1;;;;;;;;;;;5293:41:67;;;;70692:2:199;70674:21;;;70731:2;70711:18;;;70704:30;70770:34;70765:2;70750:18;;70743:62;-1:-1:-1;;;70836:2:199;70821:18;;70814:32;70878:3;70863:19;;70490:398;5293:41:67;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;18168:351:189:-;18236:25;18273:27;18303:34;:24;:7;:22;:24::i;:34::-;18273:64;;18372:9;:16;-1:-1:-1;;;;;18358:31:189;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18358:31:189;;18347:42;;18404:9;18399:114;18423:8;:15;18419:1;:19;18399:114;;;18489:9;18499:1;18489:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;18459:43:189;:8;18468:1;18459:11;;;;;;;;:::i;:::-;;;;;;;;;;:43;18440:3;;;:::i;:::-;;;18399:114;;;;18263:256;18168:351;;;:::o;6256:393:56:-;6310:17;;6377:5;6452:45;:36;6377:5;2354:2;6452:14;:36::i;:::-;:43;:45::i;:::-;6440:57;-1:-1:-1;6592:50:56;:41;:7;2354:2;6592:17;:41::i;:50::-;6579:63;;6349:300;6256:393;;;:::o;843:900:57:-;1083:12;;978:13;;1109:17;;;1105:48;;;1135:18;;-1:-1:-1;;;1135:18:57;;;;;;;;;;;1105:48;1171:4;1163:12;;1340:9;1335:189;1359:8;1355:1;:12;1335:189;;;1473:36;1483:5;1490;1496:1;1490:8;;;;;;;;:::i;:::-;;;;;;;1500:5;1507:1;1473:9;:36::i;:::-;1465:44;-1:-1:-1;1369:3:57;;1335:189;;;-1:-1:-1;1621:8:57;1604:123;1635:6;1631:1;:10;1604:123;;;1674:38;1684:5;1699:1;1703:5;1710:1;1674:9;:38::i;:::-;1666:46;-1:-1:-1;1643:3:57;;1604:123;;;;997:746;843:900;;;;;;:::o;17805:93:72:-;-1:-1:-1;;;;;;;;;;;17860:7:72;17868:22;17886:4;17868:15;:22;:::i;:::-;17860:31;;;;;;;;;;;;;4018:25:199;;4006:2;3991:18;;3872:177;3452:580:55;3522:12;3551:29;3566:6;:13;3551:14;:29::i;:::-;3546:66;;3589:23;;-1:-1:-1;;;3589:23:55;;;;;;;;;;;3546:66;3710:13;;3693:14;3710:13;-1:-1:-1;;;;;3758:21:55;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3758:21:55;;3733:46;;3794:9;3789:91;3813:6;3809:1;:10;3789:91;;;3851:18;:6;3858:1;3851:9;;;;;;;;:::i;:::-;;;;;;;4917:5:56;4813:118;3851:18:55;3840:5;3846:1;3840:8;;;;;;;;:::i;:::-;;;;;;;;;;:29;3821:3;;;:::i;:::-;;;3789:91;;;;4003:22;4019:5;4003:15;:22::i;19698:666:189:-;19812:12;19826:25;;:::i;:::-;19913:8;;;;;19901:20;;:9;;;:20;20056:11;;20085:1;20078:8;;20056:31;20041:46;;20114:13;;;;;20145:1;20138:8;;20114:33;20097:14;;;:50;20176:15;;;;;20209:1;20202:8;;20176:35;20157:16;;;:54;20239:14;;;;;20270:1;20263:8;;20239:33;20221:51;;;;:15;;;:51;;;;20298:12;;;;;20327:2;20320:9;;20298:32;20282:48;;;:13;;;:48;20024:2;20017:9;;:14;;-1:-1:-1;20340:17:189;19901:9;20340:15;:17::i;:::-;19698:666;;;;;:::o;17099:541::-;17297:24;;:::i;:::-;17333:17;17353:24;:7;:22;:24::i;:::-;17333:44;;17401:24;:8;:22;:24::i;:::-;17387:38;;17435:13;;;:25;;;17488:21;:7;:19;:21::i;:::-;17470:15;;;:39;17519:16;17470:2;17519:14;:16::i;:::-;-1:-1:-1;17545:16:189;;;;:8;;;:16;17571:28;;;;:14;;;:28;17609:24;:12;;;:24;17545:2;17099:541;-1:-1:-1;;17099:541:189:o;15033:242:72:-;15103:12;15117:18;15195:4;15178:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;15178:22:72;;;;;;;15168:33;;15178:22;15168:33;;;;-1:-1:-1;;;;;;15219:19:72;;;;;4018:25:199;;;15168:33:72;-1:-1:-1;;;;;;;;;;;;15219:7:72;;;3991:18:199;;15219:19:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15248:20;;-1:-1:-1;;;15248:20:72;;15212:26;;-1:-1:-1;;;;;;;;;;;;15248:8:72;;;:20;;15212:26;;15263:4;;15248:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15033:242;;;:::o;3968:124:188:-;4029:13;4069:15;:1;:13;:15::i;3904:185:67:-;3991:1;-1:-1:-1;;;;;3986:6:67;:1;-1:-1:-1;;;;;3986:6:67;;3982:101;;-1:-1:-1;;;;;;;;;;;4040:3:67;4013:31;;;;;;:::i;:::-;;;;;;;;4058:14;4067:1;4070;4058:8;:14::i;5923:284:188:-;6002:24;;:::i;:::-;6052:8;:1;:6;:8::i;:::-;6038:22;;6086:8;:1;:6;:8::i;:::-;6070:13;;;:24;6104:16;;;:8;;;:16;6147:14;:1;:12;:14::i;:::-;6130:31;;:14;;;:31;6186:14;:1;:12;:14::i;:::-;6171:29;;:12;;;:29;:2;5923:284;-1:-1:-1;;5923:284:188:o;392:703:95:-;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:95;;;;;;;;;;;;-1:-1:-1;;;691:10:95;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:95;;-1:-1:-1;837:2:95;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;-1:-1:-1;;;;;881:17:95;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:95;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:95;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;966:56:95;;;;;;;;-1:-1:-1;1036:11:95;1045:2;1036:11;;:::i;:::-;;;908:150;;1026:259:179;1120:24;1132:1;1120:24;;;;;;;;;;;;;-1:-1:-1;;;1120:24:179;;;:11;:24::i;:::-;1154:34;609:4:183;1154:34:179;;;;;;;;;;;;;-1:-1:-1;;;1154:34:179;;;:11;:34::i;:::-;1198:36;660:4:183;1198:36:179;;;;;;;;;;;;;-1:-1:-1;;;1198:36:179;;;:11;:36::i;:::-;1244:34;710:4:183;1244:34:179;;;;;;;;;;;;;-1:-1:-1;;;1244:34:179;;;:11;:34::i;15654:291:67:-;15729:14;15738:1;15741;15729:8;:14::i;:::-;15724:215;;-1:-1:-1;;;;;;;;;;;15764:42:67;;;;72247:2:199;72229:21;;;72286:2;72266:18;;;72259:30;72325:34;72320:2;72305:18;;72298:62;-1:-1:-1;;;72391:2:199;72376:18;;72369:33;72434:3;72419:19;;72045:399;15764:42:67;;;;;;;;15825:32;15855:1;15825:32;;;;;;:::i;:::-;;;;;;;;15876;15906:1;15876:32;;;;;;:::i;665:149:188:-;752:6;;787:19;;;;;;73462::199;;;73497:12;787:19:188;;;-1:-1:-1;;787:19:188;;;;;;;;;777:30;;787:19;777:30;;;;768:39;;;665:149;:::o;1434:1263:79:-;1518:14;1559:3;1552;:10;;1544:85;;;;-1:-1:-1;;;1544:85:79;;73722:2:199;1544:85:79;;;73704:21:199;73761:2;73741:18;;;73734:30;73800:34;73780:18;;;73773:62;73871:32;73851:18;;;73844:60;73921:19;;1544:85:79;73520:426:199;1544:85:79;1863:3;1858:1;:8;;:20;;;;;1875:3;1870:1;:8;;1858:20;1854:34;;;-1:-1:-1;1887:1:79;1880:8;;1854:34;1899:12;1914:9;1920:3;1914;:9;:::i;:::-;:13;;1926:1;1914:13;:::i;:::-;1899:28;;2122:1;2117;:6;;:18;;;;;2134:1;2127:4;:8;2117:18;2113:38;;;2144:7;2150:1;2144:3;:7;:::i;:::-;2137:14;;;;;2113:38;2170:15;2184:1;-1:-1:-1;;2170:15:79;:::i;:::-;2165:1;:20;;:46;;;;-1:-1:-1;2196:15:79;2210:1;-1:-1:-1;;2196:15:79;:::i;:::-;2189:4;:22;2165:46;2161:82;;;2227:15;2241:1;-1:-1:-1;;2227:15:79;:::i;:::-;2220:23;;:3;:23;:::i;2161:82::-;2347:3;2343:1;:7;2339:352;;;2366:12;2381:7;2385:3;2381:1;:7;:::i;:::-;2366:22;-1:-1:-1;2402:11:79;2416;2423:4;2366:22;2416:11;:::i;:::-;2402:25;;2445:3;2452:1;2445:8;2441:24;;2462:3;2455:10;;;;;;;2441:24;2500:1;2488:9;2494:3;2488;:9;:::i;:::-;:13;;;;:::i;:::-;2479:22;;2352:160;;2339:352;;;2526:3;2522:1;:7;2518:173;;;2545:12;2560:7;2566:1;2560:3;:7;:::i;:::-;2545:22;-1:-1:-1;2581:11:79;2595;2602:4;2545:22;2595:11;:::i;:::-;2581:25;;2624:3;2631:1;2624:8;2620:24;;2641:3;2634:10;;;;;;;2620:24;2667:9;2673:3;2667;:9;:::i;:::-;:13;;2679:1;2667:13;:::i;:::-;2658:22;;2531:160;;2518:173;1534:1163;1434:1263;;;;;:::o;9671:207::-;9747:11;702:42;-1:-1:-1;;;;;9763:36:79;9847:2;9851;9800:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9800:54:79;;;;;;;;;;;;;;-1:-1:-1;;;;;9800:54:79;-1:-1:-1;;;9800:54:79;;;9763:92;;;9800:54;9763:92;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;789:312:70;859:1;854:6;;:1;:6;;;850:245;;-1:-1:-1;;;;;;;;;;;881:41:70;;;;74448:2:199;74430:21;;;74487:2;74467:18;;;74460:30;74526:34;74521:2;74506:18;;74499:62;-1:-1:-1;;;74592:2:199;74577:18;;74570:32;74634:3;74619:19;;74246:398;881:41:70;;;;;;;;-1:-1:-1;;;;;;;;;;;972:1:70;:20;;;;;;;;;;;;;;;-1:-1:-1;;;972:20:70;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;972:20:70;;;;941:52;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;1043:1:70;:20;;;;;;;;;;;;;;;-1:-1:-1;;;1043:20:70;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1043:20:70;;;;1012:52;;;;;;:::i;373:611:187:-;425:21;;:::i;:::-;454:31;;;491:32;;;:12;;;;:32;;;529:11;;;;:31;;;;566:37;;;:17;;;;:37;;;609:15;;;;:35;;;;650:13;;;;;;:22;:49;;;;;;;;705:13;;:23;;;;:50;;;761:13;;:24;;;;:51;;;818:13;;:26;;:53;;;877:13;;:24;;:51;;;934:13;:20;;:47;;;;454:5;373:611::o;5560:137:188:-;5621:21;;:::i;:::-;5661:29;:18;:1;:16;:18::i;:::-;:27;:29::i;3771:123:56:-;3837:5;3861:26;3873:13;:7;:11;:13::i;:::-;3861:11;:26::i;13489:464:189:-;13634:12;;11617:9;13558:7;;13584:362;;13687:13;;;;11617:9;13742:14;;;;11617:9;13800:16;;;;11617:9;13858:14;;;;11617:9;13910:10;;;;11617:9;-1:-1:-1;;;2608:6:59;4376:51;;;;4442:53;2719:5;4442:53;;;;4376:119;4510:55;2831:5;4510:55;;;;4376:189;4580:60;2948:5;4580:60;;;;4376:264;4655:55;3060:5;4655:55;;;;4376:334;4725:30;;;4376:379;4070:702;;;;;;;;;15950:205:67;16044:14;16053:1;16056;16044:8;:14::i;:::-;16039:110;;-1:-1:-1;;;;;;;;;;;16105:3:67;16079:30;;;;;;:::i;:::-;;;;;;;;16123:15;16133:1;16136;16123:9;:15::i;14695:344::-;14831:1;14814:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14804:30;;;;;;14797:1;14780:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14770:30;;;;;;:64;14766:267;;-1:-1:-1;;;;;;;;;;;14855:43:67;;;;76480:2:199;76462:21;;;76519:2;76499:18;;;76492:30;76558:34;76553:2;76538:18;;76531:62;-1:-1:-1;;;76624:2:199;76609:18;;76602:34;76668:3;76653:19;;76278:400;14855:43:67;;;;;;;;-1:-1:-1;;;;;;;;;;;14948:1:67;14917:33;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;15000:1:67;14969:33;;;;;;:::i;18009:153:189:-;18084:12;18114:41;:24;:7;:22;:24::i;:::-;:39;:41::i;6788:399:55:-;6847:26;6885:21;6909:23;:8;:21;:23::i;:::-;6885:47;;6968:13;-1:-1:-1;;;;;6953:29:55;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6953:29:55;;6942:40;;6997:9;6992:189;7016:13;7012:1;:17;6992:189;;;7050:12;7065:17;:8;7080:1;7065:14;:17::i;:::-;7050:32;;7110:60;7136:16;:6;:14;:16::i;:::-;7154:15;:6;:13;:15::i;:::-;7560:16:59;;3168:5;7506:51;;;;;;:70;;7384:200;7110:60:55;7096:8;7105:1;7096:11;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7096:74:55;;;:11;;;;;;;;;;;:74;-1:-1:-1;7031:3:55;;;:::i;:::-;;;6992:189;;2409:432:67;-1:-1:-1;;;;;;;;;;;2985:55:67;3066:16;2452:359;;2652:67;;;-1:-1:-1;;;;;;;;;;;2652:67:67;;;78287:51:199;;;-1:-1:-1;;;78354:18:199;;;78347:34;;;;2712:4:67;78397:18:199;;;78390:34;2489:11:67;;1671:64;2586:43;;78260:18:199;;2652:67:67;;;-1:-1:-1;;2652:67:67;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:67;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:67;2820:7;:14;;-1:-1:-1;;2820:14:67;;;;;2409:432::o;11947:141:52:-;12017:7;12043:38;:7;12017;12075:4;12043:13;:38::i;9003:292::-;9059:14;9085:12;9100:13;:7;6898:3;6871:30;;6712:196;9100:13;-1:-1:-1;;;;;7239:43:52;;;;9258:21;;;;;-1:-1:-1;;9003:292:52:o;11126:529::-;11201:7;-1:-1:-1;;;;;7239:43:52;;11308:13;;;11304:64;;;11344:13;;-1:-1:-1;;;11344:13:52;;;;;;;;;;;11304:64;11580:58;11609:6;11593:13;:7;6898:3;6871:30;;6712:196;11593:13;:22;11630:6;11623:4;:13;11580:5;:58::i;2125:526:57:-;2261:14;2466:1;2439:23;;;2438:29;:34;;2434:211;;2521:24;2531:4;2537:7;2521:9;:24::i;:::-;2514:31;;;;2434:211;2610:24;2620:7;2629:4;2610:9;:24::i;10245:302:55:-;10315:4;10482:18;;;;;:58;;-1:-1:-1;1552:24:45;1575:1;645;1552:24;:::i;:::-;1546:1;:31;;10504:13:55;:36;;10475:65;10245:302;-1:-1:-1;;10245:302:55:o;5340:892:52:-;5595:4;5589:11;;5432;5760:33;5772:8;5788:4;5782:10;;5760:11;:33::i;:::-;-1:-1:-1;;;;;7239:43:52;8097:2;8081:18;;-1:-1:-1;;8465:20:52;6109;;6131:4;6105:31;6099:4;6092:45;6199:17;;;-1:-1:-1;5340:892:52;;-1:-1:-1;5340:892:52:o;7594:807:55:-;7659:7;7678:21;7702:23;:8;:21;:23::i;:::-;7678:47;;7735:23;7775:13;-1:-1:-1;;;;;7761:28:55;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7761:28:55;;7735:54;;7804:9;7799:298;7823:13;7819:1;:17;7799:298;;;8062:24;:17;:8;8077:1;8062:14;:17::i;:::-;:22;:24::i;:::-;8050:6;8057:1;8050:9;;;;;;;;:::i;:::-;;;;;;;;;;:36;7838:3;;;:::i;:::-;;;7799:298;;;-1:-1:-1;8236:58:55;8261:6;8269:24;8292:1;645::45;8269:24:55;:::i;:::-;8236;:58::i;:::-;8385:6;8392:1;8385:9;;;;;;;;:::i;:::-;;;;;;;8378:16;;;;7594:807;;;:::o;3622:277:67:-;3690:1;-1:-1:-1;;;;;3685:6:67;:1;-1:-1:-1;;;;;3685:6:67;;3681:212;;-1:-1:-1;;;;;;;;;;;3712:44:67;;;;78637:2:199;78619:21;;;78676:2;78656:18;;;78649:30;78715:34;78710:2;78695:18;;78688:62;-1:-1:-1;;;78781:2:199;78766:18;;78759:35;78826:3;78811:19;;78435:401;3712:44:67;;;;;;;;3775:34;3807:1;3775:34;;;;;;:::i;:::-;;;;;;;;3828;3860:1;3828:34;;;;;;:::i;15304:345::-;15431:8;;15419;;15401:4;;15419:20;;15415:228;;15460:6;15455:137;15476:1;:8;15472:1;:12;15455:137;;;15521:1;15523;15521:4;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;15513:12:67;;:1;15515;15513:4;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;15513:4:67;:12;15509:69;;15554:5;15549:10;;15509:69;15486:3;;;;:::i;:::-;;;;15455:137;;;;15415:228;;;-1:-1:-1;15627:5:67;15304:345;;;;:::o;5189:365:188:-;5253:27;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5253:27:188;5310:15;:1;:13;:15::i;:::-;5292:33;;5354:15;:1;:13;:15::i;:::-;5335:16;;;:34;5399:15;:1;:13;:15::i;:::-;5379:17;;;:35;5446:15;:1;:13;:15::i;:::-;5424:19;;;:37;5491:15;:1;:13;:15::i;:::-;5471:17;;;:35;5532:15;:1;:13;:15::i;:::-;5516:13;;;:31;:6;5189:365;-1:-1:-1;5189:365:188:o;12160:606:189:-;12230:21;;:::i;:::-;12318:15;;12299:35;;:18;:35::i;:::-;12263:12;;:72;;;;;;12401:16;;;;12382:36;;:18;:36::i;:::-;12345:13;;;;:74;;;;;;12486:17;;;;12467:37;;:18;:37::i;:::-;12429:14;;;;:76;;;;;;12574:19;;;;12555:39;;:18;:39::i;:::-;12515:16;;;;:80;;;;;;12662:17;;;;12643:37;;:18;:37::i;:::-;12605:14;;;;:76;;;;;;12744:13;;;;12725:33;;:18;:33::i;:::-;12691:10;;;;:68;;;;;;:3;12160:606;-1:-1:-1;12160:606:189:o;2972:569:52:-;3060:10;;3026:7;;3486:4;3477:14;;3517:17;3477:14;3060:10;3517:5;:17::i;4032:185:56:-;4093:5;4115:16;4123:7;4115;:16::i;:::-;4110:48;;4140:18;;-1:-1:-1;;;4140:18:56;;;;;;;;;;;4110:48;-1:-1:-1;4201:7:56;4032:185::o;4187:132:55:-;4256:8;4283:29;4298:13;:7;:11;:13::i;:::-;4283:14;:29::i;6514:195::-;6578:7;1387:20:45;1107:2;1387;:20;:::i;:::-;6664:38:55;;-1:-1:-1;;;;;7239:43:52;;6664:38:55;:::i;6104:342::-;6181:5;6216:8;6181:5;1387:20:45;1107:2;1387;:20;:::i;:::-;6263:25:55;;:10;:25;:::i;:::-;6243:45;-1:-1:-1;;;;;;7239:43:52;;6302:9:55;:26;6298:56;;6337:17;;-1:-1:-1;;;6337:17:55;;;;;;;;;;;6298:56;6371:68;:54;6394:9;1387:20:45;1107:2;1387;:20;:::i;:::-;6371:7:55;;:54;:13;:54::i;8942:186:56:-;8995:7;9021:100;9044:76;2512:2;1107::45;9044:5:56;:14;:24;:76;:24;:76::i;7939:152::-;7991:6;8023:60;2306:2;8080:1;8023:5;:14;4813:118;10331:484:52;10416:7;10435:12;10450:13;:7;6898:3;6871:30;;6712:196;10450:13;10435:28;;10546:13;:7;:11;:13::i;:::-;10539:4;10523:13;10530:6;10523:4;:13;:::i;:::-;:20;;;;:::i;:::-;:36;10519:87;;;10582:13;;-1:-1:-1;;;10582:13:52;;;;;;;;;;;10519:87;10758:40;10778:6;10771:4;:13;10792:4;2092:540;2158:7;;2192:11;2199:4;2192;:11;:::i;:::-;2177:26;;2471:4;2465:11;2459:4;2456:21;2453:38;;;-1:-1:-1;2488:1:52;2453:38;2514:4;2522:1;2514:9;2510:66;;2546:19;;-1:-1:-1;;;2546:19:52;;;;;;;;;;;2510:66;17362:3;17354:11;;;17353:20;;2592:33;17029:352;3115:287:57;3196:14;3226:23;;:51;;;;-1:-1:-1;3253:24:57;;3226:51;3222:174;;;-1:-1:-1;3300:1:57;3293:8;;3222:174;3349:35;;;;;;37575:19:199;;;37610:12;;;37603:28;;;37647:12;;3349:35:57;;;;;;;;;;;;3339:46;;;;;;3332:53;;;;19390:1003:52;19660:4;19654:11;19478:7;;19742:14;;;19738:68;;;19779:16;;-1:-1:-1;;;19779:16:52;;;;;;;;;;;19738:68;19925:14;19958:9;19953:364;19977:8;:15;19973:1;:19;19953:364;;;20009:15;20027:8;20036:1;20027:11;;;;;;;;:::i;:::-;;;;;;;20009:29;;20189:41;20203:7;20223:6;20212:8;:17;20189:13;:41::i;:::-;-1:-1:-1;;;;;;7239:43:52;20248:23;;;;;20289:3;;19953:364;;;-1:-1:-1;17362:3:52;17354:11;;;17353:20;;20333:53;17029:352;5663:248:56;5713:7;5733:17;5752:18;5774:16;:5;:14;:16::i;:::-;5868:35;;;;;;;37575:19:199;;;;37610:12;;;37603:28;;;;5868:35:56;;;;;;;;;37647:12:199;;;;5868:35:56;;5858:46;;;;;;5663:248;-1:-1:-1;;;;5663:248:56:o;4547:1885:57:-;4657:13;;4790:1;:11;;4775:27;;4771:58;;;4811:18;;-1:-1:-1;;;4811:18:57;;;;;;;;;;;4771:58;5099:9;5094:1322;5118:6;5114:1;:10;5094:1322;;;5632:17;5627:618;5667:11;5655:9;:23;5627:618;;;5718:18;5739:9;5751:1;5739:13;5718:34;;5774:17;5794:6;5801:9;5794:17;;;;;;;;:::i;:::-;;;;;;;5774:37;;5887:18;5921:11;5908:10;:24;:58;;5964:1;5908:58;;;5935:6;5942:10;5935:18;;;;;;;;:::i;:::-;;;;;;;5908:58;5887:79;;6194:32;6204:9;6215:10;6194:9;:32::i;:::-;6169:6;6189:1;6176:9;:14;;6169:22;;;;;;;;:::i;:::-;;;;;;;;;;:57;-1:-1:-1;;;5693:1:57;5680:14;5627:618;;;-1:-1:-1;6400:1:57;6380:15;;;6379:22;;;5126:3;5094:1322;;1512:961:61;1568:6;1649:11;1663:25;1682:5;5243:1;-1:-1:-1;;;;;3754:41:61;;3751:1;3747:49;3975:9;;;-1:-1:-1;;;;;4243:25:61;;4240:1;4236:33;4287:9;;;4460:10;4454:17;;4451:1;4447:25;4490:9;;;4663:6;4657:13;;4654:1;4650:21;4689:9;;;4861:4;4855:11;;4852:1;4848:19;;;4885:9;;;5057:3;5051:10;;5048:1;5044:18;5080:9;;;5246:10;;;5239:18;;5275:9;;;5431:10;;;;4316;;;;4519;;;;4718;4914;5109;;;;5304;;;;5461;;3269:2218;1663:25;1649:39;;1883:1;1877:3;:7;1873:594;;;5659:34;1009:1;5659:34;;;;2021:4;5659:53;1999:27;5551:169;1873:594;-1:-1:-1;;2186:7:61;;5659:34;2406:17;;;1009:1;5659:34;;5696:16;;;5659:53;2392:50;5551:169;4283:116:56;4340:4;1387:20:45;1107:2;1387;:20;:::i;:::-;-1:-1:-1;;;;;7239:43:52;;4363:29:56;;4283:116;-1:-1:-1;;4283:116:56:o;4471:200:55:-;4535:8;4560:19;4571:7;4560:10;:19::i;:::-;4555:54;;4588:21;;-1:-1:-1;;;4588:21:55;;;;;;;;;;;15552:538:52;15643:7;;15685:29;:7;15699:6;15707;15685:13;:29::i;:::-;16055:2;:11;;;16071:1;16054:18;16028:45;;-1:-1:-1;;15552:538:52;;;;;:::o;7459:258::-;7512:12;-1:-1:-1;;;;;7239:43:52;;7671:13;:7;6898:3;6871:30;;6712:196;7671:13;:29;;7459:258;-1:-1:-1;;7459:258:52:o;18013:842::-;18352:4;18346:11;18091:7;;-1:-1:-1;;;;;7239:43:52;;;6898:3;6871:30;;;;18434:12;;;18430:66;;;18469:16;;-1:-1:-1;;;18469:16:52;;;;;;;;;;;18430:66;18505:8;18721:4;18713:6;18707:4;18699:6;18693:4;18686:5;18675:51;18668:58;;18750:3;18745:37;;18762:20;;-1:-1:-1;;;18762:20:52;;;;;;;;;;;18745:37;17362:3;17354:11;;;17353:20;;18799:49;18792:56;18013:842;-1:-1:-1;;;;;;;18013:842:52:o;4755:389:55:-;4815:4;-1:-1:-1;;;;;7239:43:52;;4815:4:55;1387:20:45;1107:2;1387;:20;:::i;:::-;5028:21:55;;:6;:21;:::i;:::-;5004:45;-1:-1:-1;5098:6:55;1387:20:45;1107:2;1387;:20;:::i;:::-;5066:28:55;;:13;:28;:::i;:::-;:38;:71;;;;;5108:29;5123:13;5108:14;:29::i;13860:1334:52:-;13947:14;13977:6;13987:1;13977:11;13973:59;;-1:-1:-1;14019:1:52;14004:17;;13973:59;14118:2;14109:6;:11;14105:65;;;14143:16;;-1:-1:-1;;;14143:16:52;;;;;;;;;;;14105:65;-1:-1:-1;;;;;7239:43:52;;14249:15;14258:6;14249;:15;:::i;:::-;:31;14245:82;;;14303:13;;-1:-1:-1;;;14303:13:52;;;;;;;;;;;14245:82;14366:1;14356:11;;;14336:17;14406:13;:7;6898:3;6871:30;;6712:196;14406:13;15153:17;;;15147:24;-1:-1:-1;;;;;14845:17:52;;;;14841:90;;;;15143:35;;13860:1334;-1:-1:-1;;;;13860:1334:52:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:131:199;-1:-1:-1;;;;;89:31:199;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;289:127::-;350:10;345:3;341:20;338:1;331:31;381:4;378:1;371:15;405:4;402:1;395:15;421:254;494:2;488:9;536:4;524:17;;-1:-1:-1;;;;;556:34:199;;592:22;;;553:62;550:88;;;618:18;;:::i;:::-;654:2;647:22;421:254;:::o;680:::-;753:2;747:9;795:4;783:17;;-1:-1:-1;;;;;815:34:199;;851:22;;;812:62;809:88;;;877:18;;:::i;939:258::-;1012:4;1006:11;;;1044:17;;-1:-1:-1;;;;;1076:34:199;;1112:22;;;1073:62;1070:88;;;1138:18;;:::i;1202:256::-;1275:2;1269:9;1317:6;1305:19;;-1:-1:-1;;;;;1339:34:199;;1375:22;;;1336:62;1333:88;;;1401:18;;:::i;1463:254::-;1536:2;1530:9;1578:4;1566:17;;-1:-1:-1;;;;;1598:34:199;;1634:22;;;1595:62;1592:88;;;1660:18;;:::i;1722:275::-;1793:2;1787:9;1858:2;1839:13;;-1:-1:-1;;1835:27:199;1823:40;;-1:-1:-1;;;;;1878:34:199;;1914:22;;;1875:62;1872:88;;;1940:18;;:::i;:::-;1976:2;1969:22;1722:275;;-1:-1:-1;1722:275:199:o;2002:186::-;2050:4;-1:-1:-1;;;;;2075:6:199;2072:30;2069:56;;;2105:18;;:::i;:::-;-1:-1:-1;2171:2:199;2150:15;-1:-1:-1;;2146:29:199;2177:4;2142:40;;2002:186::o;2193:462::-;2235:5;2288:3;2281:4;2273:6;2269:17;2265:27;2255:55;;2306:1;2303;2296:12;2255:55;2342:6;2329:20;2373:48;2389:31;2417:2;2389:31;:::i;:::-;2373:48;:::i;:::-;2446:2;2437:7;2430:19;2492:3;2485:4;2480:2;2472:6;2468:15;2464:26;2461:35;2458:55;;;2509:1;2506;2499:12;2458:55;2574:2;2567:4;2559:6;2555:17;2548:4;2539:7;2535:18;2522:55;2622:1;2597:16;;;2615:4;2593:27;2586:38;;;;2601:7;2193:462;-1:-1:-1;;;2193:462:199:o;2660:455::-;2737:6;2745;2798:2;2786:9;2777:7;2773:23;2769:32;2766:52;;;2814:1;2811;2804:12;2766:52;2853:9;2840:23;2872:31;2897:5;2872:31;:::i;:::-;2922:5;-1:-1:-1;2978:2:199;2963:18;;2950:32;-1:-1:-1;;;;;2994:30:199;;2991:50;;;3037:1;3034;3027:12;2991:50;3060:49;3101:7;3092:6;3081:9;3077:22;3060:49;:::i;:::-;3050:59;;;2660:455;;;;;:::o;3120:250::-;3205:1;3215:113;3229:6;3226:1;3223:13;3215:113;;;3305:11;;;3299:18;3286:11;;;3279:39;3251:2;3244:10;3215:113;;;-1:-1:-1;;3362:1:199;3344:16;;3337:27;3120:250::o;3375:270::-;3416:3;3454:5;3448:12;3481:6;3476:3;3469:19;3497:76;3566:6;3559:4;3554:3;3550:14;3543:4;3536:5;3532:16;3497:76;:::i;:::-;3627:2;3606:15;-1:-1:-1;;3602:29:199;3593:39;;;;3634:4;3589:50;;3375:270;-1:-1:-1;;3375:270:199:o;3650:217::-;3797:2;3786:9;3779:21;3760:4;3817:44;3857:2;3846:9;3842:18;3834:6;3817:44;:::i;4054:248::-;4122:6;4130;4183:2;4171:9;4162:7;4158:23;4154:32;4151:52;;;4199:1;4196;4189:12;4151:52;-1:-1:-1;;4222:23:199;;;4292:2;4277:18;;;4264:32;;-1:-1:-1;4054:248:199:o;4307:435::-;4360:3;4398:5;4392:12;4425:6;4420:3;4413:19;4451:4;4480:2;4475:3;4471:12;4464:19;;4517:2;4510:5;4506:14;4538:1;4548:169;4562:6;4559:1;4556:13;4548:169;;;4623:13;;4611:26;;4657:12;;;;4692:15;;;;4584:1;4577:9;4548:169;;;-1:-1:-1;4733:3:199;;4307:435;-1:-1:-1;;;;;4307:435:199:o;4747:261::-;4926:2;4915:9;4908:21;4889:4;4946:56;4998:2;4987:9;4983:18;4975:6;4946:56;:::i;5013:598::-;5099:6;5107;5115;5123;5176:3;5164:9;5155:7;5151:23;5147:33;5144:53;;;5193:1;5190;5183:12;5144:53;5229:9;5216:23;5206:33;;5289:2;5278:9;5274:18;5261:32;5302:31;5327:5;5302:31;:::i;:::-;5352:5;-1:-1:-1;5409:2:199;5394:18;;5381:32;5422:33;5381:32;5422:33;:::i;:::-;5474:7;-1:-1:-1;5533:2:199;5518:18;;5505:32;5546:33;5505:32;5546:33;:::i;:::-;5013:598;;;;-1:-1:-1;5013:598:199;;-1:-1:-1;;5013:598:199:o;5824:523::-;5910:6;5918;5926;5979:2;5967:9;5958:7;5954:23;5950:32;5947:52;;;5995:1;5992;5985:12;5947:52;6034:9;6021:23;6053:31;6078:5;6053:31;:::i;:::-;6103:5;-1:-1:-1;6155:2:199;6140:18;;6127:32;;-1:-1:-1;6210:2:199;6195:18;;6182:32;-1:-1:-1;;;;;6226:30:199;;6223:50;;;6269:1;6266;6259:12;6223:50;6292:49;6333:7;6324:6;6313:9;6309:22;6292:49;:::i;:::-;6282:59;;;5824:523;;;;;:::o;6352:191::-;6420:4;-1:-1:-1;;;;;6445:6:199;6442:30;6439:56;;;6475:18;;:::i;:::-;-1:-1:-1;6520:1:199;6516:14;6532:4;6512:25;;6352:191::o;6548:121::-;6633:10;6626:5;6622:22;6615:5;6612:33;6602:61;;6659:1;6656;6649:12;6674:132;6741:20;;6770:30;6741:20;6770:30;:::i;6811:165::-;6878:20;;6938:12;6927:24;;6917:35;;6907:63;;6966:1;6963;6956:12;6981:321;7037:5;7085:4;7073:9;7068:3;7064:19;7060:30;7057:50;;;7103:1;7100;7093:12;7057:50;7125:23;;:::i;:::-;7116:32;;7185:9;7172:23;7239:6;7230:7;7226:20;7217:7;7214:33;7204:61;;7261:1;7258;7251:12;7204:61;7274:22;;7281:5;6981:321;-1:-1:-1;;6981:321:199:o;7307:1325::-;7362:5;7401:9;7396:3;7392:19;7431:6;7427:2;7423:15;7420:35;;;7451:1;7448;7441:12;7420:35;7473:23;;:::i;:::-;7464:32;;7532:9;7519:23;7512:5;7505:38;7595:2;7584:9;7580:18;7567:32;7608;7632:7;7608:32;:::i;:::-;7667:2;7656:14;;7649:31;7732:2;7717:18;;7704:32;7745;7704;7745;:::i;:::-;7804:2;7793:14;;7786:31;7849:37;7882:2;7867:18;;7849:37;:::i;:::-;7844:2;7837:5;7833:14;7826:61;7920:38;7953:3;7942:9;7938:19;7920:38;:::i;:::-;7914:3;7903:15;;7896:63;7994:4;-1:-1:-1;;7975:17:199;;7971:28;7968:48;;;8012:1;8009;8002:12;7968:48;;8040:23;;:::i;:::-;8088:53;8137:3;8131;8120:9;8116:19;8088:53;:::i;:::-;8079:7;8072:70;8176:54;8226:3;8219:4;8208:9;8204:20;8176:54;:::i;:::-;8171:2;8162:7;8158:16;8151:80;8265:53;8314:3;8308;8297:9;8293:19;8265:53;:::i;:::-;8260:2;8251:7;8247:16;8240:79;8353:53;8402:3;8396;8385:9;8381:19;8353:53;:::i;:::-;8348:2;8339:7;8335:16;8328:79;8442:53;8491:3;8485;8474:9;8470:19;8442:53;:::i;:::-;8436:3;8427:7;8423:17;8416:80;8531:53;8580:3;8574;8563:9;8559:19;8531:53;:::i;:::-;8525:3;8516:7;8512:17;8505:80;8618:7;8612:3;8605:5;8601:15;8594:32;;7307:1325;;;;:::o;8637:953::-;8695:5;8725:4;8766:2;8754:9;8749:3;8745:19;8741:28;8738:48;;;8782:1;8779;8772:12;8738:48;8804:23;;:::i;:::-;8795:32;;8863:9;8850:23;-1:-1:-1;;;;;8888:6:199;8885:30;8882:50;;;8928:1;8925;8918:12;8882:50;8951:22;;9004:4;8996:13;;8992:23;-1:-1:-1;8982:51:199;;9029:1;9026;9019:12;8982:51;9065:2;9052:16;9088:68;9104:51;9152:2;9104:51;:::i;9088:68::-;9190:15;;;9252:6;9293:11;;;9285:20;;9281:29;;;9221:12;;;;9178:3;9322:15;;;9319:35;;;9350:1;9347;9340:12;9319:35;9374:11;;;;9394:161;9410:6;9405:3;9402:15;9394:161;;;9476:36;9508:3;9503;9476:36;:::i;:::-;9464:49;;9427:12;;;;9533;;;;9394:161;;;-1:-1:-1;9564:20:199;;-1:-1:-1;9571:5:199;;8637:953;-1:-1:-1;;;;;8637:953:199:o;9595:489::-;9693:6;9701;9754:2;9742:9;9733:7;9729:23;9725:32;9722:52;;;9770:1;9767;9760:12;9722:52;9809:9;9796:23;9828:31;9853:5;9828:31;:::i;:::-;9878:5;-1:-1:-1;9934:2:199;9919:18;;9906:32;-1:-1:-1;;;;;9950:30:199;;9947:50;;;9993:1;9990;9983:12;9947:50;10016:62;10070:7;10061:6;10050:9;10046:22;10016:62;:::i;10089:377::-;10282:2;10271:9;10264:21;10245:4;10308:44;10348:2;10337:9;10333:18;10325:6;10308:44;:::i;:::-;10400:9;10392:6;10388:22;10383:2;10372:9;10368:18;10361:50;10428:32;10453:6;10445;10428:32;:::i;10471:383::-;10548:6;10556;10564;10617:2;10605:9;10596:7;10592:23;10588:32;10585:52;;;10633:1;10630;10623:12;10585:52;10672:9;10659:23;10691:31;10716:5;10691:31;:::i;:::-;10741:5;10793:2;10778:18;;10765:32;;-1:-1:-1;10844:2:199;10829:18;;;10816:32;;10471:383;-1:-1:-1;;;10471:383:199:o;10859:658::-;11030:2;11082:21;;;11152:13;;11055:18;;;11174:22;;;11001:4;;11030:2;11253:15;;;;11227:2;11212:18;;;11001:4;11296:195;11310:6;11307:1;11304:13;11296:195;;;11375:13;;-1:-1:-1;;;;;11371:39:199;11359:52;;11466:15;;;;11431:12;;;;11407:1;11325:9;11296:195;;;-1:-1:-1;11508:3:199;;10859:658;-1:-1:-1;;;;;;10859:658:199:o;11522:245::-;11580:6;11633:2;11621:9;11612:7;11608:23;11604:32;11601:52;;;11649:1;11646;11639:12;11601:52;11688:9;11675:23;11707:30;11731:5;11707:30;:::i;11772:180::-;11831:6;11884:2;11872:9;11863:7;11859:23;11855:32;11852:52;;;11900:1;11897;11890:12;11852:52;-1:-1:-1;11923:23:199;;11772:180;-1:-1:-1;11772:180:199:o;11957:217::-;12010:5;12058:4;12046:9;12041:3;12037:19;12033:30;12030:50;;;12076:1;12073;12066:12;12030:50;12098:23;;:::i;:::-;12144;;12130:38;;-1:-1:-1;12089:32:199;11957:217;-1:-1:-1;11957:217:199:o;12179:897::-;12240:5;12288:4;12276:9;12271:3;12267:19;12263:30;12260:50;;;12306:1;12303;12296:12;12260:50;12339:2;12333:9;12381:4;12373:6;12369:17;12452:6;12440:10;12437:22;-1:-1:-1;;;;;12404:10:199;12401:34;12398:62;12395:88;;;12463:18;;:::i;:::-;12503:10;12499:2;12492:22;;12532:6;12523:15;;12575:9;12562:23;12554:6;12547:39;12647:2;12636:9;12632:18;12619:32;12614:2;12606:6;12602:15;12595:57;12704:2;12693:9;12689:18;12676:32;12717;12741:7;12717:32;:::i;:::-;12777:2;12765:15;;12758:32;12823:37;12856:2;12841:18;;12823:37;:::i;:::-;12818:2;12810:6;12806:15;12799:62;12895:38;12928:3;12917:9;12913:19;12895:38;:::i;:::-;12889:3;12881:6;12877:16;12870:64;12996:3;12985:9;12981:19;12968:33;12962:3;12954:6;12950:16;12943:59;13064:3;13053:9;13049:19;13036:33;13030:3;13022:6;13018:16;13011:59;;12179:897;;;;:::o;13081:118::-;13167:5;13160:13;13153:21;13146:5;13143:32;13133:60;;13189:1;13186;13179:12;13204:487;13336:6;13344;13352;13405:3;13393:9;13384:7;13380:23;13376:33;13373:53;;;13422:1;13419;13412:12;13373:53;13445:44;13481:7;13470:9;13445:44;:::i;:::-;13435:54;;13508:61;13561:7;13556:2;13545:9;13541:18;13508:61;:::i;:::-;13498:71;;13619:3;13608:9;13604:19;13591:33;13633:28;13655:5;13633:28;:::i;:::-;13680:5;13670:15;;;13204:487;;;;;:::o;13696:247::-;13755:6;13808:2;13796:9;13787:7;13783:23;13779:32;13776:52;;;13824:1;13821;13814:12;13776:52;13863:9;13850:23;13882:31;13907:5;13882:31;:::i;13948:456::-;14025:6;14033;14041;14094:2;14082:9;14073:7;14069:23;14065:32;14062:52;;;14110:1;14107;14100:12;14062:52;14146:9;14133:23;14123:33;;14206:2;14195:9;14191:18;14178:32;14219:31;14244:5;14219:31;:::i;:::-;14269:5;-1:-1:-1;14326:2:199;14311:18;;14298:32;14339:33;14298:32;14339:33;:::i;14409:289::-;14611:10;14599:23;;;;14581:42;;-1:-1:-1;;;;;14659:32:199;14654:2;14639:18;;14632:60;14569:2;14554:18;;14409:289::o;14703:::-;14763:5;14811:4;14799:9;14794:3;14790:19;14786:30;14783:50;;;14829:1;14826;14819:12;14783:50;14851:23;;:::i;:::-;14842:32;;14910:9;14897:23;14890:5;14883:38;14981:2;14970:9;14966:18;14953:32;14948:2;14941:5;14937:14;14930:56;14703:289;;;;:::o;14997:495::-;15133:6;15141;15149;15202:3;15190:9;15181:7;15177:23;15173:33;15170:53;;;15219:1;15216;15209:12;15170:53;15258:9;15245:23;15277:31;15302:5;15277:31;:::i;:::-;15327:5;-1:-1:-1;15351:55:199;15398:7;15393:2;15378:18;;15351:55;:::i;:::-;15341:65;;15425:61;15478:7;15472:3;15461:9;15457:19;15425:61;:::i;:::-;15415:71;;14997:495;;;;;:::o;15497:226::-;15581:6;15634:2;15622:9;15613:7;15609:23;15605:32;15602:52;;;15650:1;15647;15640:12;15602:52;15673:44;15709:7;15698:9;15673:44;:::i;15913:386::-;15980:6;15988;16041:2;16029:9;16020:7;16016:23;16012:32;16009:52;;;16057:1;16054;16047:12;16009:52;16096:9;16083:23;16115:30;16139:5;16115:30;:::i;:::-;16164:5;-1:-1:-1;16221:2:199;16206:18;;16193:32;16234:33;16193:32;16234:33;:::i;:::-;16286:7;16276:17;;;15913:386;;;;;:::o;16304:1569::-;16508:4;16537:2;16577;16566:9;16562:18;16607:2;16596:9;16589:21;16630:6;16665;16659:13;16696:6;16688;16681:22;16722:2;16712:12;;16755:2;16744:9;16740:18;16733:25;;16817:2;16807:6;16804:1;16800:14;16789:9;16785:30;16781:39;16855:2;16847:6;16843:15;16876:1;16897;16907:937;16923:6;16918:3;16915:15;16907:937;;;16992:22;;;-1:-1:-1;;16988:36:199;16976:49;;17048:13;;17135:9;;-1:-1:-1;;;;;17131:35:199;17116:51;;17206:11;;17200:18;17238:15;;;17231:27;;;17319:19;;17088:15;;;17351:24;;;17441:21;;;;17486:1;;17409:2;17397:15;;;17500:236;17516:8;17511:3;17508:17;17500:236;;;17597:15;;-1:-1:-1;;;;;;17593:42:199;17579:57;;17705:17;;;;17544:1;17535:11;;;;;17662:14;;;;17500:236;;;-1:-1:-1;17822:12:199;;;;17759:5;-1:-1:-1;;;17787:15:199;;;;16949:1;16940:11;16907:937;;;-1:-1:-1;17861:6:199;;16304:1569;-1:-1:-1;;;;;;;;;16304:1569:199:o;17878:313::-;17945:6;17953;18006:2;17994:9;17985:7;17981:23;17977:32;17974:52;;;18022:1;18019;18012:12;17974:52;18061:9;18048:23;18080:30;18104:5;18080:30;:::i;:::-;18129:5;18181:2;18166:18;;;;18153:32;;-1:-1:-1;;;17878:313:199:o;18196:388::-;18264:6;18272;18325:2;18313:9;18304:7;18300:23;18296:32;18293:52;;;18341:1;18338;18331:12;18293:52;18380:9;18367:23;18399:31;18424:5;18399:31;:::i;18589:354::-;18678:6;18731:2;18719:9;18710:7;18706:23;18702:32;18699:52;;;18747:1;18744;18737:12;18699:52;18787:9;18774:23;-1:-1:-1;;;;;18812:6:199;18809:30;18806:50;;;18852:1;18849;18842:12;18806:50;18875:62;18929:7;18920:6;18909:9;18905:22;18875:62;:::i;18948:114::-;19032:4;19025:5;19021:16;19014:5;19011:27;19001:55;;19052:1;19049;19042:12;19067:130;19133:20;;19162:29;19133:20;19162:29;:::i;19202:1105::-;19303:6;19311;19355:9;19346:7;19342:23;19385:3;19381:2;19377:12;19374:32;;;19402:1;19399;19392:12;19374:32;19441:9;19428:23;19460:31;19485:5;19460:31;:::i;:::-;19510:5;-1:-1:-1;19534:6:199;-1:-1:-1;;19556:16:199;;19552:25;-1:-1:-1;19549:45:199;;;19590:1;19587;19580:12;19549:45;19618:23;;:::i;:::-;19603:38;;19693:2;19682:9;19678:18;19665:32;19706;19730:7;19706:32;:::i;:::-;19747:24;;19805:37;19838:2;19823:18;;19805:37;:::i;:::-;19800:2;19791:7;19787:16;19780:63;19905:2;19894:9;19890:18;19877:32;19872:2;19863:7;19859:16;19852:58;19972:3;19961:9;19957:19;19944:33;19939:2;19930:7;19926:16;19919:59;20013:37;20045:3;20034:9;20030:19;20013:37;:::i;:::-;20007:3;19998:7;19994:17;19987:64;20086:39;20120:3;20109:9;20105:19;20086:39;:::i;:::-;20080:3;20071:7;20067:17;20060:66;20161:39;20195:3;20184:9;20180:19;20161:39;:::i;:::-;20155:3;20146:7;20142:17;20135:66;20236:38;20270:2;20259:9;20255:18;20236:38;:::i;:::-;20230:3;20221:7;20217:17;20210:65;;20294:7;20284:17;;;19202:1105;;;;;:::o;20312:802::-;20474:4;20503:2;20543;20532:9;20528:18;20573:2;20562:9;20555:21;20596:6;20631;20625:13;20662:6;20654;20647:22;20700:2;20689:9;20685:18;20678:25;;20762:2;20752:6;20749:1;20745:14;20734:9;20730:30;20726:39;20712:53;;20800:2;20792:6;20788:15;20821:1;20831:254;20845:6;20842:1;20839:13;20831:254;;;20938:2;20934:7;20922:9;20914:6;20910:22;20906:36;20901:3;20894:49;20966:39;20998:6;20989;20983:13;20966:39;:::i;:::-;20956:49;-1:-1:-1;21063:12:199;;;;21028:15;;;;20867:1;20860:9;20831:254;;;-1:-1:-1;21102:6:199;;20312:802;-1:-1:-1;;;;;;;20312:802:199:o;21119:108::-;21201:1;21194:5;21191:12;21181:40;;21217:1;21214;21207:12;21232:1027;21354:6;21362;21370;21414:9;21405:7;21401:23;21444:3;21440:2;21436:12;21433:32;;;21461:1;21458;21451:12;21433:32;21500:9;21487:23;21519:31;21544:5;21519:31;:::i;:::-;21569:5;-1:-1:-1;21608:4:199;-1:-1:-1;;21590:16:199;;21586:27;21583:47;;;21626:1;21623;21616:12;21583:47;;21654:23;;:::i;:::-;21729:2;21718:9;21714:18;21701:32;21742:40;21774:7;21742:40;:::i;:::-;21791:24;;21867:2;21852:18;;21839:32;21880;21839;21880;:::i;:::-;21941:2;21928:16;;21921:33;22006:4;21991:20;;21978:34;22021:32;21978:34;22021:32;:::i;:::-;22082:2;22069:16;;22062:33;22073:7;-1:-1:-1;22173:3:199;22158:19;;22145:33;22187:40;22145:33;22187:40;:::i;22264:378::-;22365:6;22373;22426:3;22414:9;22405:7;22401:23;22397:33;22394:53;;;22443:1;22440;22433:12;22394:53;22482:9;22469:23;22501:31;22526:5;22501:31;:::i;:::-;22551:5;-1:-1:-1;22575:61:199;22628:7;22623:2;22608:18;;22575:61;:::i;22844:669::-;22929:6;22937;22945;22953;23006:3;22994:9;22985:7;22981:23;22977:33;22974:53;;;23023:1;23020;23013:12;22974:53;23062:9;23049:23;23081:30;23105:5;23081:30;:::i;:::-;23130:5;-1:-1:-1;23187:2:199;23172:18;;23159:32;23200:33;23159:32;23200:33;:::i;23963:231::-;24049:6;24102:3;24090:9;24081:7;24077:23;24073:33;24070:53;;;24119:1;24116;24109:12;24070:53;24142:46;24180:7;24169:9;24142:46;:::i;24199:549::-;24290:6;24298;24306;24359:2;24347:9;24338:7;24334:23;24330:32;24327:52;;;24375:1;24372;24365:12;24327:52;24414:9;24401:23;24433:38;24465:5;24433:38;:::i;:::-;24490:5;-1:-1:-1;24547:2:199;24532:18;;24519:32;24560;24519;24560;:::i;24753:1061::-;24873:6;24881;24934:2;24922:9;24913:7;24909:23;24905:32;24902:52;;;24950:1;24947;24940:12;24902:52;24989:9;24976:23;25008:31;25033:5;25008:31;:::i;:::-;25058:5;-1:-1:-1;25082:2:199;25120:18;;;25107:32;-1:-1:-1;;;;;25151:30:199;;25148:50;;;25194:1;25191;25184:12;25148:50;25217:22;;25270:4;25262:13;;25258:27;-1:-1:-1;25248:55:199;;25299:1;25296;25289:12;25248:55;25335:2;25322:16;25358:68;25374:51;25422:2;25374:51;:::i;25358:68::-;25460:15;;;25542:1;25538:10;;;;25530:19;;25526:28;;;25491:12;;;;25566:19;;;25563:39;;;25598:1;25595;25588:12;25563:39;25622:11;;;;25642:142;25658:6;25653:3;25650:15;25642:142;;;25724:17;;25712:30;;25675:12;;;;25762;;;;25642:142;;;25803:5;25793:15;;;;;;;24753:1061;;;;;:::o;25819:127::-;25880:10;25875:3;25871:20;25868:1;25861:31;25911:4;25908:1;25901:15;25935:4;25932:1;25925:15;25951:237;26032:1;26025:5;26022:12;26012:143;;26077:10;26072:3;26068:20;26065:1;26058:31;26112:4;26109:1;26102:15;26140:4;26137:1;26130:15;26012:143;26164:18;;25951:237::o;26193:315::-;26258:44;26298:3;26290:5;26284:12;26258:44;:::i;:::-;26348:4;26337:16;;;26331:23;26373:10;26415:21;;;26399:14;;;26392:45;;;;26490:4;26479:16;;;26473:23;26469:32;26453:14;;26446:56;26193:315::o;26513:260::-;26707:2;26692:18;;26719:48;26696:9;26749:6;26719:48;:::i;26778:294::-;26871:6;26879;26932:2;26920:9;26911:7;26907:23;26903:32;26900:52;;;26948:1;26945;26938:12;26900:52;26971:44;27007:7;26996:9;26971:44;:::i;27077:491::-;27246:6;27254;27262;27315:3;27303:9;27294:7;27290:23;27286:33;27283:53;;;27332:1;27329;27322:12;27283:53;27355:46;27393:7;27382:9;27355:46;:::i;:::-;27345:56;;27420:62;27474:7;27468:3;27457:9;27453:19;27420:62;:::i;:::-;27410:72;;27501:61;27554:7;27548:3;27537:9;27533:19;27501:61;:::i;27573:542::-;27659:5;27653:12;27648:3;27641:25;27715:4;27708:5;27704:16;27698:23;27691:4;27686:3;27682:14;27675:47;27783:10;27775:4;27768:5;27764:16;27758:23;27754:40;27747:4;27742:3;27738:14;27731:64;27841:4;27834:5;27830:16;27824:23;27866:12;27928:2;27914:12;27910:21;27903:4;27898:3;27894:14;27887:45;27993:2;27985:4;27978:5;27974:16;27968:23;27964:32;27957:4;27952:3;27948:14;27941:56;;;28046:4;28039:5;28035:16;28029:23;28022:4;28017:3;28013:14;28006:47;28102:4;28095:5;28091:16;28085:23;28078:4;28073:3;28069:14;28062:47;27573:542;;:::o;28120:270::-;28320:3;28305:19;;28333:51;28309:9;28366:6;28333:51;:::i;28395:357::-;28521:6;28529;28582:3;28570:9;28561:7;28557:23;28553:33;28550:53;;;28599:1;28596;28589:12;28550:53;28622:44;28658:7;28647:9;28622:44;:::i;28757:321::-;28826:6;28879:2;28867:9;28858:7;28854:23;28850:32;28847:52;;;28895:1;28892;28885:12;28847:52;28935:9;28922:23;-1:-1:-1;;;;;28960:6:199;28957:30;28954:50;;;29000:1;28997;28990:12;28954:50;29023:49;29064:7;29055:6;29044:9;29040:22;29023:49;:::i;29083:366::-;29178:6;29186;29239:3;29227:9;29218:7;29214:23;29210:33;29207:53;;;29256:1;29253;29246:12;29207:53;29295:9;29282:23;29314:31;29339:5;29314:31;:::i;:::-;29364:5;-1:-1:-1;29388:55:199;29435:7;29430:2;29415:18;;29388:55;:::i;29454:410::-;29537:6;29545;29598:2;29586:9;29577:7;29573:23;29569:32;29566:52;;;29614:1;29611;29604:12;29566:52;29653:9;29640:23;29672:38;29704:5;29672:38;:::i;29869:388::-;29946:6;29954;30007:2;29995:9;29986:7;29982:23;29978:32;29975:52;;;30023:1;30020;30013:12;29975:52;30059:9;30046:23;30036:33;;30120:2;30109:9;30105:18;30092:32;-1:-1:-1;;;;;30139:6:199;30136:30;30133:50;;;30179:1;30176;30169:12;30262:405;30352:6;30405:3;30393:9;30384:7;30380:23;30376:33;30373:53;;;30422:1;30419;30412:12;30373:53;30448:23;;:::i;:::-;30494:46;30532:7;30521:9;30494:46;:::i;:::-;30487:5;30480:61;30575;30628:7;30622:3;30611:9;30607:19;30575:61;:::i;:::-;30568:4;30557:16;;30550:87;30561:5;30262:405;-1:-1:-1;;;30262:405:199:o;30672:447::-;30908:4;30937:3;30949:51;30990:9;30982:6;30949:51;:::i;:::-;31037:2;31031:3;31020:9;31016:19;31009:31;31057:56;31109:2;31098:9;31094:18;31086:6;31057:56;:::i;31124:454::-;31201:6;31209;31262:2;31250:9;31241:7;31237:23;31233:32;31230:52;;;31278:1;31275;31268:12;31230:52;31317:9;31304:23;31336:30;31360:5;31336:30;:::i;31583:471::-;31842:10;31830:23;;;;31812:42;;-1:-1:-1;;;;;31928:15:199;;;31923:2;31908:18;;31901:43;31980:15;;;31975:2;31960:18;;31953:43;32032:15;32027:2;32012:18;;32005:43;31799:3;31784:19;;31583:471::o;32851:184::-;32921:6;32974:2;32962:9;32953:7;32949:23;32945:32;32942:52;;;32990:1;32987;32980:12;32942:52;-1:-1:-1;33013:16:199;;32851:184;-1:-1:-1;32851:184:199:o;33293:667::-;33358:5;33411:3;33404:4;33396:6;33392:17;33388:27;33378:55;;33429:1;33426;33419:12;33378:55;33458:6;33452:13;33484:4;33508:68;33524:51;33572:2;33524:51;:::i;33508:68::-;33610:15;;;33696:1;33692:10;;;;33680:23;;33676:32;;;33641:12;;;;33720:15;;;33717:35;;;33748:1;33745;33738:12;33717:35;33784:2;33776:6;33772:15;33796:135;33812:6;33807:3;33804:15;33796:135;;;33878:10;;33866:23;;33909:12;;;;33829;;33796:135;;;-1:-1:-1;33949:5:199;33293:667;-1:-1:-1;;;;;;33293:667:199:o;33965:363::-;34060:6;34113:2;34101:9;34092:7;34088:23;34084:32;34081:52;;;34129:1;34126;34119:12;34081:52;34162:9;34156:16;-1:-1:-1;;;;;34187:6:199;34184:30;34181:50;;;34227:1;34224;34217:12;34181:50;34250:72;34314:7;34305:6;34294:9;34290:22;34250:72;:::i;34333:127::-;34394:10;34389:3;34385:20;34382:1;34375:31;34425:4;34422:1;34415:15;34449:4;34446:1;34439:15;34465:128;34532:9;;;34553:11;;;34550:37;;;34567:18;;:::i;35359:314::-;-1:-1:-1;;;;;35534:32:199;;35516:51;;35603:2;35598;35583:18;;35576:30;;;-1:-1:-1;;35623:44:199;;35648:18;;35640:6;35623:44;:::i;36031:390::-;36261:10;36249:23;;;;36231:42;;-1:-1:-1;;;;;36347:15:199;;;36342:2;36327:18;;36320:43;36399:15;36394:2;36379:18;;36372:43;36219:2;36204:18;;36031:390::o;37670:320::-;37745:5;37774:52;37790:35;37818:6;37790:35;:::i;37774:52::-;37765:61;;37849:6;37842:5;37835:21;37889:3;37880:6;37875:3;37871:16;37868:25;37865:45;;;37906:1;37903;37896:12;37865:45;37919:65;37977:6;37970:4;37963:5;37959:16;37954:3;37919:65;:::i;37995:235::-;38048:5;38101:3;38094:4;38086:6;38082:17;38078:27;38068:55;;38119:1;38116;38109:12;38068:55;38141:83;38220:3;38211:6;38205:13;38198:4;38190:6;38186:17;38141:83;:::i;38235:335::-;38314:6;38367:2;38355:9;38346:7;38342:23;38338:32;38335:52;;;38383:1;38380;38373:12;38335:52;38416:9;38410:16;-1:-1:-1;;;;;38441:6:199;38438:30;38435:50;;;38481:1;38478;38471:12;38435:50;38504:60;38556:7;38547:6;38536:9;38532:22;38504:60;:::i;39196:127::-;39257:10;39252:3;39248:20;39245:1;39238:31;39288:4;39285:1;39278:15;39312:4;39309:1;39302:15;39764:245;39831:6;39884:2;39872:9;39863:7;39859:23;39855:32;39852:52;;;39900:1;39897;39890:12;39852:52;39932:9;39926:16;39951:28;39973:5;39951:28;:::i;40014:2056::-;40131:6;40162:2;40205;40193:9;40184:7;40180:23;40176:32;40173:52;;;40221:1;40218;40211:12;40173:52;40254:9;40248:16;-1:-1:-1;;;;;40324:2:199;40316:6;40313:14;40310:34;;;40340:1;40337;40330:12;40310:34;40378:6;40367:9;40363:22;40353:32;;40423:7;40416:4;40412:2;40408:13;40404:27;40394:55;;40445:1;40442;40435:12;40394:55;40474:2;40468:9;40497:68;40513:51;40561:2;40513:51;:::i;40497:68::-;40599:15;;;40681:1;40677:10;;;;40669:19;;40665:28;;;40630:12;;;;40705:19;;;40702:39;;;40737:1;40734;40727:12;40702:39;40769:2;40765;40761:11;40781:1259;40797:6;40792:3;40789:15;40781:1259;;;40876:3;40870:10;40912:2;40899:11;40896:19;40893:109;;;40956:1;40985:2;40981;40974:14;40893:109;41025:20;;41068:4;41096:16;;;-1:-1:-1;;41092:30:199;41088:39;-1:-1:-1;41085:129:199;;;41168:1;41197:2;41193;41186:14;41085:129;41240:23;;:::i;:::-;41306:2;41302;41298:11;41292:18;41339:2;41329:8;41326:16;41323:106;;;41383:1;41412:2;41408;41401:14;41323:106;41456:76;41524:7;41519:2;41508:8;41504:2;41500:17;41496:26;41456:76;:::i;:::-;41449:5;41442:91;;41557:2;41602:3;41598:2;41594:12;41588:19;41636:2;41626:8;41623:16;41620:109;;;41681:1;41711:3;41706;41699:16;41620:109;41765:64;41821:7;41816:2;41805:8;41801:2;41797:17;41793:26;41765:64;:::i;:::-;41749:14;;;41742:88;-1:-1:-1;41864:11:199;;;41858:18;;41889:33;41858:18;41889:33;:::i;:::-;41942:15;;41935:32;;;;-1:-1:-1;41980:18:199;;42018:12;;;;40814;;40781:1259;;;-1:-1:-1;42059:5:199;40014:2056;-1:-1:-1;;;;;;;;40014:2056:199:o;42075:515::-;-1:-1:-1;;;;;42370:32:199;;42352:51;;42412:57;42465:2;42450:18;;42442:6;42412:57;:::i;:::-;42506:3;42500;42489:9;42485:19;42478:32;42333:4;42527:57;42579:3;42568:9;42564:19;42556:6;42527:57;:::i;43745:127::-;43806:10;43801:3;43797:20;43794:1;43787:31;43837:4;43834:1;43827:15;43861:4;43858:1;43851:15;43877:112;43909:1;43935;43925:35;;43940:18;;:::i;:::-;-1:-1:-1;43974:9:199;;43877:112::o;43994:172::-;44061:10;44091;;;44103;;;44087:27;;44126:11;;;44123:37;;;44140:18;;:::i;44171:201::-;44209:3;44237:10;44282:2;44275:5;44271:14;44309:2;44300:7;44297:15;44294:41;;44315:18;;:::i;:::-;44364:1;44351:15;;44171:201;-1:-1:-1;;;44171:201:199:o;44377:380::-;44456:1;44452:12;;;;44499;;;44520:61;;44574:4;44566:6;44562:17;44552:27;;44520:61;44627:2;44619:6;44616:14;44596:18;44593:38;44590:161;;44673:10;44668:3;44664:20;44661:1;44654:31;44708:4;44705:1;44698:15;44736:4;44733:1;44726:15;44887:544;44988:2;44983:3;44980:11;44977:448;;;45024:1;45049:5;45045:2;45038:17;45094:4;45090:2;45080:19;45164:2;45152:10;45148:19;45145:1;45141:27;45135:4;45131:38;45200:4;45188:10;45185:20;45182:47;;;-1:-1:-1;45223:4:199;45182:47;45278:2;45273:3;45269:12;45266:1;45262:20;45256:4;45252:31;45242:41;;45333:82;45351:2;45344:5;45341:13;45333:82;;;45396:17;;;45377:1;45366:13;45333:82;;45607:1348;45731:3;45725:10;-1:-1:-1;;;;;45750:6:199;45747:30;45744:56;;;45780:18;;:::i;:::-;45809:96;45898:6;45858:38;45890:4;45884:11;45858:38;:::i;:::-;45852:4;45809:96;:::i;:::-;45960:4;;46024:2;46013:14;;46041:1;46036:662;;;;46742:1;46759:6;46756:89;;;-1:-1:-1;46811:19:199;;;46805:26;46756:89;-1:-1:-1;;45564:1:199;45560:11;;;45556:24;45552:29;45542:40;45588:1;45584:11;;;45539:57;46858:81;;46006:943;;46036:662;44834:1;44827:14;;;44871:4;44858:18;;-1:-1:-1;;46072:20:199;;;46189:236;46203:7;46200:1;46197:14;46189:236;;;46292:19;;;46286:26;46271:42;;46384:27;;;;46352:1;46340:14;;;;46219:19;;46189:236;;;46193:3;46453:6;46444:7;46441:19;46438:201;;;46514:19;;;46508:26;-1:-1:-1;;46597:1:199;46593:14;;;46609:3;46589:24;46585:37;46581:42;46566:58;46551:74;;46438:201;-1:-1:-1;;;;;46685:1:199;46669:14;;;46665:22;46652:36;;-1:-1:-1;45607:1348:199:o;46960:135::-;46999:3;47020:17;;;47017:43;;47040:18;;:::i;:::-;-1:-1:-1;47087:1:199;47076:13;;46960:135::o;47100:771::-;47149:3;47190:5;47184:12;47219:36;47245:9;47219:36;:::i;:::-;47264:19;;;47302:4;47325:1;47342:18;;;47369:146;;;;47529:1;47524:341;;;;47335:530;;47369:146;-1:-1:-1;;47411:24:199;;47397:12;;;47390:46;47483:14;;47476:22;47473:1;47469:30;47460:40;;47456:49;;;-1:-1:-1;47369:146:199;;47524:341;47555:5;47552:1;47545:16;47602:2;47599:1;47589:16;47627:1;47641:174;47655:6;47652:1;47649:13;47641:174;;;47742:14;;47724:11;;;47720:20;;47713:44;47785:16;;;;47670:10;;47641:174;;;47839:11;;47835:20;;;-1:-1:-1;;47335:530:199;;;;;;47100:771;;;;:::o;47876:387::-;48063:2;48052:9;48045:21;48026:4;48089:52;48137:2;48126:9;48122:18;48114:6;48089:52;:::i;:::-;48189:9;48181:6;48177:22;48172:2;48161:9;48157:18;48150:50;48217:40;48250:6;48242;48217:40;:::i;48268:1173::-;48390:6;48398;48406;48459:2;48447:9;48438:7;48434:23;48430:32;48427:52;;;48475:1;48472;48465:12;48427:52;48508:9;48502:16;-1:-1:-1;;;;;48578:2:199;48570:6;48567:14;48564:34;;;48594:1;48591;48584:12;48564:34;48617:60;48669:7;48660:6;48649:9;48645:22;48617:60;:::i;:::-;48607:70;;48696:2;48686:12;;48738:2;48727:9;48723:18;48717:25;48707:35;;48788:2;48777:9;48773:18;48767:25;48817:2;48807:8;48804:16;48801:36;;;48833:1;48830;48823:12;48801:36;48856:24;;;-1:-1:-1;48911:4:199;48903:13;;48899:27;-1:-1:-1;48889:55:199;;48940:1;48937;48930:12;48889:55;48969:2;48963:9;48992:68;49008:51;49056:2;49008:51;:::i;48992:68::-;49094:15;;;49176:1;49172:10;;;;49164:19;;49160:28;;;49125:12;;;;49200:19;;;49197:39;;;49232:1;49229;49222:12;49197:39;49256:11;;;;49276:135;49292:6;49287:3;49284:15;49276:135;;;49358:10;;49346:23;;49309:12;;;;49389;;;;49276:135;;;49430:5;49420:15;;;;;;;48268:1173;;;;;:::o;49644:558::-;49741:6;49749;49802:2;49790:9;49781:7;49777:23;49773:32;49770:52;;;49818:1;49815;49808:12;49770:52;49851:9;49845:16;-1:-1:-1;;;;;49921:2:199;49913:6;49910:14;49907:34;;;49937:1;49934;49927:12;49907:34;49960:60;50012:7;50003:6;49992:9;49988:22;49960:60;:::i;:::-;49950:70;;50066:2;50055:9;50051:18;50045:25;50029:41;;50095:2;50085:8;50082:16;50079:36;;;50111:1;50108;50101:12;50079:36;;50134:62;50188:7;50177:8;50166:9;50162:24;50134:62;:::i;52010:783::-;52110:6;52163:2;52151:9;52142:7;52138:23;52134:32;52131:52;;;52179:1;52176;52169:12;52131:52;52212:2;52206:9;52254:2;52246:6;52242:15;52323:6;52311:10;52308:22;-1:-1:-1;;;;;52275:10:199;52272:34;52269:62;52266:88;;;52334:18;;:::i;:::-;52370:2;52363:22;52407:16;;52432:38;52407:16;52432:38;:::i;:::-;52479:21;;52545:2;52530:18;;52524:25;52558:32;52524:25;52558:32;:::i;:::-;52618:2;52606:15;;52599:32;52676:2;52661:18;;52655:25;52689:32;52655:25;52689:32;:::i;:::-;52749:2;52737:15;;52730:32;52741:6;52010:783;-1:-1:-1;;;52010:783:199:o;52798:458::-;52878:6;52931:2;52919:9;52910:7;52906:23;52902:32;52899:52;;;52947:1;52944;52937:12;52899:52;52980:9;52974:16;-1:-1:-1;;;;;53005:6:199;53002:30;52999:50;;;53045:1;53042;53035:12;52999:50;53068:22;;53121:4;53113:13;;53109:27;-1:-1:-1;53099:55:199;;53150:1;53147;53140:12;53099:55;53173:77;53242:7;53237:2;53231:9;53226:2;53222;53218:11;53173:77;:::i;53467:337::-;53669:2;53651:21;;;53708:2;53688:18;;;53681:30;-1:-1:-1;;;53742:2:199;53727:18;;53720:43;53795:2;53780:18;;53467:337::o;54494:618::-;54769:6;54758:9;54751:25;54812:3;54807:2;54796:9;54792:18;54785:31;54732:4;54839:45;54879:3;54868:9;54864:19;54856:6;54839:45;:::i;:::-;54932:9;54924:6;54920:22;54915:2;54904:9;54900:18;54893:50;54966:32;54991:6;54983;54966:32;:::i;:::-;54952:46;;55046:9;55038:6;55034:22;55029:2;55018:9;55014:18;55007:50;55074:32;55099:6;55091;55074:32;:::i;55117:800::-;55277:4;55306:2;55346;55335:9;55331:18;55376:2;55365:9;55358:21;55399:6;55434;55428:13;55465:6;55457;55450:22;55503:2;55492:9;55488:18;55481:25;;55565:2;55555:6;55552:1;55548:14;55537:9;55533:30;55529:39;55515:53;;55603:2;55595:6;55591:15;55624:1;55634:254;55648:6;55645:1;55642:13;55634:254;;;55741:2;55737:7;55725:9;55717:6;55713:22;55709:36;55704:3;55697:49;55769:39;55801:6;55792;55786:13;55769:39;:::i;:::-;55759:49;-1:-1:-1;55866:12:199;;;;55831:15;;;;55670:1;55663:9;55634:254;;56920:991;57239:10;57231:6;57227:23;57216:9;57209:42;57190:4;57270:2;57308:6;57303:2;57292:9;57288:18;57281:34;57351:3;57346:2;57335:9;57331:18;57324:31;57378:45;57418:3;57407:9;57403:19;57395:6;57378:45;:::i;:::-;57454:2;57439:18;;57432:34;;;57503:22;;;57497:3;57482:19;;57475:51;57575:13;;57597:22;;;57673:15;;;;57635;;;-1:-1:-1;57716:169:199;57730:6;57727:1;57724:13;57716:169;;;57791:13;;57779:26;;57860:15;;;;57825:12;;;;57752:1;57745:9;57716:169;;;-1:-1:-1;57902:3:199;;56920:991;-1:-1:-1;;;;;;;;;;56920:991:199:o;57916:543::-;58134:13;;58077:3;;58108;;58187:4;58214:15;;;58077:3;58257:175;58271:6;58268:1;58265:13;58257:175;;;58334:13;;58320:28;;58370:14;;;;58407:15;;;;58293:1;58286:9;58257:175;;;-1:-1:-1;58448:5:199;;57916:543;-1:-1:-1;;;;;;57916:543:199:o;58732:168::-;58805:9;;;58836;;58853:15;;;58847:22;;58833:37;58823:71;;58874:18;;:::i;60374:369::-;60460:6;60468;60476;60529:2;60517:9;60508:7;60504:23;60500:32;60497:52;;;60545:1;60542;60535:12;60497:52;60577:9;60571:16;60596:29;60619:5;60596:29;:::i;:::-;60689:2;60674:18;;60668:25;60733:2;60718:18;;;60712:25;60644:5;;60668:25;;-1:-1:-1;60712:25:199;60374:369;-1:-1:-1;;;60374:369:199:o;61561:125::-;61626:9;;;61647:10;;;61644:36;;;61660:18;;:::i;61970:384::-;-1:-1:-1;;;;;;62155:33:199;;62143:46;;62212:13;;62125:3;;62234:74;62212:13;62297:1;62288:11;;62281:4;62269:17;;62234:74;:::i;:::-;62328:16;;;;62346:1;62324:24;;61970:384;-1:-1:-1;;;61970:384:199:o;62359:287::-;62488:3;62526:6;62520:13;62542:66;62601:6;62596:3;62589:4;62581:6;62577:17;62542:66;:::i;:::-;62624:16;;;;;62359:287;-1:-1:-1;;62359:287:199:o;63095:444::-;63340:10;63328:23;;63310:42;;-1:-1:-1;;;;;63388:32:199;;63383:2;63368:18;;63361:60;63457:2;63452;63437:18;;63430:30;;;-1:-1:-1;;63477:56:199;;63514:18;;63506:6;63477:56;:::i;63544:209::-;63691:2;63676:18;;63703:44;63680:9;63729:6;63703:44;:::i;64660:251::-;64730:6;64783:2;64771:9;64762:7;64758:23;64754:32;64751:52;;;64799:1;64796;64789:12;64751:52;64831:9;64825:16;64850:31;64875:5;64850:31;:::i;64916:249::-;64985:6;65038:2;65026:9;65017:7;65013:23;65009:32;65006:52;;;65054:1;65051;65044:12;65006:52;65086:9;65080:16;65105:30;65129:5;65105:30;:::i;66525:569::-;-1:-1:-1;;;66861:3:199;66854:22;66836:3;66905:6;66899:13;66921:74;66988:6;66984:1;66979:3;66975:11;66968:4;66960:6;66956:17;66921:74;:::i;:::-;-1:-1:-1;;;67054:1:199;67014:16;;;;67046:10;;;67039:23;-1:-1:-1;67086:1:199;67078:10;;66525:569;-1:-1:-1;66525:569:199:o;67099:629::-;67368:3;67406:6;67400:13;67422:66;67481:6;67476:3;67469:4;67461:6;67457:17;67422:66;:::i;:::-;-1:-1:-1;;;67510:16:199;;;67535:18;;;67578:13;;67600:78;67578:13;67665:1;67654:13;;67647:4;67635:17;;67600:78;:::i;:::-;67698:20;67720:1;67694:28;;67099:629;-1:-1:-1;;;;67099:629:199:o;67733:445::-;67983:2;67972:9;67965:21;68022:1;68017:2;68006:9;68002:18;67995:29;-1:-1:-1;;;68055:2:199;68044:9;68040:18;68033:35;68106:3;68099:4;68088:9;68084:20;68077:33;67946:4;68127:45;68167:3;68156:9;68152:19;68144:6;68127:45;:::i;68183:568::-;68361:3;68400:1;68392:6;68389:13;68379:144;;68445:10;68440:3;68436:20;68433:1;68426:31;68480:4;68477:1;68470:15;68508:4;68505:1;68498:15;68379:144;-1:-1:-1;68548:3:199;68544:16;;;;68532:29;;68616:3;68594:16;;;;-1:-1:-1;;;;;;68590:43:199;68586:1;68577:11;;68570:64;68671:2;68667:15;-1:-1:-1;;68663:53:199;68659:1;68650:11;;68643:74;68742:2;68733:12;;68183:568::o;69620:348::-;69850:2;69839:9;69832:21;69813:4;69870:49;69915:2;69904:9;69900:18;69533:2;69521:15;;-1:-1:-1;;;69561:4:199;69552:14;;69545:36;69606:2;69597:12;;69456:159;69870:49;69862:57;;69955:6;69950:2;69939:9;69935:18;69928:34;69620:348;;;;:::o;70137:::-;70367:2;70356:9;70349:21;70330:4;70387:49;70432:2;70421:9;70417:18;70050:2;70038:15;;-1:-1:-1;;;70078:4:199;70069:14;;70062:36;70123:2;70114:12;;69973:159;71920:120;71960:1;71986;71976:35;;71991:18;;:::i;:::-;-1:-1:-1;72025:9:199;;71920:120::o;72449:437::-;72697:2;72686:9;72679:21;72660:4;72723:49;72768:2;72757:9;72753:18;69533:2;69521:15;;-1:-1:-1;;;69561:4:199;69552:14;;69545:36;69606:2;69597:12;;69456:159;72723:49;72820:9;72812:6;72808:22;72803:2;72792:9;72788:18;72781:50;72848:32;72873:6;72865;72848:32;:::i;72891:437::-;73139:2;73128:9;73121:21;73102:4;73165:49;73210:2;73199:9;73195:18;70050:2;70038:15;;-1:-1:-1;;;70078:4:199;70069:14;;70062:36;70123:2;70114:12;;69973:159;73951:290;74128:2;74117:9;74110:21;74091:4;74148:44;74188:2;74177:9;74173:18;74165:6;74148:44;:::i;:::-;74140:52;;74228:6;74223:2;74212:9;74208:18;74201:34;73951:290;;;;;:::o;78841:374::-;79071:2;79060:9;79053:21;79034:4;79091:49;79136:2;79125:9;79121:18;69533:2;69521:15;;-1:-1:-1;;;69561:4:199;69552:14;;69545:36;69606:2;69597:12;;69456:159;79091:49;-1:-1:-1;;;;;79176:32:199;;;;79171:2;79156:18;;;;79149:60;;;;-1:-1:-1;79083:57:199;78841:374::o;79220:::-;79450:2;79439:9;79432:21;79413:4;79470:49;79515:2;79504:9;79500:18;70050:2;70038:15;;-1:-1:-1;;;70078:4:199;70069:14;;70062:36;70123:2;70114:12;;69973:159",
    "linkReferences": {},
    "immutableReferences": {
      "91937": [
        {
          "start": 4271,
          "length": 32
        },
        {
          "start": 6144,
          "length": 32
        },
        {
          "start": 7320,
          "length": 32
        },
        {
          "start": 8910,
          "length": 32
        },
        {
          "start": 18185,
          "length": 32
        },
        {
          "start": 19034,
          "length": 32
        },
        {
          "start": 24799,
          "length": 32
        },
        {
          "start": 27735,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "acceptSnapshot(((bytes32,uint32,uint32,uint40,uint40,((uint16),(uint16),(uint16),(uint16),(uint16),(uint16)))[]))": "71cd11a9",
    "addAgentBM(uint32,address)": "bb2316ae",
    "addNewAgent(uint32,address)": "5e4af9ba",
    "addressToBytes32(address)": "82c947b7",
    "bytes32ToAddress(bytes32)": "5ced058e",
    "checkAgentStatus(address,(uint8,uint32,uint32),uint8)": "87c9c01a",
    "checkLatestState()": "dbe554d3",
    "clear()": "52efea6e",
    "createAgent(string)": "e4051484",
    "createAttestation((bytes32,uint32,uint32,uint40,uint40,((uint16),(uint16),(uint16),(uint16),(uint16),(uint16))),(bytes32,bytes32,uint32,uint40,uint40,bytes32,bytes32),(uint256,uint256))": "dcaeb14e",
    "createSignedSnapshot(address,(bytes32,uint32,uint32,uint40,uint40,((uint16),(uint16),(uint16),(uint16),(uint16),(uint16))),(uint256,uint256))": "5389708a",
    "createSnapshotProof(((bytes32,uint32,uint32,uint40,uint40,((uint16),(uint16),(uint16),(uint16),(uint16),(uint16))),(uint256,uint256)))": "ed7886a1",
    "deployBondingManager()": "642c1b00",
    "deployDestination()": "bad84a1c",
    "deployDestinationSynapse()": "1cfff623",
    "deployGasOracle()": "8b95a0cb",
    "deployGasOracleSynapse()": "72327873",
    "deployInbox()": "3d07d64f",
    "deployLightInbox()": "e36fc192",
    "deployLightManager()": "e3e3502b",
    "deployOrigin()": "3122fa36",
    "deployOriginSynapse()": "05dad639",
    "deploySummit()": "33b1fa72",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "expectDisputeOpened(uint256,address,address)": "3842c6d7",
    "expectDisputeResolved(uint256,address,address,address)": "13981ac0",
    "expectRevertAlreadyInitialized()": "7b347163",
    "expectRevertNotOwner()": "c63101b6",
    "expectStatusUpdated(uint8,uint32,address)": "cd438fad",
    "failed()": "ba414fa6",
    "genSnapshotProof(uint256)": "22f7c96f",
    "getAgent(uint256,uint256)": "52167bce",
    "getAgentLeaf(uint256)": "e89d3ac8",
    "getAgentProof(address)": "678f55ff",
    "getAgentRoot()": "06d944a7",
    "getAgentStatus(address)": "dc10a652",
    "getDomainAgent(uint32,uint256)": "703f81e1",
    "getGuard(uint256)": "629ddf69",
    "getLatestProof(uint256)": "7fa5bd55",
    "getLeaf(uint256)": "22e91248",
    "getNotary(uint256,uint256)": "a7b7b923",
    "getProof(uint256,uint256)": "08f62313",
    "getRoot(uint256)": "9b24b3b0",
    "getSnapshotRoot()": "28b9366e",
    "getZeroProof()": "785712e9",
    "initBondingManager()": "ec44788e",
    "initInbox()": "9ee2a5e3",
    "initLightInbox()": "91d76c2d",
    "initLightManager()": "a6adaefe",
    "initializeLocalContract()": "33605c43",
    "insertMessage(bytes32)": "8dc2a7ff",
    "isLocalAgentSecured(address)": "d2185ffe",
    "isLocalSystemContract(address)": "cb61eeaa",
    "localAgentManager()": "33eb9877",
    "localContract()": "169e8aac",
    "localDestination()": "5cc50a6d",
    "localDomain()": "8d3638f4",
    "localInbox()": "5d2eaa48",
    "localOrigin()": "6a2a7056",
    "localSummit()": "18caa541",
    "openDispute(address,address)": "7146093a",
    "randomAgent((bytes32))": "a34d0709",
    "randomGuard((bytes32))": "fe708520",
    "randomNotary((bytes32))": "7be3700b",
    "setUp()": "0a9254e4",
    "setupAgentsBM()": "695c7dea",
    "setupAgentsLM()": "7c6a5ef8",
    "setupDomain(uint32,string)": "fb9ae35c",
    "signAttestation(address,(bytes32,bytes32,uint32,uint40,uint40,bytes32,bytes32))": "8b48c35c",
    "signAttestation(address,bytes)": "ee92836c",
    "signAttestationReport(address,(bytes32,bytes32,uint32,uint40,uint40,bytes32,bytes32))": "f45b0b89",
    "signAttestationReport(address,bytes)": "fdeec9d0",
    "signMessage(address,bytes32,bytes)": "182abf69",
    "signMessage(address,bytes32,bytes32)": "1de914ac",
    "signMessage(uint256,bytes)": "eaee2611",
    "signMessage(uint256,bytes32)": "91df0ed8",
    "signReceipt(address,(uint32,uint32,bytes32,bytes32,uint8,address,address,address))": "74f1e0b7",
    "signReceipt(address,bytes)": "48ee7a5c",
    "signReceiptReport(address,(uint32,uint32,bytes32,bytes32,uint8,address,address,address))": "bb95b16f",
    "signReceiptReport(address,bytes)": "8195e47c",
    "signSnapshot(address,((bytes32,uint32,uint32,uint40,uint40,((uint16),(uint16),(uint16),(uint16),(uint16),(uint16)))[]))": "1b88c8b4",
    "signSnapshot(address,bytes)": "046acfbc",
    "signSnapshot(address,uint256[])": "cf90a072",
    "signStateReport(address,(bytes32,uint32,uint32,uint40,uint40,((uint16),(uint16),(uint16),(uint16),(uint16),(uint16))))": "e5fff06d",
    "signStateReport(address,bytes)": "2518520c",
    "skipBlock()": "660982d9",
    "skipBlocks(uint256)": "a72e0a34",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testSynapseAgents()": "87b45b86",
    "testSynapseProofs()": "9d7a2a23",
    "testSynapseTest()": "2881c945",
    "testSynapseUtilities()": "0621feff",
    "test_acceptGuardSnapshot_revert_notInbox(address)": "d53ee984",
    "test_acceptNotarySnapshot_revert_notInbox(address)": "636b5205",
    "test_cleanSetup((bytes32))": "e4f825da",
    "test_getLatestState_empty(uint32)": "221a2c9f",
    "test_guardSnapshots((bytes32))": "5add0d47",
    "test_initializer_revert_alreadyInitialized()": "3a082928",
    "test_notarySnapshots((bytes32))": "7d972331",
    "test_setupCorrectly()": "66003f80",
    "test_submitSnapshot_revert_notaryInDispute((bytes32,uint32,uint32,uint40,uint40,((uint16),(uint16),(uint16),(uint16),(uint16),(uint16))))": "c202d9c3",
    "test_submitSnapshot_success_guardInDispute((bytes32,uint32,uint32,uint40,uint40,((uint16),(uint16),(uint16),(uint16),(uint16),(uint16))))": "fe6acd11",
    "test_verifyAttestation_existingNonce((bytes32),uint256)": "dc340c99",
    "test_verifyAttestation_unknownNonce((bytes32),(bytes32,bytes32,uint32,uint40,uint40,bytes32,bytes32))": "de3aa1b8",
    "updateAgent(uint8,address)": "e953efe7",
    "updateAgentLM(address)": "333de32e",
    "updateOrigin(uint32,address,address,address)": "8d3b076d",
    "verifyAttestation((bytes32),(bytes32,bytes32,uint32,uint40,uint40,bytes32,bytes32),bool)": "32044b6e",
    "verifyAttestationReport((bytes32),(bytes32,bytes32,uint32,uint40,uint40,bytes32,bytes32),bool)": "91cf0e21"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"IncorrectStatesAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexedTooMuch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OccupiedMemory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PrecompileOutOfGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TreeHeightTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnallocatedMemory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnformattedSnapshot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnformattedState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ViewOverrun\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"agentRoot\",\"type\":\"bytes32\"}],\"name\":\"AgentRootAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"name\":\"AttestationAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attestation\",\"type\":\"bytes\"}],\"name\":\"AttestationSaved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"version\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"content\",\"type\":\"bytes\"}],\"name\":\"BaseMessageReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"destination\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"Dispatched\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"disputeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"guardIndex\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"notaryIndex\",\"type\":\"uint32\"}],\"name\":\"DisputeOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"disputeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"slashedIndex\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"rivalIndex\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fraudProver\",\"type\":\"address\"}],\"name\":\"DisputeResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"remoteDomain\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidAttestation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"arPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"arSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidAttestationReport\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"rcptPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"rcptSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidReceipt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"rrPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"rrSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidReceiptReport\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidStateReport\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"statePayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidStateWithAttestation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"snapSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidStateWithSnapshot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"rcptPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"rcptSignature\",\"type\":\"bytes\"}],\"name\":\"ReceiptAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newRoot\",\"type\":\"bytes32\"}],\"name\":\"RootUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"destination\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"snapSignature\",\"type\":\"bytes\"}],\"name\":\"SnapshotAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"state\",\"type\":\"bytes\"}],\"name\":\"StateSaved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum AgentFlag\",\"name\":\"flag\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"StatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tip\",\"type\":\"uint256\"}],\"name\":\"TipAwarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paddedTips\",\"type\":\"uint256\"}],\"name\":\"TipsRecorded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"blockNumber\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"components\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"gasPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"dataPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"execBuffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"amortAttCost\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"etherPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"markup\",\"type\":\"tuple\"}],\"internalType\":\"struct RawGasData\",\"name\":\"gasData\",\"type\":\"tuple\"}],\"internalType\":\"struct RawState[]\",\"name\":\"states\",\"type\":\"tuple[]\"}],\"internalType\":\"struct RawSnapshot\",\"name\":\"rs\",\"type\":\"tuple\"}],\"name\":\"acceptSnapshot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"addAgentBM\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"addNewAgent\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"newRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addressToBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"buf\",\"type\":\"bytes32\"}],\"name\":\"bytes32ToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum AgentFlag\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"internalType\":\"struct AgentStatus\",\"name\":\"status\",\"type\":\"tuple\"},{\"internalType\":\"enum AgentFlag\",\"name\":\"flag\",\"type\":\"uint8\"}],\"name\":\"checkAgentStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkLatestState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clear\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"createAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"blockNumber\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"components\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"gasPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"dataPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"execBuffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"amortAttCost\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"etherPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"markup\",\"type\":\"tuple\"}],\"internalType\":\"struct RawGasData\",\"name\":\"gasData\",\"type\":\"tuple\"}],\"internalType\":\"struct RawState\",\"name\":\"rawState\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"snapRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"blockNumber\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"internalType\":\"bytes32\",\"name\":\"_agentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_snapGasHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct RawAttestation\",\"name\":\"ra\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"statesAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct RawStateIndex\",\"name\":\"rsi\",\"type\":\"tuple\"}],\"name\":\"createAttestation\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"snapRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"blockNumber\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"internalType\":\"bytes32\",\"name\":\"_agentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_snapGasHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct RawAttestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"blockNumber\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"components\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"gasPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"dataPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"execBuffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"amortAttCost\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"etherPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"markup\",\"type\":\"tuple\"}],\"internalType\":\"struct RawGasData\",\"name\":\"gasData\",\"type\":\"tuple\"}],\"internalType\":\"struct RawState\",\"name\":\"rs\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"statesAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct RawStateIndex\",\"name\":\"rsi\",\"type\":\"tuple\"}],\"name\":\"createSignedSnapshot\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"snapSig\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"blockNumber\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"components\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"gasPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"dataPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"execBuffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"amortAttCost\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"etherPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"markup\",\"type\":\"tuple\"}],\"internalType\":\"struct RawGasData\",\"name\":\"gasData\",\"type\":\"tuple\"}],\"internalType\":\"struct RawState\",\"name\":\"rs\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"statesAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct RawStateIndex\",\"name\":\"rsi\",\"type\":\"tuple\"}],\"internalType\":\"struct MessagingBaseTest.SnapshotMock\",\"name\":\"sm\",\"type\":\"tuple\"}],\"name\":\"createSnapshotProof\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"snapRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"blockNumber\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"internalType\":\"bytes32\",\"name\":\"_agentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_snapGasHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct RawAttestation\",\"name\":\"ra\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"snapProof\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployBondingManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployDestination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployDestinationSynapse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployGasOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployGasOracleSynapse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployInbox\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployLightInbox\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployLightManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployOrigin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployOriginSynapse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deploySummit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"guard\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"}],\"name\":\"expectDisputeOpened\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"disputePtr\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"slashed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"honest\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"prover\",\"type\":\"address\"}],\"name\":\"expectDisputeResolved\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevertAlreadyInitialized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevertNotOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum AgentFlag\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"expectStatusUpdated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"genSnapshotProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"domainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"agentId\",\"type\":\"uint256\"}],\"name\":\"getAgent\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getAgentLeaf\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"getAgentProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAgentRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"getAgentStatus\",\"outputs\":[{\"components\":[{\"internalType\":\"enum AgentFlag\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"internalType\":\"struct AgentStatus\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"agentId\",\"type\":\"uint256\"}],\"name\":\"getDomainAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"agentId\",\"type\":\"uint256\"}],\"name\":\"getGuard\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"guard\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getLatestProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getLeaf\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"domainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"agentId\",\"type\":\"uint256\"}],\"name\":\"getNotary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"getProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"getRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSnapshotRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getZeroProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initBondingManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initInbox\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initLightInbox\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initLightManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeLocalContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"insertMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isLocalAgentSecured\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isLocalSystemContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localAgentManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localDomain\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localInbox\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localOrigin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localSummit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guard\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"}],\"name\":\"openDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"seed\",\"type\":\"bytes32\"}],\"internalType\":\"struct Random\",\"name\":\"random\",\"type\":\"tuple\"}],\"name\":\"randomAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"seed\",\"type\":\"bytes32\"}],\"internalType\":\"struct Random\",\"name\":\"random\",\"type\":\"tuple\"}],\"name\":\"randomGuard\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"guard\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"seed\",\"type\":\"bytes32\"}],\"internalType\":\"struct Random\",\"name\":\"random\",\"type\":\"tuple\"}],\"name\":\"randomNotary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setupAgentsBM\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setupAgentsLM\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"setupDomain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"snapRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"blockNumber\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"internalType\":\"bytes32\",\"name\":\"_agentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_snapGasHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct RawAttestation\",\"name\":\"ra\",\"type\":\"tuple\"}],\"name\":\"signAttestation\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"attestation\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"attestation\",\"type\":\"bytes\"}],\"name\":\"signAttestation\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"snapRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"blockNumber\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"internalType\":\"bytes32\",\"name\":\"_agentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_snapGasHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct RawAttestation\",\"name\":\"ra\",\"type\":\"tuple\"}],\"name\":\"signAttestationReport\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"arSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"}],\"name\":\"signAttestationReport\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"signMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashedMsg\",\"type\":\"bytes32\"}],\"name\":\"signMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hashedMsg\",\"type\":\"bytes32\"}],\"name\":\"signMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"signMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"receipt\",\"type\":\"bytes\"}],\"name\":\"signReceipt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"destination\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"snapshotRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"stateIndex\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"attNotary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"firstExecutor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"finalExecutor\",\"type\":\"address\"}],\"internalType\":\"struct RawExecReceipt\",\"name\":\"re\",\"type\":\"tuple\"}],\"name\":\"signReceipt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"receipt\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"rcptPayload\",\"type\":\"bytes\"}],\"name\":\"signReceiptReport\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"destination\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"snapshotRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"stateIndex\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"attNotary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"firstExecutor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"finalExecutor\",\"type\":\"address\"}],\"internalType\":\"struct RawExecReceipt\",\"name\":\"re\",\"type\":\"tuple\"}],\"name\":\"signReceiptReport\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"rcptPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"rrSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"snapshot\",\"type\":\"bytes\"}],\"name\":\"signSnapshot\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"blockNumber\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"components\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"gasPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"dataPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"execBuffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"amortAttCost\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"etherPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"markup\",\"type\":\"tuple\"}],\"internalType\":\"struct RawGasData\",\"name\":\"gasData\",\"type\":\"tuple\"}],\"internalType\":\"struct RawState[]\",\"name\":\"states\",\"type\":\"tuple[]\"}],\"internalType\":\"struct RawSnapshot\",\"name\":\"rawSnap\",\"type\":\"tuple\"}],\"name\":\"signSnapshot\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"snapshot\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"State[]\",\"name\":\"states\",\"type\":\"uint256[]\"}],\"name\":\"signSnapshot\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"snapshot\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"statePayload\",\"type\":\"bytes\"}],\"name\":\"signStateReport\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"blockNumber\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"components\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"gasPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"dataPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"execBuffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"amortAttCost\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"etherPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"markup\",\"type\":\"tuple\"}],\"internalType\":\"struct RawGasData\",\"name\":\"gasData\",\"type\":\"tuple\"}],\"internalType\":\"struct RawState\",\"name\":\"rs\",\"type\":\"tuple\"}],\"name\":\"signStateReport\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"statePayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"srSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"skipBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blocks\",\"type\":\"uint256\"}],\"name\":\"skipBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSynapseAgents\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSynapseProofs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSynapseTest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSynapseUtilities\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"test_acceptGuardSnapshot_revert_notInbox\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"test_acceptNotarySnapshot_revert_notInbox\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"seed\",\"type\":\"bytes32\"}],\"internalType\":\"struct Random\",\"name\":\"random\",\"type\":\"tuple\"}],\"name\":\"test_cleanSetup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"}],\"name\":\"test_getLatestState_empty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"seed\",\"type\":\"bytes32\"}],\"internalType\":\"struct Random\",\"name\":\"random\",\"type\":\"tuple\"}],\"name\":\"test_guardSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_initializer_revert_alreadyInitialized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"seed\",\"type\":\"bytes32\"}],\"internalType\":\"struct Random\",\"name\":\"random\",\"type\":\"tuple\"}],\"name\":\"test_notarySnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_setupCorrectly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"blockNumber\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"components\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"gasPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"dataPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"execBuffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"amortAttCost\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"etherPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"markup\",\"type\":\"tuple\"}],\"internalType\":\"struct RawGasData\",\"name\":\"gasData\",\"type\":\"tuple\"}],\"internalType\":\"struct RawState\",\"name\":\"rs\",\"type\":\"tuple\"}],\"name\":\"test_submitSnapshot_revert_notaryInDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"blockNumber\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"components\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"gasPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"dataPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"execBuffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"amortAttCost\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"etherPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"markup\",\"type\":\"tuple\"}],\"internalType\":\"struct RawGasData\",\"name\":\"gasData\",\"type\":\"tuple\"}],\"internalType\":\"struct RawState\",\"name\":\"rs\",\"type\":\"tuple\"}],\"name\":\"test_submitSnapshot_success_guardInDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"seed\",\"type\":\"bytes32\"}],\"internalType\":\"struct Random\",\"name\":\"random\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"test_verifyAttestation_existingNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"seed\",\"type\":\"bytes32\"}],\"internalType\":\"struct Random\",\"name\":\"random\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"snapRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"blockNumber\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"internalType\":\"bytes32\",\"name\":\"_agentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_snapGasHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct RawAttestation\",\"name\":\"ra\",\"type\":\"tuple\"}],\"name\":\"test_verifyAttestation_unknownNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum AgentFlag\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"updateAgent\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"newRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"updateAgentLM\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"agentManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbox_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gasOracle_\",\"type\":\"address\"}],\"name\":\"updateOrigin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"seed\",\"type\":\"bytes32\"}],\"internalType\":\"struct Random\",\"name\":\"random\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"snapRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"blockNumber\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"internalType\":\"bytes32\",\"name\":\"_agentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_snapGasHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct RawAttestation\",\"name\":\"ra\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"name\":\"verifyAttestation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"seed\",\"type\":\"bytes32\"}],\"internalType\":\"struct Random\",\"name\":\"random\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"snapRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"blockNumber\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"internalType\":\"bytes32\",\"name\":\"_agentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_snapGasHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct RawAttestation\",\"name\":\"ra\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isAttestationValid\",\"type\":\"bool\"}],\"name\":\"verifyAttestationReport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"AttestationAccepted(uint32,address,bytes,bytes)\":{\"notice\":\"Emitted when a snapshot is accepted by the Destination contract.\"},\"AttestationSaved(bytes)\":{\"notice\":\"Emitted when a new Attestation is saved (derived from a Notary snapshot).\"},\"DisputeOpened(uint256,uint32,uint32)\":{\"notice\":\"Emitted whenever a Dispute is opened between two agents. This happens when a Guard submits their report for the Notary-signed statement to `StatementInbox`.\"},\"DisputeResolved(uint256,uint32,uint32,address)\":{\"notice\":\"Emitted whenever a Dispute is resolved. This happens when an Agent who was in Dispute is slashed. Note: this won't be emitted, if an Agent was slashed without being in Dispute.\"},\"Executed(uint32,bytes32,bool)\":{\"notice\":\"Emitted when message is executed.\"},\"InvalidAttestation(bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid attestation is submitted.\"},\"InvalidAttestationReport(bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid attestation report is submitted.\"},\"InvalidReceipt(bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid receipt statement is submitted.\"},\"InvalidReceiptReport(bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid receipt report is submitted.\"},\"InvalidStateReport(bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid state report is submitted.\"},\"InvalidStateWithAttestation(uint256,bytes,bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid state in the signed attestation is submitted.\"},\"InvalidStateWithSnapshot(uint256,bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid state in the signed snapshot is submitted.\"},\"ReceiptAccepted(uint32,address,bytes,bytes)\":{\"notice\":\"Emitted when a snapshot is accepted by the Summit contract.\"},\"RootUpdated(bytes32)\":{\"notice\":\"Emitted whenever the root of the Agent Merkle Tree is updated.\"},\"Sent(bytes32,uint32,uint32,bytes)\":{\"notice\":\"Emitted when a new message is sent.\"},\"SnapshotAccepted(uint32,address,bytes,bytes)\":{\"notice\":\"Emitted when a snapshot is accepted by the Summit contract.\"},\"StateSaved(bytes)\":{\"notice\":\"Emitted when a new Origin State is saved from a Guard snapshot.\"},\"StatusUpdated(uint8,uint32,address)\":{\"notice\":\"Emitted whenever a status of the agent is updated.\"},\"TipAwarded(address,uint32,uint256)\":{\"notice\":\"Emitted when a tip is awarded to the actor, whether they are bonded or unbonded actor.\"},\"TipsRecorded(bytes32,uint256)\":{\"notice\":\"Emitted when message tips are recorded.\"}},\"kind\":\"user\",\"methods\":{\"clear()\":{\"notice\":\"Clears proof generators\"},\"createAttestation((bytes32,uint32,uint32,uint40,uint40,((uint16),(uint16),(uint16),(uint16),(uint16),(uint16))),(bytes32,bytes32,uint32,uint40,uint40,bytes32,bytes32),(uint256,uint256))\":{\"notice\":\"Creates attestation for snapshot having given rawState at given index, with some fake data for other states in the snapshots.\"},\"isLocalAgentSecured(address)\":{\"notice\":\"Checks if contract is a local AgentSecured contract\"},\"isLocalSystemContract(address)\":{\"notice\":\"Checks if contract is a local SystemContract\"},\"localAgentManager()\":{\"notice\":\"Returns address of Agent Manager on the tested domain\"},\"localContract()\":{\"notice\":\"Returns address of the tested contract\"},\"localDestination()\":{\"notice\":\"Returns address of Destination on the tested domain\"},\"localDomain()\":{\"notice\":\"Returns local domain for the tested contract\"},\"localInbox()\":{\"notice\":\"Returns address of Inbox on the tested domain\"},\"localOrigin()\":{\"notice\":\"Returns address of Origin on the tested domain\"},\"localSummit()\":{\"notice\":\"Returns address of Summit on the tested domain\"},\"signMessage(address,bytes32,bytes)\":{\"notice\":\"Signs hashed message, by using a requested salt.\"},\"signMessage(address,bytes32,bytes32)\":{\"notice\":\"Signs a salted hash of a message\"},\"testSynapseAgents()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"},\"testSynapseProofs()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"},\"testSynapseTest()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"},\"testSynapseUtilities()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/suite/Summit.t.sol\":\"SummitTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/Destination.sol\":{\"keccak256\":\"0x3c1bf4cec7cf984a7dab0a551f05b90a53f0749dfbb42b5ef813896f92cabe1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5d6401bef79ea149704f178149b3ac7afce2985b3e61035cfc2ed57675a800e\",\"dweb:/ipfs/QmPyXmQDW5aGUdcgiso39DHrX1jrRGvVM7rezzvUdAuXGZ\"]},\"contracts/GasOracle.sol\":{\"keccak256\":\"0x7c928f6a874c3f3302cee373ade32250fc677c4da97649c27ca16d073db77f54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2b9cc7558128b6e75ae001b2888b2a765fdd415abfc2a9cb434e5fb374157f0\",\"dweb:/ipfs/QmQzzUDJncDxrD5kqUoz58QTPzQkmZnmdamLn882oKHupC\"]},\"contracts/Origin.sol\":{\"keccak256\":\"0xca501df82132a87a014b305a09754d3864729110a991a604dc3f1eb81d236b87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2781f849551abfbdbcdb21ca097c75f14d9fae606eb6d6df421265df69db029a\",\"dweb:/ipfs/QmWwADY5nYhHzh6Fqut7gDoQrsfm7fgqi7dHdaTxx9CjnA\"]},\"contracts/Summit.sol\":{\"keccak256\":\"0x388bc3a52f1aa243cca1aa42f5089b90c94da63ce2041bbbd5484d722188f17b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03cddc0ac5327a1e303f9e55ff43f16438bde754484de3a1f802e464b8533d28\",\"dweb:/ipfs/QmdTqHmDq5vUe62Aj48FFL3mLfK3uz8mP6akBcjcGJdmJ2\"]},\"contracts/base/AgentSecured.sol\":{\"keccak256\":\"0x93c65ab6126b6595c10f6c0ec8f647ec7d79e69383d31d2701cac4549e5f80ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf22c7957416a633d725b5286ee760ae67b219f36ca16ad5d031cdd0f382de5\",\"dweb:/ipfs/QmXQTNUfBoKicvS6thm6eBWEUe2k2bv1TaXHaPg51FM1h5\"]},\"contracts/base/MessagingBase.sol\":{\"keccak256\":\"0x01a7e9d9a5547e90d2efc4478485c7fc308a870d596a47d2b59383eaf2a02dd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a5ab808e51515e2a8d2efccb3f9d89054c2fc7e9cb5f44514b734a097d8c114\",\"dweb:/ipfs/QmUJ1E1MXy1H2Nb8xCGA7hpsTMNF3CXNoU11qGyd5M8498\"]},\"contracts/base/MultiCallable.sol\":{\"keccak256\":\"0x9645f1629cdf8db803c40725f6b0ee165df64bfc142db4613efd385a88f13699\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc99799fdd946c11c893b89dad922822c866d14bdecded86913948a146f71053\",\"dweb:/ipfs/QmZGRZuhU2w6pAStcaQ5NyzyeUn69nJCJd9a9NnjuBVLsn\"]},\"contracts/base/Version.sol\":{\"keccak256\":\"0x63131bbdb149a0c83685da246afc0faa71d1009a20154b1f39650cef4369fe84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21f001efca9d0550162dd1154f5b1d977c85a703e6df883103638ae0fe65af9b\",\"dweb:/ipfs/QmX3BfuJ3yKxWFXphq6RcKcGrja1v5xJQ1fFCwRQvGV8u8\"]},\"contracts/events/AgentManagerEvents.sol\":{\"keccak256\":\"0xa56624a0db82d304bfba608d1b4d58f9c3d6165d6f7bfb2f7b90d91f232b646a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32f9e512ad758b98cb3a99611a2cac035ec9e8b0e4f031c88ea8dd46bb2a7dbe\",\"dweb:/ipfs/QmbZXsV3jcBgbsAc8FRGTkMrWDVHPk19p2GoKkxmHov9ei\"]},\"contracts/events/DestinationEvents.sol\":{\"keccak256\":\"0xf6f88d5a7da3fee51ecb0727a738e77f760c3f99d23e714286080eeb97e31132\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fe5c98c93ea072acd1f5412542236e5e4e6101382f452bbff9b8d8a213a56b4\",\"dweb:/ipfs/Qmc1PthuPTZyL1FWXtL9TvXNWiSLcWzim317AUucnCeqoe\"]},\"contracts/events/ExecutionHubEvents.sol\":{\"keccak256\":\"0x17d62c5bc175a1bd90a12d78c25a28ef196f79f4c22ecd16822ee3bf347263d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://664fe255227dbc3958404e4019559038281f8bebdb7c0ee3f36abeb82ffbfbf0\",\"dweb:/ipfs/QmbvQ4ms13D8xHSamrnhtJ1qZtRuEjwLT2kcNf34vA1h9L\"]},\"contracts/events/GasOracleEvents.sol\":{\"keccak256\":\"0x35e5be60662b567f78c3e62e217237e73fe3008453723a788eec0a48df7527f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e148158a9d87d7cb071b5772427fada2e89e7eb39227768877c3a830a8668477\",\"dweb:/ipfs/QmVyjz9yNAsPVbC8rDNjd6pAXYbXq2WBWSLrQwf9U5jzkd\"]},\"contracts/events/InboxEvents.sol\":{\"keccak256\":\"0x4e834b480f9fba7e803fdce5e22f55a2c4e78a8198a0e34e2bb741e9c998299b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c46f45e8e395fae57202449cf8d0786416360906447c400f740cacefd90425\",\"dweb:/ipfs/QmWZLaJAz1ZJuoas3x1NhDtGyAVWCHuzbA8bASXV5Va4Y3\"]},\"contracts/events/OriginEvents.sol\":{\"keccak256\":\"0xabbd42433e30a5fcfdf1c60f1a76fcf3872059f6bdcae60f8ec0c14545f8ce20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348e64e45921c8b4b5b290ad106ba0a14d85776481e5f4e3f20430883d04f118\",\"dweb:/ipfs/QmZEbt1JtxALE42XPjAuicwMt5GH14hHojEixwncuUkEu1\"]},\"contracts/events/SnapshotHubEvents.sol\":{\"keccak256\":\"0xc0d09b33210770dd671dcbef8183768346b3eacf38d0801f4629e599424b4011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90ae826aa534c1631d88e114ee25cbadd01a16661f1b6ad4451034a62232260b\",\"dweb:/ipfs/QmQjuw6dDegAULhC8stnvUGziNKupioWQoNqNxXSSAMVaj\"]},\"contracts/events/StateHubEvents.sol\":{\"keccak256\":\"0x6c4a2f6a342d579b561de4a4027bef31a7d0eec04e495373fab36f109069cf0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56db1ec51d7063105fbac6022feb4c24aed863fea534af26fa18d4059b99038a\",\"dweb:/ipfs/Qmb8kFvmURYrSfjhtkrBcQvPUprdf4xN8w3wQhPsoXWat9\"]},\"contracts/events/StatementInboxEvents.sol\":{\"keccak256\":\"0x31b50f36f0c2060313ea7a8b6564057449c9a957a77d202c5ec3c02623c20511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d794adac1f7491f684964233bb3d5152402555dfe20743bb8c8ca1a61c17a5d8\",\"dweb:/ipfs/QmZbj2btws52KkpHy8maks6xkqL9nq76LZx8ey2QKmxeFS\"]},\"contracts/events/SummitEvents.sol\":{\"keccak256\":\"0xe5069b8a4681622830714d8650130aea401c7228d8fe88e46e28466c08835f91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://373a684ee42c029db52944caa695356a2208eba16acb4bbac0fa8d7905b6240b\",\"dweb:/ipfs/QmZPSeugLqsvHGwDtpAbYcC3qfqowMn19nrYCuWJQmi5pa\"]},\"contracts/hubs/ExecutionHub.sol\":{\"keccak256\":\"0xada1930cd93a0725e8216e63c0938057ed915d4ae6695b4855b0ffdc639eed08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8453b4e9972404e71bab8ea98405fb169415067d96df2de2a4cb19227ad635\",\"dweb:/ipfs/QmXco9EWusCGeYCCipdoopaFZRxyL8QkPHiWVmoL3VCCUd\"]},\"contracts/hubs/SnapshotHub.sol\":{\"keccak256\":\"0x0c73996b678e260b2f969dab28642fbb878723fda3a0e170530a83433861776b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5cc5f0f933f0360df2bc3cf4cfc6dcd2475e6bb5e2519076a02cde983180e5b\",\"dweb:/ipfs/QmS9PdwXda3n6hnSQn7uM9GkjCg8k7rV885BqbmvPfzi8m\"]},\"contracts/hubs/StateHub.sol\":{\"keccak256\":\"0xd99e84d973eff6e1eac05a2defe6d1b77879147e1957c559d4d323e12c9ac5d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b53ba0c8c38e18f91c364c463e5768f3bdf362440560c0b000a165aeaf73593c\",\"dweb:/ipfs/QmTFcBXPdSzTehG8m5Fzid8YfcqzocoYx1aa8fBxsPizwE\"]},\"contracts/inbox/Inbox.sol\":{\"keccak256\":\"0x8e1103df8745e18d3482db5e3ca0a311fb74e51cb5c0ba33f00aefa60537e44f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da9b996949c79204e7f4e1a32aaf3e18b0c551e4d03d5619054b25d1827c4851\",\"dweb:/ipfs/QmQ7HxVf2oAvzD7G7ZvSr72YTZiowWaD5jnnsfFsCBzXbn\"]},\"contracts/inbox/LightInbox.sol\":{\"keccak256\":\"0xe51f525afc5e8bd2c87bbd72b3e3dbb3eec33de58a41910a547805b2fc41e11d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a547051a6f6eb585d297190cae5c86aa95499efb2aa64657faba6dfb70bb74a\",\"dweb:/ipfs/QmXysrcjZgybcUUe9pn1FQm3x21DMdeHzHEREFvHAHpma3\"]},\"contracts/inbox/StatementInbox.sol\":{\"keccak256\":\"0x097c1578b0f71f3a090bd0f9340e55e59056944351cf82f55eda43f5d01cdfd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e6182a19c0f82a755817b1ee6de921703b36cf9f2ad418a7293f4b6917ac375\",\"dweb:/ipfs/QmYNxEDbZ6VAitzbk1kHFKcaaZ5EtCZiyzuMyL8Hu3SxBX\"]},\"contracts/interfaces/IAgentManager.sol\":{\"keccak256\":\"0xc6fded8bc39cdb24e2bc038ba9b0ae168ad42fb15ed9d5883b89940b4e970a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://898f25a9d1f375ab7e5dc7cd791263934b50d3b0a44dc29a4c914578a1b06339\",\"dweb:/ipfs/QmXi3CVhvWpGxVvmw4n7UvEoX2bD2ZD2rg4oZhYETYWJ3a\"]},\"contracts/interfaces/IAgentSecured.sol\":{\"keccak256\":\"0x9a7efecf8fe37cc8245e3b0e3f5d6d6ee056cdd97ccb5631ff6347bdfc9fc889\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7877d223162a76d3fe75490069719b3a4f14cd66fc42bfa915f2813390b7d2aa\",\"dweb:/ipfs/QmZhE1rnffA9bbtkNAwVk6iitMPk14gHbK56mdeHQEPhxj\"]},\"contracts/interfaces/IExecutionHub.sol\":{\"keccak256\":\"0x98f6ff39ecb926b480474d122350d753ca18358ca4d18d36d1850ec7af7ae6f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36485341a0ed70b0f151b258124f6a0db003f5d37af22b8bea65b8d5249a252d\",\"dweb:/ipfs/QmfBEDFSGwnSjTyv2AZuuUDjrqWRvacyCx46dXegioWMDL\"]},\"contracts/interfaces/IMessageRecipient.sol\":{\"keccak256\":\"0x342bc1cf70e5a37e6a14d871297e845120608412d1be5dcd2657fc0dae5ebbde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8b93ab4b2d4e85b0dcb62cf0beeaa0289aebc7b3dbc3fb9cad9e82639cbc5e\",\"dweb:/ipfs/QmRHr2Dqr6tcFWZ7osKisaGg6QZtvwGrncchYjJ1UYWWVx\"]},\"contracts/interfaces/ISnapshotHub.sol\":{\"keccak256\":\"0x3640a263eb4af25646250affc0fe8c666df03e11fa36da4823363b46a878160b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fafb6b8f21c1a392b8d2f1f0a380bfe48bef18862f9519f69fe23e29e03b55ad\",\"dweb:/ipfs/Qmakg3WLAB1r7SyVnP8Db2ofzsV4RmsPDzk6wf3PS35kcX\"]},\"contracts/interfaces/IStateHub.sol\":{\"keccak256\":\"0x26cf1842739cb65203ed5f243879b11939d2e77c46cc629349f016d667c003f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f9959d5230d5b0cac7bc3171cee2cfd95ab548bbcff0da3b06d02a02f61f31\",\"dweb:/ipfs/QmezRqMJF1MfxxU8dzXYFVteBTPq4yuaMVZLNVTMayUzuV\"]},\"contracts/interfaces/IStatementInbox.sol\":{\"keccak256\":\"0x99c93edd056d33d33ce57ae7d6d17328b88e94fe971c4e9d23d2fceaa9f1e41c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76a2cf74f7a24ab3c669efab5372dff18a29463504b09a0d3dde4b4184a2eff3\",\"dweb:/ipfs/Qmb1sy2izNESmgS8FVkFHMXpWc2UM3unQeKMghFYCHNfn4\"]},\"contracts/interfaces/InterfaceBondingManager.sol\":{\"keccak256\":\"0x0c94cb27bd86eb1f0a48bf9ae15f747f4d0cc9c3e210a7eb75f255d44ccb3ec6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ca990b2704379039a58af30ef2e4f8db6165d8634cb77bcf2c34a1f3c09eb42\",\"dweb:/ipfs/Qmb5aNdpJrqry3o87KWwYf23kT691xf7GujzmQFy2S3sop\"]},\"contracts/interfaces/InterfaceDestination.sol\":{\"keccak256\":\"0x708371d239580f8e6dc44e790fd32f47e074cbfb8ae9e75609adbc0de303678c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5061c85c3779304f5c3919d2b1bc6620d1029a4ead7186c3f3f5b409a9bd855\",\"dweb:/ipfs/QmW4Hrz2NGMCRV2Rqv22G4xArsR4jUZtNr1garSR8AZud6\"]},\"contracts/interfaces/InterfaceGasOracle.sol\":{\"keccak256\":\"0xe4ee548d373c708fa212b868aff025e8e3107fb8c94b18c4839dd797d95e2355\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9543d7d9c85e9487c0bb7ca0d1b11686a835a5fa4b84e9d48c49c799e615541d\",\"dweb:/ipfs/QmWykziCJPVCFPp7U74AtZ11s7jgDK6XRARwx8cQA1Yaj7\"]},\"contracts/interfaces/InterfaceInbox.sol\":{\"keccak256\":\"0x86dbe24a32f5d09a9620f37f9af69710ba54703edd66ace3ba90e8335ef77246\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb9d7a21b3108cc86013aef80ba9a7e4a91aa8af6dd71aca5d47d26e85d213b0\",\"dweb:/ipfs/QmS2om4PmNgHJkVP92hwoHvBngH9HwmwZJnVMHhqeVj5ZY\"]},\"contracts/interfaces/InterfaceLightInbox.sol\":{\"keccak256\":\"0xb8edda08e49ec7602c201292ddf9da6b9ea2fd0db9575b2d52c8e3f482f5cfec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d515e2f48537cdbb89efed74cae919febd10df2676f0aff143fac906f2c7ca4\",\"dweb:/ipfs/Qmc2XxY9ghXitxQMTvpSNsCMp65J5dbmYoybk9YMW3GxgW\"]},\"contracts/interfaces/InterfaceLightManager.sol\":{\"keccak256\":\"0xfd56fe81fd6776faae469d615e66d71387512fac1997157a1dd3f80ada8e7dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1ef5b8bbdc189ce2148cc74f61f6eb9ca8bdcbf53ac84948ec72953ed4433d2\",\"dweb:/ipfs/Qmbe1Qm94avKV2mw1Yj33SZ698ykCA8vEpZhqjL9o4oqev\"]},\"contracts/interfaces/InterfaceOrigin.sol\":{\"keccak256\":\"0xe2c7feb15991348e274a413ee7e24c4cc4e2225c851924955ad2f025c8b5c42f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://314cdd9daf29e9d6ed288e02be302487cce6c0ca89805e5e8f6d78fb150c6ea6\",\"dweb:/ipfs/QmP6vY22Cpf45a3eDR6hPBnDDqCPcu4cRXJhH7W41ohkD6\"]},\"contracts/interfaces/InterfaceSummit.sol\":{\"keccak256\":\"0xeb60c7097b7e8a82e30e4e4e7788810d029a0bb013eb71d0e47d062abeb14494\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc35dbea34e34c513507575b9189806412e6e0d9dd6c7c34c5e598a89c58ed43\",\"dweb:/ipfs/QmTe6U1pB7AQaDiRdQRGktx96BWkGQdb8vLqtSpqCu3XDK\"]},\"contracts/libs/Constants.sol\":{\"keccak256\":\"0x9ead9581411ac7f702ccba26e3f478610f8c9c785ec3f96f3d9324d162177c2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cba4a834737651bee39e2abca02d59e676cd149439d21182ab6e4320d5e61279\",\"dweb:/ipfs/QmS2K5LKspFZPKuedWoaqywUw6v1nH9xdHa35dN8J9jDEi\"]},\"contracts/libs/Errors.sol\":{\"keccak256\":\"0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b\",\"dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB\"]},\"contracts/libs/Structures.sol\":{\"keccak256\":\"0x3eaa63f5d9aac514328111e8fdd037dc6fdb18af7541a8287deeacd2e44f7137\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://633619910c74a0685ef2993a2e7cc44088929121a15c8a9fc26c9bbadffbda71\",\"dweb:/ipfs/QmZceJv6UntiMWW4JZHbmytLsqXshbuav8yoiritksvqqy\"]},\"contracts/libs/TypeCasts.sol\":{\"keccak256\":\"0x328bf53c2642c51261d7320647d7603bcf17e67eb8828cb7991964c384ec7bb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb40201b32d1bc37873d57bd1e18984e44506b74272b204531d0aaa36ed19c10\",\"dweb:/ipfs/QmPySs43CVm1Vb9UzytQ4R9t4QkbqPCv8TNpZnD5MRwCXm\"]},\"contracts/libs/memory/Attestation.sol\":{\"keccak256\":\"0x83b58e2d80cc7139b8996c51c5e9015f34e833e73b92036b53a1af6641e2b699\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a097c82542ba977de931c6331a9b01a39ef2e46b8916414a6f4f550bc59c113\",\"dweb:/ipfs/QmYRHMoPXzrnx86rZnHAEiFxqM5poEs6wyZinLLTEfwZH3\"]},\"contracts/libs/memory/BaseMessage.sol\":{\"keccak256\":\"0x6f625ee64c2abb64fe5e7645eb4ac449e4a743cf5c434de70b24b47522a2c579\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a29cb57889c10b4cc601abe0f65529f1829354a276437ecb7ce387a654fb671\",\"dweb:/ipfs/QmRYA9HJAdKaVhrvDdaCwdR5DvCYy7yPQGVJ4a9kUCAxaA\"]},\"contracts/libs/memory/ByteString.sol\":{\"keccak256\":\"0x99a2d8a7d93c1ce5063da6631347189cffb95d977cc1683c8bc2d9529b501d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c627819681a668117cbf3633700ed36b63942a3ea8d96db65211febe048bb8bb\",\"dweb:/ipfs/QmSdhu6BDD6Tk17zD2JcmYwYVEnnoeuh9UFWfUkVW5KKvL\"]},\"contracts/libs/memory/MemView.sol\":{\"keccak256\":\"0x95dd48e50e353b59fadce29f22f02629c91bd3b5e07c0efa588bd7c808536587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4347457c5338192aca52c237c7f588d15a4f541482cd44b0632c59f36f9558eb\",\"dweb:/ipfs/QmXn1sKY7nVNrgKtbtE9PaMHFKBadyg73fs2jhw4Navyb1\"]},\"contracts/libs/memory/Message.sol\":{\"keccak256\":\"0x206a96eb35a7015116bfc585b30d34bd5cf151761ded37b8a2a36dd74a9ba99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12ebb3152e1c1dc2aed3c88cb17f54d9abc2a157215c2628fa3c4ac161686cf\",\"dweb:/ipfs/QmbU6h7KEanE7Pt5UXN2WV5SQwWjziCwqBL5RLKAUJHKci\"]},\"contracts/libs/memory/Receipt.sol\":{\"keccak256\":\"0x009e8cfffa4806d1a0a326a31350ead092c9cd22105d4890c86bf93d20c7824d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa9905170f86e4e2d9b62e9fabaab36381398da14f001e0b9bb98c31c174a48e\",\"dweb:/ipfs/QmYpHjdY2yf3w6kFi9urUTyrMyVZBBsCGGEkE1kyTnXqVn\"]},\"contracts/libs/memory/Snapshot.sol\":{\"keccak256\":\"0x5df6aa04b1cbb65e410c7f1a02787e0e11dbcdb5cde18ae50d435029c27c1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2e19b5c6778338b7e8e9c8ef82738797d8955d37884c7db70d7cdea43329910\",\"dweb:/ipfs/Qma1cRGHqRM3tkh5JyzR2Td6iKKST2HapTygBwVNTRJJZD\"]},\"contracts/libs/memory/State.sol\":{\"keccak256\":\"0x3997f3a820110b3bce6f87ea8df3e1f8b006d1ac45efff1dc2f8873f8bbfa5af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf973a3633546dfff75b550673b4a680b7fab48d7fc8923157983a4fde3d5da4\",\"dweb:/ipfs/QmZ8NNwcYaqVxtar8g5MH5mqDXXuMTQLe6vi7zYGswFA3N\"]},\"contracts/libs/merkle/MerkleMath.sol\":{\"keccak256\":\"0xbd13c07bdc40b80f56c7d75e3f31b6c4a85a78d444b760604a5b71083d14925c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3162b491e4e216c0f2d143ce3baab4cf9e2a8b1b42466256a5d5b1f8b0385507\",\"dweb:/ipfs/QmYnDSZyxiGHfmB8Fx46zh1LZe3aCdVaKzpaQuD9piTc7u\"]},\"contracts/libs/merkle/MerkleTree.sol\":{\"keccak256\":\"0xdc0a58835c6296f70fca199455adf94059f2ef709e4e3af05c3fa97e74b81fb0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62e769893052a89a57db12445481dd56ffdd758aa1795d94b17c3357ce799de1\",\"dweb:/ipfs/QmNnfsHhN5UvQHQSW1G6FUQZZBJEZVrAsBYGdQ5GkPbU1c\"]},\"contracts/libs/stack/GasData.sol\":{\"keccak256\":\"0x2007fd4b97cf33bfe4aa7dc6ac887af87b4010ec9834636b4dd5685582ac26cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b54ca8b659d63ef7138c5b3b243190ca19b1e893b7b49dee1f8790d55b9e691\",\"dweb:/ipfs/Qmc2FGb16uosZ5kvyEK2onpWVPvWeE9X72xNWeJw8CbweD\"]},\"contracts/libs/stack/Header.sol\":{\"keccak256\":\"0x6a2030f6d08075f91336466c3fe4bd63f2760dcd42554856357af8024fd55344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1a1c8f6240f897c62cdc09fab57fc9eeea8072efbc8d101bd7e40b8eea272c9\",\"dweb:/ipfs/QmYrFA3fupKhW71k6yLkQsojPJt4Fcv4uH46hNvYYHcDsy\"]},\"contracts/libs/stack/Number.sol\":{\"keccak256\":\"0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd\",\"dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5\"]},\"contracts/libs/stack/Request.sol\":{\"keccak256\":\"0xecd4427fe7285d1d5663ea019a66ebb04d3f495c0be28a14043c99a0d9a90689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55e800c307070d6497031b90157d917dcabd5f93d342081be8d20ad3c80df429\",\"dweb:/ipfs/QmU8oza8MeWDbG9xfPaPVoj4Z1rKtvQ7pA3Z7CuYyGSuY6\"]},\"contracts/libs/stack/Tips.sol\":{\"keccak256\":\"0x2186d854149349ff689a8356c7f387d134f59fa4a97aed7b43c9e25f46661b0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff15d61f2c9b26e6ef33457aed4a2d9ed61726e2a746d3e0a7e68eb6cd3d63a1\",\"dweb:/ipfs/QmUeiiTAjPmuFhLfzDMqZ6DyvQmEYhsKo9XArHSrMvjYKL\"]},\"contracts/manager/AgentManager.sol\":{\"keccak256\":\"0x6b6bb9d62e624a5efa1d3bfbf0571a117ee48bbbb3868ebb6f8ff58071f6d475\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac93ed3f2c169c0297dd70f37e72595799738b4879131be12292dea8f5625663\",\"dweb:/ipfs/QmNwi7wXMaxg4kg4RxsUrxhz4jLocT7XrVyvQ2dfEAHqJi\"]},\"contracts/manager/BondingManager.sol\":{\"keccak256\":\"0x83dd80c895a8c0ce0cae3d4c6ada58d9c0956e80c959d8a9fb23692a4ab9826b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33843db398ea33e0cb75a8e43a9c9e68be5284dea7cbc71698252fba30cd0234\",\"dweb:/ipfs/QmXiY7s4mQHTtV5B8bbf1s7TobQ22aPxf9NXVKjbL9dBcW\"]},\"contracts/manager/LightManager.sol\":{\"keccak256\":\"0x174147269ca22fbaa91accd50de05a8190e11b2d6847323a4ec3a7458e8c2cda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f10c56e793c383ef84f3bd10b499b76dcf1a5b59b5cc5efad1747cde7fb2d5b\",\"dweb:/ipfs/QmY6PaFz899oCoap5Pf3ng7iwmzREuTD9c2FAoRUFv6Y1b\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x027d1aa07f6a45546d6990186ee6ab2ccd1b654fbbef326145e9b6e125feaabc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c57fcb94bf64d583115157e4c89cc4ad58ff1102677613d7ef70263d98d270\",\"dweb:/ipfs/QmbASKUPs9pRck3j4soibhgGJ2ghr38vzdaSrF5Ae2xyqQ\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]},\"node_modules/@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0x4859ffd6dd69382a1462930c00b6e394007da80e78e510f56930271034737bf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0497f84a7fdfafac2046d23b456a05454365d38bb59883b7d8ce398a26704f4f\",\"dweb:/ipfs/QmZSXpAvoXWkxQ4U2GJ4juWvmn4Fd7zeH9wXZq6wKUbfi6\"]},\"test/harnesses/client/ReentrantApp.t.sol\":{\"keccak256\":\"0xe0d7929d412e60b1af9a439ea7c180724d4efc21aa9bb7934fb57e8c01fab8c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5a3c7446e62c4222c24ec94a9596c2395e06db3cab5379d5a799484461dd4e1\",\"dweb:/ipfs/QmZg2PxxX6bw3vbZ9qu8Z5a4DmaTpBzQhWigDm4wahYRNZ\"]},\"test/harnesses/client/RevertingApp.t.sol\":{\"keccak256\":\"0x05502f8740b3c9d11552e2d200c3b702e5bea00cfdc024731926d2ae41a208cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb4dcf370473255a61d887982fc1f43014914572ae97b26b817801517808d1e0\",\"dweb:/ipfs/QmVXRqGXK1ZftdqBHug89Qo6XQhtjtSNhCvwAp5P2uYLRi\"]},\"test/harnesses/events/BaseClientHarnessEvents.t.sol\":{\"keccak256\":\"0xbbe298578bcd74722a758cb405679cd3e5433ded2af5dc693da77593fcbba306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://593bb5eebb02635cccff84277e60d92b71625d945cf5ceb5e399b488c87a8499\",\"dweb:/ipfs/QmeZGgasXRksPxiz8NHR3advUuzA3wbdd9S2d6t7gVkzK2\"]},\"test/harnesses/manager/AgentManagerHarness.t.sol\":{\"keccak256\":\"0x6ad504f142be190f4b3fa158162445fb56d29443022041f2c17eb485be4f886b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://365788b0d405bacced74fda6f4ab0335e48496a3ced3ae4a4b6487983c5723d3\",\"dweb:/ipfs/QmQuogm7HhTZzkGPzHtMshocskqdga4T11FAVx6dVmueru\"]},\"test/harnesses/manager/BondingManagerHarness.t.sol\":{\"keccak256\":\"0x22694e0b72ad3ce20bb8280b9906e0d41b2b9a6ebb0a2ed7d96cd0beadeb0210\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98721c934e60a1b4ae0567868330636b7caad0191939526d21fb4c7f06674bd3\",\"dweb:/ipfs/QmRjWtbHxQgBWCHG3CjZqpBEFbd9MgCBff6qmwT6xYdjBL\"]},\"test/harnesses/manager/LightManagerHarness.t.sol\":{\"keccak256\":\"0x279a395b190307c17eb1312425b4956a15fcff34c2e98e988167e2fa42d0c126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9f7c0bfadefe1c73b68d1bfe4506cb6a4d9314a28988d5f4e4244be76d682b9\",\"dweb:/ipfs/QmXqNw2NXYHPUSbfS6GwJ39TjJrg45xaU98mXXoq2q23Xh\"]},\"test/mocks/DestinationMock.t.sol\":{\"keccak256\":\"0x6db0ce04d27bed72bef2a2a04266cd238250bc6efbcac0373b2649426bdd3da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e291232f9e3fd59426cd9e16665c41feb66f747866689de967669702c19a3c7\",\"dweb:/ipfs/QmXR2ovSN5u7NR7E4YMdjuBVEvh1b13Can5JDEBW1zkefn\"]},\"test/mocks/GasOracleMock.t.sol\":{\"keccak256\":\"0x0fe7b93a6e2ae788ca6b159ba34f965006c13a747ba88126f58e27efbf82232a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43aaf6d9eb39c16d5fc35a42a284235e483a7a222d01ef858cb61391c80f182c\",\"dweb:/ipfs/QmXYKcXQsBFfTH9GYfQXG5qnc8zoUhkjSK7jpFqVuEADUc\"]},\"test/mocks/OriginMock.t.sol\":{\"keccak256\":\"0x88397a23f82c0e21324d3ef4cf90114f3b73aa9ed822f5d0baa68d87a7824365\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4ffe30614e8d4e39d4713cc176cae2113e768bf34a543d8cb019c6ec1eb3e0\",\"dweb:/ipfs/QmWmFroUNtnDD7BzsjmTCxpfXhM36dTieE5FB5WFThAR2L\"]},\"test/mocks/SummitMock.t.sol\":{\"keccak256\":\"0x07ab882390295f653c026dfe3380d04437c9ac33e2e6a4dca15198fdfb19210b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15bd4ed09addb35c059aab2d7fb69c1484f4f7d4f5fe8bd13f621c406b9529da\",\"dweb:/ipfs/Qmdq9jUHneJZXPYJQtYidiDbxvqHBi3Cy489TfUG3q4jFw\"]},\"test/mocks/base/AgentSecuredMock.t.sol\":{\"keccak256\":\"0x7c74b961b7d06d65138f35d638b68be02046565479f09606bf099da0093eba36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5faa5048684a4685809fec66813899f0c55f47ec27b39c7b0440c2083cd34e4c\",\"dweb:/ipfs/QmfL3CxnjPXHnD137ERbyLMTuAfJsJa3k7yft7VqYGdvqf\"]},\"test/mocks/base/BaseMock.t.sol\":{\"keccak256\":\"0x5d0ddef55a6d63ce25175fd2cefc00b9030e8f7247600220e67a33c3982b9697\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96928ffa43cb650c3c594fa2d1459f2f44eea1f52fb988011a638e80b255d986\",\"dweb:/ipfs/QmXpFxAzvt9jaD4BsKGLJnBdHF1m4uvfB1iKt94mr3ryCJ\"]},\"test/mocks/client/MessageRecipientMock.t.sol\":{\"keccak256\":\"0x48a0f852e43b7c5eab716fd921c3693dc46274320c1bc1c78602e7fc7772b575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16fd1ae4649a22a03aa72f879d0e650456775e3a339b05d5b90333c07e932324\",\"dweb:/ipfs/QmeVXj5KRDLbmZ8Q22YXbekLQrWP3U7GJxykwVkkyvDmMn\"]},\"test/mocks/hubs/ExecutionHubMock.t.sol\":{\"keccak256\":\"0x176e769388b8a77fd8db5dada6ba3814970b7800d3d52fd981b5cf3d8e308e88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04be69b573c225a37a734464e8bab6524fb2bd80c120268288706655ca0bf339\",\"dweb:/ipfs/Qmaa36Cg2R4CZweAoNyrpzQT1RukXZi9zS4Jgx9MRH8dK3\"]},\"test/mocks/hubs/SnapshotHubMock.t.sol\":{\"keccak256\":\"0x3bd89d154ad63a5bbf3d79180bbbb5dd37ac602ebe7230749a269994cd0e0252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d2a54f6f85a4463e89f7283c6b19b47a3bf710f24fb1ca8af929a1d0d7b961\",\"dweb:/ipfs/QmTaPz6oEzA3EgHoetvgZhqSR4pXPXbj4bcybnJ9qxNkj2\"]},\"test/mocks/hubs/StateHubMock.t.sol\":{\"keccak256\":\"0x04491dc0d2d8847c6ad54969d4a2d66b6df88fd357b2bc546407021ab23a9884\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca230a0bf6683fbe7420636c0a6afc0f64c3bec92a268ac3823a6dd668f48ee4\",\"dweb:/ipfs/QmY72pu3ACw9fQw785g7u61gg4UG6hUqUJSMhH1aK6XSmf\"]},\"test/suite/Summit.t.sol\":{\"keccak256\":\"0xe4b34af8c821bf3464c5994eb066b12c98650f534828d746d6a087d5b8f3481e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d214d2653bcf654db0ac0020307bde111e46f8eace822a5e2c3b9d43968a8238\",\"dweb:/ipfs/QmZ87cMNA93oYPDvF8SThyoDH7mGGuwMEyuZ76Lf4P8Air\"]},\"test/suite/base/AgentSecured.t.sol\":{\"keccak256\":\"0x3004e7987885e481cd41e8311670aed9f65831be56790daeefedd4acac3a006a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc100be90a74e30e482e914e0b971a8d623c3319472b2d30f3d5533a2f3146c1\",\"dweb:/ipfs/QmbwHfYhLLE9GUaPa4PqfxTvJmxEE5y5idwkSsu5Qm3o4g\"]},\"test/suite/base/MessagingBase.t.sol\":{\"keccak256\":\"0x8caa45de5a6fef979802abf7bcf91c5a8334ea60c913cd946ddd806abfa44d7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dee563f8b5478620c537b411a80ec0f1c1ec8497914529d7e81174d7f5bac\",\"dweb:/ipfs/QmYEWtKSF9LH2W9CJZ9o7UnCjB8bdNJoAmyAv6x6s752Rd\"]},\"test/suite/hubs/ExecutionHub.t.sol\":{\"keccak256\":\"0x85fc2d1e573932df834aa56ebf643de303012943aeac9a690bf6e86e076cecf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4077c01a0e5946f81b097c2787338436b9056725f13f280f86a862fc1c9964a\",\"dweb:/ipfs/QmViNsvVHeBaRDMBZqPKHxC3cRW8txv8S2FZukowEED7rf\"]},\"test/utils/SynapseAgents.t.sol\":{\"keccak256\":\"0x6129bc8647f277f585756fd3b3190112d35c4661620819e0ac65b204322a38cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11dad7bdffc56abaa2650250df1ab4d2ea174be26cc5675f203fc37bc81ffee2\",\"dweb:/ipfs/QmcqcQEgen592NBREMyiBtAr6m6hR13Fo6pv9CU9bVnsaK\"]},\"test/utils/SynapseProofs.t.sol\":{\"keccak256\":\"0x09a562b12e58384e5e775ffc61f980a7873380d3b1b8004f023ec6f80f80565a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25d6d84ff9ca8bb50fbb1e7059ec982875bc50f2a643c67df11f7fcbc1cd6827\",\"dweb:/ipfs/QmaR4K3i26kwxJnDxUmr4EioxJMpK6Q3vhTWSKoQ3FwGuj\"]},\"test/utils/SynapseTest.t.sol\":{\"keccak256\":\"0xd52982be8313ed6d06d80d620e6a1b7d5c0bbbaa33beedf91bc8992f51dc435d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10ea2f4783e32c427729ed7799a76f778c1c3028a184cb72133a7cf2a850705a\",\"dweb:/ipfs/QmP7mw9DvUpepV3wWF9FRgqojj6BmHQwWs2oMtqboCy2uR\"]},\"test/utils/SynapseTestConstants.t.sol\":{\"keccak256\":\"0x24b5c4c4f8e0de51b137e0b922875be258282ddd33580da8cf939bef0b552a79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ea15ff24cdcacc3c31382bd04c530287d49dc841f7013e9810133b4f91593e\",\"dweb:/ipfs/QmbBd33fFmSmTqPXks8knXCXZHpaYvUSjebtmFGrU3YE5A\"]},\"test/utils/SynapseUtilities.t.sol\":{\"keccak256\":\"0x8d08d6a579173fe927decca6fbeaa743e9455051837799f3be15c052420b7112\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5662d8d58cac1c6e0688ce8faee3b2085402e4d0ce0cbc38596bdaafa75e1b51\",\"dweb:/ipfs/QmU9b5UQeYndKQAVprdab994RuG1WW8Uz7sg38uadyN2gq\"]},\"test/utils/events/ProductionEvents.t.sol\":{\"keccak256\":\"0x8f7b545fbbe599d21f5154706c1f7ad1539566738bcf2732fb5cd793555aa108\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c2e08e22817a04013c74e949a944e81e8b5d6196d4203d08b3e2221f0778bcb\",\"dweb:/ipfs/QmUfxoBF3XzWk8LgKg2Xr5AvuzqaLL7YUz5hrEZCtJMeMA\"]},\"test/utils/events/SuiteEvents.t.sol\":{\"keccak256\":\"0x2283ce345a470e46be1f1803da9a9e17c2896428fe9aef871c1bb38012403ae3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8083cc6bde1c1e638096347a89e7db037bc3dc3e179fe249bbb5590dd83198c\",\"dweb:/ipfs/QmNZp2dcYPgkV3RR14gkY9JeevcW3kHvqbymB8aHnQsVrW\"]},\"test/utils/libs/FakeIt.t.sol\":{\"keccak256\":\"0xfcb5b38ca3d693609ef261aea084bad8dae3ade0ea969939699e073ceb0125ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f17b2734c388ec61f5b855f32f8c650724a8cafc74dec451a1edfe633380a6ad\",\"dweb:/ipfs/QmNgFGrSywpPxXMnMP5NNAxBj6jPu9f29X8zv3XjpTvpVU\"]},\"test/utils/libs/Random.t.sol\":{\"keccak256\":\"0x5d9cf91fac61f77e6fea09ca36191a8c162ceccd30e9fed552b65486c580a2b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1574478dbe9f571c04b6cd7cd812ae024aeb885599d6f440b4b7dfb9b708f671\",\"dweb:/ipfs/QmddeBwFUigpfwm2wBzKWuarDPzgMeMhpQU3Sx7uxatHAL\"]},\"test/utils/libs/SynapseStructs.t.sol\":{\"keccak256\":\"0x664ba9f04e889501196308480444a90657872af51267cbe7e6d9de5308edab13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b85dd129998afd92047c883b6712d815ae2930171eaa33eb30fdceb5dddca0ea\",\"dweb:/ipfs/QmRKcKo86FaRVEydU1yETN6jaSKbomdFFcrswzZeL3WnAh\"]},\"test/utils/proof/AttestationProofGenerator.t.sol\":{\"keccak256\":\"0x55e60fa4860d20c1acef70992c161544943499d919debf1233f5896006444d7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a2043fac652c02e9624200b2cbd12bb984097f394504e1aa58c898cce605656\",\"dweb:/ipfs/QmRf4GrVREY5YhmqZXPUKhTYFKp966vCxa9RwAnJq6Ni5d\"]},\"test/utils/proof/DynamicProofGenerator.t.sol\":{\"keccak256\":\"0xa9272ed0739752ecea44f9025805a5b875ddb240e477bd469422bf6655eb7f35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bb1aee5a0638b29c6e8f24ff93d7b37dadd4b3e272318e7f31c1ab5d56d02b7\",\"dweb:/ipfs/QmWrB2zqhDLWNLEX5o39cBv966ff2RbP6XVmv1qPQejQft\"]},\"test/utils/proof/HistoricalProofGenerator.t.sol\":{\"keccak256\":\"0x506da993485d2e62ff72df3ec40f7b7573bd607c732f74ba818b1218da79054e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://500e44c72621c73eb09fd395265d6c626c2057418a17f4dd484aa94ee847820a\",\"dweb:/ipfs/QmbPPQtdsphznHz9aTn8h2Rn2Jhy59xToR4W1wqPfqy12Q\"]},\"test/utils/proof/ProofCutter.t.sol\":{\"keccak256\":\"0x0b2f00c46d7967ff6058691cc7fac1bdef3eebfcabd395b92ad90d4a8da675d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7cb0b41fcad5497e2b852ac0bfae328ecb0633bd7ccf28cb1a4518715dc8645\",\"dweb:/ipfs/QmZu3eQbEeM6AvVJ5qNjd1oq1a1bnEtffDDt3h2Pan8GqP\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectStatesAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IndexOutOfRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IndexedTooMuch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OccupiedMemory"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PrecompileOutOfGas"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TreeHeightTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnallocatedMemory"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnformattedSnapshot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnformattedState"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ViewOverrun"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "agentRoot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgentRootAccepted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "notary",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AttestationAccepted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "attestation",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AttestationSaved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "msgValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "origin",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "version",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "content",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BaseMessageReceived",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "destination",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Dispatched",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "disputeIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "guardIndex",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "notaryIndex",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DisputeOpened",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "disputeIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "slashedIndex",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "rivalIndex",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "fraudProver",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DisputeResolved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "remoteDomain",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "messageHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Executed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidAttestation",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "arPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "arSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidAttestationReport",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "rcptPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "rcptSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidReceipt",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "rrPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "rrSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidReceiptReport",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "srPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "srSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidStateReport",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "statePayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidStateWithAttestation",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "snapSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidStateWithSnapshot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "notary",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "rcptPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "rcptSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReceiptAccepted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "newRoot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RootUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "destination",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Sent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "agent",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "snapSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SnapshotAccepted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "state",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StateSaved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum AgentFlag",
              "name": "flag",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "agent",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StatusUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "actor",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "origin",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "tip",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TipAwarded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageHash",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "paddedTips",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TipsRecorded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct RawSnapshot",
              "name": "rs",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct RawState[]",
                  "name": "states",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "root",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "origin",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "nonce",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint40",
                      "name": "blockNumber",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "timestamp",
                      "type": "uint40"
                    },
                    {
                      "internalType": "struct RawGasData",
                      "name": "gasData",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "struct RawNumber",
                          "name": "gasPrice",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint16",
                              "name": "number",
                              "type": "uint16"
                            }
                          ]
                        },
                        {
                          "internalType": "struct RawNumber",
                          "name": "dataPrice",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint16",
                              "name": "number",
                              "type": "uint16"
                            }
                          ]
                        },
                        {
                          "internalType": "struct RawNumber",
                          "name": "execBuffer",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint16",
                              "name": "number",
                              "type": "uint16"
                            }
                          ]
                        },
                        {
                          "internalType": "struct RawNumber",
                          "name": "amortAttCost",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint16",
                              "name": "number",
                              "type": "uint16"
                            }
                          ]
                        },
                        {
                          "internalType": "struct RawNumber",
                          "name": "etherPrice",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint16",
                              "name": "number",
                              "type": "uint16"
                            }
                          ]
                        },
                        {
                          "internalType": "struct RawNumber",
                          "name": "markup",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint16",
                              "name": "number",
                              "type": "uint16"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptSnapshot"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addAgentBM"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addNewAgent",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "newRoot",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "addressToBytes32",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "buf",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "bytes32ToAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "struct AgentStatus",
              "name": "status",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum AgentFlag",
                  "name": "flag",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "domain",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "index",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "enum AgentFlag",
              "name": "flag",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "checkAgentStatus"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "checkLatestState"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "clear"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAgent",
          "outputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct RawState",
              "name": "rawState",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "origin",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint40",
                  "name": "blockNumber",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "timestamp",
                  "type": "uint40"
                },
                {
                  "internalType": "struct RawGasData",
                  "name": "gasData",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct RawNumber",
                      "name": "gasPrice",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "dataPrice",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "execBuffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "amortAttCost",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "etherPrice",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "markup",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct RawAttestation",
              "name": "ra",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "snapRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "dataHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint40",
                  "name": "blockNumber",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "timestamp",
                  "type": "uint40"
                },
                {
                  "internalType": "bytes32",
                  "name": "_agentRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "_snapGasHash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "struct RawStateIndex",
              "name": "rsi",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "stateIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "statesAmount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAttestation",
          "outputs": [
            {
              "internalType": "struct RawAttestation",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "snapRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "dataHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint40",
                  "name": "blockNumber",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "timestamp",
                  "type": "uint40"
                },
                {
                  "internalType": "bytes32",
                  "name": "_agentRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "_snapGasHash",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "notary",
              "type": "address"
            },
            {
              "internalType": "struct RawState",
              "name": "rs",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "origin",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint40",
                  "name": "blockNumber",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "timestamp",
                  "type": "uint40"
                },
                {
                  "internalType": "struct RawGasData",
                  "name": "gasData",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct RawNumber",
                      "name": "gasPrice",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "dataPrice",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "execBuffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "amortAttCost",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "etherPrice",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "markup",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct RawStateIndex",
              "name": "rsi",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "stateIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "statesAmount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "createSignedSnapshot",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "snapSig",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MessagingBaseTest.SnapshotMock",
              "name": "sm",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct RawState",
                  "name": "rs",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "root",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "origin",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "nonce",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint40",
                      "name": "blockNumber",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "timestamp",
                      "type": "uint40"
                    },
                    {
                      "internalType": "struct RawGasData",
                      "name": "gasData",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "struct RawNumber",
                          "name": "gasPrice",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint16",
                              "name": "number",
                              "type": "uint16"
                            }
                          ]
                        },
                        {
                          "internalType": "struct RawNumber",
                          "name": "dataPrice",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint16",
                              "name": "number",
                              "type": "uint16"
                            }
                          ]
                        },
                        {
                          "internalType": "struct RawNumber",
                          "name": "execBuffer",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint16",
                              "name": "number",
                              "type": "uint16"
                            }
                          ]
                        },
                        {
                          "internalType": "struct RawNumber",
                          "name": "amortAttCost",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint16",
                              "name": "number",
                              "type": "uint16"
                            }
                          ]
                        },
                        {
                          "internalType": "struct RawNumber",
                          "name": "etherPrice",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint16",
                              "name": "number",
                              "type": "uint16"
                            }
                          ]
                        },
                        {
                          "internalType": "struct RawNumber",
                          "name": "markup",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint16",
                              "name": "number",
                              "type": "uint16"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "struct RawStateIndex",
                  "name": "rsi",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "stateIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "statesAmount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createSnapshotProof",
          "outputs": [
            {
              "internalType": "struct RawAttestation",
              "name": "ra",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "snapRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "dataHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint40",
                  "name": "blockNumber",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "timestamp",
                  "type": "uint40"
                },
                {
                  "internalType": "bytes32",
                  "name": "_agentRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "_snapGasHash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes32[]",
              "name": "snapProof",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployBondingManager"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployDestination"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployDestinationSynapse"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployGasOracle"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployGasOracleSynapse"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployInbox"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployLightInbox"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployLightManager"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployOrigin"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployOriginSynapse"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deploySummit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "disputeIndex",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "guard",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "notary",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "expectDisputeOpened"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "disputePtr",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "slashed",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "honest",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "prover",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "expectDisputeResolved"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "expectRevertAlreadyInitialized"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "expectRevertNotOwner"
        },
        {
          "inputs": [
            {
              "internalType": "enum AgentFlag",
              "name": "flag",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "expectStatusUpdated"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "genSnapshotProof",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "domainId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "agentId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgent",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgentLeaf",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgentProof",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgentRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgentStatus",
          "outputs": [
            {
              "internalType": "struct AgentStatus",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum AgentFlag",
                  "name": "flag",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "domain",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "index",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "agentId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDomainAgent",
          "outputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "agentId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getGuard",
          "outputs": [
            {
              "internalType": "address",
              "name": "guard",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestProof",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLeaf",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "domainId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "agentId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNotary",
          "outputs": [
            {
              "internalType": "address",
              "name": "notary",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProof",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSnapshotRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getZeroProof",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initBondingManager"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initInbox"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initLightInbox"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initLightManager"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeLocalContract"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "msgHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "insertMessage"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLocalAgentSecured",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLocalSystemContract",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "localAgentManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "localContract",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "localDestination",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "localDomain",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "localInbox",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "localOrigin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "localSummit",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "guard",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "notary",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "openDispute"
        },
        {
          "inputs": [
            {
              "internalType": "struct Random",
              "name": "random",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "seed",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "randomAgent",
          "outputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Random",
              "name": "random",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "seed",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "randomGuard",
          "outputs": [
            {
              "internalType": "address",
              "name": "guard",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Random",
              "name": "random",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "seed",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "randomNotary",
          "outputs": [
            {
              "internalType": "address",
              "name": "notary",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setupAgentsBM"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setupAgentsLM"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setupDomain"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "struct RawAttestation",
              "name": "ra",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "snapRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "dataHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint40",
                  "name": "blockNumber",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "timestamp",
                  "type": "uint40"
                },
                {
                  "internalType": "bytes32",
                  "name": "_agentRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "_snapGasHash",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signAttestation",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "attestation",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "attestation",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signAttestation",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "struct RawAttestation",
              "name": "ra",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "snapRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "dataHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint40",
                  "name": "blockNumber",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "timestamp",
                  "type": "uint40"
                },
                {
                  "internalType": "bytes32",
                  "name": "_agentRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "_snapGasHash",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signAttestationReport",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "arSignature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signAttestationReport",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signMessage",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "hashedMsg",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signMessage",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "privKey",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "hashedMsg",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "signMessage",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "privKey",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "signMessage",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "receipt",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signReceipt",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "struct RawExecReceipt",
              "name": "re",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "origin",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "destination",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "messageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "snapshotRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint8",
                  "name": "stateIndex",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "attNotary",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "firstExecutor",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "finalExecutor",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signReceipt",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "receipt",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "rcptPayload",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signReceiptReport",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "struct RawExecReceipt",
              "name": "re",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "origin",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "destination",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "messageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "snapshotRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint8",
                  "name": "stateIndex",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "attNotary",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "firstExecutor",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "finalExecutor",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signReceiptReport",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "rcptPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "rrSignature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "snapshot",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signSnapshot",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "struct RawSnapshot",
              "name": "rawSnap",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct RawState[]",
                  "name": "states",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "root",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "origin",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "nonce",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint40",
                      "name": "blockNumber",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "timestamp",
                      "type": "uint40"
                    },
                    {
                      "internalType": "struct RawGasData",
                      "name": "gasData",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "struct RawNumber",
                          "name": "gasPrice",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint16",
                              "name": "number",
                              "type": "uint16"
                            }
                          ]
                        },
                        {
                          "internalType": "struct RawNumber",
                          "name": "dataPrice",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint16",
                              "name": "number",
                              "type": "uint16"
                            }
                          ]
                        },
                        {
                          "internalType": "struct RawNumber",
                          "name": "execBuffer",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint16",
                              "name": "number",
                              "type": "uint16"
                            }
                          ]
                        },
                        {
                          "internalType": "struct RawNumber",
                          "name": "amortAttCost",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint16",
                              "name": "number",
                              "type": "uint16"
                            }
                          ]
                        },
                        {
                          "internalType": "struct RawNumber",
                          "name": "etherPrice",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint16",
                              "name": "number",
                              "type": "uint16"
                            }
                          ]
                        },
                        {
                          "internalType": "struct RawNumber",
                          "name": "markup",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint16",
                              "name": "number",
                              "type": "uint16"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signSnapshot",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "snapshot",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "State[]",
              "name": "states",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signSnapshot",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "snapshot",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "statePayload",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signStateReport",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "struct RawState",
              "name": "rs",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "origin",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint40",
                  "name": "blockNumber",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "timestamp",
                  "type": "uint40"
                },
                {
                  "internalType": "struct RawGasData",
                  "name": "gasData",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct RawNumber",
                      "name": "gasPrice",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "dataPrice",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "execBuffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "amortAttCost",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "etherPrice",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "markup",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signStateReport",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "statePayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "srSignature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "skipBlock"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blocks",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "skipBlocks"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSynapseAgents"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSynapseProofs"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSynapseTest"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSynapseUtilities"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_acceptGuardSnapshot_revert_notInbox"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_acceptNotarySnapshot_revert_notInbox"
        },
        {
          "inputs": [
            {
              "internalType": "struct Random",
              "name": "random",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "seed",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_cleanSetup"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getLatestState_empty"
        },
        {
          "inputs": [
            {
              "internalType": "struct Random",
              "name": "random",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "seed",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_guardSnapshots"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_initializer_revert_alreadyInitialized"
        },
        {
          "inputs": [
            {
              "internalType": "struct Random",
              "name": "random",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "seed",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_notarySnapshots"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_setupCorrectly"
        },
        {
          "inputs": [
            {
              "internalType": "struct RawState",
              "name": "rs",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "origin",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint40",
                  "name": "blockNumber",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "timestamp",
                  "type": "uint40"
                },
                {
                  "internalType": "struct RawGasData",
                  "name": "gasData",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct RawNumber",
                      "name": "gasPrice",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "dataPrice",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "execBuffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "amortAttCost",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "etherPrice",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "markup",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_submitSnapshot_revert_notaryInDispute"
        },
        {
          "inputs": [
            {
              "internalType": "struct RawState",
              "name": "rs",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "origin",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint40",
                  "name": "blockNumber",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "timestamp",
                  "type": "uint40"
                },
                {
                  "internalType": "struct RawGasData",
                  "name": "gasData",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct RawNumber",
                      "name": "gasPrice",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "dataPrice",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "execBuffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "amortAttCost",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "etherPrice",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "markup",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_submitSnapshot_success_guardInDispute"
        },
        {
          "inputs": [
            {
              "internalType": "struct Random",
              "name": "random",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "seed",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "mask",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_verifyAttestation_existingNonce"
        },
        {
          "inputs": [
            {
              "internalType": "struct Random",
              "name": "random",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "seed",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "struct RawAttestation",
              "name": "ra",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "snapRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "dataHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint40",
                  "name": "blockNumber",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "timestamp",
                  "type": "uint40"
                },
                {
                  "internalType": "bytes32",
                  "name": "_agentRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "_snapGasHash",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_verifyAttestation_unknownNonce"
        },
        {
          "inputs": [
            {
              "internalType": "enum AgentFlag",
              "name": "flag",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgent",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "newRoot",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgentLM"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "agentManager",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbox_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "gasOracle_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOrigin"
        },
        {
          "inputs": [
            {
              "internalType": "struct Random",
              "name": "random",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "seed",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "struct RawAttestation",
              "name": "ra",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "snapRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "dataHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint40",
                  "name": "blockNumber",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "timestamp",
                  "type": "uint40"
                },
                {
                  "internalType": "bytes32",
                  "name": "_agentRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "_snapGasHash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "isValid",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyAttestation"
        },
        {
          "inputs": [
            {
              "internalType": "struct Random",
              "name": "random",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "seed",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "struct RawAttestation",
              "name": "ra",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "snapRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "dataHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint40",
                  "name": "blockNumber",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "timestamp",
                  "type": "uint40"
                },
                {
                  "internalType": "bytes32",
                  "name": "_agentRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "_snapGasHash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "isAttestationValid",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyAttestationReport"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "clear()": {
            "notice": "Clears proof generators"
          },
          "createAttestation((bytes32,uint32,uint32,uint40,uint40,((uint16),(uint16),(uint16),(uint16),(uint16),(uint16))),(bytes32,bytes32,uint32,uint40,uint40,bytes32,bytes32),(uint256,uint256))": {
            "notice": "Creates attestation for snapshot having given rawState at given index, with some fake data for other states in the snapshots."
          },
          "isLocalAgentSecured(address)": {
            "notice": "Checks if contract is a local AgentSecured contract"
          },
          "isLocalSystemContract(address)": {
            "notice": "Checks if contract is a local SystemContract"
          },
          "localAgentManager()": {
            "notice": "Returns address of Agent Manager on the tested domain"
          },
          "localContract()": {
            "notice": "Returns address of the tested contract"
          },
          "localDestination()": {
            "notice": "Returns address of Destination on the tested domain"
          },
          "localDomain()": {
            "notice": "Returns local domain for the tested contract"
          },
          "localInbox()": {
            "notice": "Returns address of Inbox on the tested domain"
          },
          "localOrigin()": {
            "notice": "Returns address of Origin on the tested domain"
          },
          "localSummit()": {
            "notice": "Returns address of Summit on the tested domain"
          },
          "signMessage(address,bytes32,bytes)": {
            "notice": "Signs hashed message, by using a requested salt."
          },
          "signMessage(address,bytes32,bytes32)": {
            "notice": "Signs a salted hash of a message"
          },
          "testSynapseAgents()": {
            "notice": "Prevents this contract from being included in the coverage report"
          },
          "testSynapseProofs()": {
            "notice": "Prevents this contract from being included in the coverage report"
          },
          "testSynapseTest()": {
            "notice": "Prevents this contract from being included in the coverage report"
          },
          "testSynapseUtilities()": {
            "notice": "Prevents this contract from being included in the coverage report"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/suite/Summit.t.sol": "SummitTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Destination.sol": {
        "keccak256": "0x3c1bf4cec7cf984a7dab0a551f05b90a53f0749dfbb42b5ef813896f92cabe1d",
        "urls": [
          "bzz-raw://c5d6401bef79ea149704f178149b3ac7afce2985b3e61035cfc2ed57675a800e",
          "dweb:/ipfs/QmPyXmQDW5aGUdcgiso39DHrX1jrRGvVM7rezzvUdAuXGZ"
        ],
        "license": "MIT"
      },
      "contracts/GasOracle.sol": {
        "keccak256": "0x7c928f6a874c3f3302cee373ade32250fc677c4da97649c27ca16d073db77f54",
        "urls": [
          "bzz-raw://d2b9cc7558128b6e75ae001b2888b2a765fdd415abfc2a9cb434e5fb374157f0",
          "dweb:/ipfs/QmQzzUDJncDxrD5kqUoz58QTPzQkmZnmdamLn882oKHupC"
        ],
        "license": "MIT"
      },
      "contracts/Origin.sol": {
        "keccak256": "0xca501df82132a87a014b305a09754d3864729110a991a604dc3f1eb81d236b87",
        "urls": [
          "bzz-raw://2781f849551abfbdbcdb21ca097c75f14d9fae606eb6d6df421265df69db029a",
          "dweb:/ipfs/QmWwADY5nYhHzh6Fqut7gDoQrsfm7fgqi7dHdaTxx9CjnA"
        ],
        "license": "MIT"
      },
      "contracts/Summit.sol": {
        "keccak256": "0x388bc3a52f1aa243cca1aa42f5089b90c94da63ce2041bbbd5484d722188f17b",
        "urls": [
          "bzz-raw://03cddc0ac5327a1e303f9e55ff43f16438bde754484de3a1f802e464b8533d28",
          "dweb:/ipfs/QmdTqHmDq5vUe62Aj48FFL3mLfK3uz8mP6akBcjcGJdmJ2"
        ],
        "license": "MIT"
      },
      "contracts/base/AgentSecured.sol": {
        "keccak256": "0x93c65ab6126b6595c10f6c0ec8f647ec7d79e69383d31d2701cac4549e5f80ac",
        "urls": [
          "bzz-raw://6cf22c7957416a633d725b5286ee760ae67b219f36ca16ad5d031cdd0f382de5",
          "dweb:/ipfs/QmXQTNUfBoKicvS6thm6eBWEUe2k2bv1TaXHaPg51FM1h5"
        ],
        "license": "MIT"
      },
      "contracts/base/MessagingBase.sol": {
        "keccak256": "0x01a7e9d9a5547e90d2efc4478485c7fc308a870d596a47d2b59383eaf2a02dd1",
        "urls": [
          "bzz-raw://2a5ab808e51515e2a8d2efccb3f9d89054c2fc7e9cb5f44514b734a097d8c114",
          "dweb:/ipfs/QmUJ1E1MXy1H2Nb8xCGA7hpsTMNF3CXNoU11qGyd5M8498"
        ],
        "license": "MIT"
      },
      "contracts/base/MultiCallable.sol": {
        "keccak256": "0x9645f1629cdf8db803c40725f6b0ee165df64bfc142db4613efd385a88f13699",
        "urls": [
          "bzz-raw://cc99799fdd946c11c893b89dad922822c866d14bdecded86913948a146f71053",
          "dweb:/ipfs/QmZGRZuhU2w6pAStcaQ5NyzyeUn69nJCJd9a9NnjuBVLsn"
        ],
        "license": "MIT"
      },
      "contracts/base/Version.sol": {
        "keccak256": "0x63131bbdb149a0c83685da246afc0faa71d1009a20154b1f39650cef4369fe84",
        "urls": [
          "bzz-raw://21f001efca9d0550162dd1154f5b1d977c85a703e6df883103638ae0fe65af9b",
          "dweb:/ipfs/QmX3BfuJ3yKxWFXphq6RcKcGrja1v5xJQ1fFCwRQvGV8u8"
        ],
        "license": "MIT"
      },
      "contracts/events/AgentManagerEvents.sol": {
        "keccak256": "0xa56624a0db82d304bfba608d1b4d58f9c3d6165d6f7bfb2f7b90d91f232b646a",
        "urls": [
          "bzz-raw://32f9e512ad758b98cb3a99611a2cac035ec9e8b0e4f031c88ea8dd46bb2a7dbe",
          "dweb:/ipfs/QmbZXsV3jcBgbsAc8FRGTkMrWDVHPk19p2GoKkxmHov9ei"
        ],
        "license": "MIT"
      },
      "contracts/events/DestinationEvents.sol": {
        "keccak256": "0xf6f88d5a7da3fee51ecb0727a738e77f760c3f99d23e714286080eeb97e31132",
        "urls": [
          "bzz-raw://3fe5c98c93ea072acd1f5412542236e5e4e6101382f452bbff9b8d8a213a56b4",
          "dweb:/ipfs/Qmc1PthuPTZyL1FWXtL9TvXNWiSLcWzim317AUucnCeqoe"
        ],
        "license": "MIT"
      },
      "contracts/events/ExecutionHubEvents.sol": {
        "keccak256": "0x17d62c5bc175a1bd90a12d78c25a28ef196f79f4c22ecd16822ee3bf347263d9",
        "urls": [
          "bzz-raw://664fe255227dbc3958404e4019559038281f8bebdb7c0ee3f36abeb82ffbfbf0",
          "dweb:/ipfs/QmbvQ4ms13D8xHSamrnhtJ1qZtRuEjwLT2kcNf34vA1h9L"
        ],
        "license": "MIT"
      },
      "contracts/events/GasOracleEvents.sol": {
        "keccak256": "0x35e5be60662b567f78c3e62e217237e73fe3008453723a788eec0a48df7527f8",
        "urls": [
          "bzz-raw://e148158a9d87d7cb071b5772427fada2e89e7eb39227768877c3a830a8668477",
          "dweb:/ipfs/QmVyjz9yNAsPVbC8rDNjd6pAXYbXq2WBWSLrQwf9U5jzkd"
        ],
        "license": "MIT"
      },
      "contracts/events/InboxEvents.sol": {
        "keccak256": "0x4e834b480f9fba7e803fdce5e22f55a2c4e78a8198a0e34e2bb741e9c998299b",
        "urls": [
          "bzz-raw://56c46f45e8e395fae57202449cf8d0786416360906447c400f740cacefd90425",
          "dweb:/ipfs/QmWZLaJAz1ZJuoas3x1NhDtGyAVWCHuzbA8bASXV5Va4Y3"
        ],
        "license": "MIT"
      },
      "contracts/events/OriginEvents.sol": {
        "keccak256": "0xabbd42433e30a5fcfdf1c60f1a76fcf3872059f6bdcae60f8ec0c14545f8ce20",
        "urls": [
          "bzz-raw://348e64e45921c8b4b5b290ad106ba0a14d85776481e5f4e3f20430883d04f118",
          "dweb:/ipfs/QmZEbt1JtxALE42XPjAuicwMt5GH14hHojEixwncuUkEu1"
        ],
        "license": "MIT"
      },
      "contracts/events/SnapshotHubEvents.sol": {
        "keccak256": "0xc0d09b33210770dd671dcbef8183768346b3eacf38d0801f4629e599424b4011",
        "urls": [
          "bzz-raw://90ae826aa534c1631d88e114ee25cbadd01a16661f1b6ad4451034a62232260b",
          "dweb:/ipfs/QmQjuw6dDegAULhC8stnvUGziNKupioWQoNqNxXSSAMVaj"
        ],
        "license": "MIT"
      },
      "contracts/events/StateHubEvents.sol": {
        "keccak256": "0x6c4a2f6a342d579b561de4a4027bef31a7d0eec04e495373fab36f109069cf0f",
        "urls": [
          "bzz-raw://56db1ec51d7063105fbac6022feb4c24aed863fea534af26fa18d4059b99038a",
          "dweb:/ipfs/Qmb8kFvmURYrSfjhtkrBcQvPUprdf4xN8w3wQhPsoXWat9"
        ],
        "license": "MIT"
      },
      "contracts/events/StatementInboxEvents.sol": {
        "keccak256": "0x31b50f36f0c2060313ea7a8b6564057449c9a957a77d202c5ec3c02623c20511",
        "urls": [
          "bzz-raw://d794adac1f7491f684964233bb3d5152402555dfe20743bb8c8ca1a61c17a5d8",
          "dweb:/ipfs/QmZbj2btws52KkpHy8maks6xkqL9nq76LZx8ey2QKmxeFS"
        ],
        "license": "MIT"
      },
      "contracts/events/SummitEvents.sol": {
        "keccak256": "0xe5069b8a4681622830714d8650130aea401c7228d8fe88e46e28466c08835f91",
        "urls": [
          "bzz-raw://373a684ee42c029db52944caa695356a2208eba16acb4bbac0fa8d7905b6240b",
          "dweb:/ipfs/QmZPSeugLqsvHGwDtpAbYcC3qfqowMn19nrYCuWJQmi5pa"
        ],
        "license": "MIT"
      },
      "contracts/hubs/ExecutionHub.sol": {
        "keccak256": "0xada1930cd93a0725e8216e63c0938057ed915d4ae6695b4855b0ffdc639eed08",
        "urls": [
          "bzz-raw://bb8453b4e9972404e71bab8ea98405fb169415067d96df2de2a4cb19227ad635",
          "dweb:/ipfs/QmXco9EWusCGeYCCipdoopaFZRxyL8QkPHiWVmoL3VCCUd"
        ],
        "license": "MIT"
      },
      "contracts/hubs/SnapshotHub.sol": {
        "keccak256": "0x0c73996b678e260b2f969dab28642fbb878723fda3a0e170530a83433861776b",
        "urls": [
          "bzz-raw://e5cc5f0f933f0360df2bc3cf4cfc6dcd2475e6bb5e2519076a02cde983180e5b",
          "dweb:/ipfs/QmS9PdwXda3n6hnSQn7uM9GkjCg8k7rV885BqbmvPfzi8m"
        ],
        "license": "MIT"
      },
      "contracts/hubs/StateHub.sol": {
        "keccak256": "0xd99e84d973eff6e1eac05a2defe6d1b77879147e1957c559d4d323e12c9ac5d9",
        "urls": [
          "bzz-raw://b53ba0c8c38e18f91c364c463e5768f3bdf362440560c0b000a165aeaf73593c",
          "dweb:/ipfs/QmTFcBXPdSzTehG8m5Fzid8YfcqzocoYx1aa8fBxsPizwE"
        ],
        "license": "MIT"
      },
      "contracts/inbox/Inbox.sol": {
        "keccak256": "0x8e1103df8745e18d3482db5e3ca0a311fb74e51cb5c0ba33f00aefa60537e44f",
        "urls": [
          "bzz-raw://da9b996949c79204e7f4e1a32aaf3e18b0c551e4d03d5619054b25d1827c4851",
          "dweb:/ipfs/QmQ7HxVf2oAvzD7G7ZvSr72YTZiowWaD5jnnsfFsCBzXbn"
        ],
        "license": "MIT"
      },
      "contracts/inbox/LightInbox.sol": {
        "keccak256": "0xe51f525afc5e8bd2c87bbd72b3e3dbb3eec33de58a41910a547805b2fc41e11d",
        "urls": [
          "bzz-raw://2a547051a6f6eb585d297190cae5c86aa95499efb2aa64657faba6dfb70bb74a",
          "dweb:/ipfs/QmXysrcjZgybcUUe9pn1FQm3x21DMdeHzHEREFvHAHpma3"
        ],
        "license": "MIT"
      },
      "contracts/inbox/StatementInbox.sol": {
        "keccak256": "0x097c1578b0f71f3a090bd0f9340e55e59056944351cf82f55eda43f5d01cdfd9",
        "urls": [
          "bzz-raw://4e6182a19c0f82a755817b1ee6de921703b36cf9f2ad418a7293f4b6917ac375",
          "dweb:/ipfs/QmYNxEDbZ6VAitzbk1kHFKcaaZ5EtCZiyzuMyL8Hu3SxBX"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IAgentManager.sol": {
        "keccak256": "0xc6fded8bc39cdb24e2bc038ba9b0ae168ad42fb15ed9d5883b89940b4e970a10",
        "urls": [
          "bzz-raw://898f25a9d1f375ab7e5dc7cd791263934b50d3b0a44dc29a4c914578a1b06339",
          "dweb:/ipfs/QmXi3CVhvWpGxVvmw4n7UvEoX2bD2ZD2rg4oZhYETYWJ3a"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IAgentSecured.sol": {
        "keccak256": "0x9a7efecf8fe37cc8245e3b0e3f5d6d6ee056cdd97ccb5631ff6347bdfc9fc889",
        "urls": [
          "bzz-raw://7877d223162a76d3fe75490069719b3a4f14cd66fc42bfa915f2813390b7d2aa",
          "dweb:/ipfs/QmZhE1rnffA9bbtkNAwVk6iitMPk14gHbK56mdeHQEPhxj"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IExecutionHub.sol": {
        "keccak256": "0x98f6ff39ecb926b480474d122350d753ca18358ca4d18d36d1850ec7af7ae6f0",
        "urls": [
          "bzz-raw://36485341a0ed70b0f151b258124f6a0db003f5d37af22b8bea65b8d5249a252d",
          "dweb:/ipfs/QmfBEDFSGwnSjTyv2AZuuUDjrqWRvacyCx46dXegioWMDL"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IMessageRecipient.sol": {
        "keccak256": "0x342bc1cf70e5a37e6a14d871297e845120608412d1be5dcd2657fc0dae5ebbde",
        "urls": [
          "bzz-raw://6d8b93ab4b2d4e85b0dcb62cf0beeaa0289aebc7b3dbc3fb9cad9e82639cbc5e",
          "dweb:/ipfs/QmRHr2Dqr6tcFWZ7osKisaGg6QZtvwGrncchYjJ1UYWWVx"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ISnapshotHub.sol": {
        "keccak256": "0x3640a263eb4af25646250affc0fe8c666df03e11fa36da4823363b46a878160b",
        "urls": [
          "bzz-raw://fafb6b8f21c1a392b8d2f1f0a380bfe48bef18862f9519f69fe23e29e03b55ad",
          "dweb:/ipfs/Qmakg3WLAB1r7SyVnP8Db2ofzsV4RmsPDzk6wf3PS35kcX"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStateHub.sol": {
        "keccak256": "0x26cf1842739cb65203ed5f243879b11939d2e77c46cc629349f016d667c003f1",
        "urls": [
          "bzz-raw://d8f9959d5230d5b0cac7bc3171cee2cfd95ab548bbcff0da3b06d02a02f61f31",
          "dweb:/ipfs/QmezRqMJF1MfxxU8dzXYFVteBTPq4yuaMVZLNVTMayUzuV"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStatementInbox.sol": {
        "keccak256": "0x99c93edd056d33d33ce57ae7d6d17328b88e94fe971c4e9d23d2fceaa9f1e41c",
        "urls": [
          "bzz-raw://76a2cf74f7a24ab3c669efab5372dff18a29463504b09a0d3dde4b4184a2eff3",
          "dweb:/ipfs/Qmb1sy2izNESmgS8FVkFHMXpWc2UM3unQeKMghFYCHNfn4"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceBondingManager.sol": {
        "keccak256": "0x0c94cb27bd86eb1f0a48bf9ae15f747f4d0cc9c3e210a7eb75f255d44ccb3ec6",
        "urls": [
          "bzz-raw://3ca990b2704379039a58af30ef2e4f8db6165d8634cb77bcf2c34a1f3c09eb42",
          "dweb:/ipfs/Qmb5aNdpJrqry3o87KWwYf23kT691xf7GujzmQFy2S3sop"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceDestination.sol": {
        "keccak256": "0x708371d239580f8e6dc44e790fd32f47e074cbfb8ae9e75609adbc0de303678c",
        "urls": [
          "bzz-raw://e5061c85c3779304f5c3919d2b1bc6620d1029a4ead7186c3f3f5b409a9bd855",
          "dweb:/ipfs/QmW4Hrz2NGMCRV2Rqv22G4xArsR4jUZtNr1garSR8AZud6"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceGasOracle.sol": {
        "keccak256": "0xe4ee548d373c708fa212b868aff025e8e3107fb8c94b18c4839dd797d95e2355",
        "urls": [
          "bzz-raw://9543d7d9c85e9487c0bb7ca0d1b11686a835a5fa4b84e9d48c49c799e615541d",
          "dweb:/ipfs/QmWykziCJPVCFPp7U74AtZ11s7jgDK6XRARwx8cQA1Yaj7"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceInbox.sol": {
        "keccak256": "0x86dbe24a32f5d09a9620f37f9af69710ba54703edd66ace3ba90e8335ef77246",
        "urls": [
          "bzz-raw://fb9d7a21b3108cc86013aef80ba9a7e4a91aa8af6dd71aca5d47d26e85d213b0",
          "dweb:/ipfs/QmS2om4PmNgHJkVP92hwoHvBngH9HwmwZJnVMHhqeVj5ZY"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceLightInbox.sol": {
        "keccak256": "0xb8edda08e49ec7602c201292ddf9da6b9ea2fd0db9575b2d52c8e3f482f5cfec",
        "urls": [
          "bzz-raw://6d515e2f48537cdbb89efed74cae919febd10df2676f0aff143fac906f2c7ca4",
          "dweb:/ipfs/Qmc2XxY9ghXitxQMTvpSNsCMp65J5dbmYoybk9YMW3GxgW"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceLightManager.sol": {
        "keccak256": "0xfd56fe81fd6776faae469d615e66d71387512fac1997157a1dd3f80ada8e7dac",
        "urls": [
          "bzz-raw://e1ef5b8bbdc189ce2148cc74f61f6eb9ca8bdcbf53ac84948ec72953ed4433d2",
          "dweb:/ipfs/Qmbe1Qm94avKV2mw1Yj33SZ698ykCA8vEpZhqjL9o4oqev"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceOrigin.sol": {
        "keccak256": "0xe2c7feb15991348e274a413ee7e24c4cc4e2225c851924955ad2f025c8b5c42f",
        "urls": [
          "bzz-raw://314cdd9daf29e9d6ed288e02be302487cce6c0ca89805e5e8f6d78fb150c6ea6",
          "dweb:/ipfs/QmP6vY22Cpf45a3eDR6hPBnDDqCPcu4cRXJhH7W41ohkD6"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceSummit.sol": {
        "keccak256": "0xeb60c7097b7e8a82e30e4e4e7788810d029a0bb013eb71d0e47d062abeb14494",
        "urls": [
          "bzz-raw://cc35dbea34e34c513507575b9189806412e6e0d9dd6c7c34c5e598a89c58ed43",
          "dweb:/ipfs/QmTe6U1pB7AQaDiRdQRGktx96BWkGQdb8vLqtSpqCu3XDK"
        ],
        "license": "MIT"
      },
      "contracts/libs/Constants.sol": {
        "keccak256": "0x9ead9581411ac7f702ccba26e3f478610f8c9c785ec3f96f3d9324d162177c2c",
        "urls": [
          "bzz-raw://cba4a834737651bee39e2abca02d59e676cd149439d21182ab6e4320d5e61279",
          "dweb:/ipfs/QmS2K5LKspFZPKuedWoaqywUw6v1nH9xdHa35dN8J9jDEi"
        ],
        "license": "MIT"
      },
      "contracts/libs/Errors.sol": {
        "keccak256": "0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011",
        "urls": [
          "bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b",
          "dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB"
        ],
        "license": "MIT"
      },
      "contracts/libs/Structures.sol": {
        "keccak256": "0x3eaa63f5d9aac514328111e8fdd037dc6fdb18af7541a8287deeacd2e44f7137",
        "urls": [
          "bzz-raw://633619910c74a0685ef2993a2e7cc44088929121a15c8a9fc26c9bbadffbda71",
          "dweb:/ipfs/QmZceJv6UntiMWW4JZHbmytLsqXshbuav8yoiritksvqqy"
        ],
        "license": "MIT"
      },
      "contracts/libs/TypeCasts.sol": {
        "keccak256": "0x328bf53c2642c51261d7320647d7603bcf17e67eb8828cb7991964c384ec7bb9",
        "urls": [
          "bzz-raw://bb40201b32d1bc37873d57bd1e18984e44506b74272b204531d0aaa36ed19c10",
          "dweb:/ipfs/QmPySs43CVm1Vb9UzytQ4R9t4QkbqPCv8TNpZnD5MRwCXm"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Attestation.sol": {
        "keccak256": "0x83b58e2d80cc7139b8996c51c5e9015f34e833e73b92036b53a1af6641e2b699",
        "urls": [
          "bzz-raw://1a097c82542ba977de931c6331a9b01a39ef2e46b8916414a6f4f550bc59c113",
          "dweb:/ipfs/QmYRHMoPXzrnx86rZnHAEiFxqM5poEs6wyZinLLTEfwZH3"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/BaseMessage.sol": {
        "keccak256": "0x6f625ee64c2abb64fe5e7645eb4ac449e4a743cf5c434de70b24b47522a2c579",
        "urls": [
          "bzz-raw://0a29cb57889c10b4cc601abe0f65529f1829354a276437ecb7ce387a654fb671",
          "dweb:/ipfs/QmRYA9HJAdKaVhrvDdaCwdR5DvCYy7yPQGVJ4a9kUCAxaA"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/ByteString.sol": {
        "keccak256": "0x99a2d8a7d93c1ce5063da6631347189cffb95d977cc1683c8bc2d9529b501d66",
        "urls": [
          "bzz-raw://c627819681a668117cbf3633700ed36b63942a3ea8d96db65211febe048bb8bb",
          "dweb:/ipfs/QmSdhu6BDD6Tk17zD2JcmYwYVEnnoeuh9UFWfUkVW5KKvL"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/MemView.sol": {
        "keccak256": "0x95dd48e50e353b59fadce29f22f02629c91bd3b5e07c0efa588bd7c808536587",
        "urls": [
          "bzz-raw://4347457c5338192aca52c237c7f588d15a4f541482cd44b0632c59f36f9558eb",
          "dweb:/ipfs/QmXn1sKY7nVNrgKtbtE9PaMHFKBadyg73fs2jhw4Navyb1"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Message.sol": {
        "keccak256": "0x206a96eb35a7015116bfc585b30d34bd5cf151761ded37b8a2a36dd74a9ba99c",
        "urls": [
          "bzz-raw://e12ebb3152e1c1dc2aed3c88cb17f54d9abc2a157215c2628fa3c4ac161686cf",
          "dweb:/ipfs/QmbU6h7KEanE7Pt5UXN2WV5SQwWjziCwqBL5RLKAUJHKci"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Receipt.sol": {
        "keccak256": "0x009e8cfffa4806d1a0a326a31350ead092c9cd22105d4890c86bf93d20c7824d",
        "urls": [
          "bzz-raw://aa9905170f86e4e2d9b62e9fabaab36381398da14f001e0b9bb98c31c174a48e",
          "dweb:/ipfs/QmYpHjdY2yf3w6kFi9urUTyrMyVZBBsCGGEkE1kyTnXqVn"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Snapshot.sol": {
        "keccak256": "0x5df6aa04b1cbb65e410c7f1a02787e0e11dbcdb5cde18ae50d435029c27c1ce5",
        "urls": [
          "bzz-raw://d2e19b5c6778338b7e8e9c8ef82738797d8955d37884c7db70d7cdea43329910",
          "dweb:/ipfs/Qma1cRGHqRM3tkh5JyzR2Td6iKKST2HapTygBwVNTRJJZD"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/State.sol": {
        "keccak256": "0x3997f3a820110b3bce6f87ea8df3e1f8b006d1ac45efff1dc2f8873f8bbfa5af",
        "urls": [
          "bzz-raw://bf973a3633546dfff75b550673b4a680b7fab48d7fc8923157983a4fde3d5da4",
          "dweb:/ipfs/QmZ8NNwcYaqVxtar8g5MH5mqDXXuMTQLe6vi7zYGswFA3N"
        ],
        "license": "MIT"
      },
      "contracts/libs/merkle/MerkleMath.sol": {
        "keccak256": "0xbd13c07bdc40b80f56c7d75e3f31b6c4a85a78d444b760604a5b71083d14925c",
        "urls": [
          "bzz-raw://3162b491e4e216c0f2d143ce3baab4cf9e2a8b1b42466256a5d5b1f8b0385507",
          "dweb:/ipfs/QmYnDSZyxiGHfmB8Fx46zh1LZe3aCdVaKzpaQuD9piTc7u"
        ],
        "license": "MIT"
      },
      "contracts/libs/merkle/MerkleTree.sol": {
        "keccak256": "0xdc0a58835c6296f70fca199455adf94059f2ef709e4e3af05c3fa97e74b81fb0",
        "urls": [
          "bzz-raw://62e769893052a89a57db12445481dd56ffdd758aa1795d94b17c3357ce799de1",
          "dweb:/ipfs/QmNnfsHhN5UvQHQSW1G6FUQZZBJEZVrAsBYGdQ5GkPbU1c"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/GasData.sol": {
        "keccak256": "0x2007fd4b97cf33bfe4aa7dc6ac887af87b4010ec9834636b4dd5685582ac26cb",
        "urls": [
          "bzz-raw://8b54ca8b659d63ef7138c5b3b243190ca19b1e893b7b49dee1f8790d55b9e691",
          "dweb:/ipfs/Qmc2FGb16uosZ5kvyEK2onpWVPvWeE9X72xNWeJw8CbweD"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Header.sol": {
        "keccak256": "0x6a2030f6d08075f91336466c3fe4bd63f2760dcd42554856357af8024fd55344",
        "urls": [
          "bzz-raw://e1a1c8f6240f897c62cdc09fab57fc9eeea8072efbc8d101bd7e40b8eea272c9",
          "dweb:/ipfs/QmYrFA3fupKhW71k6yLkQsojPJt4Fcv4uH46hNvYYHcDsy"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Number.sol": {
        "keccak256": "0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96",
        "urls": [
          "bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd",
          "dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Request.sol": {
        "keccak256": "0xecd4427fe7285d1d5663ea019a66ebb04d3f495c0be28a14043c99a0d9a90689",
        "urls": [
          "bzz-raw://55e800c307070d6497031b90157d917dcabd5f93d342081be8d20ad3c80df429",
          "dweb:/ipfs/QmU8oza8MeWDbG9xfPaPVoj4Z1rKtvQ7pA3Z7CuYyGSuY6"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Tips.sol": {
        "keccak256": "0x2186d854149349ff689a8356c7f387d134f59fa4a97aed7b43c9e25f46661b0d",
        "urls": [
          "bzz-raw://ff15d61f2c9b26e6ef33457aed4a2d9ed61726e2a746d3e0a7e68eb6cd3d63a1",
          "dweb:/ipfs/QmUeiiTAjPmuFhLfzDMqZ6DyvQmEYhsKo9XArHSrMvjYKL"
        ],
        "license": "MIT"
      },
      "contracts/manager/AgentManager.sol": {
        "keccak256": "0x6b6bb9d62e624a5efa1d3bfbf0571a117ee48bbbb3868ebb6f8ff58071f6d475",
        "urls": [
          "bzz-raw://ac93ed3f2c169c0297dd70f37e72595799738b4879131be12292dea8f5625663",
          "dweb:/ipfs/QmNwi7wXMaxg4kg4RxsUrxhz4jLocT7XrVyvQ2dfEAHqJi"
        ],
        "license": "MIT"
      },
      "contracts/manager/BondingManager.sol": {
        "keccak256": "0x83dd80c895a8c0ce0cae3d4c6ada58d9c0956e80c959d8a9fb23692a4ab9826b",
        "urls": [
          "bzz-raw://33843db398ea33e0cb75a8e43a9c9e68be5284dea7cbc71698252fba30cd0234",
          "dweb:/ipfs/QmXiY7s4mQHTtV5B8bbf1s7TobQ22aPxf9NXVKjbL9dBcW"
        ],
        "license": "MIT"
      },
      "contracts/manager/LightManager.sol": {
        "keccak256": "0x174147269ca22fbaa91accd50de05a8190e11b2d6847323a4ec3a7458e8c2cda",
        "urls": [
          "bzz-raw://1f10c56e793c383ef84f3bd10b499b76dcf1a5b59b5cc5efad1747cde7fb2d5b",
          "dweb:/ipfs/QmY6PaFz899oCoap5Pf3ng7iwmzREuTD9c2FAoRUFv6Y1b"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x027d1aa07f6a45546d6990186ee6ab2ccd1b654fbbef326145e9b6e125feaabc",
        "urls": [
          "bzz-raw://85c57fcb94bf64d583115157e4c89cc4ad58ff1102677613d7ef70263d98d270",
          "dweb:/ipfs/QmbASKUPs9pRck3j4soibhgGJ2ghr38vzdaSrF5Ae2xyqQ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34",
        "urls": [
          "bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7",
          "dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba",
        "urls": [
          "bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8",
          "dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d",
        "urls": [
          "bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f",
          "dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5",
        "urls": [
          "bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900",
          "dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434",
        "urls": [
          "bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1",
          "dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol": {
        "keccak256": "0x4859ffd6dd69382a1462930c00b6e394007da80e78e510f56930271034737bf2",
        "urls": [
          "bzz-raw://0497f84a7fdfafac2046d23b456a05454365d38bb59883b7d8ce398a26704f4f",
          "dweb:/ipfs/QmZSXpAvoXWkxQ4U2GJ4juWvmn4Fd7zeH9wXZq6wKUbfi6"
        ],
        "license": "MIT"
      },
      "test/harnesses/client/ReentrantApp.t.sol": {
        "keccak256": "0xe0d7929d412e60b1af9a439ea7c180724d4efc21aa9bb7934fb57e8c01fab8c0",
        "urls": [
          "bzz-raw://b5a3c7446e62c4222c24ec94a9596c2395e06db3cab5379d5a799484461dd4e1",
          "dweb:/ipfs/QmZg2PxxX6bw3vbZ9qu8Z5a4DmaTpBzQhWigDm4wahYRNZ"
        ],
        "license": "MIT"
      },
      "test/harnesses/client/RevertingApp.t.sol": {
        "keccak256": "0x05502f8740b3c9d11552e2d200c3b702e5bea00cfdc024731926d2ae41a208cc",
        "urls": [
          "bzz-raw://eb4dcf370473255a61d887982fc1f43014914572ae97b26b817801517808d1e0",
          "dweb:/ipfs/QmVXRqGXK1ZftdqBHug89Qo6XQhtjtSNhCvwAp5P2uYLRi"
        ],
        "license": "MIT"
      },
      "test/harnesses/events/BaseClientHarnessEvents.t.sol": {
        "keccak256": "0xbbe298578bcd74722a758cb405679cd3e5433ded2af5dc693da77593fcbba306",
        "urls": [
          "bzz-raw://593bb5eebb02635cccff84277e60d92b71625d945cf5ceb5e399b488c87a8499",
          "dweb:/ipfs/QmeZGgasXRksPxiz8NHR3advUuzA3wbdd9S2d6t7gVkzK2"
        ],
        "license": "MIT"
      },
      "test/harnesses/manager/AgentManagerHarness.t.sol": {
        "keccak256": "0x6ad504f142be190f4b3fa158162445fb56d29443022041f2c17eb485be4f886b",
        "urls": [
          "bzz-raw://365788b0d405bacced74fda6f4ab0335e48496a3ced3ae4a4b6487983c5723d3",
          "dweb:/ipfs/QmQuogm7HhTZzkGPzHtMshocskqdga4T11FAVx6dVmueru"
        ],
        "license": "MIT"
      },
      "test/harnesses/manager/BondingManagerHarness.t.sol": {
        "keccak256": "0x22694e0b72ad3ce20bb8280b9906e0d41b2b9a6ebb0a2ed7d96cd0beadeb0210",
        "urls": [
          "bzz-raw://98721c934e60a1b4ae0567868330636b7caad0191939526d21fb4c7f06674bd3",
          "dweb:/ipfs/QmRjWtbHxQgBWCHG3CjZqpBEFbd9MgCBff6qmwT6xYdjBL"
        ],
        "license": "MIT"
      },
      "test/harnesses/manager/LightManagerHarness.t.sol": {
        "keccak256": "0x279a395b190307c17eb1312425b4956a15fcff34c2e98e988167e2fa42d0c126",
        "urls": [
          "bzz-raw://c9f7c0bfadefe1c73b68d1bfe4506cb6a4d9314a28988d5f4e4244be76d682b9",
          "dweb:/ipfs/QmXqNw2NXYHPUSbfS6GwJ39TjJrg45xaU98mXXoq2q23Xh"
        ],
        "license": "MIT"
      },
      "test/mocks/DestinationMock.t.sol": {
        "keccak256": "0x6db0ce04d27bed72bef2a2a04266cd238250bc6efbcac0373b2649426bdd3da8",
        "urls": [
          "bzz-raw://8e291232f9e3fd59426cd9e16665c41feb66f747866689de967669702c19a3c7",
          "dweb:/ipfs/QmXR2ovSN5u7NR7E4YMdjuBVEvh1b13Can5JDEBW1zkefn"
        ],
        "license": "MIT"
      },
      "test/mocks/GasOracleMock.t.sol": {
        "keccak256": "0x0fe7b93a6e2ae788ca6b159ba34f965006c13a747ba88126f58e27efbf82232a",
        "urls": [
          "bzz-raw://43aaf6d9eb39c16d5fc35a42a284235e483a7a222d01ef858cb61391c80f182c",
          "dweb:/ipfs/QmXYKcXQsBFfTH9GYfQXG5qnc8zoUhkjSK7jpFqVuEADUc"
        ],
        "license": "MIT"
      },
      "test/mocks/OriginMock.t.sol": {
        "keccak256": "0x88397a23f82c0e21324d3ef4cf90114f3b73aa9ed822f5d0baa68d87a7824365",
        "urls": [
          "bzz-raw://ca4ffe30614e8d4e39d4713cc176cae2113e768bf34a543d8cb019c6ec1eb3e0",
          "dweb:/ipfs/QmWmFroUNtnDD7BzsjmTCxpfXhM36dTieE5FB5WFThAR2L"
        ],
        "license": "MIT"
      },
      "test/mocks/SummitMock.t.sol": {
        "keccak256": "0x07ab882390295f653c026dfe3380d04437c9ac33e2e6a4dca15198fdfb19210b",
        "urls": [
          "bzz-raw://15bd4ed09addb35c059aab2d7fb69c1484f4f7d4f5fe8bd13f621c406b9529da",
          "dweb:/ipfs/Qmdq9jUHneJZXPYJQtYidiDbxvqHBi3Cy489TfUG3q4jFw"
        ],
        "license": "MIT"
      },
      "test/mocks/base/AgentSecuredMock.t.sol": {
        "keccak256": "0x7c74b961b7d06d65138f35d638b68be02046565479f09606bf099da0093eba36",
        "urls": [
          "bzz-raw://5faa5048684a4685809fec66813899f0c55f47ec27b39c7b0440c2083cd34e4c",
          "dweb:/ipfs/QmfL3CxnjPXHnD137ERbyLMTuAfJsJa3k7yft7VqYGdvqf"
        ],
        "license": "MIT"
      },
      "test/mocks/base/BaseMock.t.sol": {
        "keccak256": "0x5d0ddef55a6d63ce25175fd2cefc00b9030e8f7247600220e67a33c3982b9697",
        "urls": [
          "bzz-raw://96928ffa43cb650c3c594fa2d1459f2f44eea1f52fb988011a638e80b255d986",
          "dweb:/ipfs/QmXpFxAzvt9jaD4BsKGLJnBdHF1m4uvfB1iKt94mr3ryCJ"
        ],
        "license": "MIT"
      },
      "test/mocks/client/MessageRecipientMock.t.sol": {
        "keccak256": "0x48a0f852e43b7c5eab716fd921c3693dc46274320c1bc1c78602e7fc7772b575",
        "urls": [
          "bzz-raw://16fd1ae4649a22a03aa72f879d0e650456775e3a339b05d5b90333c07e932324",
          "dweb:/ipfs/QmeVXj5KRDLbmZ8Q22YXbekLQrWP3U7GJxykwVkkyvDmMn"
        ],
        "license": "MIT"
      },
      "test/mocks/hubs/ExecutionHubMock.t.sol": {
        "keccak256": "0x176e769388b8a77fd8db5dada6ba3814970b7800d3d52fd981b5cf3d8e308e88",
        "urls": [
          "bzz-raw://04be69b573c225a37a734464e8bab6524fb2bd80c120268288706655ca0bf339",
          "dweb:/ipfs/Qmaa36Cg2R4CZweAoNyrpzQT1RukXZi9zS4Jgx9MRH8dK3"
        ],
        "license": "MIT"
      },
      "test/mocks/hubs/SnapshotHubMock.t.sol": {
        "keccak256": "0x3bd89d154ad63a5bbf3d79180bbbb5dd37ac602ebe7230749a269994cd0e0252",
        "urls": [
          "bzz-raw://e5d2a54f6f85a4463e89f7283c6b19b47a3bf710f24fb1ca8af929a1d0d7b961",
          "dweb:/ipfs/QmTaPz6oEzA3EgHoetvgZhqSR4pXPXbj4bcybnJ9qxNkj2"
        ],
        "license": "MIT"
      },
      "test/mocks/hubs/StateHubMock.t.sol": {
        "keccak256": "0x04491dc0d2d8847c6ad54969d4a2d66b6df88fd357b2bc546407021ab23a9884",
        "urls": [
          "bzz-raw://ca230a0bf6683fbe7420636c0a6afc0f64c3bec92a268ac3823a6dd668f48ee4",
          "dweb:/ipfs/QmY72pu3ACw9fQw785g7u61gg4UG6hUqUJSMhH1aK6XSmf"
        ],
        "license": "MIT"
      },
      "test/suite/Summit.t.sol": {
        "keccak256": "0xe4b34af8c821bf3464c5994eb066b12c98650f534828d746d6a087d5b8f3481e",
        "urls": [
          "bzz-raw://d214d2653bcf654db0ac0020307bde111e46f8eace822a5e2c3b9d43968a8238",
          "dweb:/ipfs/QmZ87cMNA93oYPDvF8SThyoDH7mGGuwMEyuZ76Lf4P8Air"
        ],
        "license": "MIT"
      },
      "test/suite/base/AgentSecured.t.sol": {
        "keccak256": "0x3004e7987885e481cd41e8311670aed9f65831be56790daeefedd4acac3a006a",
        "urls": [
          "bzz-raw://bc100be90a74e30e482e914e0b971a8d623c3319472b2d30f3d5533a2f3146c1",
          "dweb:/ipfs/QmbwHfYhLLE9GUaPa4PqfxTvJmxEE5y5idwkSsu5Qm3o4g"
        ],
        "license": "MIT"
      },
      "test/suite/base/MessagingBase.t.sol": {
        "keccak256": "0x8caa45de5a6fef979802abf7bcf91c5a8334ea60c913cd946ddd806abfa44d7b",
        "urls": [
          "bzz-raw://da1dee563f8b5478620c537b411a80ec0f1c1ec8497914529d7e81174d7f5bac",
          "dweb:/ipfs/QmYEWtKSF9LH2W9CJZ9o7UnCjB8bdNJoAmyAv6x6s752Rd"
        ],
        "license": "MIT"
      },
      "test/suite/hubs/ExecutionHub.t.sol": {
        "keccak256": "0x85fc2d1e573932df834aa56ebf643de303012943aeac9a690bf6e86e076cecf3",
        "urls": [
          "bzz-raw://e4077c01a0e5946f81b097c2787338436b9056725f13f280f86a862fc1c9964a",
          "dweb:/ipfs/QmViNsvVHeBaRDMBZqPKHxC3cRW8txv8S2FZukowEED7rf"
        ],
        "license": "MIT"
      },
      "test/utils/SynapseAgents.t.sol": {
        "keccak256": "0x6129bc8647f277f585756fd3b3190112d35c4661620819e0ac65b204322a38cd",
        "urls": [
          "bzz-raw://11dad7bdffc56abaa2650250df1ab4d2ea174be26cc5675f203fc37bc81ffee2",
          "dweb:/ipfs/QmcqcQEgen592NBREMyiBtAr6m6hR13Fo6pv9CU9bVnsaK"
        ],
        "license": "MIT"
      },
      "test/utils/SynapseProofs.t.sol": {
        "keccak256": "0x09a562b12e58384e5e775ffc61f980a7873380d3b1b8004f023ec6f80f80565a",
        "urls": [
          "bzz-raw://25d6d84ff9ca8bb50fbb1e7059ec982875bc50f2a643c67df11f7fcbc1cd6827",
          "dweb:/ipfs/QmaR4K3i26kwxJnDxUmr4EioxJMpK6Q3vhTWSKoQ3FwGuj"
        ],
        "license": "MIT"
      },
      "test/utils/SynapseTest.t.sol": {
        "keccak256": "0xd52982be8313ed6d06d80d620e6a1b7d5c0bbbaa33beedf91bc8992f51dc435d",
        "urls": [
          "bzz-raw://10ea2f4783e32c427729ed7799a76f778c1c3028a184cb72133a7cf2a850705a",
          "dweb:/ipfs/QmP7mw9DvUpepV3wWF9FRgqojj6BmHQwWs2oMtqboCy2uR"
        ],
        "license": "MIT"
      },
      "test/utils/SynapseTestConstants.t.sol": {
        "keccak256": "0x24b5c4c4f8e0de51b137e0b922875be258282ddd33580da8cf939bef0b552a79",
        "urls": [
          "bzz-raw://12ea15ff24cdcacc3c31382bd04c530287d49dc841f7013e9810133b4f91593e",
          "dweb:/ipfs/QmbBd33fFmSmTqPXks8knXCXZHpaYvUSjebtmFGrU3YE5A"
        ],
        "license": "MIT"
      },
      "test/utils/SynapseUtilities.t.sol": {
        "keccak256": "0x8d08d6a579173fe927decca6fbeaa743e9455051837799f3be15c052420b7112",
        "urls": [
          "bzz-raw://5662d8d58cac1c6e0688ce8faee3b2085402e4d0ce0cbc38596bdaafa75e1b51",
          "dweb:/ipfs/QmU9b5UQeYndKQAVprdab994RuG1WW8Uz7sg38uadyN2gq"
        ],
        "license": "MIT"
      },
      "test/utils/events/ProductionEvents.t.sol": {
        "keccak256": "0x8f7b545fbbe599d21f5154706c1f7ad1539566738bcf2732fb5cd793555aa108",
        "urls": [
          "bzz-raw://6c2e08e22817a04013c74e949a944e81e8b5d6196d4203d08b3e2221f0778bcb",
          "dweb:/ipfs/QmUfxoBF3XzWk8LgKg2Xr5AvuzqaLL7YUz5hrEZCtJMeMA"
        ],
        "license": "MIT"
      },
      "test/utils/events/SuiteEvents.t.sol": {
        "keccak256": "0x2283ce345a470e46be1f1803da9a9e17c2896428fe9aef871c1bb38012403ae3",
        "urls": [
          "bzz-raw://b8083cc6bde1c1e638096347a89e7db037bc3dc3e179fe249bbb5590dd83198c",
          "dweb:/ipfs/QmNZp2dcYPgkV3RR14gkY9JeevcW3kHvqbymB8aHnQsVrW"
        ],
        "license": "MIT"
      },
      "test/utils/libs/FakeIt.t.sol": {
        "keccak256": "0xfcb5b38ca3d693609ef261aea084bad8dae3ade0ea969939699e073ceb0125ef",
        "urls": [
          "bzz-raw://f17b2734c388ec61f5b855f32f8c650724a8cafc74dec451a1edfe633380a6ad",
          "dweb:/ipfs/QmNgFGrSywpPxXMnMP5NNAxBj6jPu9f29X8zv3XjpTvpVU"
        ],
        "license": "MIT"
      },
      "test/utils/libs/Random.t.sol": {
        "keccak256": "0x5d9cf91fac61f77e6fea09ca36191a8c162ceccd30e9fed552b65486c580a2b1",
        "urls": [
          "bzz-raw://1574478dbe9f571c04b6cd7cd812ae024aeb885599d6f440b4b7dfb9b708f671",
          "dweb:/ipfs/QmddeBwFUigpfwm2wBzKWuarDPzgMeMhpQU3Sx7uxatHAL"
        ],
        "license": "MIT"
      },
      "test/utils/libs/SynapseStructs.t.sol": {
        "keccak256": "0x664ba9f04e889501196308480444a90657872af51267cbe7e6d9de5308edab13",
        "urls": [
          "bzz-raw://b85dd129998afd92047c883b6712d815ae2930171eaa33eb30fdceb5dddca0ea",
          "dweb:/ipfs/QmRKcKo86FaRVEydU1yETN6jaSKbomdFFcrswzZeL3WnAh"
        ],
        "license": "MIT"
      },
      "test/utils/proof/AttestationProofGenerator.t.sol": {
        "keccak256": "0x55e60fa4860d20c1acef70992c161544943499d919debf1233f5896006444d7d",
        "urls": [
          "bzz-raw://5a2043fac652c02e9624200b2cbd12bb984097f394504e1aa58c898cce605656",
          "dweb:/ipfs/QmRf4GrVREY5YhmqZXPUKhTYFKp966vCxa9RwAnJq6Ni5d"
        ],
        "license": "MIT"
      },
      "test/utils/proof/DynamicProofGenerator.t.sol": {
        "keccak256": "0xa9272ed0739752ecea44f9025805a5b875ddb240e477bd469422bf6655eb7f35",
        "urls": [
          "bzz-raw://8bb1aee5a0638b29c6e8f24ff93d7b37dadd4b3e272318e7f31c1ab5d56d02b7",
          "dweb:/ipfs/QmWrB2zqhDLWNLEX5o39cBv966ff2RbP6XVmv1qPQejQft"
        ],
        "license": "MIT"
      },
      "test/utils/proof/HistoricalProofGenerator.t.sol": {
        "keccak256": "0x506da993485d2e62ff72df3ec40f7b7573bd607c732f74ba818b1218da79054e",
        "urls": [
          "bzz-raw://500e44c72621c73eb09fd395265d6c626c2057418a17f4dd484aa94ee847820a",
          "dweb:/ipfs/QmbPPQtdsphznHz9aTn8h2Rn2Jhy59xToR4W1wqPfqy12Q"
        ],
        "license": "MIT"
      },
      "test/utils/proof/ProofCutter.t.sol": {
        "keccak256": "0x0b2f00c46d7967ff6058691cc7fac1bdef3eebfcabd395b92ad90d4a8da675d5",
        "urls": [
          "bzz-raw://f7cb0b41fcad5497e2b852ac0bfae328ecb0633bd7ccf28cb1a4518715dc8645",
          "dweb:/ipfs/QmZu3eQbEeM6AvVJ5qNjd1oq1a1bnEtffDDt3h2Pan8GqP"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/suite/Summit.t.sol",
    "id": 68280,
    "exportedSymbols": {
      "AgentFlag": [
        10349
      ],
      "AgentSecuredTest": [
        70937
      ],
      "AgentStatus": [
        10357
      ],
      "CallerNotInbox": [
        10178
      ],
      "IAgentSecured": [
        9180
      ],
      "ISnapshotHub": [
        9341
      ],
      "InterfaceDestination": [
        9719
      ],
      "InterfaceSummit": [
        10053
      ],
      "MerkleMath": [
        14266
      ],
      "NotaryInDispute": [
        10288
      ],
      "Random": [
        93422
      ],
      "RawAttestation": [
        94464
      ],
      "RawSnapshot": [
        94445
      ],
      "RawState": [
        94427
      ],
      "RawStateIndex": [
        94436
      ],
      "SNAPSHOT_TREE_HEIGHT": [
        10067
      ],
      "State": [
        13434
      ],
      "Summit": [
        2586
      ],
      "SummitTest": [
        68279
      ],
      "SynapseTest": [
        92854
      ],
      "Versioned": [
        3004
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:19192:147",
    "nodes": [
      {
        "id": 66374,
        "nodeType": "PragmaDirective",
        "src": "32:23:147",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 66377,
        "nodeType": "ImportDirective",
        "src": "57:80:147",
        "nodes": [],
        "absolutePath": "contracts/libs/Errors.sol",
        "file": "../../contracts/libs/Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68280,
        "sourceUnit": 10335,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66375,
              "name": "CallerNotInbox",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10178,
              "src": "65:14:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 66376,
              "name": "NotaryInDispute",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10288,
              "src": "81:15:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66379,
        "nodeType": "ImportDirective",
        "src": "138:75:147",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IAgentSecured.sol",
        "file": "../../contracts/interfaces/IAgentSecured.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68280,
        "sourceUnit": 9181,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66378,
              "name": "IAgentSecured",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9180,
              "src": "146:13:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66381,
        "nodeType": "ImportDirective",
        "src": "214:89:147",
        "nodes": [],
        "absolutePath": "contracts/interfaces/InterfaceDestination.sol",
        "file": "../../contracts/interfaces/InterfaceDestination.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68280,
        "sourceUnit": 9720,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66380,
              "name": "InterfaceDestination",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9719,
              "src": "222:20:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66383,
        "nodeType": "ImportDirective",
        "src": "304:73:147",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ISnapshotHub.sol",
        "file": "../../contracts/interfaces/ISnapshotHub.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68280,
        "sourceUnit": 9342,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66382,
              "name": "ISnapshotHub",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9341,
              "src": "312:12:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66385,
        "nodeType": "ImportDirective",
        "src": "378:72:147",
        "nodes": [],
        "absolutePath": "contracts/libs/Constants.sol",
        "file": "../../contracts/libs/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68280,
        "sourceUnit": 10171,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66384,
              "name": "SNAPSHOT_TREE_HEIGHT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10067,
              "src": "386:20:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66387,
        "nodeType": "ImportDirective",
        "src": "451:70:147",
        "nodes": [],
        "absolutePath": "contracts/libs/merkle/MerkleMath.sol",
        "file": "../../contracts/libs/merkle/MerkleMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68280,
        "sourceUnit": 14267,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66386,
              "name": "MerkleMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14266,
              "src": "459:10:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66389,
        "nodeType": "ImportDirective",
        "src": "523:59:147",
        "nodes": [],
        "absolutePath": "contracts/Summit.sol",
        "file": "../../contracts/Summit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68280,
        "sourceUnit": 2587,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66388,
              "name": "InterfaceSummit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10053,
              "src": "531:15:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66391,
        "nodeType": "ImportDirective",
        "src": "583:59:147",
        "nodes": [],
        "absolutePath": "contracts/base/Version.sol",
        "file": "../../contracts/base/Version.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68280,
        "sourceUnit": 3005,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66390,
              "name": "Versioned",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3004,
              "src": "591:9:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66396,
        "nodeType": "ImportDirective",
        "src": "644:87:147",
        "nodes": [],
        "absolutePath": "test/utils/SynapseTest.t.sol",
        "file": "../utils/SynapseTest.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68280,
        "sourceUnit": 92855,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66392,
              "name": "AgentFlag",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10349,
              "src": "652:9:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 66393,
              "name": "AgentStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10357,
              "src": "663:11:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 66394,
              "name": "Summit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2586,
              "src": "676:6:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 66395,
              "name": "SynapseTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 92854,
              "src": "684:11:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66402,
        "nodeType": "ImportDirective",
        "src": "732:111:147",
        "nodes": [],
        "absolutePath": "test/utils/libs/SynapseStructs.t.sol",
        "file": "../utils/libs/SynapseStructs.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68280,
        "sourceUnit": 96327,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66397,
              "name": "State",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13434,
              "src": "740:5:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 66398,
              "name": "RawAttestation",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 94464,
              "src": "747:14:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 66399,
              "name": "RawSnapshot",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 94445,
              "src": "763:11:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 66400,
              "name": "RawState",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 94427,
              "src": "776:8:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 66401,
              "name": "RawStateIndex",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 94436,
              "src": "786:13:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66404,
        "nodeType": "ImportDirective",
        "src": "844:50:147",
        "nodes": [],
        "absolutePath": "test/utils/libs/Random.t.sol",
        "file": "../utils/libs/Random.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68280,
        "sourceUnit": 94189,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66403,
              "name": "Random",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 93422,
              "src": "852:6:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66406,
        "nodeType": "ImportDirective",
        "src": "895:59:147",
        "nodes": [],
        "absolutePath": "test/suite/hubs/ExecutionHub.t.sol",
        "file": "./hubs/ExecutionHub.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68280,
        "sourceUnit": 76562,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66405,
              "name": "AgentSecuredTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70937,
              "src": "903:16:147",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 68279,
        "nodeType": "ContractDefinition",
        "src": "1065:18158:147",
        "nodes": [
          {
            "id": 66413,
            "nodeType": "StructDefinition",
            "src": "1111:78:147",
            "nodes": [],
            "canonicalName": "SummitTest.SignedSnapshot",
            "members": [
              {
                "constant": false,
                "id": 66410,
                "mutability": "mutable",
                "name": "snapshot",
                "nameLocation": "1149:8:147",
                "nodeType": "VariableDeclaration",
                "scope": 66413,
                "src": "1143:14:147",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 66409,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1143:5:147",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 66412,
                "mutability": "mutable",
                "name": "signature",
                "nameLocation": "1173:9:147",
                "nodeType": "VariableDeclaration",
                "scope": 66413,
                "src": "1167:15:147",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 66411,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1167:5:147",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SignedSnapshot",
            "nameLocation": "1118:14:147",
            "scope": 68279,
            "visibility": "public"
          },
          {
            "id": 66416,
            "nodeType": "VariableDeclaration",
            "src": "1195:37:147",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "STATES",
            "nameLocation": "1221:6:147",
            "scope": 68279,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 66414,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1195:7:147",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 66415,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1230:2:147",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "internal"
          },
          {
            "id": 66423,
            "nodeType": "VariableDeclaration",
            "src": "1239:69:147",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "guardStates",
            "nameLocation": "1297:11:147",
            "scope": 68279,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_RawState_$94427_storage_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => struct RawState))"
            },
            "typeName": {
              "id": 66422,
              "keyType": {
                "id": 66417,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1247:7:147",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1239:48:147",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_RawState_$94427_storage_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => struct RawState))"
              },
              "valueType": {
                "id": 66421,
                "keyType": {
                  "id": 66418,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1266:7:147",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1258:28:147",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RawState_$94427_storage_$",
                  "typeString": "mapping(uint256 => struct RawState)"
                },
                "valueType": {
                  "id": 66420,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 66419,
                    "name": "RawState",
                    "nameLocations": [
                      "1277:8:147"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 94427,
                    "src": "1277:8:147"
                  },
                  "referencedDeclaration": 94427,
                  "src": "1277:8:147",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RawState_$94427_storage_ptr",
                    "typeString": "struct RawState"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 66428,
            "nodeType": "VariableDeclaration",
            "src": "1314:58:147",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "guardSnapshots",
            "nameLocation": "1358:14:147",
            "scope": 68279,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SignedSnapshot_$66413_storage_$",
              "typeString": "mapping(uint256 => struct SummitTest.SignedSnapshot)"
            },
            "typeName": {
              "id": 66427,
              "keyType": {
                "id": 66424,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1322:7:147",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1314:34:147",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SignedSnapshot_$66413_storage_$",
                "typeString": "mapping(uint256 => struct SummitTest.SignedSnapshot)"
              },
              "valueType": {
                "id": 66426,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 66425,
                  "name": "SignedSnapshot",
                  "nameLocations": [
                    "1333:14:147"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66413,
                  "src": "1333:14:147"
                },
                "referencedDeclaration": 66413,
                "src": "1333:14:147",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_SignedSnapshot_$66413_storage_ptr",
                  "typeString": "struct SummitTest.SignedSnapshot"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 66433,
            "nodeType": "VariableDeclaration",
            "src": "1378:62:147",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "notaryAttestations",
            "nameLocation": "1422:18:147",
            "scope": 68279,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RawAttestation_$94464_storage_$",
              "typeString": "mapping(uint256 => struct RawAttestation)"
            },
            "typeName": {
              "id": 66432,
              "keyType": {
                "id": 66429,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1386:7:147",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1378:34:147",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RawAttestation_$94464_storage_$",
                "typeString": "mapping(uint256 => struct RawAttestation)"
              },
              "valueType": {
                "id": 66431,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 66430,
                  "name": "RawAttestation",
                  "nameLocations": [
                    "1397:14:147"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 94464,
                  "src": "1397:14:147"
                },
                "referencedDeclaration": 94464,
                "src": "1397:14:147",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RawAttestation_$94464_storage_ptr",
                  "typeString": "struct RawAttestation"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 66440,
            "nodeType": "FunctionDefinition",
            "src": "1520:48:147",
            "nodes": [],
            "body": {
              "id": 66439,
              "nodeType": "Block",
              "src": "1566:2:147",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 66436,
                    "name": "DEPLOY_PROD_SUMMIT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 92922,
                    "src": "1546:18:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 66437,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 66435,
                  "name": "SynapseTest",
                  "nameLocations": [
                    "1534:11:147"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92854,
                  "src": "1534:11:147"
                },
                "nodeType": "ModifierInvocation",
                "src": "1534:31:147"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 66434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1531:2:147"
            },
            "returnParameters": {
              "id": 66438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1566:0:147"
            },
            "scope": 68279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66482,
            "nodeType": "FunctionDefinition",
            "src": "1574:428:147",
            "nodes": [],
            "body": {
              "id": 66481,
              "nodeType": "Block",
              "src": "1615:387:147",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    66446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66446,
                      "mutability": "mutable",
                      "name": "empty",
                      "nameLocation": "1647:5:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 66481,
                      "src": "1625:27:147",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                        "typeString": "struct RawAttestation"
                      },
                      "typeName": {
                        "id": 66445,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 66444,
                          "name": "RawAttestation",
                          "nameLocations": [
                            "1625:14:147"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 94464,
                          "src": "1625:14:147"
                        },
                        "referencedDeclaration": 94464,
                        "src": "1625:14:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawAttestation_$94464_storage_ptr",
                          "typeString": "struct RawAttestation"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66464,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 66448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1694:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 66449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1719:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 66450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1746:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 66451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1775:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 66452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1797:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 66455,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "1832:5:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 66456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1838:6:147",
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "1832:12:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 66454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1825:6:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint40_$",
                            "typeString": "type(uint40)"
                          },
                          "typeName": {
                            "id": 66453,
                            "name": "uint40",
                            "nodeType": "ElementaryTypeName",
                            "src": "1825:6:147",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1825:20:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 66460,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "1877:5:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 66461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1883:9:147",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "1877:15:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 66459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1870:6:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint40_$",
                            "typeString": "type(uint40)"
                          },
                          "typeName": {
                            "id": 66458,
                            "name": "uint40",
                            "nodeType": "ElementaryTypeName",
                            "src": "1870:6:147",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1870:23:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      ],
                      "id": 66447,
                      "name": "RawAttestation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94464,
                      "src": "1655:14:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_RawAttestation_$94464_storage_ptr_$",
                        "typeString": "type(struct RawAttestation storage pointer)"
                      }
                    },
                    "id": 66463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1684:8:147",
                      "1709:8:147",
                      "1734:10:147",
                      "1761:12:147",
                      "1790:5:147",
                      "1812:11:147",
                      "1859:9:147"
                    ],
                    "names": [
                      "snapRoot",
                      "dataHash",
                      "_agentRoot",
                      "_snapGasHash",
                      "nonce",
                      "blockNumber",
                      "timestamp"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1655:249:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                      "typeString": "struct RawAttestation memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1625:279:147"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 66465,
                        "name": "empty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66446,
                        "src": "1914:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                          "typeString": "struct RawAttestation memory"
                        }
                      },
                      "id": 66467,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1920:11:147",
                      "memberName": "setDataHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 96221,
                      "src": "1914:17:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_RawAttestation_$94464_memory_ptr_$returns$__$bound_to$_t_struct$_RawAttestation_$94464_memory_ptr_$",
                        "typeString": "function (struct RawAttestation memory) pure"
                      }
                    },
                    "id": 66468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1914:19:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66469,
                  "nodeType": "ExpressionStatement",
                  "src": "1914:19:147"
                },
                {
                  "expression": {
                    "id": 66474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 66470,
                        "name": "notaryAttestations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66433,
                        "src": "1943:18:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RawAttestation_$94464_storage_$",
                          "typeString": "mapping(uint256 => struct RawAttestation storage ref)"
                        }
                      },
                      "id": 66472,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 66471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1962:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1943:21:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RawAttestation_$94464_storage",
                        "typeString": "struct RawAttestation storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66473,
                      "name": "empty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66446,
                      "src": "1967:5:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                        "typeString": "struct RawAttestation memory"
                      }
                    },
                    "src": "1943:29:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RawAttestation_$94464_storage",
                      "typeString": "struct RawAttestation storage ref"
                    }
                  },
                  "id": 66475,
                  "nodeType": "ExpressionStatement",
                  "src": "1943:29:147"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 66476,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1982:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SummitTest_$68279_$",
                          "typeString": "type(contract super SummitTest)"
                        }
                      },
                      "id": 66478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1988:5:147",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92042,
                      "src": "1982:11:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 66479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1982:13:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66480,
                  "nodeType": "ExpressionStatement",
                  "src": "1982:13:147"
                }
              ]
            },
            "baseFunctions": [
              92042
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1583:5:147",
            "overrides": {
              "id": 66442,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1606:8:147"
            },
            "parameters": {
              "id": 66441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1588:2:147"
            },
            "returnParameters": {
              "id": 66443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1615:0:147"
            },
            "scope": 68279,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 66589,
            "nodeType": "FunctionDefinition",
            "src": "2008:961:147",
            "nodes": [],
            "body": {
              "id": 66588,
              "nodeType": "Block",
              "src": "2046:923:147",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 66539,
                    "nodeType": "Block",
                    "src": "2206:302:147",
                    "statements": [
                      {
                        "assignments": [
                          66497
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 66497,
                            "mutability": "mutable",
                            "name": "domain",
                            "nameLocation": "2227:6:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 66539,
                            "src": "2220:13:147",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 66496,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2220:6:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 66501,
                        "initialValue": {
                          "baseExpression": {
                            "id": 66498,
                            "name": "allDomains",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90773,
                            "src": "2236:10:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint32_$dyn_storage",
                              "typeString": "uint32[] storage ref"
                            }
                          },
                          "id": 66500,
                          "indexExpression": {
                            "id": 66499,
                            "name": "d",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66486,
                            "src": "2247:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2236:13:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2220:29:147"
                      },
                      {
                        "body": {
                          "id": 66537,
                          "nodeType": "Block",
                          "src": "2323:175:147",
                          "statements": [
                            {
                              "assignments": [
                                66517
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 66517,
                                  "mutability": "mutable",
                                  "name": "agent",
                                  "nameLocation": "2349:5:147",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 66537,
                                  "src": "2341:13:147",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 66516,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2341:7:147",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 66524,
                              "initialValue": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 66518,
                                      "name": "domains",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 90778,
                                      "src": "2357:7:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Domain_$90770_storage_$",
                                        "typeString": "mapping(uint32 => struct SynapseAgents.Domain storage ref)"
                                      }
                                    },
                                    "id": 66520,
                                    "indexExpression": {
                                      "id": 66519,
                                      "name": "domain",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 66497,
                                      "src": "2365:6:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2357:15:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Domain_$90770_storage",
                                      "typeString": "struct SynapseAgents.Domain storage ref"
                                    }
                                  },
                                  "id": 66521,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2373:6:147",
                                  "memberName": "agents",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 90769,
                                  "src": "2357:22:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 66523,
                                "indexExpression": {
                                  "id": 66522,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66503,
                                  "src": "2380:1:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2357:25:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2341:41:147"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 66526,
                                    "name": "agent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 66517,
                                    "src": "2417:5:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 66531,
                                        "name": "agent",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 66517,
                                        "src": "2458:5:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 66528,
                                            "name": "summit",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 91945,
                                            "src": "2438:6:147",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 66527,
                                          "name": "IAgentSecured",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9180,
                                          "src": "2424:13:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IAgentSecured_$9180_$",
                                            "typeString": "type(contract IAgentSecured)"
                                          }
                                        },
                                        "id": 66529,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2424:21:147",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IAgentSecured_$9180",
                                          "typeString": "contract IAgentSecured"
                                        }
                                      },
                                      "id": 66530,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2446:11:147",
                                      "memberName": "agentStatus",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 9168,
                                      "src": "2424:33:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_AgentStatus_$10357_memory_ptr_$",
                                        "typeString": "function (address) view external returns (struct AgentStatus memory)"
                                      }
                                    },
                                    "id": 66532,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2424:40:147",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                                      "typeString": "struct AgentStatus memory"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 66533,
                                      "name": "AgentFlag",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10349,
                                      "src": "2466:9:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_AgentFlag_$10349_$",
                                        "typeString": "type(enum AgentFlag)"
                                      }
                                    },
                                    "id": 66534,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "2476:6:147",
                                    "memberName": "Active",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10344,
                                    "src": "2466:16:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_AgentFlag_$10349",
                                      "typeString": "enum AgentFlag"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                                      "typeString": "struct AgentStatus memory"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_AgentFlag_$10349",
                                      "typeString": "enum AgentFlag"
                                    }
                                  ],
                                  "id": 66525,
                                  "name": "checkAgentStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 92853,
                                  "src": "2400:16:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_enum$_AgentFlag_$10349_$returns$__$",
                                    "typeString": "function (address,struct AgentStatus memory,enum AgentFlag)"
                                  }
                                },
                                "id": 66535,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2400:83:147",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 66536,
                              "nodeType": "ExpressionStatement",
                              "src": "2400:83:147"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 66512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 66506,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66503,
                            "src": "2283:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 66507,
                                  "name": "domains",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 90778,
                                  "src": "2287:7:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Domain_$90770_storage_$",
                                    "typeString": "mapping(uint32 => struct SynapseAgents.Domain storage ref)"
                                  }
                                },
                                "id": 66509,
                                "indexExpression": {
                                  "id": 66508,
                                  "name": "domain",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66497,
                                  "src": "2295:6:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2287:15:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Domain_$90770_storage",
                                  "typeString": "struct SynapseAgents.Domain storage ref"
                                }
                              },
                              "id": 66510,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2303:6:147",
                              "memberName": "agents",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 90769,
                              "src": "2287:22:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 66511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2310:6:147",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2287:29:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2283:33:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 66538,
                        "initializationExpression": {
                          "assignments": [
                            66503
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 66503,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2276:1:147",
                              "nodeType": "VariableDeclaration",
                              "scope": 66538,
                              "src": "2268:9:147",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 66502,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2268:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 66505,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 66504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2280:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2268:13:147"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 66514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "2318:3:147",
                            "subExpression": {
                              "id": 66513,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66503,
                              "src": "2320:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 66515,
                          "nodeType": "ExpressionStatement",
                          "src": "2318:3:147"
                        },
                        "nodeType": "ForStatement",
                        "src": "2263:235:147"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 66492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 66489,
                      "name": "d",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66486,
                      "src": "2178:1:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 66490,
                        "name": "allDomains",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90773,
                        "src": "2182:10:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage",
                          "typeString": "uint32[] storage ref"
                        }
                      },
                      "id": 66491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2193:6:147",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2182:17:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2178:21:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66540,
                  "initializationExpression": {
                    "assignments": [
                      66486
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 66486,
                        "mutability": "mutable",
                        "name": "d",
                        "nameLocation": "2171:1:147",
                        "nodeType": "VariableDeclaration",
                        "scope": 66540,
                        "src": "2163:9:147",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 66485,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2163:7:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 66488,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 66487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2175:1:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2163:13:147"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 66494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2201:3:147",
                      "subExpression": {
                        "id": 66493,
                        "name": "d",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66486,
                        "src": "2203:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 66495,
                    "nodeType": "ExpressionStatement",
                    "src": "2201:3:147"
                  },
                  "nodeType": "ForStatement",
                  "src": "2158:350:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 66543,
                                "name": "summit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91945,
                                "src": "2561:6:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 66542,
                              "name": "Versioned",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3004,
                              "src": "2551:9:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Versioned_$3004_$",
                                "typeString": "type(contract Versioned)"
                              }
                            },
                            "id": 66544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2551:17:147",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Versioned_$3004",
                              "typeString": "contract Versioned"
                            }
                          },
                          "id": 66545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2569:7:147",
                          "memberName": "version",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3003,
                          "src": "2551:25:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 66546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2551:27:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 66547,
                        "name": "LATEST_VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92862,
                        "src": "2580:14:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "2176657273696f6e",
                        "id": 66548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2596:10:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00c5f0a0632a53807e6e70517114aaed2d6739b651359c8b7d1213fa070885da",
                          "typeString": "literal_string \"!version\""
                        },
                        "value": "!version"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00c5f0a0632a53807e6e70517114aaed2d6739b651359c8b7d1213fa070885da",
                          "typeString": "literal_string \"!version\""
                        }
                      ],
                      "id": 66541,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 19656,
                      "src": "2542:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory)"
                      }
                    },
                    "id": 66549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2542:65:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66550,
                  "nodeType": "ExpressionStatement",
                  "src": "2542:65:147"
                },
                {
                  "assignments": [
                    66552,
                    66554,
                    66557
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66552,
                      "mutability": "mutable",
                      "name": "attPayload",
                      "nameLocation": "2682:10:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 66588,
                      "src": "2669:23:147",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 66551,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2669:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 66554,
                      "mutability": "mutable",
                      "name": "agentRoot",
                      "nameLocation": "2702:9:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 66588,
                      "src": "2694:17:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 66553,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2694:7:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 66557,
                      "mutability": "mutable",
                      "name": "snapGas",
                      "nameLocation": "2730:7:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 66588,
                      "src": "2713:24:147",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 66555,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2713:7:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 66556,
                        "nodeType": "ArrayTypeName",
                        "src": "2713:9:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66564,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 66562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2777:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 66559,
                            "name": "summit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91945,
                            "src": "2754:6:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 66558,
                          "name": "ISnapshotHub",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9341,
                          "src": "2741:12:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISnapshotHub_$9341_$",
                            "typeString": "type(contract ISnapshotHub)"
                          }
                        },
                        "id": 66560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2741:20:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISnapshotHub_$9341",
                          "typeString": "contract ISnapshotHub"
                        }
                      },
                      "id": 66561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2762:14:147",
                      "memberName": "getAttestation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9276,
                      "src": "2741:35:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint32_$returns$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint32) view external returns (bytes memory,bytes32,uint256[] memory)"
                      }
                    },
                    "id": 66563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2741:38:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes memory,bytes32,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2668:111:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66566,
                        "name": "attPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66552,
                        "src": "2798:10:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "baseExpression": {
                              "id": 66567,
                              "name": "notaryAttestations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66433,
                              "src": "2810:18:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RawAttestation_$94464_storage_$",
                                "typeString": "mapping(uint256 => struct RawAttestation storage ref)"
                              }
                            },
                            "id": 66569,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 66568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2829:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2810:21:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RawAttestation_$94464_storage",
                              "typeString": "struct RawAttestation storage ref"
                            }
                          },
                          "id": 66570,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2832:17:147",
                          "memberName": "formatAttestation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 96181,
                          "src": "2810:39:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_RawAttestation_$94464_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_struct$_RawAttestation_$94464_memory_ptr_$",
                            "typeString": "function (struct RawAttestation memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 66571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2810:41:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "216174745061796c6f6164",
                        "id": 66572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2853:13:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50587817f8e4b07cf3739af32cd0bfe4dcb7422593281c2930af6ba95ba9d0db",
                          "typeString": "literal_string \"!attPayload\""
                        },
                        "value": "!attPayload"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_50587817f8e4b07cf3739af32cd0bfe4dcb7422593281c2930af6ba95ba9d0db",
                          "typeString": "literal_string \"!attPayload\""
                        }
                      ],
                      "id": 66565,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 20050,
                      "src": "2789:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,string memory)"
                      }
                    },
                    "id": 66573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2789:78:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66574,
                  "nodeType": "ExpressionStatement",
                  "src": "2789:78:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66576,
                        "name": "agentRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66554,
                        "src": "2886:9:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 66577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2897:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "216167656e74526f6f74",
                        "id": 66578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2900:12:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5056b42d3a0a329866b54098335137a24cdec25749c238018e90e18d29204ea4",
                          "typeString": "literal_string \"!agentRoot\""
                        },
                        "value": "!agentRoot"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5056b42d3a0a329866b54098335137a24cdec25749c238018e90e18d29204ea4",
                          "typeString": "literal_string \"!agentRoot\""
                        }
                      ],
                      "id": 66575,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18382,
                      "src": "2877:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory)"
                      }
                    },
                    "id": 66579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2877:36:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66580,
                  "nodeType": "ExpressionStatement",
                  "src": "2877:36:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66582,
                          "name": "snapGas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66557,
                          "src": "2932:7:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 66583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2940:6:147",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2932:14:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 66584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2948:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "21736e6170476173",
                        "id": 66585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2951:10:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aaca0acb734aa644e71d857e21b47215cd688ab27cc0e516c8c3b52ca9424107",
                          "typeString": "literal_string \"!snapGas\""
                        },
                        "value": "!snapGas"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aaca0acb734aa644e71d857e21b47215cd688ab27cc0e516c8c3b52ca9424107",
                          "typeString": "literal_string \"!snapGas\""
                        }
                      ],
                      "id": 66581,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18521,
                      "src": "2923:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 66586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2923:39:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66587,
                  "nodeType": "ExpressionStatement",
                  "src": "2923:39:147"
                }
              ]
            },
            "functionSelector": "66003f80",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_setupCorrectly",
            "nameLocation": "2017:19:147",
            "parameters": {
              "id": 66483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2036:2:147"
            },
            "returnParameters": {
              "id": 66484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2046:0:147"
            },
            "scope": 68279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66673,
            "nodeType": "FunctionDefinition",
            "src": "2975:660:147",
            "nodes": [],
            "body": {
              "id": 66672,
              "nodeType": "Block",
              "src": "3038:597:147",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    66597
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66597,
                      "mutability": "mutable",
                      "name": "domain",
                      "nameLocation": "3055:6:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 66672,
                      "src": "3048:13:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 66596,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3048:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66599,
                  "initialValue": {
                    "id": 66598,
                    "name": "DOMAIN_SYNAPSE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 92874,
                    "src": "3064:14:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3048:30:147"
                },
                {
                  "assignments": [
                    66601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66601,
                      "mutability": "mutable",
                      "name": "agentManager",
                      "nameLocation": "3096:12:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 66672,
                      "src": "3088:20:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66600,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3088:7:147",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66605,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 66602,
                        "name": "random",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66592,
                        "src": "3111:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                          "typeString": "struct Random memory"
                        }
                      },
                      "id": 66603,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3118:11:147",
                      "memberName": "nextAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 93771,
                      "src": "3111:18:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Random_$93422_memory_ptr_$returns$_t_address_$bound_to$_t_struct$_Random_$93422_memory_ptr_$",
                        "typeString": "function (struct Random memory) pure returns (address)"
                      }
                    },
                    "id": 66604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3111:20:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3088:43:147"
                },
                {
                  "assignments": [
                    66607
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66607,
                      "mutability": "mutable",
                      "name": "inbox_",
                      "nameLocation": "3149:6:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 66672,
                      "src": "3141:14:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66606,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3141:7:147",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66611,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 66608,
                        "name": "random",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66592,
                        "src": "3158:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                          "typeString": "struct Random memory"
                        }
                      },
                      "id": 66609,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3165:11:147",
                      "memberName": "nextAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 93771,
                      "src": "3158:18:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Random_$93422_memory_ptr_$returns$_t_address_$bound_to$_t_struct$_Random_$93422_memory_ptr_$",
                        "typeString": "function (struct Random memory) pure returns (address)"
                      }
                    },
                    "id": 66610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3158:20:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3141:37:147"
                },
                {
                  "assignments": [
                    66613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66613,
                      "mutability": "mutable",
                      "name": "caller",
                      "nameLocation": "3196:6:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 66672,
                      "src": "3188:14:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66612,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3188:7:147",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66617,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 66614,
                        "name": "random",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66592,
                        "src": "3205:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                          "typeString": "struct Random memory"
                        }
                      },
                      "id": 66615,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3212:11:147",
                      "memberName": "nextAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 93771,
                      "src": "3205:18:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Random_$93422_memory_ptr_$returns$_t_address_$bound_to$_t_struct$_Random_$93422_memory_ptr_$",
                        "typeString": "function (struct Random memory) pure returns (address)"
                      }
                    },
                    "id": 66616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3205:20:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3188:37:147"
                },
                {
                  "assignments": [
                    66620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66620,
                      "mutability": "mutable",
                      "name": "cleanContract",
                      "nameLocation": "3242:13:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 66672,
                      "src": "3235:20:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Summit_$2586",
                        "typeString": "contract Summit"
                      },
                      "typeName": {
                        "id": 66619,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 66618,
                          "name": "Summit",
                          "nameLocations": [
                            "3235:6:147"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2586,
                          "src": "3235:6:147"
                        },
                        "referencedDeclaration": 2586,
                        "src": "3235:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Summit_$2586",
                          "typeString": "contract Summit"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66628,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 66624,
                        "name": "domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66597,
                        "src": "3269:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 66625,
                        "name": "agentManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66601,
                        "src": "3277:12:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66626,
                        "name": "inbox_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66607,
                        "src": "3291:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 66623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3258:10:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_uint32_$_t_address_$_t_address_$returns$_t_contract$_Summit_$2586_$",
                        "typeString": "function (uint32,address,address) returns (contract Summit)"
                      },
                      "typeName": {
                        "id": 66622,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 66621,
                          "name": "Summit",
                          "nameLocations": [
                            "3262:6:147"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2586,
                          "src": "3262:6:147"
                        },
                        "referencedDeclaration": 2586,
                        "src": "3262:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Summit_$2586",
                          "typeString": "contract Summit"
                        }
                      }
                    },
                    "id": 66627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3258:40:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Summit_$2586",
                      "typeString": "contract Summit"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3235:63:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66632,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66613,
                        "src": "3317:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 66629,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19821,
                        "src": "3308:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$30102",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 66631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3311:5:147",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29795,
                      "src": "3308:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 66633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3308:16:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66634,
                  "nodeType": "ExpressionStatement",
                  "src": "3308:16:147"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 66635,
                        "name": "cleanContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66620,
                        "src": "3334:13:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Summit_$2586",
                          "typeString": "contract Summit"
                        }
                      },
                      "id": 66637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3348:10:147",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1719,
                      "src": "3334:24:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 66638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3334:26:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66639,
                  "nodeType": "ExpressionStatement",
                  "src": "3334:26:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 66641,
                            "name": "cleanContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66620,
                            "src": "3379:13:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Summit_$2586",
                              "typeString": "contract Summit"
                            }
                          },
                          "id": 66642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3393:5:147",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46623,
                          "src": "3379:19:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 66643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3379:21:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66644,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66613,
                        "src": "3402:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "216f776e6572",
                        "id": 66645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3410:8:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f90560991e3f715cdce86f88841433ea2f749a73c924ce7483b146bbc74f1efa",
                          "typeString": "literal_string \"!owner\""
                        },
                        "value": "!owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f90560991e3f715cdce86f88841433ea2f749a73c924ce7483b146bbc74f1efa",
                          "typeString": "literal_string \"!owner\""
                        }
                      ],
                      "id": 66640,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18327,
                      "src": "3370:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 66646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3370:49:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66647,
                  "nodeType": "ExpressionStatement",
                  "src": "3370:49:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 66649,
                            "name": "cleanContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66620,
                            "src": "3438:13:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Summit_$2586",
                              "typeString": "contract Summit"
                            }
                          },
                          "id": 66650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3452:12:147",
                          "memberName": "agentManager",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2608,
                          "src": "3438:26:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 66651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3438:28:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66652,
                        "name": "agentManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66601,
                        "src": "3468:12:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "216167656e744d616e61676572",
                        "id": 66653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3482:15:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_573fdea6df556a1c5b59248e407168038d6c595879a55f83454dffa05bafa3c5",
                          "typeString": "literal_string \"!agentManager\""
                        },
                        "value": "!agentManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_573fdea6df556a1c5b59248e407168038d6c595879a55f83454dffa05bafa3c5",
                          "typeString": "literal_string \"!agentManager\""
                        }
                      ],
                      "id": 66648,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18327,
                      "src": "3429:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 66654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3429:69:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66655,
                  "nodeType": "ExpressionStatement",
                  "src": "3429:69:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 66657,
                            "name": "cleanContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66620,
                            "src": "3517:13:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Summit_$2586",
                              "typeString": "contract Summit"
                            }
                          },
                          "id": 66658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3531:5:147",
                          "memberName": "inbox",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2611,
                          "src": "3517:19:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 66659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3517:21:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66660,
                        "name": "inbox_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66607,
                        "src": "3540:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "21696e626f78",
                        "id": 66661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3548:8:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bdf80e704269be772c60297aa225a59a81a68860caec8acfc9aeed1e6b730862",
                          "typeString": "literal_string \"!inbox\""
                        },
                        "value": "!inbox"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bdf80e704269be772c60297aa225a59a81a68860caec8acfc9aeed1e6b730862",
                          "typeString": "literal_string \"!inbox\""
                        }
                      ],
                      "id": 66656,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18327,
                      "src": "3508:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 66662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3508:49:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66663,
                  "nodeType": "ExpressionStatement",
                  "src": "3508:49:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 66665,
                            "name": "cleanContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66620,
                            "src": "3576:13:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Summit_$2586",
                              "typeString": "contract Summit"
                            }
                          },
                          "id": 66666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3590:11:147",
                          "memberName": "localDomain",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2822,
                          "src": "3576:25:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint32_$",
                            "typeString": "function () view external returns (uint32)"
                          }
                        },
                        "id": 66667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3576:27:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 66668,
                        "name": "domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66597,
                        "src": "3605:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "216c6f63616c446f6d61696e",
                        "id": 66669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3613:14:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84c3e45d2aa8b4dbb80e76ceb6eb04e400e84b75f97952e0a13d1ec648a75bbc",
                          "typeString": "literal_string \"!localDomain\""
                        },
                        "value": "!localDomain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84c3e45d2aa8b4dbb80e76ceb6eb04e400e84b75f97952e0a13d1ec648a75bbc",
                          "typeString": "literal_string \"!localDomain\""
                        }
                      ],
                      "id": 66664,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18521,
                      "src": "3567:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 66670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3567:61:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66671,
                  "nodeType": "ExpressionStatement",
                  "src": "3567:61:147"
                }
              ]
            },
            "baseFunctions": [
              71005
            ],
            "functionSelector": "e4f825da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_cleanSetup",
            "nameLocation": "2984:15:147",
            "overrides": {
              "id": 66594,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3029:8:147"
            },
            "parameters": {
              "id": 66593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66592,
                  "mutability": "mutable",
                  "name": "random",
                  "nameLocation": "3014:6:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 66673,
                  "src": "3000:20:147",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                    "typeString": "struct Random"
                  },
                  "typeName": {
                    "id": 66591,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66590,
                      "name": "Random",
                      "nameLocations": [
                        "3000:6:147"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 93422,
                      "src": "3000:6:147"
                    },
                    "referencedDeclaration": 93422,
                    "src": "3000:6:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Random_$93422_storage_ptr",
                      "typeString": "struct Random"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2999:22:147"
            },
            "returnParameters": {
              "id": 66595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3038:0:147"
            },
            "scope": 68279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66685,
            "nodeType": "FunctionDefinition",
            "src": "3641:104:147",
            "nodes": [],
            "body": {
              "id": 66684,
              "nodeType": "Block",
              "src": "3692:53:147",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 66678,
                              "name": "localContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                68268
                              ],
                              "referencedDeclaration": 68268,
                              "src": "3709:13:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 66679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3709:15:147",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 66677,
                          "name": "Summit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2586,
                          "src": "3702:6:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Summit_$2586_$",
                            "typeString": "type(contract Summit)"
                          }
                        },
                        "id": 66680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3702:23:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Summit_$2586",
                          "typeString": "contract Summit"
                        }
                      },
                      "id": 66681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3726:10:147",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1719,
                      "src": "3702:34:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 66682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3702:36:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66683,
                  "nodeType": "ExpressionStatement",
                  "src": "3702:36:147"
                }
              ]
            },
            "baseFunctions": [
              71018
            ],
            "functionSelector": "33605c43",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeLocalContract",
            "nameLocation": "3650:23:147",
            "overrides": {
              "id": 66675,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3683:8:147"
            },
            "parameters": {
              "id": 66674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3673:2:147"
            },
            "returnParameters": {
              "id": 66676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3692:0:147"
            },
            "scope": 68279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66722,
            "nodeType": "FunctionDefinition",
            "src": "3751:269:147",
            "nodes": [],
            "body": {
              "id": 66721,
              "nodeType": "Block",
              "src": "3824:196:147",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 66696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66693,
                          "name": "caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66687,
                          "src": "3844:6:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 66694,
                            "name": "localAgentManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71477,
                            "src": "3854:17:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 66695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3854:19:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3844:29:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 66690,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19821,
                        "src": "3834:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$30102",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 66692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3837:6:147",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29740,
                      "src": "3834:9:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 66697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3834:40:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66698,
                  "nodeType": "ExpressionStatement",
                  "src": "3834:40:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66702,
                          "name": "CallerNotInbox",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10178,
                          "src": "3900:14:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 66703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3915:8:147",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "3900:23:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 66699,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19821,
                        "src": "3884:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$30102",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 66701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3887:12:147",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29841,
                      "src": "3884:15:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 66704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3884:40:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66705,
                  "nodeType": "ExpressionStatement",
                  "src": "3884:40:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66709,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66687,
                        "src": "3943:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 66706,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19821,
                        "src": "3934:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$30102",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 66708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3937:5:147",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29795,
                      "src": "3934:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 66710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3934:16:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66711,
                  "nodeType": "ExpressionStatement",
                  "src": "3934:16:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 66716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4004:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 66717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4007:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "",
                        "id": 66718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4010:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 66713,
                            "name": "summit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91945,
                            "src": "3976:6:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 66712,
                          "name": "InterfaceSummit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10053,
                          "src": "3960:15:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_InterfaceSummit_$10053_$",
                            "typeString": "type(contract InterfaceSummit)"
                          }
                        },
                        "id": 66714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3960:23:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InterfaceSummit_$10053",
                          "typeString": "contract InterfaceSummit"
                        }
                      },
                      "id": 66715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3984:19:147",
                      "memberName": "acceptGuardSnapshot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9998,
                      "src": "3960:43:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint32,uint256,bytes memory) external"
                      }
                    },
                    "id": 66719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3960:53:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66720,
                  "nodeType": "ExpressionStatement",
                  "src": "3960:53:147"
                }
              ]
            },
            "functionSelector": "d53ee984",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_acceptGuardSnapshot_revert_notInbox",
            "nameLocation": "3760:40:147",
            "parameters": {
              "id": 66688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66687,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "3809:6:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 66722,
                  "src": "3801:14:147",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3801:7:147",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3800:16:147"
            },
            "returnParameters": {
              "id": 66689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3824:0:147"
            },
            "scope": 68279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66760,
            "nodeType": "FunctionDefinition",
            "src": "4026:267:147",
            "nodes": [],
            "body": {
              "id": 66759,
              "nodeType": "Block",
              "src": "4100:193:147",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 66733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66730,
                          "name": "caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66724,
                          "src": "4120:6:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 66731,
                            "name": "localInbox",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71500,
                            "src": "4130:10:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 66732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4130:12:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4120:22:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 66727,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19821,
                        "src": "4110:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$30102",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 66729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4113:6:147",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29740,
                      "src": "4110:9:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 66734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4110:33:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66735,
                  "nodeType": "ExpressionStatement",
                  "src": "4110:33:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66739,
                          "name": "CallerNotInbox",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10178,
                          "src": "4169:14:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 66740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4184:8:147",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "4169:23:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 66736,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19821,
                        "src": "4153:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$30102",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 66738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4156:12:147",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29841,
                      "src": "4153:15:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 66741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4153:40:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66742,
                  "nodeType": "ExpressionStatement",
                  "src": "4153:40:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66746,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66724,
                        "src": "4212:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 66743,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19821,
                        "src": "4203:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$30102",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 66745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4206:5:147",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29795,
                      "src": "4203:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 66747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4203:16:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66748,
                  "nodeType": "ExpressionStatement",
                  "src": "4203:16:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 66753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4274:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 66754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4277:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 66755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4280:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "",
                        "id": 66756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4283:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 66750,
                            "name": "summit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91945,
                            "src": "4245:6:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 66749,
                          "name": "InterfaceSummit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10053,
                          "src": "4229:15:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_InterfaceSummit_$10053_$",
                            "typeString": "type(contract InterfaceSummit)"
                          }
                        },
                        "id": 66751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4229:23:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InterfaceSummit_$10053",
                          "typeString": "contract InterfaceSummit"
                        }
                      },
                      "id": 66752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4253:20:147",
                      "memberName": "acceptNotarySnapshot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10012,
                      "src": "4229:44:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint32,uint256,bytes32,bytes memory) external returns (bytes memory)"
                      }
                    },
                    "id": 66757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4229:57:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 66758,
                  "nodeType": "ExpressionStatement",
                  "src": "4229:57:147"
                }
              ]
            },
            "functionSelector": "636b5205",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_acceptNotarySnapshot_revert_notInbox",
            "nameLocation": "4035:41:147",
            "parameters": {
              "id": 66725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66724,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "4085:6:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 66760,
                  "src": "4077:14:147",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4077:7:147",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4076:16:147"
            },
            "returnParameters": {
              "id": 66726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4100:0:147"
            },
            "scope": 68279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66804,
            "nodeType": "FunctionDefinition",
            "src": "4299:473:147",
            "nodes": [],
            "body": {
              "id": 66803,
              "nodeType": "Block",
              "src": "4388:384:147",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66769,
                        "name": "random",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66763,
                        "src": "4419:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                          "typeString": "struct Random memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                          "typeString": "struct Random memory"
                        }
                      ],
                      "id": 66768,
                      "name": "test_notarySnapshots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67984,
                      "src": "4398:20:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Random_$93422_memory_ptr_$returns$__$",
                        "typeString": "function (struct Random memory)"
                      }
                    },
                    "id": 66770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4398:28:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66771,
                  "nodeType": "ExpressionStatement",
                  "src": "4398:28:147"
                },
                {
                  "assignments": [
                    66773
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66773,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nameLocation": "4486:5:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 66803,
                      "src": "4479:12:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 66772,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4479:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66784,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 66777,
                                "name": "random",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66763,
                                "src": "4507:6:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                                  "typeString": "struct Random memory"
                                }
                              },
                              "id": 66778,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4514:10:147",
                              "memberName": "nextUint32",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 93723,
                              "src": "4507:17:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_Random_$93422_memory_ptr_$returns$_t_uint32_$bound_to$_t_struct$_Random_$93422_memory_ptr_$",
                                "typeString": "function (struct Random memory) pure returns (uint32)"
                              }
                            },
                            "id": 66779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4507:19:147",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 66780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4528:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "id": 66781,
                            "name": "DOMAIN_AGENTS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92877,
                            "src": "4531:13:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 66776,
                          "name": "bound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            28123,
                            28253
                          ],
                          "referencedDeclaration": 28123,
                          "src": "4501:5:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                          }
                        },
                        "id": 66782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4501:44:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 66775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4494:6:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint32_$",
                        "typeString": "type(uint32)"
                      },
                      "typeName": {
                        "id": 66774,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4494:6:147",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 66783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4494:52:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4479:67:147"
                },
                {
                  "assignments": [
                    66786,
                    66789
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66786,
                      "mutability": "mutable",
                      "name": "isValid",
                      "nameLocation": "4631:7:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 66803,
                      "src": "4626:12:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 66785,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4626:4:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 66789,
                      "mutability": "mutable",
                      "name": "ra",
                      "nameLocation": "4662:2:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 66803,
                      "src": "4640:24:147",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                        "typeString": "struct RawAttestation"
                      },
                      "typeName": {
                        "id": 66788,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 66787,
                          "name": "RawAttestation",
                          "nameLocations": [
                            "4640:14:147"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 94464,
                          "src": "4640:14:147"
                        },
                        "referencedDeclaration": 94464,
                        "src": "4640:14:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawAttestation_$94464_storage_ptr",
                          "typeString": "struct RawAttestation"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66796,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 66794,
                        "name": "mask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66765,
                        "src": "4712:4:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 66790,
                          "name": "notaryAttestations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66433,
                          "src": "4668:18:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RawAttestation_$94464_storage_$",
                            "typeString": "mapping(uint256 => struct RawAttestation storage ref)"
                          }
                        },
                        "id": 66792,
                        "indexExpression": {
                          "id": 66791,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66773,
                          "src": "4687:5:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4668:25:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawAttestation_$94464_storage",
                          "typeString": "struct RawAttestation storage ref"
                        }
                      },
                      "id": 66793,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4694:17:147",
                      "memberName": "modifyAttestation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 96325,
                      "src": "4668:43:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_RawAttestation_$94464_memory_ptr_$_t_uint256_$returns$_t_bool_$_t_struct$_RawAttestation_$94464_memory_ptr_$bound_to$_t_struct$_RawAttestation_$94464_memory_ptr_$",
                        "typeString": "function (struct RawAttestation memory,uint256) pure returns (bool,struct RawAttestation memory)"
                      }
                    },
                    "id": 66795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4668:49:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_RawAttestation_$94464_memory_ptr_$",
                      "typeString": "tuple(bool,struct RawAttestation memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4625:92:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66798,
                        "name": "random",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66763,
                        "src": "4745:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                          "typeString": "struct Random memory"
                        }
                      },
                      {
                        "id": 66799,
                        "name": "ra",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66789,
                        "src": "4753:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                          "typeString": "struct RawAttestation memory"
                        }
                      },
                      {
                        "id": 66800,
                        "name": "isValid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66786,
                        "src": "4757:7:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                          "typeString": "struct Random memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                          "typeString": "struct RawAttestation memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 66797,
                      "name": "verifyAttestation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66976,
                      "src": "4727:17:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Random_$93422_memory_ptr_$_t_struct$_RawAttestation_$94464_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (struct Random memory,struct RawAttestation memory,bool)"
                      }
                    },
                    "id": 66801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4727:38:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66802,
                  "nodeType": "ExpressionStatement",
                  "src": "4727:38:147"
                }
              ]
            },
            "functionSelector": "dc340c99",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_verifyAttestation_existingNonce",
            "nameLocation": "4308:36:147",
            "parameters": {
              "id": 66766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66763,
                  "mutability": "mutable",
                  "name": "random",
                  "nameLocation": "4359:6:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 66804,
                  "src": "4345:20:147",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                    "typeString": "struct Random"
                  },
                  "typeName": {
                    "id": 66762,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66761,
                      "name": "Random",
                      "nameLocations": [
                        "4345:6:147"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 93422,
                      "src": "4345:6:147"
                    },
                    "referencedDeclaration": 93422,
                    "src": "4345:6:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Random_$93422_storage_ptr",
                      "typeString": "struct Random"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66765,
                  "mutability": "mutable",
                  "name": "mask",
                  "nameLocation": "4375:4:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 66804,
                  "src": "4367:12:147",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66764,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4367:7:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4344:36:147"
            },
            "returnParameters": {
              "id": 66767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4388:0:147"
            },
            "scope": 68279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66844,
            "nodeType": "FunctionDefinition",
            "src": "4778:319:147",
            "nodes": [],
            "body": {
              "id": 66843,
              "nodeType": "Block",
              "src": "4878:219:147",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66814,
                        "name": "random",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66807,
                        "src": "4909:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                          "typeString": "struct Random memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                          "typeString": "struct Random memory"
                        }
                      ],
                      "id": 66813,
                      "name": "test_notarySnapshots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67984,
                      "src": "4888:20:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Random_$93422_memory_ptr_$returns$__$",
                        "typeString": "function (struct Random memory)"
                      }
                    },
                    "id": 66815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4888:28:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66816,
                  "nodeType": "ExpressionStatement",
                  "src": "4888:28:147"
                },
                {
                  "expression": {
                    "id": 66835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 66817,
                        "name": "ra",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66810,
                        "src": "4973:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                          "typeString": "struct RawAttestation memory"
                        }
                      },
                      "id": 66819,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4976:5:147",
                      "memberName": "nonce",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 94455,
                      "src": "4973:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 66823,
                                "name": "ra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66810,
                                "src": "4997:2:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                  "typeString": "struct RawAttestation memory"
                                }
                              },
                              "id": 66824,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5000:5:147",
                              "memberName": "nonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 94455,
                              "src": "4997:8:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 66827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 66825,
                                "name": "DOMAIN_AGENTS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 92877,
                                "src": "5007:13:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 66826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5023:1:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "5007:17:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 66830,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5031:6:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    },
                                    "typeName": {
                                      "id": 66829,
                                      "name": "uint32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5031:6:147",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint32_$",
                                      "typeString": "type(uint32)"
                                    }
                                  ],
                                  "id": 66828,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "5026:4:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 66831,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5026:12:147",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint32",
                                  "typeString": "type(uint32)"
                                }
                              },
                              "id": 66832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5039:3:147",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "5026:16:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 66822,
                            "name": "bound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              28123,
                              28253
                            ],
                            "referencedDeclaration": 28123,
                            "src": "4991:5:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 66833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4991:52:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 66821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4984:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 66820,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4984:6:147",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 66834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4984:60:147",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4973:71:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 66836,
                  "nodeType": "ExpressionStatement",
                  "src": "4973:71:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66838,
                        "name": "random",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66807,
                        "src": "5072:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                          "typeString": "struct Random memory"
                        }
                      },
                      {
                        "id": 66839,
                        "name": "ra",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66810,
                        "src": "5080:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                          "typeString": "struct RawAttestation memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 66840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5084:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                          "typeString": "struct Random memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                          "typeString": "struct RawAttestation memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 66837,
                      "name": "verifyAttestation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66976,
                      "src": "5054:17:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Random_$93422_memory_ptr_$_t_struct$_RawAttestation_$94464_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (struct Random memory,struct RawAttestation memory,bool)"
                      }
                    },
                    "id": 66841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5054:36:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66842,
                  "nodeType": "ExpressionStatement",
                  "src": "5054:36:147"
                }
              ]
            },
            "functionSelector": "de3aa1b8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_verifyAttestation_unknownNonce",
            "nameLocation": "4787:35:147",
            "parameters": {
              "id": 66811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66807,
                  "mutability": "mutable",
                  "name": "random",
                  "nameLocation": "4837:6:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 66844,
                  "src": "4823:20:147",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                    "typeString": "struct Random"
                  },
                  "typeName": {
                    "id": 66806,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66805,
                      "name": "Random",
                      "nameLocations": [
                        "4823:6:147"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 93422,
                      "src": "4823:6:147"
                    },
                    "referencedDeclaration": 93422,
                    "src": "4823:6:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Random_$93422_storage_ptr",
                      "typeString": "struct Random"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66810,
                  "mutability": "mutable",
                  "name": "ra",
                  "nameLocation": "4867:2:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 66844,
                  "src": "4845:24:147",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                    "typeString": "struct RawAttestation"
                  },
                  "typeName": {
                    "id": 66809,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66808,
                      "name": "RawAttestation",
                      "nameLocations": [
                        "4845:14:147"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 94464,
                      "src": "4845:14:147"
                    },
                    "referencedDeclaration": 94464,
                    "src": "4845:14:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RawAttestation_$94464_storage_ptr",
                      "typeString": "struct RawAttestation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4822:48:147"
            },
            "returnParameters": {
              "id": 66812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4878:0:147"
            },
            "scope": 68279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66976,
            "nodeType": "FunctionDefinition",
            "src": "5103:1264:147",
            "nodes": [],
            "body": {
              "id": 66975,
              "nodeType": "Block",
              "src": "5199:1168:147",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    66856
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66856,
                      "mutability": "mutable",
                      "name": "domainIndex",
                      "nameLocation": "5260:11:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 66975,
                      "src": "5252:19:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66855,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5252:7:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66867,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 66858,
                            "name": "random",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66847,
                            "src": "5280:6:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                              "typeString": "struct Random memory"
                            }
                          },
                          "id": 66859,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5287:11:147",
                          "memberName": "nextUint256",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 93627,
                          "src": "5280:18:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Random_$93422_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Random_$93422_memory_ptr_$",
                            "typeString": "function (struct Random memory) pure returns (uint256)"
                          }
                        },
                        "id": 66860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5280:20:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 66861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5302:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 66862,
                            "name": "allDomains",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90773,
                            "src": "5305:10:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint32_$dyn_storage",
                              "typeString": "uint32[] storage ref"
                            }
                          },
                          "id": 66863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5316:6:147",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5305:17:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 66864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5325:1:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5305:21:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 66857,
                      "name": "bound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        28123,
                        28253
                      ],
                      "referencedDeclaration": 28123,
                      "src": "5274:5:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 66866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5274:53:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5252:75:147"
                },
                {
                  "assignments": [
                    66869
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66869,
                      "mutability": "mutable",
                      "name": "domain",
                      "nameLocation": "5344:6:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 66975,
                      "src": "5337:13:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 66868,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5337:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66873,
                  "initialValue": {
                    "baseExpression": {
                      "id": 66870,
                      "name": "allDomains",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90773,
                      "src": "5353:10:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$dyn_storage",
                        "typeString": "uint32[] storage ref"
                      }
                    },
                    "id": 66872,
                    "indexExpression": {
                      "id": 66871,
                      "name": "domainIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66856,
                      "src": "5364:11:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5353:23:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5337:39:147"
                },
                {
                  "assignments": [
                    66875
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66875,
                      "mutability": "mutable",
                      "name": "notaryIndex",
                      "nameLocation": "5424:11:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 66975,
                      "src": "5416:19:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66874,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5416:7:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66885,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 66877,
                            "name": "random",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66847,
                            "src": "5444:6:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                              "typeString": "struct Random memory"
                            }
                          },
                          "id": 66878,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5451:11:147",
                          "memberName": "nextUint256",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 93627,
                          "src": "5444:18:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Random_$93422_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Random_$93422_memory_ptr_$",
                            "typeString": "function (struct Random memory) pure returns (uint256)"
                          }
                        },
                        "id": 66879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5444:20:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 66880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5466:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66881,
                          "name": "DOMAIN_AGENTS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92877,
                          "src": "5469:13:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 66882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5485:1:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5469:17:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 66876,
                      "name": "bound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        28123,
                        28253
                      ],
                      "referencedDeclaration": 28123,
                      "src": "5438:5:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 66884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5438:49:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5416:71:147"
                },
                {
                  "assignments": [
                    66887
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66887,
                      "mutability": "mutable",
                      "name": "notary",
                      "nameLocation": "5505:6:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 66975,
                      "src": "5497:14:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66886,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5497:7:147",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66894,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 66888,
                          "name": "domains",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90778,
                          "src": "5514:7:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Domain_$90770_storage_$",
                            "typeString": "mapping(uint32 => struct SynapseAgents.Domain storage ref)"
                          }
                        },
                        "id": 66890,
                        "indexExpression": {
                          "id": 66889,
                          "name": "domain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66869,
                          "src": "5522:6:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5514:15:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Domain_$90770_storage",
                          "typeString": "struct SynapseAgents.Domain storage ref"
                        }
                      },
                      "id": 66891,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5530:6:147",
                      "memberName": "agents",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90769,
                      "src": "5514:22:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 66893,
                    "indexExpression": {
                      "id": 66892,
                      "name": "notaryIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66875,
                      "src": "5537:11:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5514:35:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5497:52:147"
                },
                {
                  "assignments": [
                    66896,
                    66898
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66896,
                      "mutability": "mutable",
                      "name": "attPayload",
                      "nameLocation": "5573:10:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 66975,
                      "src": "5560:23:147",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 66895,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5560:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 66898,
                      "mutability": "mutable",
                      "name": "attSig",
                      "nameLocation": "5598:6:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 66975,
                      "src": "5585:19:147",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 66897,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5585:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66903,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 66900,
                        "name": "notary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66887,
                        "src": "5624:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66901,
                        "name": "ra",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66850,
                        "src": "5632:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                          "typeString": "struct RawAttestation memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                          "typeString": "struct RawAttestation memory"
                        }
                      ],
                      "id": 66899,
                      "name": "signAttestation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        91118,
                        91144
                      ],
                      "referencedDeclaration": 91144,
                      "src": "5608:15:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_RawAttestation_$94464_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,struct RawAttestation memory) view returns (bytes memory,bytes memory)"
                      }
                    },
                    "id": 66902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5608:27:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bytes memory,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5559:76:147"
                },
                {
                  "condition": {
                    "id": 66905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5649:8:147",
                    "subExpression": {
                      "id": 66904,
                      "name": "isValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66852,
                      "src": "5650:7:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66941,
                  "nodeType": "IfStatement",
                  "src": "5645:379:147",
                  "trueBody": {
                    "id": 66940,
                    "nodeType": "Block",
                    "src": "5659:365:147",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 66909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5730:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 66910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5736:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 66911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5742:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 66912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5748:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 66906,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19821,
                              "src": "5716:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$30102",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 66908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5719:10:147",
                            "memberName": "expectEmit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29863,
                            "src": "5716:13:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                              "typeString": "function (bool,bool,bool,bool) external"
                            }
                          },
                          "id": 66913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5716:37:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66914,
                        "nodeType": "ExpressionStatement",
                        "src": "5716:37:147"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 66916,
                              "name": "attPayload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66896,
                              "src": "5791:10:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 66917,
                              "name": "attSig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66898,
                              "src": "5803:6:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 66915,
                            "name": "InvalidAttestation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3992,
                            "src": "5772:18:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory)"
                            }
                          },
                          "id": 66918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5772:38:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66919,
                        "nodeType": "EmitStatement",
                        "src": "5767:43:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 66921,
                                "name": "AgentFlag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10349,
                                "src": "5903:9:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_AgentFlag_$10349_$",
                                  "typeString": "type(enum AgentFlag)"
                                }
                              },
                              "id": 66922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5913:10:147",
                              "memberName": "Fraudulent",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10347,
                              "src": "5903:20:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AgentFlag_$10349",
                                "typeString": "enum AgentFlag"
                              }
                            },
                            {
                              "id": 66923,
                              "name": "domain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66869,
                              "src": "5925:6:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 66924,
                              "name": "notary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66887,
                              "src": "5933:6:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_AgentFlag_$10349",
                                "typeString": "enum AgentFlag"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 66920,
                            "name": "expectStatusUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71040,
                            "src": "5883:19:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_AgentFlag_$10349_$_t_uint32_$_t_address_$returns$__$",
                              "typeString": "function (enum AgentFlag,uint32,address)"
                            }
                          },
                          "id": 66925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5883:57:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66926,
                        "nodeType": "ExpressionStatement",
                        "src": "5883:57:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 66928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5976:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 66929,
                              "name": "notary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66887,
                              "src": "5979:6:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 66932,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5995:1:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 66931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5987:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 66930,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5987:7:147",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 66933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5987:10:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 66936,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6007:4:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SummitTest_$68279",
                                    "typeString": "contract SummitTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SummitTest_$68279",
                                    "typeString": "contract SummitTest"
                                  }
                                ],
                                "id": 66935,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5999:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 66934,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5999:7:147",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 66937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5999:13:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 66927,
                            "name": "expectDisputeResolved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71180,
                            "src": "5954:21:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address,address)"
                            }
                          },
                          "id": 66938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5954:59:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66939,
                        "nodeType": "ExpressionStatement",
                        "src": "5954:59:147"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 66942,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19821,
                        "src": "6033:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$30102",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 66944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6036:10:147",
                      "memberName": "recordLogs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29353,
                      "src": "6033:13:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 66945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6033:15:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66946,
                  "nodeType": "ExpressionStatement",
                  "src": "6033:15:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66950,
                            "name": "attPayload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66896,
                            "src": "6091:10:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 66951,
                            "name": "attSig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66898,
                            "src": "6103:6:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 66948,
                            "name": "inbox",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91948,
                            "src": "6067:5:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Inbox_$7538",
                              "typeString": "contract Inbox"
                            }
                          },
                          "id": 66949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6073:17:147",
                          "memberName": "verifyAttestation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7435,
                          "src": "6067:23:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes memory,bytes memory) external returns (bool)"
                          }
                        },
                        "id": 66952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6067:43:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 66953,
                        "name": "isValid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66852,
                        "src": "6112:7:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2172657475726e56616c7565",
                        "id": 66954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6121:14:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0344d34ac2de21d33de41335a531bb225b55dc722e6c37bd9b4da62b9212672",
                          "typeString": "literal_string \"!returnValue\""
                        },
                        "value": "!returnValue"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0344d34ac2de21d33de41335a531bb225b55dc722e6c37bd9b4da62b9212672",
                          "typeString": "literal_string \"!returnValue\""
                        }
                      ],
                      "id": 66947,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 20021,
                      "src": "6058:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,bool,string memory)"
                      }
                    },
                    "id": 66955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6058:78:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66956,
                  "nodeType": "ExpressionStatement",
                  "src": "6058:78:147"
                },
                {
                  "condition": {
                    "id": 66957,
                    "name": "isValid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66852,
                    "src": "6150:7:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66968,
                  "nodeType": "IfStatement",
                  "src": "6146:109:147",
                  "trueBody": {
                    "id": 66967,
                    "nodeType": "Block",
                    "src": "6159:96:147",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 66959,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 19821,
                                    "src": "6182:2:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$30102",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 66960,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6185:15:147",
                                  "memberName": "getRecordedLogs",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 29360,
                                  "src": "6182:18:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_array$_t_struct$_Log_$28793_memory_ptr_$dyn_memory_ptr_$",
                                    "typeString": "function () external returns (struct VmSafe.Log memory[] memory)"
                                  }
                                },
                                "id": 66961,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6182:20:147",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Log_$28793_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct VmSafe.Log memory[] memory"
                                }
                              },
                              "id": 66962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6203:6:147",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "6182:27:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 66963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6211:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "456d6974746564206c6f6773207768656e2073686f756c646e2774",
                              "id": 66964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6214:29:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d9a3998c6a6a2d922d3be7fe1f5910b4cb1a4308bfe8a737b41a50f902496b3f",
                                "typeString": "literal_string \"Emitted logs when shouldn't\""
                              },
                              "value": "Emitted logs when shouldn't"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d9a3998c6a6a2d922d3be7fe1f5910b4cb1a4308bfe8a737b41a50f902496b3f",
                                "typeString": "literal_string \"Emitted logs when shouldn't\""
                              }
                            ],
                            "id": 66958,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 18521,
                            "src": "6173:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 66965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6173:71:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66966,
                        "nodeType": "ExpressionStatement",
                        "src": "6173:71:147"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66970,
                        "name": "random",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66847,
                        "src": "6340:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                          "typeString": "struct Random memory"
                        }
                      },
                      {
                        "id": 66971,
                        "name": "ra",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66850,
                        "src": "6348:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                          "typeString": "struct RawAttestation memory"
                        }
                      },
                      {
                        "id": 66972,
                        "name": "isValid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66852,
                        "src": "6352:7:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                          "typeString": "struct Random memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                          "typeString": "struct RawAttestation memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 66969,
                      "name": "verifyAttestationReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67088,
                      "src": "6316:23:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Random_$93422_memory_ptr_$_t_struct$_RawAttestation_$94464_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (struct Random memory,struct RawAttestation memory,bool)"
                      }
                    },
                    "id": 66973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6316:44:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66974,
                  "nodeType": "ExpressionStatement",
                  "src": "6316:44:147"
                }
              ]
            },
            "functionSelector": "32044b6e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyAttestation",
            "nameLocation": "5112:17:147",
            "parameters": {
              "id": 66853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66847,
                  "mutability": "mutable",
                  "name": "random",
                  "nameLocation": "5144:6:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 66976,
                  "src": "5130:20:147",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                    "typeString": "struct Random"
                  },
                  "typeName": {
                    "id": 66846,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66845,
                      "name": "Random",
                      "nameLocations": [
                        "5130:6:147"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 93422,
                      "src": "5130:6:147"
                    },
                    "referencedDeclaration": 93422,
                    "src": "5130:6:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Random_$93422_storage_ptr",
                      "typeString": "struct Random"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66850,
                  "mutability": "mutable",
                  "name": "ra",
                  "nameLocation": "5174:2:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 66976,
                  "src": "5152:24:147",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                    "typeString": "struct RawAttestation"
                  },
                  "typeName": {
                    "id": 66849,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66848,
                      "name": "RawAttestation",
                      "nameLocations": [
                        "5152:14:147"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 94464,
                      "src": "5152:14:147"
                    },
                    "referencedDeclaration": 94464,
                    "src": "5152:14:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RawAttestation_$94464_storage_ptr",
                      "typeString": "struct RawAttestation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66852,
                  "mutability": "mutable",
                  "name": "isValid",
                  "nameLocation": "5183:7:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 66976,
                  "src": "5178:12:147",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66851,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5178:4:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5129:62:147"
            },
            "returnParameters": {
              "id": 66854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5199:0:147"
            },
            "scope": 68279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67088,
            "nodeType": "FunctionDefinition",
            "src": "6373:1114:147",
            "nodes": [],
            "body": {
              "id": 67087,
              "nodeType": "Block",
              "src": "6486:1001:147",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    66988
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66988,
                      "mutability": "mutable",
                      "name": "isValid",
                      "nameLocation": "6575:7:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 67087,
                      "src": "6570:12:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 66987,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6570:4:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66991,
                  "initialValue": {
                    "id": 66990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6585:19:147",
                    "subExpression": {
                      "id": 66989,
                      "name": "isAttestationValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66984,
                      "src": "6586:18:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6570:34:147"
                },
                {
                  "assignments": [
                    66993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66993,
                      "mutability": "mutable",
                      "name": "guardIndex",
                      "nameLocation": "6651:10:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 67087,
                      "src": "6643:18:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66992,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6643:7:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67003,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 66995,
                            "name": "random",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66979,
                            "src": "6670:6:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                              "typeString": "struct Random memory"
                            }
                          },
                          "id": 66996,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6677:11:147",
                          "memberName": "nextUint256",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 93627,
                          "src": "6670:18:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Random_$93422_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Random_$93422_memory_ptr_$",
                            "typeString": "function (struct Random memory) pure returns (uint256)"
                          }
                        },
                        "id": 66997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6670:20:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 66998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6692:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 67001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66999,
                          "name": "DOMAIN_AGENTS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92877,
                          "src": "6695:13:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 67000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6711:1:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6695:17:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 66994,
                      "name": "bound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        28123,
                        28253
                      ],
                      "referencedDeclaration": 28123,
                      "src": "6664:5:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 67002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6664:49:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6643:70:147"
                },
                {
                  "assignments": [
                    67005
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67005,
                      "mutability": "mutable",
                      "name": "guard",
                      "nameLocation": "6731:5:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 67087,
                      "src": "6723:13:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 67004,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6723:7:147",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67012,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 67006,
                          "name": "domains",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90778,
                          "src": "6739:7:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Domain_$90770_storage_$",
                            "typeString": "mapping(uint32 => struct SynapseAgents.Domain storage ref)"
                          }
                        },
                        "id": 67008,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 67007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6747:1:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6739:10:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Domain_$90770_storage",
                          "typeString": "struct SynapseAgents.Domain storage ref"
                        }
                      },
                      "id": 67009,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6750:6:147",
                      "memberName": "agents",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90769,
                      "src": "6739:17:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 67011,
                    "indexExpression": {
                      "id": 67010,
                      "name": "guardIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66993,
                      "src": "6757:10:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6739:29:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6723:45:147"
                },
                {
                  "assignments": [
                    67014,
                    67016
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67014,
                      "mutability": "mutable",
                      "name": "attPayload",
                      "nameLocation": "6792:10:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 67087,
                      "src": "6779:23:147",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 67013,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6779:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 67016,
                      "mutability": "mutable",
                      "name": "arSig",
                      "nameLocation": "6817:5:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 67087,
                      "src": "6804:18:147",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 67015,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6804:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67021,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 67018,
                        "name": "guard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67005,
                        "src": "6848:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 67019,
                        "name": "ra",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66982,
                        "src": "6855:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                          "typeString": "struct RawAttestation memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                          "typeString": "struct RawAttestation memory"
                        }
                      ],
                      "id": 67017,
                      "name": "signAttestationReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        91160,
                        91186
                      ],
                      "referencedDeclaration": 91186,
                      "src": "6826:21:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_RawAttestation_$94464_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,struct RawAttestation memory) view returns (bytes memory,bytes memory)"
                      }
                    },
                    "id": 67020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6826:32:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bytes memory,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6778:80:147"
                },
                {
                  "condition": {
                    "id": 67023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6872:8:147",
                    "subExpression": {
                      "id": 67022,
                      "name": "isValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66988,
                      "src": "6873:7:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67059,
                  "nodeType": "IfStatement",
                  "src": "6868:377:147",
                  "trueBody": {
                    "id": 67058,
                    "nodeType": "Block",
                    "src": "6882:363:147",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 67027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6953:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 67028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6959:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 67029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6965:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 67030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6971:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 67024,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19821,
                              "src": "6939:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$30102",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 67026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6942:10:147",
                            "memberName": "expectEmit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29863,
                            "src": "6939:13:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                              "typeString": "function (bool,bool,bool,bool) external"
                            }
                          },
                          "id": 67031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6939:37:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67032,
                        "nodeType": "ExpressionStatement",
                        "src": "6939:37:147"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 67034,
                              "name": "attPayload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67014,
                              "src": "7020:10:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 67035,
                              "name": "arSig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67016,
                              "src": "7032:5:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 67033,
                            "name": "InvalidAttestationReport",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3999,
                            "src": "6995:24:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory)"
                            }
                          },
                          "id": 67036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6995:43:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67037,
                        "nodeType": "EmitStatement",
                        "src": "6990:48:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 67039,
                                "name": "AgentFlag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10349,
                                "src": "7131:9:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_AgentFlag_$10349_$",
                                  "typeString": "type(enum AgentFlag)"
                                }
                              },
                              "id": 67040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7141:10:147",
                              "memberName": "Fraudulent",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10347,
                              "src": "7131:20:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AgentFlag_$10349",
                                "typeString": "enum AgentFlag"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 67041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7153:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 67042,
                              "name": "guard",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67005,
                              "src": "7156:5:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_AgentFlag_$10349",
                                "typeString": "enum AgentFlag"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 67038,
                            "name": "expectStatusUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71040,
                            "src": "7111:19:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_AgentFlag_$10349_$_t_uint32_$_t_address_$returns$__$",
                              "typeString": "function (enum AgentFlag,uint32,address)"
                            }
                          },
                          "id": 67043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7111:51:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67044,
                        "nodeType": "ExpressionStatement",
                        "src": "7111:51:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 67046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7198:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 67047,
                              "name": "guard",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67005,
                              "src": "7201:5:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 67050,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7216:1:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 67049,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7208:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 67048,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7208:7:147",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 67051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7208:10:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 67054,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7228:4:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SummitTest_$68279",
                                    "typeString": "contract SummitTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SummitTest_$68279",
                                    "typeString": "contract SummitTest"
                                  }
                                ],
                                "id": 67053,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7220:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 67052,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7220:7:147",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 67055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7220:13:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 67045,
                            "name": "expectDisputeResolved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71180,
                            "src": "7176:21:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address,address)"
                            }
                          },
                          "id": 67056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7176:58:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67057,
                        "nodeType": "ExpressionStatement",
                        "src": "7176:58:147"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 67060,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19821,
                        "src": "7254:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$30102",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 67062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7257:10:147",
                      "memberName": "recordLogs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29353,
                      "src": "7254:13:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 67063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7254:15:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67064,
                  "nodeType": "ExpressionStatement",
                  "src": "7254:15:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67068,
                            "name": "attPayload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67014,
                            "src": "7318:10:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 67069,
                            "name": "arSig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67016,
                            "src": "7330:5:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 67066,
                            "name": "inbox",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91948,
                            "src": "7288:5:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Inbox_$7538",
                              "typeString": "contract Inbox"
                            }
                          },
                          "id": 67067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7294:23:147",
                          "memberName": "verifyAttestationReport",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7498,
                          "src": "7288:29:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes memory,bytes memory) external returns (bool)"
                          }
                        },
                        "id": 67070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7288:48:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 67071,
                        "name": "isValid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66988,
                        "src": "7338:7:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2172657475726e56616c7565",
                        "id": 67072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7347:14:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0344d34ac2de21d33de41335a531bb225b55dc722e6c37bd9b4da62b9212672",
                          "typeString": "literal_string \"!returnValue\""
                        },
                        "value": "!returnValue"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0344d34ac2de21d33de41335a531bb225b55dc722e6c37bd9b4da62b9212672",
                          "typeString": "literal_string \"!returnValue\""
                        }
                      ],
                      "id": 67065,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 20021,
                      "src": "7279:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,bool,string memory)"
                      }
                    },
                    "id": 67073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7279:83:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67074,
                  "nodeType": "ExpressionStatement",
                  "src": "7279:83:147"
                },
                {
                  "condition": {
                    "id": 67075,
                    "name": "isValid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66988,
                    "src": "7376:7:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67086,
                  "nodeType": "IfStatement",
                  "src": "7372:109:147",
                  "trueBody": {
                    "id": 67085,
                    "nodeType": "Block",
                    "src": "7385:96:147",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 67077,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 19821,
                                    "src": "7408:2:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$30102",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 67078,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7411:15:147",
                                  "memberName": "getRecordedLogs",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 29360,
                                  "src": "7408:18:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_array$_t_struct$_Log_$28793_memory_ptr_$dyn_memory_ptr_$",
                                    "typeString": "function () external returns (struct VmSafe.Log memory[] memory)"
                                  }
                                },
                                "id": 67079,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7408:20:147",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Log_$28793_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct VmSafe.Log memory[] memory"
                                }
                              },
                              "id": 67080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7429:6:147",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "7408:27:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 67081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7437:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "456d6974746564206c6f6773207768656e2073686f756c646e2774",
                              "id": 67082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7440:29:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d9a3998c6a6a2d922d3be7fe1f5910b4cb1a4308bfe8a737b41a50f902496b3f",
                                "typeString": "literal_string \"Emitted logs when shouldn't\""
                              },
                              "value": "Emitted logs when shouldn't"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d9a3998c6a6a2d922d3be7fe1f5910b4cb1a4308bfe8a737b41a50f902496b3f",
                                "typeString": "literal_string \"Emitted logs when shouldn't\""
                              }
                            ],
                            "id": 67076,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 18521,
                            "src": "7399:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 67083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7399:71:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67084,
                        "nodeType": "ExpressionStatement",
                        "src": "7399:71:147"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "91cf0e21",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyAttestationReport",
            "nameLocation": "6382:23:147",
            "parameters": {
              "id": 66985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66979,
                  "mutability": "mutable",
                  "name": "random",
                  "nameLocation": "6420:6:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 67088,
                  "src": "6406:20:147",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                    "typeString": "struct Random"
                  },
                  "typeName": {
                    "id": 66978,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66977,
                      "name": "Random",
                      "nameLocations": [
                        "6406:6:147"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 93422,
                      "src": "6406:6:147"
                    },
                    "referencedDeclaration": 93422,
                    "src": "6406:6:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Random_$93422_storage_ptr",
                      "typeString": "struct Random"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66982,
                  "mutability": "mutable",
                  "name": "ra",
                  "nameLocation": "6450:2:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 67088,
                  "src": "6428:24:147",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                    "typeString": "struct RawAttestation"
                  },
                  "typeName": {
                    "id": 66981,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66980,
                      "name": "RawAttestation",
                      "nameLocations": [
                        "6428:14:147"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 94464,
                      "src": "6428:14:147"
                    },
                    "referencedDeclaration": 94464,
                    "src": "6428:14:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RawAttestation_$94464_storage_ptr",
                      "typeString": "struct RawAttestation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66984,
                  "mutability": "mutable",
                  "name": "isAttestationValid",
                  "nameLocation": "6459:18:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 67088,
                  "src": "6454:23:147",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66983,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6454:4:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6405:73:147"
            },
            "returnParameters": {
              "id": 66986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6486:0:147"
            },
            "scope": 68279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67393,
            "nodeType": "FunctionDefinition",
            "src": "7493:2453:147",
            "nodes": [],
            "body": {
              "id": 67392,
              "nodeType": "Block",
              "src": "7551:2395:147",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 67198,
                    "nodeType": "Block",
                    "src": "7702:639:147",
                    "statements": [
                      {
                        "assignments": [
                          67108
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 67108,
                            "mutability": "mutable",
                            "name": "states",
                            "nameLocation": "7731:6:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67198,
                            "src": "7716:21:147",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_userDefinedValueType$_State_$13434_$dyn_memory_ptr",
                              "typeString": "State[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 67106,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 67105,
                                  "name": "State",
                                  "nameLocations": [
                                    "7716:5:147"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 13434,
                                  "src": "7716:5:147"
                                },
                                "referencedDeclaration": 13434,
                                "src": "7716:5:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_State_$13434",
                                  "typeString": "State"
                                }
                              },
                              "id": 67107,
                              "nodeType": "ArrayTypeName",
                              "src": "7716:7:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_userDefinedValueType$_State_$13434_$dyn_storage_ptr",
                                "typeString": "State[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 67115,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 67113,
                              "name": "STATES",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66416,
                              "src": "7752:6:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 67112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "7740:11:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_userDefinedValueType$_State_$13434_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (State[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 67110,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 67109,
                                  "name": "State",
                                  "nameLocations": [
                                    "7744:5:147"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 13434,
                                  "src": "7744:5:147"
                                },
                                "referencedDeclaration": 13434,
                                "src": "7744:5:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_State_$13434",
                                  "typeString": "State"
                                }
                              },
                              "id": 67111,
                              "nodeType": "ArrayTypeName",
                              "src": "7744:7:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_userDefinedValueType$_State_$13434_$dyn_storage_ptr",
                                "typeString": "State[]"
                              }
                            }
                          },
                          "id": 67114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7740:19:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_userDefinedValueType$_State_$13434_$dyn_memory_ptr",
                            "typeString": "State[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7716:43:147"
                      },
                      {
                        "body": {
                          "id": 67169,
                          "nodeType": "Block",
                          "src": "7809:310:147",
                          "statements": [
                            {
                              "assignments": [
                                67127
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 67127,
                                  "mutability": "mutable",
                                  "name": "nonce",
                                  "nameLocation": "7895:5:147",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 67169,
                                  "src": "7888:12:147",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 67126,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7888:6:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 67142,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "id": 67131,
                                            "name": "random",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 67091,
                                            "src": "7916:6:147",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                                              "typeString": "struct Random memory"
                                            }
                                          },
                                          "id": 67132,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "7923:10:147",
                                          "memberName": "nextUint32",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 93723,
                                          "src": "7916:17:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Random_$93422_memory_ptr_$returns$_t_uint32_$bound_to$_t_struct$_Random_$93422_memory_ptr_$",
                                            "typeString": "function (struct Random memory) pure returns (uint32)"
                                          }
                                        },
                                        "id": 67133,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7916:19:147",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      {
                                        "hexValue": "31",
                                        "id": 67134,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7937:1:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 67137,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "7945:6:147",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint32_$",
                                                "typeString": "type(uint32)"
                                              },
                                              "typeName": {
                                                "id": 67136,
                                                "name": "uint32",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7945:6:147",
                                                "typeDescriptions": {}
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_type$_t_uint32_$",
                                                "typeString": "type(uint32)"
                                              }
                                            ],
                                            "id": 67135,
                                            "name": "type",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -27,
                                            "src": "7940:4:147",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                              "typeString": "function () pure"
                                            }
                                          },
                                          "id": 67138,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "7940:12:147",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_meta_type_t_uint32",
                                            "typeString": "type(uint32)"
                                          }
                                        },
                                        "id": 67139,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "7953:3:147",
                                        "memberName": "max",
                                        "nodeType": "MemberAccess",
                                        "src": "7940:16:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      ],
                                      "id": 67130,
                                      "name": "bound",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        28123,
                                        28253
                                      ],
                                      "referencedDeclaration": 28123,
                                      "src": "7910:5:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                                      }
                                    },
                                    "id": 67140,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7910:47:147",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 67129,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7903:6:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint32_$",
                                    "typeString": "type(uint32)"
                                  },
                                  "typeName": {
                                    "id": 67128,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7903:6:147",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 67141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7903:55:147",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7888:70:147"
                            },
                            {
                              "expression": {
                                "id": 67155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 67143,
                                      "name": "guardStates",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 66423,
                                      "src": "7976:11:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_RawState_$94427_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(uint256 => struct RawState storage ref))"
                                      }
                                    },
                                    "id": 67146,
                                    "indexExpression": {
                                      "id": 67144,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67095,
                                      "src": "7988:1:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7976:14:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RawState_$94427_storage_$",
                                      "typeString": "mapping(uint256 => struct RawState storage ref)"
                                    }
                                  },
                                  "id": 67147,
                                  "indexExpression": {
                                    "id": 67145,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67117,
                                    "src": "7991:1:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7976:17:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RawState_$94427_storage",
                                    "typeString": "struct RawState storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      "id": 67152,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 67150,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 67117,
                                        "src": "8022:1:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 67151,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8026:1:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "8022:5:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    {
                                      "id": 67153,
                                      "name": "nonce",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67127,
                                      "src": "8036:5:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 67148,
                                      "name": "random",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67091,
                                      "src": "7996:6:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                                        "typeString": "struct Random memory"
                                      }
                                    },
                                    "id": 67149,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8003:9:147",
                                    "memberName": "nextState",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 93909,
                                    "src": "7996:16:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_struct$_Random_$93422_memory_ptr_$_t_uint32_$_t_uint32_$returns$_t_struct$_RawState_$94427_memory_ptr_$bound_to$_t_struct$_Random_$93422_memory_ptr_$",
                                      "typeString": "function (struct Random memory,uint32,uint32) pure returns (struct RawState memory)"
                                    }
                                  },
                                  "id": 67154,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [
                                    "8014:6:147",
                                    "8029:5:147"
                                  ],
                                  "names": [
                                    "origin",
                                    "nonce"
                                  ],
                                  "nodeType": "FunctionCall",
                                  "src": "7996:47:147",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                                    "typeString": "struct RawState memory"
                                  }
                                },
                                "src": "7976:67:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RawState_$94427_storage",
                                  "typeString": "struct RawState storage ref"
                                }
                              },
                              "id": 67156,
                              "nodeType": "ExpressionStatement",
                              "src": "7976:67:147"
                            },
                            {
                              "expression": {
                                "id": 67167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 67157,
                                    "name": "states",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67108,
                                    "src": "8061:6:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_userDefinedValueType$_State_$13434_$dyn_memory_ptr",
                                      "typeString": "State[] memory"
                                    }
                                  },
                                  "id": 67159,
                                  "indexExpression": {
                                    "id": 67158,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67117,
                                    "src": "8068:1:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8061:9:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_userDefinedValueType$_State_$13434",
                                    "typeString": "State"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 67160,
                                          "name": "guardStates",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 66423,
                                          "src": "8073:11:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_RawState_$94427_storage_$_$",
                                            "typeString": "mapping(uint256 => mapping(uint256 => struct RawState storage ref))"
                                          }
                                        },
                                        "id": 67162,
                                        "indexExpression": {
                                          "id": 67161,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 67095,
                                          "src": "8085:1:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8073:14:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RawState_$94427_storage_$",
                                          "typeString": "mapping(uint256 => struct RawState storage ref)"
                                        }
                                      },
                                      "id": 67164,
                                      "indexExpression": {
                                        "id": 67163,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 67117,
                                        "src": "8088:1:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8073:17:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RawState_$94427_storage",
                                        "typeString": "struct RawState storage ref"
                                      }
                                    },
                                    "id": 67165,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8091:11:147",
                                    "memberName": "castToState",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 95657,
                                    "src": "8073:29:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_struct$_RawState_$94427_memory_ptr_$returns$_t_userDefinedValueType$_State_$13434_$bound_to$_t_struct$_RawState_$94427_memory_ptr_$",
                                      "typeString": "function (struct RawState memory) pure returns (State)"
                                    }
                                  },
                                  "id": 67166,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8073:31:147",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_userDefinedValueType$_State_$13434",
                                    "typeString": "State"
                                  }
                                },
                                "src": "8061:43:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_State_$13434",
                                  "typeString": "State"
                                }
                              },
                              "id": 67168,
                              "nodeType": "ExpressionStatement",
                              "src": "8061:43:147"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 67122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 67120,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67117,
                            "src": "7792:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 67121,
                            "name": "STATES",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66416,
                            "src": "7796:6:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7792:10:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 67170,
                        "initializationExpression": {
                          "assignments": [
                            67117
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 67117,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "7785:1:147",
                              "nodeType": "VariableDeclaration",
                              "scope": 67170,
                              "src": "7778:8:147",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "typeName": {
                                "id": 67116,
                                "name": "uint32",
                                "nodeType": "ElementaryTypeName",
                                "src": "7778:6:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 67119,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 67118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7789:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7778:12:147"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 67124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "7804:3:147",
                            "subExpression": {
                              "id": 67123,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67117,
                              "src": "7806:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 67125,
                          "nodeType": "ExpressionStatement",
                          "src": "7804:3:147"
                        },
                        "nodeType": "ForStatement",
                        "src": "7773:346:147"
                      },
                      {
                        "assignments": [
                          67172
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 67172,
                            "mutability": "mutable",
                            "name": "guard",
                            "nameLocation": "8140:5:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67198,
                            "src": "8132:13:147",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 67171,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8132:7:147",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 67179,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 67173,
                                "name": "domains",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 90778,
                                "src": "8148:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Domain_$90770_storage_$",
                                  "typeString": "mapping(uint32 => struct SynapseAgents.Domain storage ref)"
                                }
                              },
                              "id": 67175,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 67174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8156:1:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8148:10:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Domain_$90770_storage",
                                "typeString": "struct SynapseAgents.Domain storage ref"
                              }
                            },
                            "id": 67176,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8159:6:147",
                            "memberName": "agents",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 90769,
                            "src": "8148:17:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 67178,
                          "indexExpression": {
                            "id": 67177,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67095,
                            "src": "8166:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8148:20:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8132:36:147"
                      },
                      {
                        "assignments": [
                          67181,
                          67183
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 67181,
                            "mutability": "mutable",
                            "name": "snapPayload",
                            "nameLocation": "8196:11:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67198,
                            "src": "8183:24:147",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 67180,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "8183:5:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 67183,
                            "mutability": "mutable",
                            "name": "snapSig",
                            "nameLocation": "8222:7:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67198,
                            "src": "8209:20:147",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 67182,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "8209:5:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 67188,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 67185,
                              "name": "guard",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67172,
                              "src": "8246:5:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 67186,
                              "name": "states",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67108,
                              "src": "8253:6:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_userDefinedValueType$_State_$13434_$dyn_memory_ptr",
                                "typeString": "State[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_userDefinedValueType$_State_$13434_$dyn_memory_ptr",
                                "typeString": "State[] memory"
                              }
                            ],
                            "id": 67184,
                            "name": "signSnapshot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              91286,
                              91312,
                              91340
                            ],
                            "referencedDeclaration": 91340,
                            "src": "8233:12:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_array$_t_userDefinedValueType$_State_$13434_$dyn_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,State[] memory) view returns (bytes memory,bytes memory)"
                            }
                          },
                          "id": 67187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8233:27:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bytes memory,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8182:78:147"
                      },
                      {
                        "expression": {
                          "id": 67196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 67189,
                              "name": "guardSnapshots",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66428,
                              "src": "8274:14:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SignedSnapshot_$66413_storage_$",
                                "typeString": "mapping(uint256 => struct SummitTest.SignedSnapshot storage ref)"
                              }
                            },
                            "id": 67191,
                            "indexExpression": {
                              "id": 67190,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67095,
                              "src": "8289:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8274:17:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SignedSnapshot_$66413_storage",
                              "typeString": "struct SummitTest.SignedSnapshot storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 67193,
                                "name": "snapPayload",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67181,
                                "src": "8309:11:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 67194,
                                "name": "snapSig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67183,
                                "src": "8322:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 67192,
                              "name": "SignedSnapshot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66413,
                              "src": "8294:14:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_SignedSnapshot_$66413_storage_ptr_$",
                                "typeString": "type(struct SummitTest.SignedSnapshot storage pointer)"
                              }
                            },
                            "id": 67195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8294:36:147",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SignedSnapshot_$66413_memory_ptr",
                              "typeString": "struct SummitTest.SignedSnapshot memory"
                            }
                          },
                          "src": "8274:56:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignedSnapshot_$66413_storage",
                            "typeString": "struct SummitTest.SignedSnapshot storage ref"
                          }
                        },
                        "id": 67197,
                        "nodeType": "ExpressionStatement",
                        "src": "8274:56:147"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 67100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67098,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67095,
                      "src": "7678:1:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 67099,
                      "name": "DOMAIN_AGENTS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92877,
                      "src": "7682:13:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7678:17:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67199,
                  "initializationExpression": {
                    "assignments": [
                      67095
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 67095,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7671:1:147",
                        "nodeType": "VariableDeclaration",
                        "scope": 67199,
                        "src": "7664:8:147",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 67094,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7664:6:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 67097,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 67096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7675:1:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7664:12:147"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 67102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "7697:3:147",
                      "subExpression": {
                        "id": 67101,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67095,
                        "src": "7699:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 67103,
                    "nodeType": "ExpressionStatement",
                    "src": "7697:3:147"
                  },
                  "nodeType": "ForStatement",
                  "src": "7659:682:147"
                },
                {
                  "body": {
                    "id": 67346,
                    "nodeType": "Block",
                    "src": "8394:1149:147",
                    "statements": [
                      {
                        "body": {
                          "id": 67239,
                          "nodeType": "Block",
                          "src": "8492:136:147",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "74727565",
                                    "id": 67223,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8524:4:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "hexValue": "74727565",
                                    "id": 67224,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8530:4:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "hexValue": "74727565",
                                    "id": 67225,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8536:4:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "hexValue": "74727565",
                                    "id": 67226,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8542:4:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "expression": {
                                    "id": 67220,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 19821,
                                    "src": "8510:2:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$30102",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 67222,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8513:10:147",
                                  "memberName": "expectEmit",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 29863,
                                  "src": "8510:13:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                                    "typeString": "function (bool,bool,bool,bool) external"
                                  }
                                },
                                "id": 67227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8510:37:147",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 67228,
                              "nodeType": "ExpressionStatement",
                              "src": "8510:37:147"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 67230,
                                            "name": "guardStates",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 66423,
                                            "src": "8581:11:147",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_RawState_$94427_storage_$_$",
                                              "typeString": "mapping(uint256 => mapping(uint256 => struct RawState storage ref))"
                                            }
                                          },
                                          "id": 67232,
                                          "indexExpression": {
                                            "id": 67231,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 67201,
                                            "src": "8593:1:147",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8581:14:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RawState_$94427_storage_$",
                                            "typeString": "mapping(uint256 => struct RawState storage ref)"
                                          }
                                        },
                                        "id": 67234,
                                        "indexExpression": {
                                          "id": 67233,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 67211,
                                          "src": "8596:1:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8581:17:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_RawState_$94427_storage",
                                          "typeString": "struct RawState storage ref"
                                        }
                                      },
                                      "id": 67235,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "8599:11:147",
                                      "memberName": "formatState",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 95639,
                                      "src": "8581:29:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_struct$_RawState_$94427_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_struct$_RawState_$94427_memory_ptr_$",
                                        "typeString": "function (struct RawState memory) pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 67236,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8581:31:147",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 67229,
                                  "name": "StateSaved",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4038,
                                  "src": "8570:10:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory)"
                                  }
                                },
                                "id": 67237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8570:43:147",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 67238,
                              "nodeType": "EmitStatement",
                              "src": "8565:48:147"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 67216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 67214,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67211,
                            "src": "8475:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 67215,
                            "name": "STATES",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66416,
                            "src": "8479:6:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8475:10:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 67240,
                        "initializationExpression": {
                          "assignments": [
                            67211
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 67211,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "8468:1:147",
                              "nodeType": "VariableDeclaration",
                              "scope": 67240,
                              "src": "8460:9:147",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 67210,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8460:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 67213,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 67212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8472:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8460:13:147"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 67218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "8487:3:147",
                            "subExpression": {
                              "id": 67217,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67211,
                              "src": "8489:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 67219,
                          "nodeType": "ExpressionStatement",
                          "src": "8487:3:147"
                        },
                        "nodeType": "ForStatement",
                        "src": "8455:173:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 67244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8655:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 67245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8661:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 67246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8667:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 67247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8673:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 67241,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19821,
                              "src": "8641:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$30102",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 67243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8644:10:147",
                            "memberName": "expectEmit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29863,
                            "src": "8641:13:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                              "typeString": "function (bool,bool,bool,bool) external"
                            }
                          },
                          "id": 67248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8641:37:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67249,
                        "nodeType": "ExpressionStatement",
                        "src": "8641:37:147"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 67251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8714:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 67252,
                                    "name": "domains",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 90778,
                                    "src": "8717:7:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Domain_$90770_storage_$",
                                      "typeString": "mapping(uint32 => struct SynapseAgents.Domain storage ref)"
                                    }
                                  },
                                  "id": 67254,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 67253,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8725:1:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8717:10:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Domain_$90770_storage",
                                    "typeString": "struct SynapseAgents.Domain storage ref"
                                  }
                                },
                                "id": 67255,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8728:6:147",
                                "memberName": "agents",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 90769,
                                "src": "8717:17:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 67257,
                              "indexExpression": {
                                "id": 67256,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67201,
                                "src": "8735:1:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8717:20:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 67258,
                                  "name": "guardSnapshots",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66428,
                                  "src": "8739:14:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SignedSnapshot_$66413_storage_$",
                                    "typeString": "mapping(uint256 => struct SummitTest.SignedSnapshot storage ref)"
                                  }
                                },
                                "id": 67260,
                                "indexExpression": {
                                  "id": 67259,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67201,
                                  "src": "8754:1:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8739:17:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SignedSnapshot_$66413_storage",
                                  "typeString": "struct SummitTest.SignedSnapshot storage ref"
                                }
                              },
                              "id": 67261,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8757:8:147",
                              "memberName": "snapshot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66410,
                              "src": "8739:26:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 67262,
                                  "name": "guardSnapshots",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66428,
                                  "src": "8767:14:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SignedSnapshot_$66413_storage_$",
                                    "typeString": "mapping(uint256 => struct SummitTest.SignedSnapshot storage ref)"
                                  }
                                },
                                "id": 67264,
                                "indexExpression": {
                                  "id": 67263,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67201,
                                  "src": "8782:1:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8767:17:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SignedSnapshot_$66413_storage",
                                  "typeString": "struct SummitTest.SignedSnapshot storage ref"
                                }
                              },
                              "id": 67265,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8785:9:147",
                              "memberName": "signature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66412,
                              "src": "8767:27:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            ],
                            "id": 67250,
                            "name": "SnapshotAccepted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3974,
                            "src": "8697:16:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint32,address,bytes memory,bytes memory)"
                            }
                          },
                          "id": 67266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8697:98:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67267,
                        "nodeType": "EmitStatement",
                        "src": "8692:103:147"
                      },
                      {
                        "assignments": [
                          67269,
                          67271,
                          67274
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 67269,
                            "mutability": "mutable",
                            "name": "attPayload",
                            "nameLocation": "8823:10:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67346,
                            "src": "8810:23:147",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 67268,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "8810:5:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 67271,
                            "mutability": "mutable",
                            "name": "agentRoot",
                            "nameLocation": "8843:9:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67346,
                            "src": "8835:17:147",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 67270,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8835:7:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 67274,
                            "mutability": "mutable",
                            "name": "snapGas",
                            "nameLocation": "8871:7:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67346,
                            "src": "8854:24:147",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 67272,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8854:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 67273,
                              "nodeType": "ArrayTypeName",
                              "src": "8854:9:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 67286,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 67277,
                                  "name": "guardSnapshots",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66428,
                                  "src": "8919:14:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SignedSnapshot_$66413_storage_$",
                                    "typeString": "mapping(uint256 => struct SummitTest.SignedSnapshot storage ref)"
                                  }
                                },
                                "id": 67279,
                                "indexExpression": {
                                  "id": 67278,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67201,
                                  "src": "8934:1:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8919:17:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SignedSnapshot_$66413_storage",
                                  "typeString": "struct SummitTest.SignedSnapshot storage ref"
                                }
                              },
                              "id": 67280,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8937:8:147",
                              "memberName": "snapshot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66410,
                              "src": "8919:26:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 67281,
                                  "name": "guardSnapshots",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66428,
                                  "src": "8947:14:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SignedSnapshot_$66413_storage_$",
                                    "typeString": "mapping(uint256 => struct SummitTest.SignedSnapshot storage ref)"
                                  }
                                },
                                "id": 67283,
                                "indexExpression": {
                                  "id": 67282,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67201,
                                  "src": "8962:1:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8947:17:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SignedSnapshot_$66413_storage",
                                  "typeString": "struct SummitTest.SignedSnapshot storage ref"
                                }
                              },
                              "id": 67284,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8965:9:147",
                              "memberName": "signature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66412,
                              "src": "8947:27:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            ],
                            "expression": {
                              "id": 67275,
                              "name": "inbox",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91948,
                              "src": "8898:5:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Inbox_$7538",
                                "typeString": "contract Inbox"
                              }
                            },
                            "id": 67276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8904:14:147",
                            "memberName": "submitSnapshot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7132,
                            "src": "8898:20:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (bytes memory,bytes memory) external returns (bytes memory,bytes32,uint256[] memory)"
                            }
                          },
                          "id": 67285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8898:77:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "tuple(bytes memory,bytes32,uint256[] memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8809:166:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67288,
                              "name": "attPayload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67269,
                              "src": "8998:10:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 67289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9010:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "hexValue": "47756172643a206e6f6e2d656d707479206174746573746174696f6e",
                              "id": 67290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9014:30:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9d98b905ecd089d8692768adb209ff7b2393040fcbc561a94c6a7073082a55cb",
                                "typeString": "literal_string \"Guard: non-empty attestation\""
                              },
                              "value": "Guard: non-empty attestation"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9d98b905ecd089d8692768adb209ff7b2393040fcbc561a94c6a7073082a55cb",
                                "typeString": "literal_string \"Guard: non-empty attestation\""
                              }
                            ],
                            "id": 67287,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 20050,
                            "src": "8989:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory,string memory)"
                            }
                          },
                          "id": 67291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8989:56:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67292,
                        "nodeType": "ExpressionStatement",
                        "src": "8989:56:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67294,
                              "name": "agentRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67271,
                              "src": "9068:9:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 67297,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9087:1:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 67296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9079:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 67295,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9079:7:147",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 67298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9079:10:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "47756172643a206e6f6e2d656d707479206167656e7420726f6f74",
                              "id": 67299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9091:29:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5b05fecb049ec3b94aa927b7f0f24b1ef2371443a98be8ab4081f128bdc8b9c7",
                                "typeString": "literal_string \"Guard: non-empty agent root\""
                              },
                              "value": "Guard: non-empty agent root"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5b05fecb049ec3b94aa927b7f0f24b1ef2371443a98be8ab4081f128bdc8b9c7",
                                "typeString": "literal_string \"Guard: non-empty agent root\""
                              }
                            ],
                            "id": 67293,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 18382,
                            "src": "9059:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,bytes32,string memory)"
                            }
                          },
                          "id": 67300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9059:62:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67301,
                        "nodeType": "ExpressionStatement",
                        "src": "9059:62:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 67303,
                                "name": "snapGas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67274,
                                "src": "9144:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 67304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9152:6:147",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "9144:14:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 67305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9160:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "47756172643a206e6f6e2d656d70747920736e6170206761732064617461",
                              "id": 67306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9163:32:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6cf8108967a825bea6c16225b0dd61dff2a5271e5a2873294e2eb3c9cb21eaf4",
                                "typeString": "literal_string \"Guard: non-empty snap gas data\""
                              },
                              "value": "Guard: non-empty snap gas data"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6cf8108967a825bea6c16225b0dd61dff2a5271e5a2873294e2eb3c9cb21eaf4",
                                "typeString": "literal_string \"Guard: non-empty snap gas data\""
                              }
                            ],
                            "id": 67302,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 18521,
                            "src": "9135:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 67307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9135:61:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67308,
                        "nodeType": "ExpressionStatement",
                        "src": "9135:61:147"
                      },
                      {
                        "body": {
                          "id": 67344,
                          "nodeType": "Block",
                          "src": "9287:246:147",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        },
                                        "id": 67326,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 67324,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 67310,
                                          "src": "9376:1:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 67325,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9380:1:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "9376:5:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      {
                                        "baseExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 67327,
                                              "name": "domains",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 90778,
                                              "src": "9383:7:147",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Domain_$90770_storage_$",
                                                "typeString": "mapping(uint32 => struct SynapseAgents.Domain storage ref)"
                                              }
                                            },
                                            "id": 67329,
                                            "indexExpression": {
                                              "hexValue": "30",
                                              "id": 67328,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "9391:1:147",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9383:10:147",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Domain_$90770_storage",
                                              "typeString": "struct SynapseAgents.Domain storage ref"
                                            }
                                          },
                                          "id": 67330,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "9394:6:147",
                                          "memberName": "agents",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 90769,
                                          "src": "9383:17:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 67332,
                                        "indexExpression": {
                                          "id": 67331,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 67201,
                                          "src": "9401:1:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9383:20:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 67321,
                                            "name": "summit",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 91945,
                                            "src": "9348:6:147",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 67320,
                                          "name": "ISnapshotHub",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9341,
                                          "src": "9335:12:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ISnapshotHub_$9341_$",
                                            "typeString": "type(contract ISnapshotHub)"
                                          }
                                        },
                                        "id": 67322,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9335:20:147",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ISnapshotHub_$9341",
                                          "typeString": "contract ISnapshotHub"
                                        }
                                      },
                                      "id": 67323,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9356:19:147",
                                      "memberName": "getLatestAgentState",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 9286,
                                      "src": "9335:40:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint32_$_t_address_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (uint32,address) view external returns (bytes memory)"
                                      }
                                    },
                                    "id": 67333,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9335:69:147",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 67334,
                                            "name": "guardStates",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 66423,
                                            "src": "9426:11:147",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_RawState_$94427_storage_$_$",
                                              "typeString": "mapping(uint256 => mapping(uint256 => struct RawState storage ref))"
                                            }
                                          },
                                          "id": 67336,
                                          "indexExpression": {
                                            "id": 67335,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 67201,
                                            "src": "9438:1:147",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "9426:14:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RawState_$94427_storage_$",
                                            "typeString": "mapping(uint256 => struct RawState storage ref)"
                                          }
                                        },
                                        "id": 67338,
                                        "indexExpression": {
                                          "id": 67337,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 67310,
                                          "src": "9441:1:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9426:17:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_RawState_$94427_storage",
                                          "typeString": "struct RawState storage ref"
                                        }
                                      },
                                      "id": 67339,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9444:11:147",
                                      "memberName": "formatState",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 95639,
                                      "src": "9426:29:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_struct$_RawState_$94427_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_struct$_RawState_$94427_memory_ptr_$",
                                        "typeString": "function (struct RawState memory) pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 67340,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9426:31:147",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "hexValue": "216c617465737453746174653a206775617264",
                                    "id": 67341,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9479:21:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_924354686deecf13b06af611e48ddc3e88d3f07fb2729c3ceb0c5bc648da97d5",
                                      "typeString": "literal_string \"!latestState: guard\""
                                    },
                                    "value": "!latestState: guard"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_924354686deecf13b06af611e48ddc3e88d3f07fb2729c3ceb0c5bc648da97d5",
                                      "typeString": "literal_string \"!latestState: guard\""
                                    }
                                  ],
                                  "id": 67319,
                                  "name": "assertEq",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    19996,
                                    20021,
                                    20034,
                                    20050,
                                    20092,
                                    20134,
                                    20176,
                                    20213,
                                    20250,
                                    20287,
                                    18302,
                                    18327,
                                    18357,
                                    18382,
                                    18441,
                                    18466,
                                    18496,
                                    18521,
                                    19621,
                                    19656
                                  ],
                                  "referencedDeclaration": 20050,
                                  "src": "9305:8:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory,bytes memory,string memory)"
                                  }
                                },
                                "id": 67342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9305:213:147",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 67343,
                              "nodeType": "ExpressionStatement",
                              "src": "9305:213:147"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 67315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 67313,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67310,
                            "src": "9270:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 67314,
                            "name": "STATES",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66416,
                            "src": "9274:6:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9270:10:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 67345,
                        "initializationExpression": {
                          "assignments": [
                            67310
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 67310,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "9263:1:147",
                              "nodeType": "VariableDeclaration",
                              "scope": 67345,
                              "src": "9256:8:147",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "typeName": {
                                "id": 67309,
                                "name": "uint32",
                                "nodeType": "ElementaryTypeName",
                                "src": "9256:6:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 67312,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 67311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9267:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9256:12:147"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 67317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "9282:3:147",
                            "subExpression": {
                              "id": 67316,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67310,
                              "src": "9284:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 67318,
                          "nodeType": "ExpressionStatement",
                          "src": "9282:3:147"
                        },
                        "nodeType": "ForStatement",
                        "src": "9251:282:147"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 67206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67204,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67201,
                      "src": "8370:1:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 67205,
                      "name": "DOMAIN_AGENTS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92877,
                      "src": "8374:13:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8370:17:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67347,
                  "initializationExpression": {
                    "assignments": [
                      67201
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 67201,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8363:1:147",
                        "nodeType": "VariableDeclaration",
                        "scope": 67347,
                        "src": "8356:8:147",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 67200,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8356:6:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 67203,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 67202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8367:1:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8356:12:147"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 67208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "8389:3:147",
                      "subExpression": {
                        "id": 67207,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67201,
                        "src": "8391:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 67209,
                    "nodeType": "ExpressionStatement",
                    "src": "8389:3:147"
                  },
                  "nodeType": "ForStatement",
                  "src": "8351:1192:147"
                },
                {
                  "body": {
                    "id": 67387,
                    "nodeType": "Block",
                    "src": "9596:278:147",
                    "statements": [
                      {
                        "assignments": [
                          67359,
                          67361
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 67359,
                            "mutability": "mutable",
                            "name": "snapPayload",
                            "nameLocation": "9624:11:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67387,
                            "src": "9611:24:147",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 67358,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "9611:5:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 67361,
                            "mutability": "mutable",
                            "name": "snapSignature",
                            "nameLocation": "9650:13:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67387,
                            "src": "9637:26:147",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 67360,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "9637:5:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 67368,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 67366,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67349,
                              "src": "9705:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 67363,
                                  "name": "summit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91945,
                                  "src": "9680:6:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 67362,
                                "name": "ISnapshotHub",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9341,
                                "src": "9667:12:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISnapshotHub_$9341_$",
                                  "typeString": "type(contract ISnapshotHub)"
                                }
                              },
                              "id": 67364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9667:20:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISnapshotHub_$9341",
                                "typeString": "contract ISnapshotHub"
                              }
                            },
                            "id": 67365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9688:16:147",
                            "memberName": "getGuardSnapshot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9309,
                            "src": "9667:37:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (bytes memory,bytes memory)"
                            }
                          },
                          "id": 67367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9667:40:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bytes memory,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9610:97:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67370,
                              "name": "snapPayload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67359,
                              "src": "9730:11:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 67371,
                                  "name": "guardSnapshots",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66428,
                                  "src": "9743:14:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SignedSnapshot_$66413_storage_$",
                                    "typeString": "mapping(uint256 => struct SummitTest.SignedSnapshot storage ref)"
                                  }
                                },
                                "id": 67373,
                                "indexExpression": {
                                  "id": 67372,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67349,
                                  "src": "9758:1:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9743:17:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SignedSnapshot_$66413_storage",
                                  "typeString": "struct SummitTest.SignedSnapshot storage ref"
                                }
                              },
                              "id": 67374,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9761:8:147",
                              "memberName": "snapshot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66410,
                              "src": "9743:26:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "hexValue": "21736e617073686f74",
                              "id": 67375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9771:11:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ca461d7e55cca810c70c5b3e8e9eb718296fc1cbcbfe498ba5c657788b11aca5",
                                "typeString": "literal_string \"!snapshot\""
                              },
                              "value": "!snapshot"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ca461d7e55cca810c70c5b3e8e9eb718296fc1cbcbfe498ba5c657788b11aca5",
                                "typeString": "literal_string \"!snapshot\""
                              }
                            ],
                            "id": 67369,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 20050,
                            "src": "9721:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory,string memory)"
                            }
                          },
                          "id": 67376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9721:62:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67377,
                        "nodeType": "ExpressionStatement",
                        "src": "9721:62:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67379,
                              "name": "snapSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67361,
                              "src": "9806:13:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 67380,
                                  "name": "guardSnapshots",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66428,
                                  "src": "9821:14:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SignedSnapshot_$66413_storage_$",
                                    "typeString": "mapping(uint256 => struct SummitTest.SignedSnapshot storage ref)"
                                  }
                                },
                                "id": 67382,
                                "indexExpression": {
                                  "id": 67381,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67349,
                                  "src": "9836:1:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9821:17:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SignedSnapshot_$66413_storage",
                                  "typeString": "struct SummitTest.SignedSnapshot storage ref"
                                }
                              },
                              "id": 67383,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9839:9:147",
                              "memberName": "signature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66412,
                              "src": "9821:27:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "hexValue": "217369676e6174757265",
                              "id": 67384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9850:12:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_905dcf5d09c790b0477493ab37db580eac2830b78e596be1175fe0ff2c317669",
                                "typeString": "literal_string \"!signature\""
                              },
                              "value": "!signature"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_905dcf5d09c790b0477493ab37db580eac2830b78e596be1175fe0ff2c317669",
                                "typeString": "literal_string \"!signature\""
                              }
                            ],
                            "id": 67378,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 20050,
                            "src": "9797:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory,string memory)"
                            }
                          },
                          "id": 67385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9797:66:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67386,
                        "nodeType": "ExpressionStatement",
                        "src": "9797:66:147"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 67354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67352,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67349,
                      "src": "9572:1:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 67353,
                      "name": "DOMAIN_AGENTS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92877,
                      "src": "9576:13:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9572:17:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67388,
                  "initializationExpression": {
                    "assignments": [
                      67349
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 67349,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9565:1:147",
                        "nodeType": "VariableDeclaration",
                        "scope": 67388,
                        "src": "9558:8:147",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 67348,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9558:6:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 67351,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 67350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9569:1:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9558:12:147"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 67356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "9591:3:147",
                      "subExpression": {
                        "id": 67355,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67349,
                        "src": "9593:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 67357,
                    "nodeType": "ExpressionStatement",
                    "src": "9591:3:147"
                  },
                  "nodeType": "ForStatement",
                  "src": "9553:321:147"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 67389,
                      "name": "checkLatestState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68066,
                      "src": "9921:16:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 67390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9921:18:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67391,
                  "nodeType": "ExpressionStatement",
                  "src": "9921:18:147"
                }
              ]
            },
            "functionSelector": "5add0d47",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_guardSnapshots",
            "nameLocation": "7502:19:147",
            "parameters": {
              "id": 67092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67091,
                  "mutability": "mutable",
                  "name": "random",
                  "nameLocation": "7536:6:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 67393,
                  "src": "7522:20:147",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                    "typeString": "struct Random"
                  },
                  "typeName": {
                    "id": 67090,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67089,
                      "name": "Random",
                      "nameLocations": [
                        "7522:6:147"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 93422,
                      "src": "7522:6:147"
                    },
                    "referencedDeclaration": 93422,
                    "src": "7522:6:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Random_$93422_storage_ptr",
                      "typeString": "struct Random"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7521:22:147"
            },
            "returnParameters": {
              "id": 67093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7551:0:147"
            },
            "scope": 68279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67984,
            "nodeType": "FunctionDefinition",
            "src": "9952:5909:147",
            "nodes": [],
            "body": {
              "id": 67983,
              "nodeType": "Block",
              "src": "10011:5850:147",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67400,
                        "name": "random",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67396,
                        "src": "10139:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                          "typeString": "struct Random memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                          "typeString": "struct Random memory"
                        }
                      ],
                      "id": 67399,
                      "name": "test_guardSnapshots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67393,
                      "src": "10119:19:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Random_$93422_memory_ptr_$returns$__$",
                        "typeString": "function (struct Random memory)"
                      }
                    },
                    "id": 67401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10119:27:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67402,
                  "nodeType": "ExpressionStatement",
                  "src": "10119:27:147"
                },
                {
                  "assignments": [
                    67407
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67407,
                      "mutability": "mutable",
                      "name": "snapPayloads",
                      "nameLocation": "10172:12:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 67983,
                      "src": "10157:27:147",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 67405,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10157:5:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 67406,
                        "nodeType": "ArrayTypeName",
                        "src": "10157:7:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67413,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 67411,
                        "name": "DOMAIN_AGENTS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92877,
                        "src": "10199:13:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 67410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10187:11:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 67408,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10191:5:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 67409,
                        "nodeType": "ArrayTypeName",
                        "src": "10191:7:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 67412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10187:26:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10157:56:147"
                },
                {
                  "assignments": [
                    67418
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67418,
                      "mutability": "mutable",
                      "name": "snapSignatures",
                      "nameLocation": "10238:14:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 67983,
                      "src": "10223:29:147",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 67416,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10223:5:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 67417,
                        "nodeType": "ArrayTypeName",
                        "src": "10223:7:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67424,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 67422,
                        "name": "DOMAIN_AGENTS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92877,
                        "src": "10267:13:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 67421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10255:11:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 67419,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10259:5:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 67420,
                        "nodeType": "ArrayTypeName",
                        "src": "10259:7:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 67423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10255:26:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10223:58:147"
                },
                {
                  "body": {
                    "id": 67885,
                    "nodeType": "Block",
                    "src": "10420:4606:147",
                    "statements": [
                      {
                        "assignments": [
                          67437
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 67437,
                            "mutability": "mutable",
                            "name": "ra",
                            "nameLocation": "10509:2:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67885,
                            "src": "10487:24:147",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                              "typeString": "struct RawAttestation"
                            },
                            "typeName": {
                              "id": 67436,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 67435,
                                "name": "RawAttestation",
                                "nameLocations": [
                                  "10487:14:147"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 94464,
                                "src": "10487:14:147"
                              },
                              "referencedDeclaration": 94464,
                              "src": "10487:14:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawAttestation_$94464_storage_ptr",
                                "typeString": "struct RawAttestation"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 67438,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10487:24:147"
                      },
                      {
                        "expression": {
                          "id": 67445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 67439,
                              "name": "ra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67437,
                              "src": "10525:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                "typeString": "struct RawAttestation memory"
                              }
                            },
                            "id": 67441,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "10528:11:147",
                            "memberName": "blockNumber",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94457,
                            "src": "10525:14:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 67442,
                                "name": "random",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67396,
                                "src": "10542:6:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                                  "typeString": "struct Random memory"
                                }
                              },
                              "id": 67443,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10549:10:147",
                              "memberName": "nextUint40",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 93707,
                              "src": "10542:17:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_Random_$93422_memory_ptr_$returns$_t_uint40_$bound_to$_t_struct$_Random_$93422_memory_ptr_$",
                                "typeString": "function (struct Random memory) pure returns (uint40)"
                              }
                            },
                            "id": 67444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10542:19:147",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            }
                          },
                          "src": "10525:36:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "id": 67446,
                        "nodeType": "ExpressionStatement",
                        "src": "10525:36:147"
                      },
                      {
                        "expression": {
                          "id": 67453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 67447,
                              "name": "ra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67437,
                              "src": "10575:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                "typeString": "struct RawAttestation memory"
                              }
                            },
                            "id": 67449,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "10578:9:147",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94459,
                            "src": "10575:12:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 67450,
                                "name": "random",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67396,
                                "src": "10590:6:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                                  "typeString": "struct Random memory"
                                }
                              },
                              "id": 67451,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10597:10:147",
                              "memberName": "nextUint40",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 93707,
                              "src": "10590:17:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_Random_$93422_memory_ptr_$returns$_t_uint40_$bound_to$_t_struct$_Random_$93422_memory_ptr_$",
                                "typeString": "function (struct Random memory) pure returns (uint40)"
                              }
                            },
                            "id": 67452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10590:19:147",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            }
                          },
                          "src": "10575:34:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "id": 67454,
                        "nodeType": "ExpressionStatement",
                        "src": "10575:34:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 67458,
                                "name": "ra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67437,
                                "src": "10631:2:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                  "typeString": "struct RawAttestation memory"
                                }
                              },
                              "id": 67459,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10634:11:147",
                              "memberName": "blockNumber",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 94457,
                              "src": "10631:14:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            ],
                            "expression": {
                              "id": 67455,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19821,
                              "src": "10623:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$30102",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 67457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10626:4:147",
                            "memberName": "roll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29759,
                            "src": "10623:7:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 67460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10623:23:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67461,
                        "nodeType": "ExpressionStatement",
                        "src": "10623:23:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 67465,
                                "name": "ra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67437,
                                "src": "10668:2:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                  "typeString": "struct RawAttestation memory"
                                }
                              },
                              "id": 67466,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10671:9:147",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 94459,
                              "src": "10668:12:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            ],
                            "expression": {
                              "id": 67462,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19821,
                              "src": "10660:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$30102",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 67464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10663:4:147",
                            "memberName": "warp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29754,
                            "src": "10660:7:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 67467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10660:21:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67468,
                        "nodeType": "ExpressionStatement",
                        "src": "10660:21:147"
                      },
                      {
                        "assignments": [
                          67471
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 67471,
                            "mutability": "mutable",
                            "name": "rs",
                            "nameLocation": "10715:2:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67885,
                            "src": "10696:21:147",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RawSnapshot_$94445_memory_ptr",
                              "typeString": "struct RawSnapshot"
                            },
                            "typeName": {
                              "id": 67470,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 67469,
                                "name": "RawSnapshot",
                                "nameLocations": [
                                  "10696:11:147"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 94445,
                                "src": "10696:11:147"
                              },
                              "referencedDeclaration": 94445,
                              "src": "10696:11:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawSnapshot_$94445_storage_ptr",
                                "typeString": "struct RawSnapshot"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 67472,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10696:21:147"
                      },
                      {
                        "expression": {
                          "id": 67482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 67473,
                              "name": "rs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67471,
                              "src": "10731:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawSnapshot_$94445_memory_ptr",
                                "typeString": "struct RawSnapshot memory"
                              }
                            },
                            "id": 67475,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "10734:6:147",
                            "memberName": "states",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94444,
                            "src": "10731:9:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_RawState_$94427_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct RawState memory[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 67480,
                                "name": "STATES",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66416,
                                "src": "10758:6:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 67479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "10743:14:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_RawState_$94427_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (struct RawState memory[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 67477,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 67476,
                                    "name": "RawState",
                                    "nameLocations": [
                                      "10747:8:147"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 94427,
                                    "src": "10747:8:147"
                                  },
                                  "referencedDeclaration": 94427,
                                  "src": "10747:8:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RawState_$94427_storage_ptr",
                                    "typeString": "struct RawState"
                                  }
                                },
                                "id": 67478,
                                "nodeType": "ArrayTypeName",
                                "src": "10747:10:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_RawState_$94427_storage_$dyn_storage_ptr",
                                  "typeString": "struct RawState[]"
                                }
                              }
                            },
                            "id": 67481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10743:22:147",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_RawState_$94427_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct RawState memory[] memory"
                            }
                          },
                          "src": "10731:34:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_RawState_$94427_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct RawState memory[] memory"
                          }
                        },
                        "id": 67483,
                        "nodeType": "ExpressionStatement",
                        "src": "10731:34:147"
                      },
                      {
                        "body": {
                          "id": 67519,
                          "nodeType": "Block",
                          "src": "10816:389:147",
                          "statements": [
                            {
                              "assignments": [
                                67495
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 67495,
                                  "mutability": "mutable",
                                  "name": "guardIndex",
                                  "nameLocation": "11069:10:147",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 67519,
                                  "src": "11061:18:147",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 67494,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11061:7:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 67506,
                              "initialValue": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 67498,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 67496,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67485,
                                    "src": "11082:1:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 67497,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11087:1:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "11082:6:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 67504,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 67500,
                                        "name": "random",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 67396,
                                        "src": "11095:6:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                                          "typeString": "struct Random memory"
                                        }
                                      },
                                      "id": 67501,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "11102:11:147",
                                      "memberName": "nextUint256",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 93627,
                                      "src": "11095:18:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Random_$93422_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Random_$93422_memory_ptr_$",
                                        "typeString": "function (struct Random memory) pure returns (uint256)"
                                      }
                                    },
                                    "id": 67502,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11095:20:147",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "%",
                                  "rightExpression": {
                                    "id": 67503,
                                    "name": "DOMAIN_AGENTS",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 92877,
                                    "src": "11118:13:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11095:36:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 67505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "11082:49:147",
                                "trueExpression": {
                                  "id": 67499,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67426,
                                  "src": "11091:1:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11061:70:147"
                            },
                            {
                              "expression": {
                                "id": 67517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 67507,
                                      "name": "rs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67471,
                                      "src": "11149:2:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RawSnapshot_$94445_memory_ptr",
                                        "typeString": "struct RawSnapshot memory"
                                      }
                                    },
                                    "id": 67510,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "11152:6:147",
                                    "memberName": "states",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 94444,
                                    "src": "11149:9:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_RawState_$94427_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct RawState memory[] memory"
                                    }
                                  },
                                  "id": 67511,
                                  "indexExpression": {
                                    "id": 67509,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67485,
                                    "src": "11159:1:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11149:12:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                                    "typeString": "struct RawState memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 67512,
                                      "name": "guardStates",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 66423,
                                      "src": "11164:11:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_RawState_$94427_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(uint256 => struct RawState storage ref))"
                                      }
                                    },
                                    "id": 67514,
                                    "indexExpression": {
                                      "id": 67513,
                                      "name": "guardIndex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67495,
                                      "src": "11176:10:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11164:23:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RawState_$94427_storage_$",
                                      "typeString": "mapping(uint256 => struct RawState storage ref)"
                                    }
                                  },
                                  "id": 67516,
                                  "indexExpression": {
                                    "id": 67515,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67485,
                                    "src": "11188:1:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11164:26:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RawState_$94427_storage",
                                    "typeString": "struct RawState storage ref"
                                  }
                                },
                                "src": "11149:41:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                                  "typeString": "struct RawState memory"
                                }
                              },
                              "id": 67518,
                              "nodeType": "ExpressionStatement",
                              "src": "11149:41:147"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 67490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 67488,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67485,
                            "src": "10799:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 67489,
                            "name": "STATES",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66416,
                            "src": "10803:6:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10799:10:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 67520,
                        "initializationExpression": {
                          "assignments": [
                            67485
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 67485,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "10792:1:147",
                              "nodeType": "VariableDeclaration",
                              "scope": 67520,
                              "src": "10784:9:147",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 67484,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10784:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 67487,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 67486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10796:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "10784:13:147"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 67492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "10811:3:147",
                            "subExpression": {
                              "id": 67491,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67485,
                              "src": "10813:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 67493,
                          "nodeType": "ExpressionStatement",
                          "src": "10811:3:147"
                        },
                        "nodeType": "ForStatement",
                        "src": "10779:426:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67522,
                              "name": "rs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67471,
                              "src": "11307:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawSnapshot_$94445_memory_ptr",
                                "typeString": "struct RawSnapshot memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_RawSnapshot_$94445_memory_ptr",
                                "typeString": "struct RawSnapshot memory"
                              }
                            ],
                            "id": 67521,
                            "name": "acceptSnapshot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91640,
                            "src": "11292:14:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_RawSnapshot_$94445_memory_ptr_$returns$__$",
                              "typeString": "function (struct RawSnapshot memory)"
                            }
                          },
                          "id": 67523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11292:18:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67524,
                        "nodeType": "ExpressionStatement",
                        "src": "11292:18:147"
                      },
                      {
                        "expression": {
                          "id": 67530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 67525,
                              "name": "ra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67437,
                              "src": "11324:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                "typeString": "struct RawAttestation memory"
                              }
                            },
                            "id": 67527,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "11327:8:147",
                            "memberName": "snapRoot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94451,
                            "src": "11324:11:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 67528,
                              "name": "getSnapshotRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91664,
                              "src": "11338:15:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                                "typeString": "function () view returns (bytes32)"
                              }
                            },
                            "id": 67529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11338:17:147",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "11324:31:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 67531,
                        "nodeType": "ExpressionStatement",
                        "src": "11324:31:147"
                      },
                      {
                        "expression": {
                          "id": 67537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 67532,
                              "name": "ra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67437,
                              "src": "11369:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                "typeString": "struct RawAttestation memory"
                              }
                            },
                            "id": 67534,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "11372:10:147",
                            "memberName": "_agentRoot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94461,
                            "src": "11369:13:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 67535,
                              "name": "getAgentRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91780,
                              "src": "11385:12:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                                "typeString": "function () view returns (bytes32)"
                              }
                            },
                            "id": 67536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11385:14:147",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "11369:30:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 67538,
                        "nodeType": "ExpressionStatement",
                        "src": "11369:30:147"
                      },
                      {
                        "expression": {
                          "id": 67545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 67539,
                              "name": "ra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67437,
                              "src": "11413:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                "typeString": "struct RawAttestation memory"
                              }
                            },
                            "id": 67541,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "11416:12:147",
                            "memberName": "_snapGasHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94463,
                            "src": "11413:15:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 67542,
                                "name": "rs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67471,
                                "src": "11431:2:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RawSnapshot_$94445_memory_ptr",
                                  "typeString": "struct RawSnapshot memory"
                                }
                              },
                              "id": 67543,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11434:11:147",
                              "memberName": "snapGasHash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 96156,
                              "src": "11431:14:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_RawSnapshot_$94445_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_RawSnapshot_$94445_memory_ptr_$",
                                "typeString": "function (struct RawSnapshot memory) view returns (bytes32)"
                              }
                            },
                            "id": 67544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11431:16:147",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "11413:34:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 67546,
                        "nodeType": "ExpressionStatement",
                        "src": "11413:34:147"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 67547,
                              "name": "ra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67437,
                              "src": "11461:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                "typeString": "struct RawAttestation memory"
                              }
                            },
                            "id": 67549,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11464:11:147",
                            "memberName": "setDataHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 96221,
                            "src": "11461:14:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_RawAttestation_$94464_memory_ptr_$returns$__$bound_to$_t_struct$_RawAttestation_$94464_memory_ptr_$",
                              "typeString": "function (struct RawAttestation memory) pure"
                            }
                          },
                          "id": 67550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11461:16:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67551,
                        "nodeType": "ExpressionStatement",
                        "src": "11461:16:147"
                      },
                      {
                        "expression": {
                          "id": 67558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 67552,
                              "name": "ra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67437,
                              "src": "11585:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                "typeString": "struct RawAttestation memory"
                              }
                            },
                            "id": 67554,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "11588:5:147",
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94455,
                            "src": "11585:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 67557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 67555,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67426,
                              "src": "11596:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 67556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11600:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11596:5:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "11585:16:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 67559,
                        "nodeType": "ExpressionStatement",
                        "src": "11585:16:147"
                      },
                      {
                        "expression": {
                          "id": 67565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 67560,
                              "name": "notaryAttestations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66433,
                              "src": "11615:18:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RawAttestation_$94464_storage_$",
                                "typeString": "mapping(uint256 => struct RawAttestation storage ref)"
                              }
                            },
                            "id": 67563,
                            "indexExpression": {
                              "expression": {
                                "id": 67561,
                                "name": "ra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67437,
                                "src": "11634:2:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                  "typeString": "struct RawAttestation memory"
                                }
                              },
                              "id": 67562,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11637:5:147",
                              "memberName": "nonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 94455,
                              "src": "11634:8:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11615:28:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RawAttestation_$94464_storage",
                              "typeString": "struct RawAttestation storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 67564,
                            "name": "ra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67437,
                            "src": "11646:2:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                              "typeString": "struct RawAttestation memory"
                            }
                          },
                          "src": "11615:33:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawAttestation_$94464_storage",
                            "typeString": "struct RawAttestation storage ref"
                          }
                        },
                        "id": 67566,
                        "nodeType": "ExpressionStatement",
                        "src": "11615:33:147"
                      },
                      {
                        "assignments": [
                          67568
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 67568,
                            "mutability": "mutable",
                            "name": "attestation",
                            "nameLocation": "11675:11:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67885,
                            "src": "11662:24:147",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 67567,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "11662:5:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 67572,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 67569,
                              "name": "ra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67437,
                              "src": "11689:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                "typeString": "struct RawAttestation memory"
                              }
                            },
                            "id": 67570,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11692:17:147",
                            "memberName": "formatAttestation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 96181,
                            "src": "11689:20:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_RawAttestation_$94464_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_struct$_RawAttestation_$94464_memory_ptr_$",
                              "typeString": "function (struct RawAttestation memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 67571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11689:22:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11662:49:147"
                      },
                      {
                        "assignments": [
                          67574
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 67574,
                            "mutability": "mutable",
                            "name": "notary",
                            "nameLocation": "11734:6:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67885,
                            "src": "11726:14:147",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 67573,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11726:7:147",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 67581,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 67575,
                                "name": "domains",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 90778,
                                "src": "11743:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Domain_$90770_storage_$",
                                  "typeString": "mapping(uint32 => struct SynapseAgents.Domain storage ref)"
                                }
                              },
                              "id": 67577,
                              "indexExpression": {
                                "id": 67576,
                                "name": "DOMAIN_LOCAL",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 92865,
                                "src": "11751:12:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11743:21:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Domain_$90770_storage",
                                "typeString": "struct SynapseAgents.Domain storage ref"
                              }
                            },
                            "id": 67578,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11765:6:147",
                            "memberName": "agents",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 90769,
                            "src": "11743:28:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 67580,
                          "indexExpression": {
                            "id": 67579,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67426,
                            "src": "11772:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11743:31:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11726:48:147"
                      },
                      {
                        "expression": {
                          "id": 67593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "baseExpression": {
                                  "id": 67582,
                                  "name": "snapPayloads",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67407,
                                  "src": "11789:12:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "bytes memory[] memory"
                                  }
                                },
                                "id": 67584,
                                "indexExpression": {
                                  "id": 67583,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67426,
                                  "src": "11802:1:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "11789:15:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 67585,
                                  "name": "snapSignatures",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67418,
                                  "src": "11806:14:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "bytes memory[] memory"
                                  }
                                },
                                "id": 67587,
                                "indexExpression": {
                                  "id": 67586,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67426,
                                  "src": "11821:1:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "11806:17:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "id": 67588,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "11788:36:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 67590,
                                "name": "notary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67574,
                                "src": "11840:6:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 67591,
                                "name": "rs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67471,
                                "src": "11848:2:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RawSnapshot_$94445_memory_ptr",
                                  "typeString": "struct RawSnapshot memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_struct$_RawSnapshot_$94445_memory_ptr",
                                  "typeString": "struct RawSnapshot memory"
                                }
                              ],
                              "id": 67589,
                              "name": "signSnapshot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                91286,
                                91312,
                                91340
                              ],
                              "referencedDeclaration": 91312,
                              "src": "11827:12:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_RawSnapshot_$94445_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "function (address,struct RawSnapshot memory) view returns (bytes memory,bytes memory)"
                              }
                            },
                            "id": 67592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11827:24:147",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes memory)"
                            }
                          },
                          "src": "11788:63:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67594,
                        "nodeType": "ExpressionStatement",
                        "src": "11788:63:147"
                      },
                      {
                        "assignments": [
                          67596,
                          67598,
                          67601
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 67596,
                            "mutability": "mutable",
                            "name": "attPayload",
                            "nameLocation": "11963:10:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67885,
                            "src": "11950:23:147",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 67595,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "11950:5:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 67598,
                            "mutability": "mutable",
                            "name": "agentRoot",
                            "nameLocation": "11983:9:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67885,
                            "src": "11975:17:147",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 67597,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "11975:7:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 67601,
                            "mutability": "mutable",
                            "name": "snapGas",
                            "nameLocation": "12011:7:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67885,
                            "src": "11994:24:147",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 67599,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11994:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 67600,
                              "nodeType": "ArrayTypeName",
                              "src": "11994:9:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 67608,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 67606,
                              "name": "notary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67574,
                              "src": "12086:6:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 67603,
                                  "name": "summit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91945,
                                  "src": "12051:6:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 67602,
                                "name": "ISnapshotHub",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9341,
                                "src": "12038:12:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISnapshotHub_$9341_$",
                                  "typeString": "type(contract ISnapshotHub)"
                                }
                              },
                              "id": 67604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12038:20:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISnapshotHub_$9341",
                                "typeString": "contract ISnapshotHub"
                              }
                            },
                            "id": 67605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12059:26:147",
                            "memberName": "getLatestNotaryAttestation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9299,
                            "src": "12038:47:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (address) view external returns (bytes memory,bytes32,uint256[] memory)"
                            }
                          },
                          "id": 67607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12038:55:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "tuple(bytes memory,bytes32,uint256[] memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11949:144:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67610,
                              "name": "attPayload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67596,
                              "src": "12116:10:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 67611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12128:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "id": 67609,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 20034,
                            "src": "12107:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory)"
                            }
                          },
                          "id": 67612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12107:24:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67613,
                        "nodeType": "ExpressionStatement",
                        "src": "12107:24:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67615,
                              "name": "agentRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67598,
                              "src": "12154:9:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 67618,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12173:1:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 67617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12165:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 67616,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12165:7:147",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 67619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12165:10:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 67614,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 18357,
                            "src": "12145:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32)"
                            }
                          },
                          "id": 67620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12145:31:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67621,
                        "nodeType": "ExpressionStatement",
                        "src": "12145:31:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 67623,
                                "name": "snapGas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67601,
                                "src": "12199:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 67624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12207:6:147",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "12199:14:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 67625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12215:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 67622,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 18496,
                            "src": "12190:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 67626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12190:27:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67627,
                        "nodeType": "ExpressionStatement",
                        "src": "12190:27:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 67631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12246:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 67632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12252:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 67633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12258:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 67634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12264:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 67628,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19821,
                              "src": "12232:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$30102",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 67630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12235:10:147",
                            "memberName": "expectEmit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29863,
                            "src": "12232:13:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                              "typeString": "function (bool,bool,bool,bool) external"
                            }
                          },
                          "id": 67635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12232:37:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67636,
                        "nodeType": "ExpressionStatement",
                        "src": "12232:37:147"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 67638,
                              "name": "attestation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67568,
                              "src": "12305:11:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 67637,
                            "name": "AttestationSaved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4033,
                            "src": "12288:16:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory)"
                            }
                          },
                          "id": 67639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12288:29:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67640,
                        "nodeType": "EmitStatement",
                        "src": "12283:34:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 67644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12345:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 67645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12351:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 67646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12357:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 67647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12363:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 67641,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19821,
                              "src": "12331:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$30102",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 67643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12334:10:147",
                            "memberName": "expectEmit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29863,
                            "src": "12331:13:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                              "typeString": "function (bool,bool,bool,bool) external"
                            }
                          },
                          "id": 67648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12331:37:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67649,
                        "nodeType": "ExpressionStatement",
                        "src": "12331:37:147"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 67651,
                              "name": "DOMAIN_LOCAL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92865,
                              "src": "12404:12:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 67652,
                              "name": "notary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67574,
                              "src": "12418:6:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 67653,
                                "name": "snapPayloads",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67407,
                                "src": "12426:12:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "bytes memory[] memory"
                                }
                              },
                              "id": 67655,
                              "indexExpression": {
                                "id": 67654,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67426,
                                "src": "12439:1:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12426:15:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 67656,
                                "name": "snapSignatures",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67418,
                                "src": "12443:14:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "bytes memory[] memory"
                                }
                              },
                              "id": 67658,
                              "indexExpression": {
                                "id": 67657,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67426,
                                "src": "12458:1:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12443:17:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 67650,
                            "name": "SnapshotAccepted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3974,
                            "src": "12387:16:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint32,address,bytes memory,bytes memory)"
                            }
                          },
                          "id": 67659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12387:74:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67660,
                        "nodeType": "EmitStatement",
                        "src": "12382:79:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67664,
                              "name": "destinationSynapse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91943,
                              "src": "12618:18:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 67667,
                                      "name": "InterfaceDestination",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9719,
                                      "src": "12698:20:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_InterfaceDestination_$9719_$",
                                        "typeString": "type(contract InterfaceDestination)"
                                      }
                                    },
                                    "id": 67668,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "12719:17:147",
                                    "memberName": "acceptAttestation",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9675,
                                    "src": "12698:38:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_uint32_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_userDefinedValueType$_ChainGas_$14599_$dyn_memory_ptr_$returns$_t_bool_$",
                                      "typeString": "function InterfaceDestination.acceptAttestation(uint32,uint256,bytes memory,bytes32,ChainGas[] memory) returns (bool)"
                                    }
                                  },
                                  "id": 67669,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "12737:8:147",
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "12698:47:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 67670,
                                    "name": "agentIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91507,
                                    "src": "12767:10:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                      "typeString": "mapping(address => uint32)"
                                    }
                                  },
                                  "id": 67672,
                                  "indexExpression": {
                                    "id": 67671,
                                    "name": "notary",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67574,
                                    "src": "12778:6:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12767:18:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 67675,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "12812:7:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 67674,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "12812:7:147",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        }
                                      ],
                                      "id": 67673,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "12807:4:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 67676,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12807:13:147",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint256",
                                      "typeString": "type(uint256)"
                                    }
                                  },
                                  "id": 67677,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "12821:3:147",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "12807:17:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 67678,
                                  "name": "attestation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67568,
                                  "src": "12846:11:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 67679,
                                    "name": "ra",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67437,
                                    "src": "12879:2:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                      "typeString": "struct RawAttestation memory"
                                    }
                                  },
                                  "id": 67680,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "12882:10:147",
                                  "memberName": "_agentRoot",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 94461,
                                  "src": "12879:13:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 67681,
                                      "name": "rs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67471,
                                      "src": "12914:2:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RawSnapshot_$94445_memory_ptr",
                                        "typeString": "struct RawSnapshot memory"
                                      }
                                    },
                                    "id": 67682,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "12917:7:147",
                                    "memberName": "snapGas",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 96138,
                                    "src": "12914:10:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_RawSnapshot_$94445_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$bound_to$_t_struct$_RawSnapshot_$94445_memory_ptr_$",
                                      "typeString": "function (struct RawSnapshot memory) view returns (uint256[] memory)"
                                    }
                                  },
                                  "id": 67683,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12914:12:147",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                ],
                                "expression": {
                                  "id": 67665,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "12654:3:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 67666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "12658:18:147",
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "12654:22:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 67684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12654:290:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 67661,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19821,
                              "src": "12587:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$30102",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 67663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12590:10:147",
                            "memberName": "expectCall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29906,
                            "src": "12587:13:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,bytes memory) external"
                            }
                          },
                          "id": 67685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12587:371:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67686,
                        "nodeType": "ExpressionStatement",
                        "src": "12587:371:147"
                      },
                      {
                        "expression": {
                          "id": 67700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 67687,
                                "name": "attPayload",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67596,
                                "src": "12974:10:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 67688,
                                "name": "agentRoot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67598,
                                "src": "12986:9:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 67689,
                                "name": "snapGas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67601,
                                "src": "12997:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              }
                            ],
                            "id": 67690,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "12973:32:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes32,uint256[] memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 67693,
                                  "name": "snapPayloads",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67407,
                                  "src": "13029:12:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "bytes memory[] memory"
                                  }
                                },
                                "id": 67695,
                                "indexExpression": {
                                  "id": 67694,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67426,
                                  "src": "13042:1:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13029:15:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 67696,
                                  "name": "snapSignatures",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67418,
                                  "src": "13046:14:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "bytes memory[] memory"
                                  }
                                },
                                "id": 67698,
                                "indexExpression": {
                                  "id": 67697,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67426,
                                  "src": "13061:1:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13046:17:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 67691,
                                "name": "inbox",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91948,
                                "src": "13008:5:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Inbox_$7538",
                                  "typeString": "contract Inbox"
                                }
                              },
                              "id": 67692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13014:14:147",
                              "memberName": "submitSnapshot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7132,
                              "src": "13008:20:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (bytes memory,bytes memory) external returns (bytes memory,bytes32,uint256[] memory)"
                              }
                            },
                            "id": 67699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13008:56:147",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes32,uint256[] memory)"
                            }
                          },
                          "src": "12973:91:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67701,
                        "nodeType": "ExpressionStatement",
                        "src": "12973:91:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67703,
                              "name": "attPayload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67596,
                              "src": "13087:10:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 67704,
                              "name": "attestation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67568,
                              "src": "13099:11:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "4e6f746172793a20696e636f7272656374206174746573746174696f6e",
                              "id": 67705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13112:31:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a8ebc12bf014fcbd9d3bb65fab9fe0c9f6b420dc0ce93abfe20d5aff6f0ba674",
                                "typeString": "literal_string \"Notary: incorrect attestation\""
                              },
                              "value": "Notary: incorrect attestation"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a8ebc12bf014fcbd9d3bb65fab9fe0c9f6b420dc0ce93abfe20d5aff6f0ba674",
                                "typeString": "literal_string \"Notary: incorrect attestation\""
                              }
                            ],
                            "id": 67702,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 20050,
                            "src": "13078:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory,string memory)"
                            }
                          },
                          "id": 67706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13078:66:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67707,
                        "nodeType": "ExpressionStatement",
                        "src": "13078:66:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67709,
                              "name": "agentRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67598,
                              "src": "13167:9:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 67710,
                                "name": "ra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67437,
                                "src": "13178:2:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                  "typeString": "struct RawAttestation memory"
                                }
                              },
                              "id": 67711,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13181:10:147",
                              "memberName": "_agentRoot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 94461,
                              "src": "13178:13:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "4e6f746172793a20696e636f7272656374206167656e7420726f6f74",
                              "id": 67712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13193:30:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7f7cc2f5832f2aa020a734d8516206aa46f0f0230ffb5dfffbefd05b7be655e5",
                                "typeString": "literal_string \"Notary: incorrect agent root\""
                              },
                              "value": "Notary: incorrect agent root"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7f7cc2f5832f2aa020a734d8516206aa46f0f0230ffb5dfffbefd05b7be655e5",
                                "typeString": "literal_string \"Notary: incorrect agent root\""
                              }
                            ],
                            "id": 67708,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 18382,
                            "src": "13158:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,bytes32,string memory)"
                            }
                          },
                          "id": 67713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13158:66:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67714,
                        "nodeType": "ExpressionStatement",
                        "src": "13158:66:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 67719,
                                      "name": "snapGas",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67601,
                                      "src": "13274:7:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 67717,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "13257:3:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 67718,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "13261:12:147",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "13257:16:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 67720,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13257:25:147",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 67716,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "13247:9:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 67721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13247:36:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 67722,
                                "name": "ra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67437,
                                "src": "13285:2:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                  "typeString": "struct RawAttestation memory"
                                }
                              },
                              "id": 67723,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13288:12:147",
                              "memberName": "_snapGasHash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 94463,
                              "src": "13285:15:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "4e6f746172793a20696e636f727265637420736e6170206761732068617368",
                              "id": 67724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13302:33:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_891ffd476bf4c631e06bdfa0220bfea4d53b38e3acaceb8533b5603a959cf76f",
                                "typeString": "literal_string \"Notary: incorrect snap gas hash\""
                              },
                              "value": "Notary: incorrect snap gas hash"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_891ffd476bf4c631e06bdfa0220bfea4d53b38e3acaceb8533b5603a959cf76f",
                                "typeString": "literal_string \"Notary: incorrect snap gas hash\""
                              }
                            ],
                            "id": 67715,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 18382,
                            "src": "13238:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,bytes32,string memory)"
                            }
                          },
                          "id": 67725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13238:98:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67726,
                        "nodeType": "ExpressionStatement",
                        "src": "13238:98:147"
                      },
                      {
                        "expression": {
                          "id": 67738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 67727,
                                "name": "attPayload",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67596,
                                "src": "13391:10:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 67728,
                                "name": "agentRoot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67598,
                                "src": "13403:9:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 67729,
                                "name": "snapGas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67601,
                                "src": "13414:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              }
                            ],
                            "id": 67730,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "13390:32:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes32,uint256[] memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 67735,
                                  "name": "ra",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67437,
                                  "src": "13461:2:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                    "typeString": "struct RawAttestation memory"
                                  }
                                },
                                "id": 67736,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13464:5:147",
                                "memberName": "nonce",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 94455,
                                "src": "13461:8:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 67732,
                                    "name": "summit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91945,
                                    "src": "13438:6:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 67731,
                                  "name": "ISnapshotHub",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9341,
                                  "src": "13425:12:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ISnapshotHub_$9341_$",
                                    "typeString": "type(contract ISnapshotHub)"
                                  }
                                },
                                "id": 67733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13425:20:147",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISnapshotHub_$9341",
                                  "typeString": "contract ISnapshotHub"
                                }
                              },
                              "id": 67734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13446:14:147",
                              "memberName": "getAttestation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9276,
                              "src": "13425:35:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint32_$returns$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint32) view external returns (bytes memory,bytes32,uint256[] memory)"
                              }
                            },
                            "id": 67737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13425:45:147",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes32,uint256[] memory)"
                            }
                          },
                          "src": "13390:80:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67739,
                        "nodeType": "ExpressionStatement",
                        "src": "13390:80:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67741,
                              "name": "attPayload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67596,
                              "src": "13493:10:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 67742,
                              "name": "attestation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67568,
                              "src": "13505:11:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "216765744174746573746174696f6e",
                              "id": 67743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13518:17:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fad02380c804e8985fefae6d4358ba555788701d22c49d9d086251361037d90b",
                                "typeString": "literal_string \"!getAttestation\""
                              },
                              "value": "!getAttestation"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fad02380c804e8985fefae6d4358ba555788701d22c49d9d086251361037d90b",
                                "typeString": "literal_string \"!getAttestation\""
                              }
                            ],
                            "id": 67740,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 20050,
                            "src": "13484:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory,string memory)"
                            }
                          },
                          "id": 67744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13484:52:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67745,
                        "nodeType": "ExpressionStatement",
                        "src": "13484:52:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67747,
                              "name": "agentRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67598,
                              "src": "13559:9:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 67748,
                                "name": "ra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67437,
                                "src": "13570:2:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                  "typeString": "struct RawAttestation memory"
                                }
                              },
                              "id": 67749,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13573:10:147",
                              "memberName": "_agentRoot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 94461,
                              "src": "13570:13:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "216765744174746573746174696f6e3a206167656e7420726f6f74",
                              "id": 67750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13585:29:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_542915ad0ffe561407d5b22898066ab74458fb71432fc876c7a598e3f14666c2",
                                "typeString": "literal_string \"!getAttestation: agent root\""
                              },
                              "value": "!getAttestation: agent root"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_542915ad0ffe561407d5b22898066ab74458fb71432fc876c7a598e3f14666c2",
                                "typeString": "literal_string \"!getAttestation: agent root\""
                              }
                            ],
                            "id": 67746,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 18382,
                            "src": "13550:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,bytes32,string memory)"
                            }
                          },
                          "id": 67751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13550:65:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67752,
                        "nodeType": "ExpressionStatement",
                        "src": "13550:65:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 67757,
                                      "name": "snapGas",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67601,
                                      "src": "13665:7:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 67755,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "13648:3:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 67756,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "13652:12:147",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "13648:16:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 67758,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13648:25:147",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 67754,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "13638:9:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 67759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13638:36:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 67760,
                                "name": "ra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67437,
                                "src": "13676:2:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                  "typeString": "struct RawAttestation memory"
                                }
                              },
                              "id": 67761,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13679:12:147",
                              "memberName": "_snapGasHash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 94463,
                              "src": "13676:15:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "216765744174746573746174696f6e3a206761732068617368",
                              "id": 67762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13693:27:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c8299fdfddb1aaf602f7b62f23244c57646e8535b3c2f874dccc700d6883069f",
                                "typeString": "literal_string \"!getAttestation: gas hash\""
                              },
                              "value": "!getAttestation: gas hash"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c8299fdfddb1aaf602f7b62f23244c57646e8535b3c2f874dccc700d6883069f",
                                "typeString": "literal_string \"!getAttestation: gas hash\""
                              }
                            ],
                            "id": 67753,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 18382,
                            "src": "13629:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,bytes32,string memory)"
                            }
                          },
                          "id": 67763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13629:92:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67764,
                        "nodeType": "ExpressionStatement",
                        "src": "13629:92:147"
                      },
                      {
                        "expression": {
                          "id": 67775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 67765,
                                "name": "attPayload",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67596,
                                "src": "13736:10:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 67766,
                                "name": "agentRoot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67598,
                                "src": "13748:9:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 67767,
                                "name": "snapGas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67601,
                                "src": "13759:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              }
                            ],
                            "id": 67768,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "13735:32:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes32,uint256[] memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 67773,
                                "name": "notary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67574,
                                "src": "13818:6:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 67770,
                                    "name": "summit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91945,
                                    "src": "13783:6:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 67769,
                                  "name": "ISnapshotHub",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9341,
                                  "src": "13770:12:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ISnapshotHub_$9341_$",
                                    "typeString": "type(contract ISnapshotHub)"
                                  }
                                },
                                "id": 67771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13770:20:147",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISnapshotHub_$9341",
                                  "typeString": "contract ISnapshotHub"
                                }
                              },
                              "id": 67772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13791:26:147",
                              "memberName": "getLatestNotaryAttestation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9299,
                              "src": "13770:47:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (address) view external returns (bytes memory,bytes32,uint256[] memory)"
                              }
                            },
                            "id": 67774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13770:55:147",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes32,uint256[] memory)"
                            }
                          },
                          "src": "13735:90:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67776,
                        "nodeType": "ExpressionStatement",
                        "src": "13735:90:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67778,
                              "name": "attPayload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67596,
                              "src": "13848:10:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 67779,
                              "name": "attestation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67568,
                              "src": "13860:11:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "216c61746573744174746573746174696f6e",
                              "id": 67780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13873:20:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_294a1fb2cdb8b9ae4115a273c674ee230c08fc18473029156fc2bbd72c4d882e",
                                "typeString": "literal_string \"!latestAttestation\""
                              },
                              "value": "!latestAttestation"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_294a1fb2cdb8b9ae4115a273c674ee230c08fc18473029156fc2bbd72c4d882e",
                                "typeString": "literal_string \"!latestAttestation\""
                              }
                            ],
                            "id": 67777,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 20050,
                            "src": "13839:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory,string memory)"
                            }
                          },
                          "id": 67781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13839:55:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67782,
                        "nodeType": "ExpressionStatement",
                        "src": "13839:55:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67784,
                              "name": "agentRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67598,
                              "src": "13917:9:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 67785,
                                "name": "ra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67437,
                                "src": "13928:2:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                  "typeString": "struct RawAttestation memory"
                                }
                              },
                              "id": 67786,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13931:10:147",
                              "memberName": "_agentRoot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 94461,
                              "src": "13928:13:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "216c61746573744174746573746174696f6e3a206167656e7420726f6f74",
                              "id": 67787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13943:32:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e2cca425b73437fda103fc49706cbcfc9c80fb4d0c4cdbd965c369017ea17ae5",
                                "typeString": "literal_string \"!latestAttestation: agent root\""
                              },
                              "value": "!latestAttestation: agent root"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e2cca425b73437fda103fc49706cbcfc9c80fb4d0c4cdbd965c369017ea17ae5",
                                "typeString": "literal_string \"!latestAttestation: agent root\""
                              }
                            ],
                            "id": 67783,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 18382,
                            "src": "13908:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,bytes32,string memory)"
                            }
                          },
                          "id": 67788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13908:68:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67789,
                        "nodeType": "ExpressionStatement",
                        "src": "13908:68:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 67794,
                                      "name": "snapGas",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67601,
                                      "src": "14026:7:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 67792,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "14009:3:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 67793,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "14013:12:147",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "14009:16:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 67795,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14009:25:147",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 67791,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "13999:9:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 67796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13999:36:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 67797,
                                "name": "ra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67437,
                                "src": "14037:2:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                  "typeString": "struct RawAttestation memory"
                                }
                              },
                              "id": 67798,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14040:12:147",
                              "memberName": "_snapGasHash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 94463,
                              "src": "14037:15:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "216c61746573744174746573746174696f6e3a206761732068617368",
                              "id": 67799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14054:30:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f6ed6245f749833c822e54f28bd55af7dc638528f0b7b6fc18ccf44d6c4710a9",
                                "typeString": "literal_string \"!latestAttestation: gas hash\""
                              },
                              "value": "!latestAttestation: gas hash"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f6ed6245f749833c822e54f28bd55af7dc638528f0b7b6fc18ccf44d6c4710a9",
                                "typeString": "literal_string \"!latestAttestation: gas hash\""
                              }
                            ],
                            "id": 67790,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 18382,
                            "src": "13990:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,bytes32,string memory)"
                            }
                          },
                          "id": 67800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13990:95:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67801,
                        "nodeType": "ExpressionStatement",
                        "src": "13990:95:147"
                      },
                      {
                        "body": {
                          "id": 67852,
                          "nodeType": "Block",
                          "src": "14204:492:147",
                          "statements": [
                            {
                              "assignments": [
                                67816
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 67816,
                                  "mutability": "mutable",
                                  "name": "snapProof",
                                  "nameLocation": "14239:9:147",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 67852,
                                  "src": "14222:26:147",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                    "typeString": "bytes32[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 67814,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14222:7:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "id": 67815,
                                    "nodeType": "ArrayTypeName",
                                    "src": "14222:9:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                      "typeString": "bytes32[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 67825,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 67821,
                                      "name": "ra",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67437,
                                      "src": "14289:2:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                        "typeString": "struct RawAttestation memory"
                                      }
                                    },
                                    "id": 67822,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14292:5:147",
                                    "memberName": "nonce",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 94455,
                                    "src": "14289:8:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  {
                                    "id": 67823,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67803,
                                    "src": "14299:1:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 67818,
                                        "name": "summit",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91945,
                                        "src": "14264:6:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 67817,
                                      "name": "ISnapshotHub",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9341,
                                      "src": "14251:12:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ISnapshotHub_$9341_$",
                                        "typeString": "type(contract ISnapshotHub)"
                                      }
                                    },
                                    "id": 67819,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14251:20:147",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISnapshotHub_$9341",
                                      "typeString": "contract ISnapshotHub"
                                    }
                                  },
                                  "id": 67820,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "14272:16:147",
                                  "memberName": "getSnapshotProof",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9340,
                                  "src": "14251:37:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint32_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                                    "typeString": "function (uint32,uint256) view external returns (bytes32[] memory)"
                                  }
                                },
                                "id": 67824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14251:50:147",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "14222:79:147"
                            },
                            {
                              "assignments": [
                                67827,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 67827,
                                  "mutability": "mutable",
                                  "name": "item",
                                  "nameLocation": "14388:4:147",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 67852,
                                  "src": "14380:12:147",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 67826,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14380:7:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 67836,
                              "initialValue": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "baseExpression": {
                                          "expression": {
                                            "id": 67828,
                                            "name": "rs",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 67471,
                                            "src": "14397:2:147",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_RawSnapshot_$94445_memory_ptr",
                                              "typeString": "struct RawSnapshot memory"
                                            }
                                          },
                                          "id": 67829,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "14400:6:147",
                                          "memberName": "states",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 94444,
                                          "src": "14397:9:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_RawState_$94427_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct RawState memory[] memory"
                                          }
                                        },
                                        "id": 67831,
                                        "indexExpression": {
                                          "id": 67830,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 67803,
                                          "src": "14407:1:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "14397:12:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                                          "typeString": "struct RawState memory"
                                        }
                                      },
                                      "id": 67832,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "14410:11:147",
                                      "memberName": "castToState",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 95657,
                                      "src": "14397:24:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_struct$_RawState_$94427_memory_ptr_$returns$_t_userDefinedValueType$_State_$13434_$bound_to$_t_struct$_RawState_$94427_memory_ptr_$",
                                        "typeString": "function (struct RawState memory) pure returns (State)"
                                      }
                                    },
                                    "id": 67833,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14397:26:147",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_userDefinedValueType$_State_$13434",
                                      "typeString": "State"
                                    }
                                  },
                                  "id": 67834,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "14424:8:147",
                                  "memberName": "subLeafs",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13675,
                                  "src": "14397:35:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_State_$13434_$returns$_t_bytes32_$_t_bytes32_$bound_to$_t_userDefinedValueType$_State_$13434_$",
                                    "typeString": "function (State) pure returns (bytes32,bytes32)"
                                  }
                                },
                                "id": 67835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14397:37:147",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                                  "typeString": "tuple(bytes32,bytes32)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "14379:55:147"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 67842,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "32",
                                          "id": 67840,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14584:1:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 67841,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 67803,
                                          "src": "14588:1:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "14584:5:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "id": 67843,
                                        "name": "item",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 67827,
                                        "src": "14591:4:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      {
                                        "id": 67844,
                                        "name": "snapProof",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 67816,
                                        "src": "14597:9:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                          "typeString": "bytes32[] memory"
                                        }
                                      },
                                      {
                                        "id": 67845,
                                        "name": "SNAPSHOT_TREE_HEIGHT",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10067,
                                        "src": "14608:20:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        {
                                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                          "typeString": "bytes32[] memory"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 67838,
                                        "name": "MerkleMath",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 14266,
                                        "src": "14563:10:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_MerkleMath_$14266_$",
                                          "typeString": "type(library MerkleMath)"
                                        }
                                      },
                                      "id": 67839,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "14574:9:147",
                                      "memberName": "proofRoot",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 13929,
                                      "src": "14563:20:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                        "typeString": "function (uint256,bytes32,bytes32[] memory,uint256) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 67846,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14563:66:147",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 67847,
                                      "name": "ra",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67437,
                                      "src": "14631:2:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RawAttestation_$94464_memory_ptr",
                                        "typeString": "struct RawAttestation memory"
                                      }
                                    },
                                    "id": 67848,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14634:8:147",
                                    "memberName": "snapRoot",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 94451,
                                    "src": "14631:11:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "hexValue": "21676574536e617073686f7450726f6f66",
                                    "id": 67849,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14644:19:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_72c0e358bdaa67ce99121c4583cb046a28208f8fa30902792a4db44e8cb8840b",
                                      "typeString": "literal_string \"!getSnapshotProof\""
                                    },
                                    "value": "!getSnapshotProof"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_72c0e358bdaa67ce99121c4583cb046a28208f8fa30902792a4db44e8cb8840b",
                                      "typeString": "literal_string \"!getSnapshotProof\""
                                    }
                                  ],
                                  "id": 67837,
                                  "name": "assertEq",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    19996,
                                    20021,
                                    20034,
                                    20050,
                                    20092,
                                    20134,
                                    20176,
                                    20213,
                                    20250,
                                    20287,
                                    18302,
                                    18327,
                                    18357,
                                    18382,
                                    18441,
                                    18466,
                                    18496,
                                    18521,
                                    19621,
                                    19656
                                  ],
                                  "referencedDeclaration": 18382,
                                  "src": "14533:8:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes32,bytes32,string memory)"
                                  }
                                },
                                "id": 67850,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14533:148:147",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 67851,
                              "nodeType": "ExpressionStatement",
                              "src": "14533:148:147"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 67808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 67806,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67803,
                            "src": "14187:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 67807,
                            "name": "STATES",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66416,
                            "src": "14191:6:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14187:10:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 67853,
                        "initializationExpression": {
                          "assignments": [
                            67803
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 67803,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "14180:1:147",
                              "nodeType": "VariableDeclaration",
                              "scope": 67853,
                              "src": "14172:9:147",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 67802,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "14172:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 67805,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 67804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14184:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "14172:13:147"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 67810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "14199:3:147",
                            "subExpression": {
                              "id": 67809,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67803,
                              "src": "14201:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 67811,
                          "nodeType": "ExpressionStatement",
                          "src": "14199:3:147"
                        },
                        "nodeType": "ForStatement",
                        "src": "14167:529:147"
                      },
                      {
                        "body": {
                          "id": 67883,
                          "nodeType": "Block",
                          "src": "14788:228:147",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        },
                                        "id": 67871,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 67869,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 67855,
                                          "src": "14877:1:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 67870,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14881:1:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "14877:5:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      {
                                        "id": 67872,
                                        "name": "notary",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 67574,
                                        "src": "14884:6:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 67866,
                                            "name": "summit",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 91945,
                                            "src": "14849:6:147",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 67865,
                                          "name": "ISnapshotHub",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9341,
                                          "src": "14836:12:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ISnapshotHub_$9341_$",
                                            "typeString": "type(contract ISnapshotHub)"
                                          }
                                        },
                                        "id": 67867,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "14836:20:147",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ISnapshotHub_$9341",
                                          "typeString": "contract ISnapshotHub"
                                        }
                                      },
                                      "id": 67868,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "14857:19:147",
                                      "memberName": "getLatestAgentState",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 9286,
                                      "src": "14836:40:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint32_$_t_address_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (uint32,address) view external returns (bytes memory)"
                                      }
                                    },
                                    "id": 67873,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14836:55:147",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "baseExpression": {
                                          "expression": {
                                            "id": 67874,
                                            "name": "rs",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 67471,
                                            "src": "14913:2:147",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_RawSnapshot_$94445_memory_ptr",
                                              "typeString": "struct RawSnapshot memory"
                                            }
                                          },
                                          "id": 67875,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "14916:6:147",
                                          "memberName": "states",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 94444,
                                          "src": "14913:9:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_RawState_$94427_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct RawState memory[] memory"
                                          }
                                        },
                                        "id": 67877,
                                        "indexExpression": {
                                          "id": 67876,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 67855,
                                          "src": "14923:1:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "14913:12:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                                          "typeString": "struct RawState memory"
                                        }
                                      },
                                      "id": 67878,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "14926:11:147",
                                      "memberName": "formatState",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 95639,
                                      "src": "14913:24:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_struct$_RawState_$94427_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_struct$_RawState_$94427_memory_ptr_$",
                                        "typeString": "function (struct RawState memory) pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 67879,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14913:26:147",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "hexValue": "216c617465737453746174653a206e6f74617279",
                                    "id": 67880,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14961:22:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_42e361242a26607b205e58aef57fff37564a20d92a6de68286dc11729b71eeb7",
                                      "typeString": "literal_string \"!latestState: notary\""
                                    },
                                    "value": "!latestState: notary"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_42e361242a26607b205e58aef57fff37564a20d92a6de68286dc11729b71eeb7",
                                      "typeString": "literal_string \"!latestState: notary\""
                                    }
                                  ],
                                  "id": 67864,
                                  "name": "assertEq",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    19996,
                                    20021,
                                    20034,
                                    20050,
                                    20092,
                                    20134,
                                    20176,
                                    20213,
                                    20250,
                                    20287,
                                    18302,
                                    18327,
                                    18357,
                                    18382,
                                    18441,
                                    18466,
                                    18496,
                                    18521,
                                    19621,
                                    19656
                                  ],
                                  "referencedDeclaration": 20050,
                                  "src": "14806:8:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory,bytes memory,string memory)"
                                  }
                                },
                                "id": 67881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14806:195:147",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 67882,
                              "nodeType": "ExpressionStatement",
                              "src": "14806:195:147"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 67860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 67858,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67855,
                            "src": "14771:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 67859,
                            "name": "STATES",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66416,
                            "src": "14775:6:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14771:10:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 67884,
                        "initializationExpression": {
                          "assignments": [
                            67855
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 67855,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "14764:1:147",
                              "nodeType": "VariableDeclaration",
                              "scope": 67884,
                              "src": "14757:8:147",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "typeName": {
                                "id": 67854,
                                "name": "uint32",
                                "nodeType": "ElementaryTypeName",
                                "src": "14757:6:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 67857,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 67856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14768:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "14757:12:147"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 67862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "14783:3:147",
                            "subExpression": {
                              "id": 67861,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67855,
                              "src": "14785:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 67863,
                          "nodeType": "ExpressionStatement",
                          "src": "14783:3:147"
                        },
                        "nodeType": "ForStatement",
                        "src": "14752:264:147"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 67431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67429,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67426,
                      "src": "10396:1:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 67430,
                      "name": "DOMAIN_AGENTS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92877,
                      "src": "10400:13:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10396:17:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67886,
                  "initializationExpression": {
                    "assignments": [
                      67426
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 67426,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10389:1:147",
                        "nodeType": "VariableDeclaration",
                        "scope": 67886,
                        "src": "10382:8:147",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 67425,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10382:6:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 67428,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 67427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10393:1:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10382:12:147"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 67433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "10415:3:147",
                      "subExpression": {
                        "id": 67432,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67426,
                        "src": "10417:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 67434,
                    "nodeType": "ExpressionStatement",
                    "src": "10415:3:147"
                  },
                  "nodeType": "ForStatement",
                  "src": "10377:4649:147"
                },
                {
                  "body": {
                    "id": 67924,
                    "nodeType": "Block",
                    "src": "15079:257:147",
                    "statements": [
                      {
                        "assignments": [
                          67898,
                          67900
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 67898,
                            "mutability": "mutable",
                            "name": "snapPayload",
                            "nameLocation": "15107:11:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67924,
                            "src": "15094:24:147",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 67897,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "15094:5:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 67900,
                            "mutability": "mutable",
                            "name": "snapSignature",
                            "nameLocation": "15133:13:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67924,
                            "src": "15120:26:147",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 67899,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "15120:5:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 67907,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 67905,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67888,
                              "src": "15189:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 67902,
                                  "name": "summit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91945,
                                  "src": "15163:6:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 67901,
                                "name": "ISnapshotHub",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9341,
                                "src": "15150:12:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISnapshotHub_$9341_$",
                                  "typeString": "type(contract ISnapshotHub)"
                                }
                              },
                              "id": 67903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15150:20:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISnapshotHub_$9341",
                                "typeString": "contract ISnapshotHub"
                              }
                            },
                            "id": 67904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15171:17:147",
                            "memberName": "getNotarySnapshot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9319,
                            "src": "15150:38:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (bytes memory,bytes memory)"
                            }
                          },
                          "id": 67906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15150:41:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bytes memory,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15093:98:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67909,
                              "name": "snapPayload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67898,
                              "src": "15214:11:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 67910,
                                "name": "snapPayloads",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67407,
                                "src": "15227:12:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "bytes memory[] memory"
                                }
                              },
                              "id": 67912,
                              "indexExpression": {
                                "id": 67911,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67888,
                                "src": "15240:1:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15227:15:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "217061796c6f6164",
                              "id": 67913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15244:10:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7b0eab185d65a1b5e1e50c0434dc8e95947162b305b47e279b4a19876aaac524",
                                "typeString": "literal_string \"!payload\""
                              },
                              "value": "!payload"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7b0eab185d65a1b5e1e50c0434dc8e95947162b305b47e279b4a19876aaac524",
                                "typeString": "literal_string \"!payload\""
                              }
                            ],
                            "id": 67908,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 20050,
                            "src": "15205:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory,string memory)"
                            }
                          },
                          "id": 67914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15205:50:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67915,
                        "nodeType": "ExpressionStatement",
                        "src": "15205:50:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67917,
                              "name": "snapSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67900,
                              "src": "15278:13:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 67918,
                                "name": "snapSignatures",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67418,
                                "src": "15293:14:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "bytes memory[] memory"
                                }
                              },
                              "id": 67920,
                              "indexExpression": {
                                "id": 67919,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67888,
                                "src": "15308:1:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15293:17:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "217369676e6174757265",
                              "id": 67921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15312:12:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_905dcf5d09c790b0477493ab37db580eac2830b78e596be1175fe0ff2c317669",
                                "typeString": "literal_string \"!signature\""
                              },
                              "value": "!signature"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_905dcf5d09c790b0477493ab37db580eac2830b78e596be1175fe0ff2c317669",
                                "typeString": "literal_string \"!signature\""
                              }
                            ],
                            "id": 67916,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 20050,
                            "src": "15269:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory,string memory)"
                            }
                          },
                          "id": 67922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15269:56:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67923,
                        "nodeType": "ExpressionStatement",
                        "src": "15269:56:147"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 67893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67891,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67888,
                      "src": "15055:1:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 67892,
                      "name": "DOMAIN_AGENTS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92877,
                      "src": "15059:13:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15055:17:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67925,
                  "initializationExpression": {
                    "assignments": [
                      67888
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 67888,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15048:1:147",
                        "nodeType": "VariableDeclaration",
                        "scope": 67925,
                        "src": "15041:8:147",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 67887,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "15041:6:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 67890,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 67889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15052:1:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15041:12:147"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 67895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "15074:3:147",
                      "subExpression": {
                        "id": 67894,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67888,
                        "src": "15076:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 67896,
                    "nodeType": "ExpressionStatement",
                    "src": "15074:3:147"
                  },
                  "nodeType": "ForStatement",
                  "src": "15036:300:147"
                },
                {
                  "body": {
                    "id": 67978,
                    "nodeType": "Block",
                    "src": "15389:400:147",
                    "statements": [
                      {
                        "assignments": [
                          67937
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 67937,
                            "mutability": "mutable",
                            "name": "guard",
                            "nameLocation": "15411:5:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67978,
                            "src": "15403:13:147",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 67936,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15403:7:147",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 67944,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 67938,
                                "name": "domains",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 90778,
                                "src": "15419:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Domain_$90770_storage_$",
                                  "typeString": "mapping(uint32 => struct SynapseAgents.Domain storage ref)"
                                }
                              },
                              "id": 67940,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 67939,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15427:1:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15419:10:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Domain_$90770_storage",
                                "typeString": "struct SynapseAgents.Domain storage ref"
                              }
                            },
                            "id": 67941,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15430:6:147",
                            "memberName": "agents",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 90769,
                            "src": "15419:17:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 67943,
                          "indexExpression": {
                            "id": 67942,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67927,
                            "src": "15437:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15419:20:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15403:36:147"
                      },
                      {
                        "assignments": [
                          67946,
                          67948,
                          67951
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 67946,
                            "mutability": "mutable",
                            "name": "attPayload",
                            "nameLocation": "15525:10:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67978,
                            "src": "15512:23:147",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 67945,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "15512:5:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 67948,
                            "mutability": "mutable",
                            "name": "agentRoot",
                            "nameLocation": "15545:9:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67978,
                            "src": "15537:17:147",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 67947,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "15537:7:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 67951,
                            "mutability": "mutable",
                            "name": "snapGas",
                            "nameLocation": "15573:7:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 67978,
                            "src": "15556:24:147",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 67949,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15556:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 67950,
                              "nodeType": "ArrayTypeName",
                              "src": "15556:9:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 67958,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 67956,
                              "name": "guard",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67937,
                              "src": "15648:5:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 67953,
                                  "name": "summit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91945,
                                  "src": "15613:6:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 67952,
                                "name": "ISnapshotHub",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9341,
                                "src": "15600:12:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISnapshotHub_$9341_$",
                                  "typeString": "type(contract ISnapshotHub)"
                                }
                              },
                              "id": 67954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15600:20:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISnapshotHub_$9341",
                                "typeString": "contract ISnapshotHub"
                              }
                            },
                            "id": 67955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15621:26:147",
                            "memberName": "getLatestNotaryAttestation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9299,
                            "src": "15600:47:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (address) view external returns (bytes memory,bytes32,uint256[] memory)"
                            }
                          },
                          "id": 67957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15600:54:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "tuple(bytes memory,bytes32,uint256[] memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15511:143:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67960,
                              "name": "attPayload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67946,
                              "src": "15677:10:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 67961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15689:2:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "id": 67959,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 20034,
                            "src": "15668:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory)"
                            }
                          },
                          "id": 67962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15668:24:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67963,
                        "nodeType": "ExpressionStatement",
                        "src": "15668:24:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67965,
                              "name": "agentRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67948,
                              "src": "15715:9:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 67968,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15734:1:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 67967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15726:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 67966,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15726:7:147",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 67969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15726:10:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 67964,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 18357,
                            "src": "15706:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32)"
                            }
                          },
                          "id": 67970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15706:31:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67971,
                        "nodeType": "ExpressionStatement",
                        "src": "15706:31:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 67973,
                                "name": "snapGas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67951,
                                "src": "15760:7:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 67974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15768:6:147",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "15760:14:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 67975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15776:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 67972,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 18496,
                            "src": "15751:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 67976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15751:27:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67977,
                        "nodeType": "ExpressionStatement",
                        "src": "15751:27:147"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 67932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67930,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67927,
                      "src": "15365:1:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 67931,
                      "name": "DOMAIN_AGENTS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92877,
                      "src": "15369:13:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15365:17:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67979,
                  "initializationExpression": {
                    "assignments": [
                      67927
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 67927,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15358:1:147",
                        "nodeType": "VariableDeclaration",
                        "scope": 67979,
                        "src": "15351:8:147",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 67926,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "15351:6:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 67929,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 67928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15362:1:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15351:12:147"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 67934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "15384:3:147",
                      "subExpression": {
                        "id": 67933,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67927,
                        "src": "15386:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 67935,
                    "nodeType": "ExpressionStatement",
                    "src": "15384:3:147"
                  },
                  "nodeType": "ForStatement",
                  "src": "15346:443:147"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 67980,
                      "name": "checkLatestState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68066,
                      "src": "15836:16:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 67981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15836:18:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67982,
                  "nodeType": "ExpressionStatement",
                  "src": "15836:18:147"
                }
              ]
            },
            "functionSelector": "7d972331",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_notarySnapshots",
            "nameLocation": "9961:20:147",
            "parameters": {
              "id": 67397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67396,
                  "mutability": "mutable",
                  "name": "random",
                  "nameLocation": "9996:6:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 67984,
                  "src": "9982:20:147",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Random_$93422_memory_ptr",
                    "typeString": "struct Random"
                  },
                  "typeName": {
                    "id": 67395,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67394,
                      "name": "Random",
                      "nameLocations": [
                        "9982:6:147"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 93422,
                      "src": "9982:6:147"
                    },
                    "referencedDeclaration": 93422,
                    "src": "9982:6:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Random_$93422_storage_ptr",
                      "typeString": "struct Random"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9981:22:147"
            },
            "returnParameters": {
              "id": 67398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10011:0:147"
            },
            "scope": 68279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68000,
            "nodeType": "FunctionDefinition",
            "src": "15867:134:147",
            "nodes": [],
            "body": {
              "id": 67999,
              "nodeType": "Block",
              "src": "15924:77:147",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67994,
                            "name": "domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67986,
                            "src": "15982:6:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 67991,
                                "name": "summit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91945,
                                "src": "15959:6:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 67990,
                              "name": "InterfaceSummit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10053,
                              "src": "15943:15:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_InterfaceSummit_$10053_$",
                                "typeString": "type(contract InterfaceSummit)"
                              }
                            },
                            "id": 67992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15943:23:147",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_InterfaceSummit_$10053",
                              "typeString": "contract InterfaceSummit"
                            }
                          },
                          "id": 67993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15967:14:147",
                          "memberName": "getLatestState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10052,
                          "src": "15943:38:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint32_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint32) view external returns (bytes memory)"
                          }
                        },
                        "id": 67995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15943:46:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 67996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15991:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 67989,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 20034,
                      "src": "15934:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory)"
                      }
                    },
                    "id": 67997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15934:60:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67998,
                  "nodeType": "ExpressionStatement",
                  "src": "15934:60:147"
                }
              ]
            },
            "functionSelector": "221a2c9f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getLatestState_empty",
            "nameLocation": "15876:25:147",
            "parameters": {
              "id": 67987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67986,
                  "mutability": "mutable",
                  "name": "domain",
                  "nameLocation": "15909:6:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 68000,
                  "src": "15902:13:147",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 67985,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15902:6:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15901:15:147"
            },
            "returnParameters": {
              "id": 67988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15924:0:147"
            },
            "scope": 68279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68066,
            "nodeType": "FunctionDefinition",
            "src": "16007:500:147",
            "nodes": [],
            "body": {
              "id": 68065,
              "nodeType": "Block",
              "src": "16042:465:147",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 68063,
                    "nodeType": "Block",
                    "src": "16125:376:147",
                    "statements": [
                      {
                        "assignments": [
                          68015
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 68015,
                            "mutability": "mutable",
                            "name": "latestState",
                            "nameLocation": "16155:11:147",
                            "nodeType": "VariableDeclaration",
                            "scope": 68063,
                            "src": "16139:27:147",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                              "typeString": "struct RawState"
                            },
                            "typeName": {
                              "id": 68014,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 68013,
                                "name": "RawState",
                                "nameLocations": [
                                  "16139:8:147"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 94427,
                                "src": "16139:8:147"
                              },
                              "referencedDeclaration": 94427,
                              "src": "16139:8:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawState_$94427_storage_ptr",
                                "typeString": "struct RawState"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 68016,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16139:27:147"
                      },
                      {
                        "body": {
                          "id": 68046,
                          "nodeType": "Block",
                          "src": "16223:153:147",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                "id": 68035,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 68027,
                                        "name": "guardStates",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 66423,
                                        "src": "16245:11:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_RawState_$94427_storage_$_$",
                                          "typeString": "mapping(uint256 => mapping(uint256 => struct RawState storage ref))"
                                        }
                                      },
                                      "id": 68029,
                                      "indexExpression": {
                                        "id": 68028,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 68018,
                                        "src": "16257:1:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16245:14:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RawState_$94427_storage_$",
                                        "typeString": "mapping(uint256 => struct RawState storage ref)"
                                      }
                                    },
                                    "id": 68031,
                                    "indexExpression": {
                                      "id": 68030,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68004,
                                      "src": "16260:1:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16245:17:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RawState_$94427_storage",
                                      "typeString": "struct RawState storage ref"
                                    }
                                  },
                                  "id": 68032,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16263:5:147",
                                  "memberName": "nonce",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 94419,
                                  "src": "16245:23:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "id": 68033,
                                    "name": "latestState",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68015,
                                    "src": "16271:11:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                                      "typeString": "struct RawState memory"
                                    }
                                  },
                                  "id": 68034,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16283:5:147",
                                  "memberName": "nonce",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 94419,
                                  "src": "16271:17:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "16245:43:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 68045,
                              "nodeType": "IfStatement",
                              "src": "16241:121:147",
                              "trueBody": {
                                "id": 68044,
                                "nodeType": "Block",
                                "src": "16290:72:147",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 68042,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 68036,
                                        "name": "latestState",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 68015,
                                        "src": "16312:11:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                                          "typeString": "struct RawState memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 68037,
                                            "name": "guardStates",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 66423,
                                            "src": "16326:11:147",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_RawState_$94427_storage_$_$",
                                              "typeString": "mapping(uint256 => mapping(uint256 => struct RawState storage ref))"
                                            }
                                          },
                                          "id": 68039,
                                          "indexExpression": {
                                            "id": 68038,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 68018,
                                            "src": "16338:1:147",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16326:14:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RawState_$94427_storage_$",
                                            "typeString": "mapping(uint256 => struct RawState storage ref)"
                                          }
                                        },
                                        "id": 68041,
                                        "indexExpression": {
                                          "id": 68040,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 68004,
                                          "src": "16341:1:147",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "16326:17:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_RawState_$94427_storage",
                                          "typeString": "struct RawState storage ref"
                                        }
                                      },
                                      "src": "16312:31:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                                        "typeString": "struct RawState memory"
                                      }
                                    },
                                    "id": 68043,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16312:31:147"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 68023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 68021,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68018,
                            "src": "16199:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 68022,
                            "name": "DOMAIN_AGENTS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92877,
                            "src": "16203:13:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16199:17:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 68047,
                        "initializationExpression": {
                          "assignments": [
                            68018
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 68018,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "16192:1:147",
                              "nodeType": "VariableDeclaration",
                              "scope": 68047,
                              "src": "16185:8:147",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "typeName": {
                                "id": 68017,
                                "name": "uint32",
                                "nodeType": "ElementaryTypeName",
                                "src": "16185:6:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 68020,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 68019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16196:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "16185:12:147"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 68025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "16218:3:147",
                            "subExpression": {
                              "id": 68024,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68018,
                              "src": "16220:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 68026,
                          "nodeType": "ExpressionStatement",
                          "src": "16218:3:147"
                        },
                        "nodeType": "ForStatement",
                        "src": "16180:196:147"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 68055,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 68053,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68004,
                                    "src": "16437:1:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 68054,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16441:1:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "16437:5:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 68050,
                                      "name": "summit",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91945,
                                      "src": "16414:6:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 68049,
                                    "name": "InterfaceSummit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10053,
                                    "src": "16398:15:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_InterfaceSummit_$10053_$",
                                      "typeString": "type(contract InterfaceSummit)"
                                    }
                                  },
                                  "id": 68051,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16398:23:147",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_InterfaceSummit_$10053",
                                    "typeString": "contract InterfaceSummit"
                                  }
                                },
                                "id": 68052,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "16422:14:147",
                                "memberName": "getLatestState",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10052,
                                "src": "16398:38:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint32_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (uint32) view external returns (bytes memory)"
                                }
                              },
                              "id": 68056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16398:45:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 68057,
                                  "name": "latestState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68015,
                                  "src": "16445:11:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                                    "typeString": "struct RawState memory"
                                  }
                                },
                                "id": 68058,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "16457:11:147",
                                "memberName": "formatState",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 95639,
                                "src": "16445:23:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_struct$_RawState_$94427_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_struct$_RawState_$94427_memory_ptr_$",
                                  "typeString": "function (struct RawState memory) pure returns (bytes memory)"
                                }
                              },
                              "id": 68059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16445:25:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "216765744c61746573745374617465",
                              "id": 68060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16472:17:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_178d6abe1ddc165b27062a27cefbf7da2e496e72598545c457e57478d8b44175",
                                "typeString": "literal_string \"!getLatestState\""
                              },
                              "value": "!getLatestState"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_178d6abe1ddc165b27062a27cefbf7da2e496e72598545c457e57478d8b44175",
                                "typeString": "literal_string \"!getLatestState\""
                              }
                            ],
                            "id": 68048,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 20050,
                            "src": "16389:8:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory,string memory)"
                            }
                          },
                          "id": 68061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16389:101:147",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 68062,
                        "nodeType": "ExpressionStatement",
                        "src": "16389:101:147"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 68009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 68007,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68004,
                      "src": "16108:1:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 68008,
                      "name": "STATES",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66416,
                      "src": "16112:6:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16108:10:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68064,
                  "initializationExpression": {
                    "assignments": [
                      68004
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 68004,
                        "mutability": "mutable",
                        "name": "j",
                        "nameLocation": "16101:1:147",
                        "nodeType": "VariableDeclaration",
                        "scope": 68064,
                        "src": "16094:8:147",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 68003,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "16094:6:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 68006,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 68005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16105:1:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16094:12:147"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 68011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "16120:3:147",
                      "subExpression": {
                        "id": 68010,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68004,
                        "src": "16122:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 68012,
                    "nodeType": "ExpressionStatement",
                    "src": "16120:3:147"
                  },
                  "nodeType": "ForStatement",
                  "src": "16089:412:147"
                }
              ]
            },
            "functionSelector": "dbe554d3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkLatestState",
            "nameLocation": "16016:16:147",
            "parameters": {
              "id": 68001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16032:2:147"
            },
            "returnParameters": {
              "id": 68002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16042:0:147"
            },
            "scope": 68279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68171,
            "nodeType": "FunctionDefinition",
            "src": "16811:984:147",
            "nodes": [],
            "body": {
              "id": 68170,
              "nodeType": "Block",
              "src": "16890:905:147",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    68073,
                    68076
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68073,
                      "mutability": "mutable",
                      "name": "domainId",
                      "nameLocation": "16909:8:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 68170,
                      "src": "16901:16:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68072,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16901:7:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 68076,
                      "mutability": "mutable",
                      "name": "rsi",
                      "nameLocation": "16940:3:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 68170,
                      "src": "16919:24:147",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RawStateIndex_$94436_memory_ptr",
                        "typeString": "struct RawStateIndex"
                      },
                      "typeName": {
                        "id": 68075,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 68074,
                          "name": "RawStateIndex",
                          "nameLocations": [
                            "16919:13:147"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 94436,
                          "src": "16919:13:147"
                        },
                        "referencedDeclaration": 94436,
                        "src": "16919:13:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawStateIndex_$94436_storage_ptr",
                          "typeString": "struct RawStateIndex"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68083,
                  "initialValue": {
                    "components": [
                      {
                        "hexValue": "31",
                        "id": 68077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16948:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 68079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16965:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "31",
                            "id": 68080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16968:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 68078,
                          "name": "RawStateIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94436,
                          "src": "16951:13:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_RawStateIndex_$94436_storage_ptr_$",
                            "typeString": "type(struct RawStateIndex storage pointer)"
                          }
                        },
                        "id": 68081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16951:19:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawStateIndex_$94436_memory_ptr",
                          "typeString": "struct RawStateIndex memory"
                        }
                      }
                    ],
                    "id": 68082,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "16947:24:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_struct$_RawStateIndex_$94436_memory_ptr_$",
                      "typeString": "tuple(int_const 1,struct RawStateIndex memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16900:71:147"
                },
                {
                  "assignments": [
                    68085
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68085,
                      "mutability": "mutable",
                      "name": "domain",
                      "nameLocation": "16988:6:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 68170,
                      "src": "16981:13:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 68084,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16981:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68089,
                  "initialValue": {
                    "baseExpression": {
                      "id": 68086,
                      "name": "allDomains",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90773,
                      "src": "16997:10:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$dyn_storage",
                        "typeString": "uint32[] storage ref"
                      }
                    },
                    "id": 68088,
                    "indexExpression": {
                      "id": 68087,
                      "name": "domainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68073,
                      "src": "17008:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16997:20:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16981:36:147"
                },
                {
                  "assignments": [
                    68091,
                    68093,
                    68095
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68091,
                      "mutability": "mutable",
                      "name": "guard0",
                      "nameLocation": "17036:6:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 68170,
                      "src": "17028:14:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 68090,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17028:7:147",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 68093,
                      "mutability": "mutable",
                      "name": "guard1",
                      "nameLocation": "17052:6:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 68170,
                      "src": "17044:14:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 68092,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17044:7:147",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 68095,
                      "mutability": "mutable",
                      "name": "notary",
                      "nameLocation": "17068:6:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 68170,
                      "src": "17060:14:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 68094,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17060:7:147",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68115,
                  "initialValue": {
                    "components": [
                      {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 68096,
                              "name": "domains",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90778,
                              "src": "17091:7:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Domain_$90770_storage_$",
                                "typeString": "mapping(uint32 => struct SynapseAgents.Domain storage ref)"
                              }
                            },
                            "id": 68098,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 68097,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17099:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17091:10:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Domain_$90770_storage",
                              "typeString": "struct SynapseAgents.Domain storage ref"
                            }
                          },
                          "id": 68099,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17102:6:147",
                          "memberName": "agents",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 90769,
                          "src": "17091:17:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 68101,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 68100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17109:1:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17091:20:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 68102,
                              "name": "domains",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90778,
                              "src": "17113:7:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Domain_$90770_storage_$",
                                "typeString": "mapping(uint32 => struct SynapseAgents.Domain storage ref)"
                              }
                            },
                            "id": 68104,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 68103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17121:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17113:10:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Domain_$90770_storage",
                              "typeString": "struct SynapseAgents.Domain storage ref"
                            }
                          },
                          "id": 68105,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17124:6:147",
                          "memberName": "agents",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 90769,
                          "src": "17113:17:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 68107,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 68106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17131:1:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17113:20:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 68108,
                              "name": "domains",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90778,
                              "src": "17135:7:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Domain_$90770_storage_$",
                                "typeString": "mapping(uint32 => struct SynapseAgents.Domain storage ref)"
                              }
                            },
                            "id": 68110,
                            "indexExpression": {
                              "id": 68109,
                              "name": "domain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68085,
                              "src": "17143:6:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17135:15:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Domain_$90770_storage",
                              "typeString": "struct SynapseAgents.Domain storage ref"
                            }
                          },
                          "id": 68111,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17151:6:147",
                          "memberName": "agents",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 90769,
                          "src": "17135:22:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 68113,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 68112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17158:1:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17135:25:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 68114,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "17090:71:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17027:134:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68117,
                        "name": "guard0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68091,
                        "src": "17238:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 68118,
                        "name": "notary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68095,
                        "src": "17254:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 68116,
                      "name": "openDispute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71255,
                      "src": "17218:11:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 68119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "17231:5:147",
                      "17246:6:147"
                    ],
                    "names": [
                      "guard",
                      "notary"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "17218:44:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68120,
                  "nodeType": "ExpressionStatement",
                  "src": "17218:44:147"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 68124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 68121,
                        "name": "rs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68069,
                        "src": "17321:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                          "typeString": "struct RawState memory"
                        }
                      },
                      "id": 68122,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17324:5:147",
                      "memberName": "nonce",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 94419,
                      "src": "17321:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 68123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17333:1:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17321:13:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68131,
                  "nodeType": "IfStatement",
                  "src": "17317:31:147",
                  "trueBody": {
                    "expression": {
                      "id": 68129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "id": 68125,
                          "name": "rs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68069,
                          "src": "17336:2:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                            "typeString": "struct RawState memory"
                          }
                        },
                        "id": 68127,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberLocation": "17339:5:147",
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94419,
                        "src": "17336:8:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 68128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17347:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "17336:12:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 68130,
                    "nodeType": "ExpressionStatement",
                    "src": "17336:12:147"
                  }
                },
                {
                  "assignments": [
                    68133,
                    68135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68133,
                      "mutability": "mutable",
                      "name": "snapPayload",
                      "nameLocation": "17407:11:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 68170,
                      "src": "17394:24:147",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 68132,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "17394:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 68135,
                      "mutability": "mutable",
                      "name": "guardSig",
                      "nameLocation": "17433:8:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 68170,
                      "src": "17420:21:147",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 68134,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "17420:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68141,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 68137,
                        "name": "guard1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68093,
                        "src": "17466:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 68138,
                        "name": "rs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68069,
                        "src": "17474:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                          "typeString": "struct RawState memory"
                        }
                      },
                      {
                        "id": 68139,
                        "name": "rsi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68076,
                        "src": "17478:3:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawStateIndex_$94436_memory_ptr",
                          "typeString": "struct RawStateIndex memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                          "typeString": "struct RawState memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_RawStateIndex_$94436_memory_ptr",
                          "typeString": "struct RawStateIndex memory"
                        }
                      ],
                      "id": 68136,
                      "name": "createSignedSnapshot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71442,
                      "src": "17445:20:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_RawState_$94427_memory_ptr_$_t_struct$_RawStateIndex_$94436_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,struct RawState memory,struct RawStateIndex memory) view returns (bytes memory,bytes memory)"
                      }
                    },
                    "id": 68140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17445:37:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bytes memory,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17393:89:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68145,
                        "name": "snapPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68133,
                        "src": "17549:11:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 68146,
                        "name": "guardSig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68135,
                        "src": "17562:8:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 68142,
                        "name": "inbox",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91948,
                        "src": "17528:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Inbox_$7538",
                          "typeString": "contract Inbox"
                        }
                      },
                      "id": 68144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17534:14:147",
                      "memberName": "submitSnapshot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7132,
                      "src": "17528:20:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory,bytes memory) external returns (bytes memory,bytes32,uint256[] memory)"
                      }
                    },
                    "id": 68147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17528:43:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes memory,bytes32,uint256[] memory)"
                    }
                  },
                  "id": 68148,
                  "nodeType": "ExpressionStatement",
                  "src": "17528:43:147"
                },
                {
                  "assignments": [
                    68150
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68150,
                      "mutability": "mutable",
                      "name": "notarySig",
                      "nameLocation": "17638:9:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 68170,
                      "src": "17625:22:147",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 68149,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "17625:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68155,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 68152,
                        "name": "notary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68095,
                        "src": "17663:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 68153,
                        "name": "snapPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68133,
                        "src": "17671:11:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 68151,
                      "name": "signSnapshot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        91286,
                        91312,
                        91340
                      ],
                      "referencedDeclaration": 91286,
                      "src": "17650:12:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory) view returns (bytes memory)"
                      }
                    },
                    "id": 68154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17650:33:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17625:58:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 68159,
                          "name": "NotaryInDispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10288,
                          "src": "17709:15:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 68160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17725:8:147",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "17709:24:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 68156,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19821,
                        "src": "17693:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$30102",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 68158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17696:12:147",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29841,
                      "src": "17693:15:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 68161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17693:41:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68162,
                  "nodeType": "ExpressionStatement",
                  "src": "17693:41:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68166,
                        "name": "snapPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68133,
                        "src": "17765:11:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 68167,
                        "name": "notarySig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68150,
                        "src": "17778:9:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 68163,
                        "name": "inbox",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91948,
                        "src": "17744:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Inbox_$7538",
                          "typeString": "contract Inbox"
                        }
                      },
                      "id": 68165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17750:14:147",
                      "memberName": "submitSnapshot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7132,
                      "src": "17744:20:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory,bytes memory) external returns (bytes memory,bytes32,uint256[] memory)"
                      }
                    },
                    "id": 68168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17744:44:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes memory,bytes32,uint256[] memory)"
                    }
                  },
                  "id": 68169,
                  "nodeType": "ExpressionStatement",
                  "src": "17744:44:147"
                }
              ]
            },
            "functionSelector": "c202d9c3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_submitSnapshot_revert_notaryInDispute",
            "nameLocation": "16820:42:147",
            "parameters": {
              "id": 68070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68069,
                  "mutability": "mutable",
                  "name": "rs",
                  "nameLocation": "16879:2:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 68171,
                  "src": "16863:18:147",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                    "typeString": "struct RawState"
                  },
                  "typeName": {
                    "id": 68068,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 68067,
                      "name": "RawState",
                      "nameLocations": [
                        "16863:8:147"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 94427,
                      "src": "16863:8:147"
                    },
                    "referencedDeclaration": 94427,
                    "src": "16863:8:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RawState_$94427_storage_ptr",
                      "typeString": "struct RawState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16862:20:147"
            },
            "returnParameters": {
              "id": 68071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16890:0:147"
            },
            "scope": 68279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68259,
            "nodeType": "FunctionDefinition",
            "src": "17801:828:147",
            "nodes": [],
            "body": {
              "id": 68258,
              "nodeType": "Block",
              "src": "17880:749:147",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    68178,
                    68181
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68178,
                      "mutability": "mutable",
                      "name": "domainId",
                      "nameLocation": "17899:8:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 68258,
                      "src": "17891:16:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68177,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17891:7:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 68181,
                      "mutability": "mutable",
                      "name": "rsi",
                      "nameLocation": "17930:3:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 68258,
                      "src": "17909:24:147",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RawStateIndex_$94436_memory_ptr",
                        "typeString": "struct RawStateIndex"
                      },
                      "typeName": {
                        "id": 68180,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 68179,
                          "name": "RawStateIndex",
                          "nameLocations": [
                            "17909:13:147"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 94436,
                          "src": "17909:13:147"
                        },
                        "referencedDeclaration": 94436,
                        "src": "17909:13:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawStateIndex_$94436_storage_ptr",
                          "typeString": "struct RawStateIndex"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68188,
                  "initialValue": {
                    "components": [
                      {
                        "hexValue": "31",
                        "id": 68182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17938:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 68184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17955:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "31",
                            "id": 68185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17958:1:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 68183,
                          "name": "RawStateIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94436,
                          "src": "17941:13:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_RawStateIndex_$94436_storage_ptr_$",
                            "typeString": "type(struct RawStateIndex storage pointer)"
                          }
                        },
                        "id": 68186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17941:19:147",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawStateIndex_$94436_memory_ptr",
                          "typeString": "struct RawStateIndex memory"
                        }
                      }
                    ],
                    "id": 68187,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "17937:24:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_struct$_RawStateIndex_$94436_memory_ptr_$",
                      "typeString": "tuple(int_const 1,struct RawStateIndex memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17890:71:147"
                },
                {
                  "assignments": [
                    68190
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68190,
                      "mutability": "mutable",
                      "name": "domain",
                      "nameLocation": "17978:6:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 68258,
                      "src": "17971:13:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 68189,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "17971:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68194,
                  "initialValue": {
                    "baseExpression": {
                      "id": 68191,
                      "name": "allDomains",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90773,
                      "src": "17987:10:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$dyn_storage",
                        "typeString": "uint32[] storage ref"
                      }
                    },
                    "id": 68193,
                    "indexExpression": {
                      "id": 68192,
                      "name": "domainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68178,
                      "src": "17998:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17987:20:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17971:36:147"
                },
                {
                  "assignments": [
                    68196,
                    68198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68196,
                      "mutability": "mutable",
                      "name": "guard",
                      "nameLocation": "18026:5:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 68258,
                      "src": "18018:13:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 68195,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "18018:7:147",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 68198,
                      "mutability": "mutable",
                      "name": "notary",
                      "nameLocation": "18041:6:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 68258,
                      "src": "18033:14:147",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 68197,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "18033:7:147",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68212,
                  "initialValue": {
                    "components": [
                      {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 68199,
                              "name": "domains",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90778,
                              "src": "18052:7:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Domain_$90770_storage_$",
                                "typeString": "mapping(uint32 => struct SynapseAgents.Domain storage ref)"
                              }
                            },
                            "id": 68201,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 68200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18060:1:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18052:10:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Domain_$90770_storage",
                              "typeString": "struct SynapseAgents.Domain storage ref"
                            }
                          },
                          "id": 68202,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18063:6:147",
                          "memberName": "agents",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 90769,
                          "src": "18052:17:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 68204,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 68203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18070:1:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18052:20:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 68205,
                              "name": "domains",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90778,
                              "src": "18074:7:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Domain_$90770_storage_$",
                                "typeString": "mapping(uint32 => struct SynapseAgents.Domain storage ref)"
                              }
                            },
                            "id": 68207,
                            "indexExpression": {
                              "id": 68206,
                              "name": "domain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68190,
                              "src": "18082:6:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18074:15:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Domain_$90770_storage",
                              "typeString": "struct SynapseAgents.Domain storage ref"
                            }
                          },
                          "id": 68208,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18090:6:147",
                          "memberName": "agents",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 90769,
                          "src": "18074:22:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 68210,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 68209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18097:1:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18074:25:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 68211,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "18051:49:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18017:83:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68214,
                        "name": "guard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68196,
                        "src": "18177:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 68215,
                        "name": "notary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68198,
                        "src": "18192:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 68213,
                      "name": "openDispute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71255,
                      "src": "18157:11:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 68216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "18170:5:147",
                      "18184:6:147"
                    ],
                    "names": [
                      "guard",
                      "notary"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "18157:43:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68217,
                  "nodeType": "ExpressionStatement",
                  "src": "18157:43:147"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 68221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 68218,
                        "name": "rs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68174,
                        "src": "18259:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                          "typeString": "struct RawState memory"
                        }
                      },
                      "id": 68219,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18262:5:147",
                      "memberName": "nonce",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 94419,
                      "src": "18259:8:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 68220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18271:1:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18259:13:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68228,
                  "nodeType": "IfStatement",
                  "src": "18255:31:147",
                  "trueBody": {
                    "expression": {
                      "id": 68226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "id": 68222,
                          "name": "rs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68174,
                          "src": "18274:2:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                            "typeString": "struct RawState memory"
                          }
                        },
                        "id": 68224,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberLocation": "18277:5:147",
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94419,
                        "src": "18274:8:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 68225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18285:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "18274:12:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 68227,
                    "nodeType": "ExpressionStatement",
                    "src": "18274:12:147"
                  }
                },
                {
                  "assignments": [
                    68230,
                    68232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68230,
                      "mutability": "mutable",
                      "name": "snapPayload",
                      "nameLocation": "18310:11:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 68258,
                      "src": "18297:24:147",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 68229,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "18297:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 68232,
                      "mutability": "mutable",
                      "name": "guardSig",
                      "nameLocation": "18336:8:147",
                      "nodeType": "VariableDeclaration",
                      "scope": 68258,
                      "src": "18323:21:147",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 68231,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "18323:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68238,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 68234,
                        "name": "guard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68196,
                        "src": "18369:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 68235,
                        "name": "rs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68174,
                        "src": "18376:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                          "typeString": "struct RawState memory"
                        }
                      },
                      {
                        "id": 68236,
                        "name": "rsi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68181,
                        "src": "18380:3:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawStateIndex_$94436_memory_ptr",
                          "typeString": "struct RawStateIndex memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                          "typeString": "struct RawState memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_RawStateIndex_$94436_memory_ptr",
                          "typeString": "struct RawStateIndex memory"
                        }
                      ],
                      "id": 68233,
                      "name": "createSignedSnapshot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71442,
                      "src": "18348:20:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_RawState_$94427_memory_ptr_$_t_struct$_RawStateIndex_$94436_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,struct RawState memory,struct RawStateIndex memory) view returns (bytes memory,bytes memory)"
                      }
                    },
                    "id": 68237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18348:36:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bytes memory,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18296:88:147"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 68239,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19821,
                        "src": "18490:2:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$30102",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 68241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18493:10:147",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29847,
                      "src": "18490:13:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 68242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18490:15:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68243,
                  "nodeType": "ExpressionStatement",
                  "src": "18490:15:147"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 68245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18537:1:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 68246,
                        "name": "guard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68196,
                        "src": "18540:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 68247,
                        "name": "snapPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68230,
                        "src": "18547:11:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 68248,
                        "name": "guardSig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68232,
                        "src": "18560:8:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 68244,
                      "name": "SnapshotAccepted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3974,
                      "src": "18520:16:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint32,address,bytes memory,bytes memory)"
                      }
                    },
                    "id": 68249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18520:49:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68250,
                  "nodeType": "EmitStatement",
                  "src": "18515:54:147"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68254,
                        "name": "snapPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68230,
                        "src": "18600:11:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 68255,
                        "name": "guardSig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68232,
                        "src": "18613:8:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 68251,
                        "name": "inbox",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91948,
                        "src": "18579:5:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Inbox_$7538",
                          "typeString": "contract Inbox"
                        }
                      },
                      "id": 68253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18585:14:147",
                      "memberName": "submitSnapshot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7132,
                      "src": "18579:20:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory,bytes memory) external returns (bytes memory,bytes32,uint256[] memory)"
                      }
                    },
                    "id": 68256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18579:43:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes memory,bytes32,uint256[] memory)"
                    }
                  },
                  "id": 68257,
                  "nodeType": "ExpressionStatement",
                  "src": "18579:43:147"
                }
              ]
            },
            "functionSelector": "fe6acd11",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_submitSnapshot_success_guardInDispute",
            "nameLocation": "17810:42:147",
            "parameters": {
              "id": 68175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68174,
                  "mutability": "mutable",
                  "name": "rs",
                  "nameLocation": "17869:2:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 68259,
                  "src": "17853:18:147",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                    "typeString": "struct RawState"
                  },
                  "typeName": {
                    "id": 68173,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 68172,
                      "name": "RawState",
                      "nameLocations": [
                        "17853:8:147"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 94427,
                      "src": "17853:8:147"
                    },
                    "referencedDeclaration": 94427,
                    "src": "17853:8:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RawState_$94427_storage_ptr",
                      "typeString": "struct RawState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17852:20:147"
            },
            "returnParameters": {
              "id": 68176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17880:0:147"
            },
            "scope": 68279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68268,
            "nodeType": "FunctionDefinition",
            "src": "18961:94:147",
            "nodes": [],
            "body": {
              "id": 68267,
              "nodeType": "Block",
              "src": "19025:30:147",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 68265,
                    "name": "summit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 91945,
                    "src": "19042:6:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 68264,
                  "id": 68266,
                  "nodeType": "Return",
                  "src": "19035:13:147"
                }
              ]
            },
            "baseFunctions": [
              71454
            ],
            "functionSelector": "169e8aac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "localContract",
            "nameLocation": "18970:13:147",
            "overrides": {
              "id": 68261,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18998:8:147"
            },
            "parameters": {
              "id": 68260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18983:2:147"
            },
            "returnParameters": {
              "id": 68264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68263,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 68268,
                  "src": "19016:7:147",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19016:7:147",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19015:9:147"
            },
            "scope": 68279,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68278,
            "nodeType": "FunctionDefinition",
            "src": "19122:99:147",
            "nodes": [],
            "body": {
              "id": 68277,
              "nodeType": "Block",
              "src": "19183:38:147",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 68275,
                    "name": "DOMAIN_SYNAPSE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 92874,
                    "src": "19200:14:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 68274,
                  "id": 68276,
                  "nodeType": "Return",
                  "src": "19193:21:147"
                }
              ]
            },
            "baseFunctions": [
              71448
            ],
            "documentation": {
              "id": 68269,
              "nodeType": "StructuredDocumentation",
              "src": "19061:56:147",
              "text": "@notice Returns local domain for the tested contract"
            },
            "functionSelector": "8d3638f4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "localDomain",
            "nameLocation": "19131:11:147",
            "overrides": {
              "id": 68271,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "19157:8:147"
            },
            "parameters": {
              "id": 68270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19142:2:147"
            },
            "returnParameters": {
              "id": 68274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68273,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 68278,
                  "src": "19175:6:147",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 68272,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "19175:6:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19174:8:147"
            },
            "scope": 68279,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 66407,
              "name": "AgentSecuredTest",
              "nameLocations": [
                "1088:16:147"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 70937,
              "src": "1088:16:147"
            },
            "id": 66408,
            "nodeType": "InheritanceSpecifier",
            "src": "1088:16:147"
          }
        ],
        "canonicalName": "SummitTest",
        "contractDependencies": [
          589,
          1198,
          1552,
          2586,
          7538,
          7774,
          58480,
          58522,
          58613,
          58662,
          58734,
          58837,
          96562,
          96860,
          97483
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          68279,
          70937,
          71613,
          92854,
          91885,
          91383,
          93143,
          28782,
          19828,
          19825,
          28733,
          24532,
          24242,
          23563,
          21991,
          21279,
          19768,
          92974,
          93185,
          54996,
          93178,
          4116,
          4103,
          4039,
          4025,
          4000,
          3950,
          3930,
          3922
        ],
        "name": "SummitTest",
        "nameLocation": "1074:10:147",
        "scope": 68280,
        "usedErrors": [
          10202,
          10216,
          10240,
          10242,
          10252,
          10324,
          10326,
          10328,
          10330,
          10332
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 147
}