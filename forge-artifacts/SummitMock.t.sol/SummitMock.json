{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "guardIndex",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "sigIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        }
      ],
      "name": "acceptGuardSnapshot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "notaryIndex",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "sigIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "agentRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        }
      ],
      "name": "acceptNotarySnapshot",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "rcptNotaryIndex",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "attNotaryIndex",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "sigIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "attNonce",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "paddedTips",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "rcptBodyPayload",
          "type": "bytes"
        }
      ],
      "name": "acceptReceipt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "wasAccepted",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "actor",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "origin",
          "type": "uint32"
        }
      ],
      "name": "actorTips",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "earned",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "claimed",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "agentManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "agentStatus",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum AgentFlag",
              "name": "flag",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "internalType": "struct AgentStatus",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deleteMockReturnValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributeTips",
      "outputs": [
        {
          "internalType": "bool",
          "name": "queuePopped",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getAgent",
      "outputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum AgentFlag",
              "name": "flag",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "internalType": "struct AgentStatus",
          "name": "status",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "attNonce",
          "type": "uint32"
        }
      ],
      "name": "getAttestation",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "agentRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "snapGas",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getGuardSnapshot",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "snapSignature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "origin",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "getLatestAgentState",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "statePayload",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "notary",
          "type": "address"
        }
      ],
      "name": "getLatestNotaryAttestation",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "agentRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "snapGas",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "origin",
          "type": "uint32"
        }
      ],
      "name": "getLatestState",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "statePayload",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        }
      ],
      "name": "getNotarySnapshot",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "snapSignature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getNotarySnapshot",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "snapSignature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReturnValueAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReturnValueBool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReturnValueBytes",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReturnValueUint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReturnValueUint32",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "attNonce",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        }
      ],
      "name": "getSnapshotProof",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "snapProof",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "inbox",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "isValidAttestation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "guardIndex",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "notaryIndex",
          "type": "uint32"
        }
      ],
      "name": "openDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiptQueueLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "slashedIndex",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "rivalIndex",
          "type": "uint32"
        }
      ],
      "name": "resolveDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setMockReturnValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "setMockReturnValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "setMockReturnValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAgentSecuredMock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBaseMock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSnapshotHubMock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSummitMock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "origin",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTips",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "312:1167:135:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "312:1167:135:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;879:178;;;;;;:::i;:::-;1026:23;879:178;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1312:159:140;;;;;;:::i;:::-;1411:24;1437:26;1312:159;;;;;;;;;;;;:::i;1063:64:135:-;1107:16;1063:64;;;3111:14:200;;3104:22;3086:41;;3074:2;3059:18;1063:64:135;2946:187:200;1477:116:140;;;;;;:::i;:::-;1563:26;1477:116;;;;;;;;;;;;:::i;609:81:136:-;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;609:81:136;;;;;;;;:::i;696:100::-;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;752:13:136;-1:-1:-1;;;;;;;;;;;;;;;696:100:136;;;;;;;;;;;;:::i;776:170:137:-;;;:::i;:::-;;;-1:-1:-1;;;;;6061:32:200;;;6043:51;;6031:2;6016:18;776:170:137;5897:203:200;406:123:140;;;;;;:::i;:::-;;:::i;1203:107:135:-;;;;;;:::i;:::-;-1:-1:-1;1275:14:135;;;;-1:-1:-1;1203:107:135;;;;;6680:34:200;6741:15;;;6723:34;;6793:15;;;;6788:2;6773:18;;6766:43;6643:18;1203:107:135;6496:319:200;281:43:136;;1114:158:137;;;:::i;:::-;;;6966:25:200;;;6954:2;6939:18;1114:158:137;6820:177:200;664:106:137;;;:::i;407:75:136:-;;;;;;:::i;:::-;;;;1133:64:135;;;;;;:::i;338:105:137:-;;;;;;:::i;:::-;;:::i;488:58:136:-;1107:16:135;488:58:136;1063:64:135;952:156:137;;;:::i;770:103:135:-;;;;;;:::i;:::-;;;;;535:164:140;;;;;;:::i;:::-;-1:-1:-1;623:23:140;;648:17;;623:23;;535:164;;;;;;;;;;:::i;1316:64:135:-;1107:16;1316:64;1063;1278:158:137;;;:::i;:::-;;;9177:10:200;9165:23;;;9147:42;;9135:2;9120:18;1278:158:137;9003:192:200;250:82:137;;;:::i;822:175:140:-;;;;;;:::i;517:247:135:-;;;;;;:::i;:::-;744:16;517:247;;;;;;;;;1003:148:140;;;;;;:::i;1386:91:135:-;;;;;;:::i;:::-;-1:-1:-1;1448:25:135;;1386:91;449:105:137;;;;;;:::i;:::-;;:::i;705:111:140:-;;;;;;:::i;560:98:137:-;;;;;;:::i;:::-;;:::i;776:170::-;830:7;856:16;:23;;;;;:::i;:::-;:28;;-1:-1:-1;856:83:137;;911:16;900:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;849:90;;776:170;:::o;856:83::-;-1:-1:-1;895:1:137;;776:170::o;406:123:140:-;471:12;502:20;:18;:20::i;:::-;495:27;406:123;-1:-1:-1;;406:123:140:o;281:43:136:-;:::o;1114:158:137:-;1165:7;1191:16;:23;;;;;:::i;:::-;:28;;-1:-1:-1;1191:74:137;;1237:16;1226:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;664:106::-;716:12;747:16;740:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;664:106;:::o;338:105::-;419:17;;;;;;6966:25:200;;;6939:18;419:17:137;;;;;;;;;;;;;400:16;:36;;;;;;:::i;952:156::-;1003:4;1026:16;:23;;;;;:::i;:::-;:28;;-1:-1:-1;1026:75:137;;1076:16;1065:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1278:158::-;1331:6;1356:16;:23;;;;;:::i;:::-;:28;;-1:-1:-1;1356:73:137;;1402:16;1391:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;250:82::-;302:23;309:16;;302:23;:::i;449:105::-;530:17;;;-1:-1:-1;;;;;6061:32:200;;530:17:137;;;6043:51:200;6016:18;530:17:137;5897:203:200;560:98:137;627:16;:24;646:5;627:16;:24;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;14:121:200:-;99:10;92:5;88:22;81:5;78:33;68:61;;125:1;122;115:12;140:127;201:10;196:3;192:20;189:1;182:31;232:4;229:1;222:15;256:4;253:1;246:15;272:718;314:5;367:3;360:4;352:6;348:17;344:27;334:55;;385:1;382;375:12;334:55;421:6;408:20;447:18;484:2;480;477:10;474:36;;;490:18;;:::i;:::-;565:2;559:9;533:2;619:13;;-1:-1:-1;;615:22:200;;;639:2;611:31;607:40;595:53;;;663:18;;;683:22;;;660:46;657:72;;;709:18;;:::i;:::-;749:10;745:2;738:22;784:2;776:6;769:18;830:3;823:4;818:2;810:6;806:15;802:26;799:35;796:55;;;847:1;844;837:12;796:55;911:2;904:4;896:6;892:17;885:4;877:6;873:17;860:54;958:1;951:4;946:2;938:6;934:15;930:26;923:37;978:6;969:15;;;;;;272:718;;;;:::o;995:590::-;1089:6;1097;1105;1113;1166:3;1154:9;1145:7;1141:23;1137:33;1134:53;;;1183:1;1180;1173:12;1134:53;1222:9;1209:23;1241:30;1265:5;1241:30;:::i;:::-;1290:5;-1:-1:-1;1342:2:200;1327:18;;1314:32;;-1:-1:-1;1393:2:200;1378:18;;1365:32;;-1:-1:-1;1448:2:200;1433:18;;1420:32;1475:18;1464:30;;1461:50;;;1507:1;1504;1497:12;1461:50;1530:49;1571:7;1562:6;1551:9;1547:22;1530:49;:::i;:::-;1520:59;;;995:590;;;;;;;:::o;1590:422::-;1631:3;1669:5;1663:12;1696:6;1691:3;1684:19;1721:1;1731:162;1745:6;1742:1;1739:13;1731:162;;;1807:4;1863:13;;;1859:22;;1853:29;1835:11;;;1831:20;;1824:59;1760:12;1731:162;;;1735:3;1938:1;1931:4;1922:6;1917:3;1913:16;1909:27;1902:38;2001:4;1994:2;1990:7;1985:2;1977:6;1973:15;1969:29;1964:3;1960:39;1956:50;1949:57;;;1590:422;;;;:::o;2017:217::-;2164:2;2153:9;2146:21;2127:4;2184:44;2224:2;2213:9;2209:18;2201:6;2184:44;:::i;:::-;2176:52;2017:217;-1:-1:-1;;;2017:217:200:o;2239:320::-;2307:6;2360:2;2348:9;2339:7;2335:23;2331:32;2328:52;;;2376:1;2373;2366:12;2328:52;2416:9;2403:23;2449:18;2441:6;2438:30;2435:50;;;2481:1;2478;2471:12;2435:50;2504:49;2545:7;2536:6;2525:9;2521:22;2504:49;:::i;:::-;2494:59;2239:320;-1:-1:-1;;;;2239:320:200:o;2564:377::-;2757:2;2746:9;2739:21;2720:4;2783:44;2823:2;2812:9;2808:18;2800:6;2783:44;:::i;:::-;2875:9;2867:6;2863:22;2858:2;2847:9;2843:18;2836:50;2903:32;2928:6;2920;2903:32;:::i;:::-;2895:40;2564:377;-1:-1:-1;;;;;2564:377:200:o;3138:313::-;3205:6;3213;3266:2;3254:9;3245:7;3241:23;3237:32;3234:52;;;3282:1;3279;3272:12;3234:52;3321:9;3308:23;3340:30;3364:5;3340:30;:::i;:::-;3389:5;3441:2;3426:18;;;;3413:32;;-1:-1:-1;;;3138:313:200:o;3456:632::-;3627:2;3679:21;;;3749:13;;3652:18;;;3771:22;;;3598:4;;3627:2;3850:15;;;;3824:2;3809:18;;;3598:4;3893:169;3907:6;3904:1;3901:13;3893:169;;;3968:13;;3956:26;;4037:15;;;;4002:12;;;;3929:1;3922:9;3893:169;;;-1:-1:-1;4079:3:200;;3456:632;-1:-1:-1;;;;;;3456:632:200:o;4093:131::-;-1:-1:-1;;;;;4168:31:200;;4158:42;;4148:70;;4214:1;4211;4204:12;4229:247;4288:6;4341:2;4329:9;4320:7;4316:23;4312:32;4309:52;;;4357:1;4354;4347:12;4309:52;4396:9;4383:23;4415:31;4440:5;4415:31;:::i;4613:466::-;4694:5;4688:12;4726:1;4722:2;4719:9;4709:140;;4771:10;4766:3;4762:20;4759:1;4752:31;4806:4;4803:1;4796:15;4834:4;4831:1;4824:15;4709:140;4858:15;;4919:4;4908:16;;;4902:23;4944:10;4986:21;;;4970:14;;;4963:45;;;;5061:4;5050:16;;;5044:23;5040:32;5024:14;;5017:56;4613:466::o;5084:260::-;5278:2;5263:18;;5290:48;5267:9;5320:6;5290:48;:::i;5349:180::-;5408:6;5461:2;5449:9;5440:7;5436:23;5432:32;5429:52;;;5477:1;5474;5467:12;5429:52;-1:-1:-1;5500:23:200;;5349:180;-1:-1:-1;5349:180:200:o;5534:358::-;-1:-1:-1;;;;;5787:32:200;;5769:51;;5756:3;5741:19;;5829:57;5882:2;5867:18;;5859:6;5829:57;:::i;6105:386::-;6172:6;6180;6233:2;6221:9;6212:7;6208:23;6204:32;6201:52;;;6249:1;6246;6239:12;6201:52;6288:9;6275:23;6307:31;6332:5;6307:31;:::i;:::-;6357:5;-1:-1:-1;6414:2:200;6399:18;;6386:32;6427;6386;6427;:::i;:::-;6478:7;6468:17;;;6105:386;;;;;:::o;7002:384::-;7068:6;7076;7129:2;7117:9;7108:7;7104:23;7100:32;7097:52;;;7145:1;7142;7135:12;7097:52;7184:9;7171:23;7203:30;7227:5;7203:30;:::i;7391:521::-;7476:6;7484;7492;7545:2;7533:9;7524:7;7520:23;7516:32;7513:52;;;7561:1;7558;7551:12;7513:52;7600:9;7587:23;7619:30;7643:5;7619:30;:::i;:::-;7668:5;-1:-1:-1;7720:2:200;7705:18;;7692:32;;-1:-1:-1;7775:2:200;7760:18;;7747:32;7802:18;7791:30;;7788:50;;;7834:1;7831;7824:12;7788:50;7857:49;7898:7;7889:6;7878:9;7874:22;7857:49;:::i;:::-;7847:59;;;7391:521;;;;;:::o;7917:245::-;7975:6;8028:2;8016:9;8007:7;8003:23;7999:32;7996:52;;;8044:1;8041;8034:12;7996:52;8083:9;8070:23;8102:30;8126:5;8102:30;:::i;8167:831::-;8420:2;8409:9;8402:21;8383:4;8446:44;8486:2;8475:9;8471:18;8463:6;8446:44;:::i;:::-;8509:2;8527:18;;;8520:34;;;8590:22;;;8585:2;8570:18;;8563:50;8662:13;;8684:22;;;8760:15;;;;8722;;;-1:-1:-1;8803:169:200;8817:6;8814:1;8811:13;8803:169;;;8878:13;;8866:26;;8947:15;;;;8912:12;;;;8839:1;8832:9;8803:169;;;-1:-1:-1;8989:3:200;;8167:831;-1:-1:-1;;;;;;;;8167:831:200:o;9200:870::-;9310:6;9318;9326;9334;9342;9350;9403:3;9391:9;9382:7;9378:23;9374:33;9371:53;;;9420:1;9417;9410:12;9371:53;9459:9;9446:23;9478:30;9502:5;9478:30;:::i;:::-;9527:5;-1:-1:-1;9584:2:200;9569:18;;9556:32;9597;9556;9597;:::i;:::-;9648:7;-1:-1:-1;9702:2:200;9687:18;;9674:32;;-1:-1:-1;9758:2:200;9743:18;;9730:32;9771;9730;9771;:::i;:::-;9822:7;-1:-1:-1;9876:3:200;9861:19;;9848:33;;-1:-1:-1;9932:3:200;9917:19;;9904:33;9960:18;9949:30;;9946:50;;;9992:1;9989;9982:12;9946:50;10015:49;10056:7;10047:6;10036:9;10032:22;10015:49;:::i;:::-;10005:59;;;9200:870;;;;;;;;:::o;10075:386::-;10142:6;10150;10203:2;10191:9;10182:7;10178:23;10174:32;10171:52;;;10219:1;10216;10209:12;10171:52;10258:9;10245:23;10277:30;10301:5;10277:30;:::i;:::-;10326:5;-1:-1:-1;10383:2:200;10368:18;;10355:32;10396:33;10355:32;10396:33;:::i;10466:380::-;10545:1;10541:12;;;;10588;;;10609:61;;10663:4;10655:6;10651:17;10641:27;;10609:61;10716:2;10708:6;10705:14;10685:18;10682:38;10679:161;;10762:10;10757:3;10753:20;10750:1;10743:31;10797:4;10794:1;10787:15;10825:4;10822:1;10815:15;10679:161;;10466:380;;;:::o;10851:259::-;10929:6;10982:2;10970:9;10961:7;10957:23;10953:32;10950:52;;;10998:1;10995;10988:12;10950:52;11030:9;11024:16;11049:31;11074:5;11049:31;:::i;11115:184::-;11185:6;11238:2;11226:9;11217:7;11213:23;11209:32;11206:52;;;11254:1;11251;11244:12;11206:52;-1:-1:-1;11277:16:200;;11115:184;-1:-1:-1;11115:184:200:o;11429:544::-;11530:2;11525:3;11522:11;11519:448;;;11566:1;11591:5;11587:2;11580:17;11636:4;11632:2;11622:19;11706:2;11694:10;11690:19;11687:1;11683:27;11677:4;11673:38;11742:4;11730:10;11727:20;11724:47;;;-1:-1:-1;11765:4:200;11724:47;11820:2;11815:3;11811:12;11808:1;11804:20;11798:4;11794:31;11784:41;;11875:82;11893:2;11886:5;11883:13;11875:82;;;11938:17;;;11919:1;11908:13;11875:82;;;11879:3;;;11429:544;;;:::o;12149:1348::-;12273:3;12267:10;12300:18;12292:6;12289:30;12286:56;;;12322:18;;:::i;:::-;12351:96;12440:6;12400:38;12432:4;12426:11;12400:38;:::i;:::-;12394:4;12351:96;:::i;:::-;12502:4;;12566:2;12555:14;;12583:1;12578:662;;;;13284:1;13301:6;13298:89;;;-1:-1:-1;13353:19:200;;;13347:26;13298:89;-1:-1:-1;;12106:1:200;12102:11;;;12098:24;12094:29;12084:40;12130:1;12126:11;;;12081:57;13400:81;;12548:943;;12578:662;11376:1;11369:14;;;11413:4;11400:18;;-1:-1:-1;;12614:20:200;;;12731:236;12745:7;12742:1;12739:14;12731:236;;;12834:19;;;12828:26;12813:42;;12926:27;;;;12894:1;12882:14;;;;12761:19;;12731:236;;;12735:3;12995:6;12986:7;12983:19;12980:201;;;13056:19;;;13050:26;-1:-1:-1;;13139:1:200;13135:14;;;13151:3;13131:24;13127:37;13123:42;13108:58;13093:74;;12980:201;-1:-1:-1;;;;;13227:1:200;13211:14;;;13207:22;13194:36;;-1:-1:-1;12149:1348:200:o;13502:277::-;13569:6;13622:2;13610:9;13601:7;13597:23;13593:32;13590:52;;;13638:1;13635;13628:12;13590:52;13670:9;13664:16;13723:5;13716:13;13709:21;13702:5;13699:32;13689:60;;13745:1;13742;13735:12;13784:249;13853:6;13906:2;13894:9;13885:7;13881:23;13877:32;13874:52;;;13922:1;13919;13912:12;13874:52;13954:9;13948:16;13973:30;13997:5;13973:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "acceptGuardSnapshot(uint32,uint256,bytes)": "9cc1bb31",
    "acceptNotarySnapshot(uint32,uint256,bytes32,bytes)": "00f34054",
    "acceptReceipt(uint32,uint32,uint256,uint32,uint256,bytes)": "c79a431b",
    "actorTips(address,uint32)": "47ca1b14",
    "agentManager()": "7622f78d",
    "agentStatus(address)": "28f3fac9",
    "deleteMockReturnValue()": "b81442e0",
    "distributeTips()": "0729ae8a",
    "getAgent(uint256)": "2de5aaf7",
    "getAttestation(uint32)": "a23d9bae",
    "getGuardSnapshot(uint256)": "caecc6db",
    "getLatestAgentState(uint32,address)": "e8c12f80",
    "getLatestNotaryAttestation(address)": "bf1aae26",
    "getLatestState(uint32)": "d17db53a",
    "getNotarySnapshot(bytes)": "02eef8dc",
    "getNotarySnapshot(uint256)": "f5230719",
    "getReturnValueAddress()": "4289cf75",
    "getReturnValueBool()": "76fae198",
    "getReturnValueBytes()": "5980330d",
    "getReturnValueUint()": "504730ab",
    "getReturnValueUint32()": "b78973d4",
    "getSnapshotProof(uint32,uint256)": "229b5b1e",
    "inbox()": "fb0e722b",
    "isValidAttestation(bytes)": "4362fd11",
    "openDispute(uint32,uint32)": "a2155c34",
    "receiptQueueLength()": "a5ba1a55",
    "resolveDispute(uint32,uint32)": "61169218",
    "setMockReturnValue(address)": "e60f5f6a",
    "setMockReturnValue(bytes)": "f05b3351",
    "setMockReturnValue(uint256)": "714141de",
    "testAgentSecuredMock()": "4a4a26a2",
    "testBaseMock()": "b26406a0",
    "testSnapshotHubMock()": "cace200f",
    "testSummitMock()": "4c4e8ce4",
    "withdrawTips(uint32,uint256)": "6170e4e6"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"guardIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"sigIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"}],\"name\":\"acceptGuardSnapshot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"notaryIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"sigIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"agentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"}],\"name\":\"acceptNotarySnapshot\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"rcptNotaryIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"attNotaryIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"sigIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"attNonce\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"paddedTips\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"rcptBodyPayload\",\"type\":\"bytes\"}],\"name\":\"acceptReceipt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"wasAccepted\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"}],\"name\":\"actorTips\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"earned\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"claimed\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agentManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"agentStatus\",\"outputs\":[{\"components\":[{\"internalType\":\"enum AgentFlag\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"internalType\":\"struct AgentStatus\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteMockReturnValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeTips\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"queuePopped\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum AgentFlag\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"internalType\":\"struct AgentStatus\",\"name\":\"status\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"attNonce\",\"type\":\"uint32\"}],\"name\":\"getAttestation\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"agentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"snapGas\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getGuardSnapshot\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"snapSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"getLatestAgentState\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"statePayload\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"}],\"name\":\"getLatestNotaryAttestation\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"agentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"snapGas\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"}],\"name\":\"getLatestState\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"statePayload\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"}],\"name\":\"getNotarySnapshot\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"snapSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getNotarySnapshot\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"snapSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReturnValueAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReturnValueBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReturnValueBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReturnValueUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReturnValueUint32\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"attNonce\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"}],\"name\":\"getSnapshotProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"snapProof\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inbox\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"isValidAttestation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"guardIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"notaryIndex\",\"type\":\"uint32\"}],\"name\":\"openDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiptQueueLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"slashedIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"rivalIndex\",\"type\":\"uint32\"}],\"name\":\"resolveDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setMockReturnValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"setMockReturnValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"setMockReturnValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAgentSecuredMock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBaseMock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSnapshotHubMock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSummitMock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTips\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptGuardSnapshot(uint32,uint256,bytes)\":{\"params\":{\"guardIndex\":\"Index of Guard in Agent Merkle Tree\",\"sigIndex\":\"Index of stored Agent signature\",\"snapPayload\":\"Raw payload with snapshot data\"}},\"acceptNotarySnapshot(uint32,uint256,bytes32,bytes)\":{\"params\":{\"agentRoot\":\"Current root of the Agent Merkle Tree\",\"notaryIndex\":\"Index of Notary in Agent Merkle Tree\",\"sigIndex\":\"Index of stored Agent signature\",\"snapPayload\":\"Raw payload with snapshot data\"},\"returns\":{\"attPayload\":\"      Raw payload with data for attestation derived from Notary snapshot.\"}},\"actorTips(address,uint32)\":{\"params\":{\"actor\":\"Address of the actor\",\"origin\":\"Domain where the tips were initially paid\"},\"returns\":{\"claimed\":\" Total amount of origin tips the actor has claimed so far\",\"earned\":\"  Total amount of origin tips the actor has earned so far\"}},\"agentStatus(address)\":{\"details\":\"Will return AgentFlag.Fraudulent for agents that have been proven to commit fraud, but their status is not updated to Slashed yet.\",\"params\":{\"agent\":\"Agent address\"},\"returns\":{\"_0\":\"Status for the given agent: (flag, domain, index).\"}},\"distributeTips()\":{\"details\":\"Returned value makes it possible to do the following: `while (distributeTips()) {}`\",\"returns\":{\"queuePopped\":\"     Whether the first element was popped from the queue\"}},\"getAgent(uint256)\":{\"details\":\"Will return empty values if agent with given index doesn't exist.\",\"params\":{\"index\":\"Agent index in the Agent Merkle Tree\"},\"returns\":{\"agent\":\"   Agent address\",\"status\":\"  Status for the given agent: (flag, domain, index)\"}},\"getAttestation(uint32)\":{\"details\":\"Reverts if attestation with given nonce hasn't been created yet.\",\"params\":{\"attNonce\":\"Nonce for the attestation\"},\"returns\":{\"agentRoot\":\"   Agent root hash used for the attestation\",\"attPayload\":\"  Raw payload with formatted Attestation data\",\"snapGas\":\"     Snapshot gas data used for the attestation\"}},\"getGuardSnapshot(uint256)\":{\"details\":\"Reverts if snapshot with given index hasn't been accepted yet.\",\"params\":{\"index\":\"Snapshot index in the list of all Guard snapshots\"},\"returns\":{\"snapPayload\":\"     Raw payload with Guard snapshot\",\"snapSignature\":\"   Raw payload with Guard signature for snapshot\"}},\"getLatestAgentState(uint32,address)\":{\"params\":{\"agent\":\"Agent address\",\"origin\":\"Domain of origin chain\"},\"returns\":{\"statePayload\":\"Raw payload with agent's latest state for origin\"}},\"getLatestNotaryAttestation(address)\":{\"params\":{\"notary\":\"Notary address\"},\"returns\":{\"agentRoot\":\"   Agent root hash used for the attestation\",\"attPayload\":\"  Raw payload with formatted Attestation data\",\"snapGas\":\"     Snapshot gas data used for the attestation\"}},\"getLatestState(uint32)\":{\"params\":{\"origin\":\"Domain of origin chain\"},\"returns\":{\"statePayload\":\"Raw payload with latest active Guard state for origin\"}},\"getNotarySnapshot(bytes)\":{\"details\":\"Reverts if any of these is true:  - Attestation payload is not properly formatted.  - Attestation is invalid (doesn't have a matching Notary snapshot).\",\"params\":{\"attPayload\":\"Raw payload with attestation data\"},\"returns\":{\"snapPayload\":\"     Raw payload with Notary snapshot\",\"snapSignature\":\"   Raw payload with Notary signature for snapshot\"}},\"getNotarySnapshot(uint256)\":{\"details\":\"Reverts if snapshot with given index hasn't been accepted yet.\",\"params\":{\"index\":\"Snapshot index in the list of all Notary snapshots\"},\"returns\":{\"snapPayload\":\"     Raw payload with Notary snapshot\",\"snapSignature\":\"   Raw payload with Notary signature for snapshot\"}},\"getSnapshotProof(uint32,uint256)\":{\"details\":\"Reverts if any of these is true:  - Attestation with given nonce hasn't been created yet.  - State index is out of range of snapshot list.\",\"params\":{\"attNonce\":\"Nonce for the attestation\",\"stateIndex\":\"Index of state in the attestation's snapshot\"},\"returns\":{\"snapProof\":\"   The snapshot proof\"}},\"inbox()\":{\"details\":\"Inbox passes verified agent statements to `IAgentSecured` contract.\"},\"openDispute(uint32,uint32)\":{\"params\":{\"guardIndex\":\"Index of the Guard in the Agent Merkle Tree\",\"notaryIndex\":\"Index of the Notary in the Agent Merkle Tree\"}},\"resolveDispute(uint32,uint32)\":{\"params\":{\"rivalIndex\":\"Index of the their Dispute Rival in the Agent Merkle Tree\",\"slashedIndex\":\"Index of the slashed agent in the Agent Merkle Tree\"}},\"withdrawTips(uint32,uint256)\":{\"details\":\"This will revert, if the pending balance of origin tips (earned-claimed) is lower than requested.\",\"params\":{\"amount\":\"Amount of tips to withdraw\",\"origin\":\"Domain of chain to withdraw tips on\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptGuardSnapshot(uint32,uint256,bytes)\":{\"notice\":\"Accepts a snapshot, which local `AgentManager` verified to have been signed by an active Guard. > Snapshot is a list of states for a set of Origin contracts residing on any of the chains. All the states in the Guard-signed snapshot become available for Notary signing. > Will revert if any of these is true: > - Called by anyone other than local `AgentManager`. > - Snapshot payload is not properly formatted. > - Snapshot contains a state older then the Guard has previously submitted.\"},\"acceptNotarySnapshot(uint32,uint256,bytes32,bytes)\":{\"notice\":\"Accepts a snapshot, which local `AgentManager` verified to have been signed by an active Notary. > Snapshot is a list of states for a set of Origin contracts residing on any of the chains. Snapshot Merkle Root is calculated and saved for valid snapshots, i.e. snapshots which are only using states previously submitted by any of the Guards. - Notary could use states singed by the same of different Guards in their snapshot. - Notary could then proceed to sign the attestation for their submitted snapshot. > Will revert if any of these is true: > - Called by anyone other than local `AgentManager`. > - Snapshot payload is not properly formatted. > - Snapshot contains a state older then the Notary has previously submitted. > - Snapshot contains a state that no Guard has previously submitted.\"},\"actorTips(address,uint32)\":{\"notice\":\"Returns earned and claimed tips for the actor. Note: Tips for address(0) belong to the Treasury.\"},\"agentManager()\":{\"notice\":\"Returns the address of the local AgentManager contract, which is treated as the \\\"source of truth\\\" for agent statuses.\"},\"agentStatus(address)\":{\"notice\":\"Returns (flag, domain, index) for a given agent. See Structures.sol for details.\"},\"distributeTips()\":{\"notice\":\"Distributes tips using the first Receipt from the \\\"receipt quarantine queue\\\". Possible scenarios:  - Receipt queue is empty => does nothing  - Receipt optimistic period is not over => does nothing  - Either of Notaries present in Receipt was slashed => receipt is deleted from the queue  - Either of Notaries present in Receipt in Dispute => receipt is moved to the end of queue  - None of the above => receipt tips are distributed\"},\"getAgent(uint256)\":{\"notice\":\"Returns agent address and their current status for a given agent index.\"},\"getAttestation(uint32)\":{\"notice\":\"Returns saved attestation with the given nonce.\"},\"getGuardSnapshot(uint256)\":{\"notice\":\"Returns Guard snapshot from the list of all accepted Guard snapshots.\"},\"getLatestAgentState(uint32,address)\":{\"notice\":\"Returns the state with the highest known nonce submitted by a given Agent.\"},\"getLatestNotaryAttestation(address)\":{\"notice\":\"Returns latest saved attestation for a Notary.\"},\"getLatestState(uint32)\":{\"notice\":\"Returns the state with the highest known nonce submitted by any of the currently active Guards.\"},\"getNotarySnapshot(bytes)\":{\"notice\":\"Returns Notary snapshot that was used for creating a given attestation.\"},\"getNotarySnapshot(uint256)\":{\"notice\":\"Returns Notary snapshot from the list of all accepted Guard snapshots.\"},\"getSnapshotProof(uint32,uint256)\":{\"notice\":\"Returns proof of inclusion of (root, origin) fields of a given snapshot's state into the Snapshot Merkle Tree for a given attestation.\"},\"inbox()\":{\"notice\":\"Returns the address of the local Inbox contract, which is treated as the \\\"source of truth\\\" for agent-signed statements.\"},\"openDispute(uint32,uint32)\":{\"notice\":\"Local AgentManager should call this function to indicate that a dispute between a Guard and a Notary has been opened.\"},\"receiptQueueLength()\":{\"notice\":\"Returns the amount of receipts in the \\\"Receipt Quarantine Queue\\\".\"},\"resolveDispute(uint32,uint32)\":{\"notice\":\"Local AgentManager should call this function to indicate that a dispute has been resolved due to one of the agents being slashed. > `rivalIndex` will be ZERO, if the slashed agent was not in the Dispute.\"},\"testAgentSecuredMock()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"},\"testBaseMock()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"},\"testSnapshotHubMock()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"},\"testSummitMock()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"},\"withdrawTips(uint32,uint256)\":{\"notice\":\"Withdraws locked base message tips from requested domain Origin to the recipient. This is done by a call to a local Origin contract, or by a manager message to the remote chain.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/SummitMock.t.sol\":\"SummitMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/interfaces/IAgentSecured.sol\":{\"keccak256\":\"0x9a7efecf8fe37cc8245e3b0e3f5d6d6ee056cdd97ccb5631ff6347bdfc9fc889\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7877d223162a76d3fe75490069719b3a4f14cd66fc42bfa915f2813390b7d2aa\",\"dweb:/ipfs/QmZhE1rnffA9bbtkNAwVk6iitMPk14gHbK56mdeHQEPhxj\"]},\"contracts/interfaces/ISnapshotHub.sol\":{\"keccak256\":\"0x3640a263eb4af25646250affc0fe8c666df03e11fa36da4823363b46a878160b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fafb6b8f21c1a392b8d2f1f0a380bfe48bef18862f9519f69fe23e29e03b55ad\",\"dweb:/ipfs/Qmakg3WLAB1r7SyVnP8Db2ofzsV4RmsPDzk6wf3PS35kcX\"]},\"contracts/interfaces/InterfaceSummit.sol\":{\"keccak256\":\"0xeb60c7097b7e8a82e30e4e4e7788810d029a0bb013eb71d0e47d062abeb14494\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc35dbea34e34c513507575b9189806412e6e0d9dd6c7c34c5e598a89c58ed43\",\"dweb:/ipfs/QmTe6U1pB7AQaDiRdQRGktx96BWkGQdb8vLqtSpqCu3XDK\"]},\"contracts/libs/Errors.sol\":{\"keccak256\":\"0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b\",\"dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB\"]},\"contracts/libs/Structures.sol\":{\"keccak256\":\"0x3eaa63f5d9aac514328111e8fdd037dc6fdb18af7541a8287deeacd2e44f7137\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://633619910c74a0685ef2993a2e7cc44088929121a15c8a9fc26c9bbadffbda71\",\"dweb:/ipfs/QmZceJv6UntiMWW4JZHbmytLsqXshbuav8yoiritksvqqy\"]},\"test/mocks/SummitMock.t.sol\":{\"keccak256\":\"0x07ab882390295f653c026dfe3380d04437c9ac33e2e6a4dca15198fdfb19210b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15bd4ed09addb35c059aab2d7fb69c1484f4f7d4f5fe8bd13f621c406b9529da\",\"dweb:/ipfs/Qmdq9jUHneJZXPYJQtYidiDbxvqHBi3Cy489TfUG3q4jFw\"]},\"test/mocks/base/AgentSecuredMock.t.sol\":{\"keccak256\":\"0x7c74b961b7d06d65138f35d638b68be02046565479f09606bf099da0093eba36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5faa5048684a4685809fec66813899f0c55f47ec27b39c7b0440c2083cd34e4c\",\"dweb:/ipfs/QmfL3CxnjPXHnD137ERbyLMTuAfJsJa3k7yft7VqYGdvqf\"]},\"test/mocks/base/BaseMock.t.sol\":{\"keccak256\":\"0x5d0ddef55a6d63ce25175fd2cefc00b9030e8f7247600220e67a33c3982b9697\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96928ffa43cb650c3c594fa2d1459f2f44eea1f52fb988011a638e80b255d986\",\"dweb:/ipfs/QmXpFxAzvt9jaD4BsKGLJnBdHF1m4uvfB1iKt94mr3ryCJ\"]},\"test/mocks/hubs/SnapshotHubMock.t.sol\":{\"keccak256\":\"0x3bd89d154ad63a5bbf3d79180bbbb5dd37ac602ebe7230749a269994cd0e0252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d2a54f6f85a4463e89f7283c6b19b47a3bf710f24fb1ca8af929a1d0d7b961\",\"dweb:/ipfs/QmTaPz6oEzA3EgHoetvgZhqSR4pXPXbj4bcybnJ9qxNkj2\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "guardIndex",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "sigIndex",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptGuardSnapshot"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "notaryIndex",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "sigIndex",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "agentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptNotarySnapshot",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "rcptNotaryIndex",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "attNotaryIndex",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "sigIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "attNonce",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "paddedTips",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "rcptBodyPayload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptReceipt",
          "outputs": [
            {
              "internalType": "bool",
              "name": "wasAccepted",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "actor",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "origin",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "actorTips",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "earned",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "claimed",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "agentManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "agentStatus",
          "outputs": [
            {
              "internalType": "struct AgentStatus",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum AgentFlag",
                  "name": "flag",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "domain",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "index",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteMockReturnValue"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "distributeTips",
          "outputs": [
            {
              "internalType": "bool",
              "name": "queuePopped",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgent",
          "outputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "struct AgentStatus",
              "name": "status",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum AgentFlag",
                  "name": "flag",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "domain",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "index",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "attNonce",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAttestation",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "agentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "snapGas",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getGuardSnapshot",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "snapSignature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "origin",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestAgentState",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "statePayload",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "notary",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestNotaryAttestation",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "agentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "snapGas",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "origin",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestState",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "statePayload",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNotarySnapshot",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "snapSignature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNotarySnapshot",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "snapSignature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReturnValueAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReturnValueBool",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReturnValueBytes",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReturnValueUint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReturnValueUint32",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "attNonce",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSnapshotProof",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "snapProof",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "inbox",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidAttestation",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValid",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "guardIndex",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "notaryIndex",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "openDispute"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiptQueueLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "slashedIndex",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "rivalIndex",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resolveDispute"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMockReturnValue"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "value",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMockReturnValue"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMockReturnValue"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAgentSecuredMock"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBaseMock"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSnapshotHubMock"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSummitMock"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "origin",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTips"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptGuardSnapshot(uint32,uint256,bytes)": {
            "params": {
              "guardIndex": "Index of Guard in Agent Merkle Tree",
              "sigIndex": "Index of stored Agent signature",
              "snapPayload": "Raw payload with snapshot data"
            }
          },
          "acceptNotarySnapshot(uint32,uint256,bytes32,bytes)": {
            "params": {
              "agentRoot": "Current root of the Agent Merkle Tree",
              "notaryIndex": "Index of Notary in Agent Merkle Tree",
              "sigIndex": "Index of stored Agent signature",
              "snapPayload": "Raw payload with snapshot data"
            },
            "returns": {
              "attPayload": "      Raw payload with data for attestation derived from Notary snapshot."
            }
          },
          "actorTips(address,uint32)": {
            "params": {
              "actor": "Address of the actor",
              "origin": "Domain where the tips were initially paid"
            },
            "returns": {
              "claimed": " Total amount of origin tips the actor has claimed so far",
              "earned": "  Total amount of origin tips the actor has earned so far"
            }
          },
          "agentStatus(address)": {
            "details": "Will return AgentFlag.Fraudulent for agents that have been proven to commit fraud, but their status is not updated to Slashed yet.",
            "params": {
              "agent": "Agent address"
            },
            "returns": {
              "_0": "Status for the given agent: (flag, domain, index)."
            }
          },
          "distributeTips()": {
            "details": "Returned value makes it possible to do the following: `while (distributeTips()) {}`",
            "returns": {
              "queuePopped": "     Whether the first element was popped from the queue"
            }
          },
          "getAgent(uint256)": {
            "details": "Will return empty values if agent with given index doesn't exist.",
            "params": {
              "index": "Agent index in the Agent Merkle Tree"
            },
            "returns": {
              "agent": "   Agent address",
              "status": "  Status for the given agent: (flag, domain, index)"
            }
          },
          "getAttestation(uint32)": {
            "details": "Reverts if attestation with given nonce hasn't been created yet.",
            "params": {
              "attNonce": "Nonce for the attestation"
            },
            "returns": {
              "agentRoot": "   Agent root hash used for the attestation",
              "attPayload": "  Raw payload with formatted Attestation data",
              "snapGas": "     Snapshot gas data used for the attestation"
            }
          },
          "getGuardSnapshot(uint256)": {
            "details": "Reverts if snapshot with given index hasn't been accepted yet.",
            "params": {
              "index": "Snapshot index in the list of all Guard snapshots"
            },
            "returns": {
              "snapPayload": "     Raw payload with Guard snapshot",
              "snapSignature": "   Raw payload with Guard signature for snapshot"
            }
          },
          "getLatestAgentState(uint32,address)": {
            "params": {
              "agent": "Agent address",
              "origin": "Domain of origin chain"
            },
            "returns": {
              "statePayload": "Raw payload with agent's latest state for origin"
            }
          },
          "getLatestNotaryAttestation(address)": {
            "params": {
              "notary": "Notary address"
            },
            "returns": {
              "agentRoot": "   Agent root hash used for the attestation",
              "attPayload": "  Raw payload with formatted Attestation data",
              "snapGas": "     Snapshot gas data used for the attestation"
            }
          },
          "getLatestState(uint32)": {
            "params": {
              "origin": "Domain of origin chain"
            },
            "returns": {
              "statePayload": "Raw payload with latest active Guard state for origin"
            }
          },
          "getNotarySnapshot(bytes)": {
            "details": "Reverts if any of these is true:  - Attestation payload is not properly formatted.  - Attestation is invalid (doesn't have a matching Notary snapshot).",
            "params": {
              "attPayload": "Raw payload with attestation data"
            },
            "returns": {
              "snapPayload": "     Raw payload with Notary snapshot",
              "snapSignature": "   Raw payload with Notary signature for snapshot"
            }
          },
          "getNotarySnapshot(uint256)": {
            "details": "Reverts if snapshot with given index hasn't been accepted yet.",
            "params": {
              "index": "Snapshot index in the list of all Notary snapshots"
            },
            "returns": {
              "snapPayload": "     Raw payload with Notary snapshot",
              "snapSignature": "   Raw payload with Notary signature for snapshot"
            }
          },
          "getSnapshotProof(uint32,uint256)": {
            "details": "Reverts if any of these is true:  - Attestation with given nonce hasn't been created yet.  - State index is out of range of snapshot list.",
            "params": {
              "attNonce": "Nonce for the attestation",
              "stateIndex": "Index of state in the attestation's snapshot"
            },
            "returns": {
              "snapProof": "   The snapshot proof"
            }
          },
          "inbox()": {
            "details": "Inbox passes verified agent statements to `IAgentSecured` contract."
          },
          "openDispute(uint32,uint32)": {
            "params": {
              "guardIndex": "Index of the Guard in the Agent Merkle Tree",
              "notaryIndex": "Index of the Notary in the Agent Merkle Tree"
            }
          },
          "resolveDispute(uint32,uint32)": {
            "params": {
              "rivalIndex": "Index of the their Dispute Rival in the Agent Merkle Tree",
              "slashedIndex": "Index of the slashed agent in the Agent Merkle Tree"
            }
          },
          "withdrawTips(uint32,uint256)": {
            "details": "This will revert, if the pending balance of origin tips (earned-claimed) is lower than requested.",
            "params": {
              "amount": "Amount of tips to withdraw",
              "origin": "Domain of chain to withdraw tips on"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptGuardSnapshot(uint32,uint256,bytes)": {
            "notice": "Accepts a snapshot, which local `AgentManager` verified to have been signed by an active Guard. > Snapshot is a list of states for a set of Origin contracts residing on any of the chains. All the states in the Guard-signed snapshot become available for Notary signing. > Will revert if any of these is true: > - Called by anyone other than local `AgentManager`. > - Snapshot payload is not properly formatted. > - Snapshot contains a state older then the Guard has previously submitted."
          },
          "acceptNotarySnapshot(uint32,uint256,bytes32,bytes)": {
            "notice": "Accepts a snapshot, which local `AgentManager` verified to have been signed by an active Notary. > Snapshot is a list of states for a set of Origin contracts residing on any of the chains. Snapshot Merkle Root is calculated and saved for valid snapshots, i.e. snapshots which are only using states previously submitted by any of the Guards. - Notary could use states singed by the same of different Guards in their snapshot. - Notary could then proceed to sign the attestation for their submitted snapshot. > Will revert if any of these is true: > - Called by anyone other than local `AgentManager`. > - Snapshot payload is not properly formatted. > - Snapshot contains a state older then the Notary has previously submitted. > - Snapshot contains a state that no Guard has previously submitted."
          },
          "actorTips(address,uint32)": {
            "notice": "Returns earned and claimed tips for the actor. Note: Tips for address(0) belong to the Treasury."
          },
          "agentManager()": {
            "notice": "Returns the address of the local AgentManager contract, which is treated as the \"source of truth\" for agent statuses."
          },
          "agentStatus(address)": {
            "notice": "Returns (flag, domain, index) for a given agent. See Structures.sol for details."
          },
          "distributeTips()": {
            "notice": "Distributes tips using the first Receipt from the \"receipt quarantine queue\". Possible scenarios:  - Receipt queue is empty => does nothing  - Receipt optimistic period is not over => does nothing  - Either of Notaries present in Receipt was slashed => receipt is deleted from the queue  - Either of Notaries present in Receipt in Dispute => receipt is moved to the end of queue  - None of the above => receipt tips are distributed"
          },
          "getAgent(uint256)": {
            "notice": "Returns agent address and their current status for a given agent index."
          },
          "getAttestation(uint32)": {
            "notice": "Returns saved attestation with the given nonce."
          },
          "getGuardSnapshot(uint256)": {
            "notice": "Returns Guard snapshot from the list of all accepted Guard snapshots."
          },
          "getLatestAgentState(uint32,address)": {
            "notice": "Returns the state with the highest known nonce submitted by a given Agent."
          },
          "getLatestNotaryAttestation(address)": {
            "notice": "Returns latest saved attestation for a Notary."
          },
          "getLatestState(uint32)": {
            "notice": "Returns the state with the highest known nonce submitted by any of the currently active Guards."
          },
          "getNotarySnapshot(bytes)": {
            "notice": "Returns Notary snapshot that was used for creating a given attestation."
          },
          "getNotarySnapshot(uint256)": {
            "notice": "Returns Notary snapshot from the list of all accepted Guard snapshots."
          },
          "getSnapshotProof(uint32,uint256)": {
            "notice": "Returns proof of inclusion of (root, origin) fields of a given snapshot's state into the Snapshot Merkle Tree for a given attestation."
          },
          "inbox()": {
            "notice": "Returns the address of the local Inbox contract, which is treated as the \"source of truth\" for agent-signed statements."
          },
          "openDispute(uint32,uint32)": {
            "notice": "Local AgentManager should call this function to indicate that a dispute between a Guard and a Notary has been opened."
          },
          "receiptQueueLength()": {
            "notice": "Returns the amount of receipts in the \"Receipt Quarantine Queue\"."
          },
          "resolveDispute(uint32,uint32)": {
            "notice": "Local AgentManager should call this function to indicate that a dispute has been resolved due to one of the agents being slashed. > `rivalIndex` will be ZERO, if the slashed agent was not in the Dispute."
          },
          "testAgentSecuredMock()": {
            "notice": "Prevents this contract from being included in the coverage report"
          },
          "testBaseMock()": {
            "notice": "Prevents this contract from being included in the coverage report"
          },
          "testSnapshotHubMock()": {
            "notice": "Prevents this contract from being included in the coverage report"
          },
          "testSummitMock()": {
            "notice": "Prevents this contract from being included in the coverage report"
          },
          "withdrawTips(uint32,uint256)": {
            "notice": "Withdraws locked base message tips from requested domain Origin to the recipient. This is done by a call to a local Origin contract, or by a manager message to the remote chain."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/mocks/SummitMock.t.sol": "SummitMock"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/IAgentSecured.sol": {
        "keccak256": "0x9a7efecf8fe37cc8245e3b0e3f5d6d6ee056cdd97ccb5631ff6347bdfc9fc889",
        "urls": [
          "bzz-raw://7877d223162a76d3fe75490069719b3a4f14cd66fc42bfa915f2813390b7d2aa",
          "dweb:/ipfs/QmZhE1rnffA9bbtkNAwVk6iitMPk14gHbK56mdeHQEPhxj"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ISnapshotHub.sol": {
        "keccak256": "0x3640a263eb4af25646250affc0fe8c666df03e11fa36da4823363b46a878160b",
        "urls": [
          "bzz-raw://fafb6b8f21c1a392b8d2f1f0a380bfe48bef18862f9519f69fe23e29e03b55ad",
          "dweb:/ipfs/Qmakg3WLAB1r7SyVnP8Db2ofzsV4RmsPDzk6wf3PS35kcX"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceSummit.sol": {
        "keccak256": "0xeb60c7097b7e8a82e30e4e4e7788810d029a0bb013eb71d0e47d062abeb14494",
        "urls": [
          "bzz-raw://cc35dbea34e34c513507575b9189806412e6e0d9dd6c7c34c5e598a89c58ed43",
          "dweb:/ipfs/QmTe6U1pB7AQaDiRdQRGktx96BWkGQdb8vLqtSpqCu3XDK"
        ],
        "license": "MIT"
      },
      "contracts/libs/Errors.sol": {
        "keccak256": "0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011",
        "urls": [
          "bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b",
          "dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB"
        ],
        "license": "MIT"
      },
      "contracts/libs/Structures.sol": {
        "keccak256": "0x3eaa63f5d9aac514328111e8fdd037dc6fdb18af7541a8287deeacd2e44f7137",
        "urls": [
          "bzz-raw://633619910c74a0685ef2993a2e7cc44088929121a15c8a9fc26c9bbadffbda71",
          "dweb:/ipfs/QmZceJv6UntiMWW4JZHbmytLsqXshbuav8yoiritksvqqy"
        ],
        "license": "MIT"
      },
      "test/mocks/SummitMock.t.sol": {
        "keccak256": "0x07ab882390295f653c026dfe3380d04437c9ac33e2e6a4dca15198fdfb19210b",
        "urls": [
          "bzz-raw://15bd4ed09addb35c059aab2d7fb69c1484f4f7d4f5fe8bd13f621c406b9529da",
          "dweb:/ipfs/Qmdq9jUHneJZXPYJQtYidiDbxvqHBi3Cy489TfUG3q4jFw"
        ],
        "license": "MIT"
      },
      "test/mocks/base/AgentSecuredMock.t.sol": {
        "keccak256": "0x7c74b961b7d06d65138f35d638b68be02046565479f09606bf099da0093eba36",
        "urls": [
          "bzz-raw://5faa5048684a4685809fec66813899f0c55f47ec27b39c7b0440c2083cd34e4c",
          "dweb:/ipfs/QmfL3CxnjPXHnD137ERbyLMTuAfJsJa3k7yft7VqYGdvqf"
        ],
        "license": "MIT"
      },
      "test/mocks/base/BaseMock.t.sol": {
        "keccak256": "0x5d0ddef55a6d63ce25175fd2cefc00b9030e8f7247600220e67a33c3982b9697",
        "urls": [
          "bzz-raw://96928ffa43cb650c3c594fa2d1459f2f44eea1f52fb988011a638e80b255d986",
          "dweb:/ipfs/QmXpFxAzvt9jaD4BsKGLJnBdHF1m4uvfB1iKt94mr3ryCJ"
        ],
        "license": "MIT"
      },
      "test/mocks/hubs/SnapshotHubMock.t.sol": {
        "keccak256": "0x3bd89d154ad63a5bbf3d79180bbbb5dd37ac602ebe7230749a269994cd0e0252",
        "urls": [
          "bzz-raw://e5d2a54f6f85a4463e89f7283c6b19b47a3bf710f24fb1ca8af929a1d0d7b961",
          "dweb:/ipfs/QmTaPz6oEzA3EgHoetvgZhqSR4pXPXbj4bcybnJ9qxNkj2"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/mocks/SummitMock.t.sol",
    "id": 58812,
    "exportedSymbols": {
      "AgentSecuredMock": [
        58872
      ],
      "AgentStatus": [
        10357
      ],
      "InterfaceSummit": [
        10053
      ],
      "SnapshotHubMock": [
        59220
      ],
      "SummitMock": [
        58811
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1448:135",
    "nodes": [
      {
        "id": 58710,
        "nodeType": "PragmaDirective",
        "src": "32:23:135",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 58713,
        "nodeType": "ImportDirective",
        "src": "57:92:135",
        "nodes": [],
        "absolutePath": "contracts/interfaces/InterfaceSummit.sol",
        "file": "../../contracts/interfaces/InterfaceSummit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58812,
        "sourceUnit": 10054,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58711,
              "name": "AgentStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10357,
              "src": "65:11:135",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 58712,
              "name": "InterfaceSummit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10053,
              "src": "78:15:135",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 58715,
        "nodeType": "ImportDirective",
        "src": "150:61:135",
        "nodes": [],
        "absolutePath": "test/mocks/hubs/SnapshotHubMock.t.sol",
        "file": "./hubs/SnapshotHubMock.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58812,
        "sourceUnit": 59221,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58714,
              "name": "SnapshotHubMock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59220,
              "src": "158:15:135",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 58717,
        "nodeType": "ImportDirective",
        "src": "212:63:135",
        "nodes": [],
        "absolutePath": "test/mocks/base/AgentSecuredMock.t.sol",
        "file": "./base/AgentSecuredMock.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58812,
        "sourceUnit": 58873,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58716,
              "name": "AgentSecuredMock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58872,
              "src": "220:16:135",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 58811,
        "nodeType": "ContractDefinition",
        "src": "312:1167:135",
        "nodes": [
          {
            "id": 58728,
            "nodeType": "FunctionDefinition",
            "src": "474:37:135",
            "nodes": [],
            "body": {
              "id": 58727,
              "nodeType": "Block",
              "src": "509:2:135",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 58724,
              "nodeType": "StructuredDocumentation",
              "src": "392:77:135",
              "text": "@notice Prevents this contract from being included in the coverage report"
            },
            "functionSelector": "4c4e8ce4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSummitMock",
            "nameLocation": "483:14:135",
            "parameters": {
              "id": 58725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "497:2:135"
            },
            "returnParameters": {
              "id": 58726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "509:0:135"
            },
            "scope": 58811,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58746,
            "nodeType": "FunctionDefinition",
            "src": "517:247:135",
            "nodes": [],
            "body": {
              "id": 58745,
              "nodeType": "Block",
              "src": "762:2:135",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              9988
            ],
            "functionSelector": "c79a431b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptReceipt",
            "nameLocation": "526:13:135",
            "parameters": {
              "id": 58741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58730,
                  "mutability": "mutable",
                  "name": "rcptNotaryIndex",
                  "nameLocation": "556:15:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58746,
                  "src": "549:22:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 58729,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58732,
                  "mutability": "mutable",
                  "name": "attNotaryIndex",
                  "nameLocation": "588:14:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58746,
                  "src": "581:21:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 58731,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58734,
                  "mutability": "mutable",
                  "name": "sigIndex",
                  "nameLocation": "620:8:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58746,
                  "src": "612:16:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58736,
                  "mutability": "mutable",
                  "name": "attNonce",
                  "nameLocation": "645:8:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58746,
                  "src": "638:15:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 58735,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58738,
                  "mutability": "mutable",
                  "name": "paddedTips",
                  "nameLocation": "671:10:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58746,
                  "src": "663:18:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "663:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58740,
                  "mutability": "mutable",
                  "name": "rcptBodyPayload",
                  "nameLocation": "704:15:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58746,
                  "src": "691:28:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 58739,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "539:186:135"
            },
            "returnParameters": {
              "id": 58744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58743,
                  "mutability": "mutable",
                  "name": "wasAccepted",
                  "nameLocation": "749:11:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58746,
                  "src": "744:16:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 58742,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:4:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "743:18:135"
            },
            "scope": 58811,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58756,
            "nodeType": "FunctionDefinition",
            "src": "770:103:135",
            "nodes": [],
            "body": {
              "id": 58755,
              "nodeType": "Block",
              "src": "871:2:135",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              9998
            ],
            "functionSelector": "9cc1bb31",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptGuardSnapshot",
            "nameLocation": "779:19:135",
            "parameters": {
              "id": 58753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58748,
                  "mutability": "mutable",
                  "name": "guardIndex",
                  "nameLocation": "806:10:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58756,
                  "src": "799:17:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 58747,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58750,
                  "mutability": "mutable",
                  "name": "sigIndex",
                  "nameLocation": "826:8:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58756,
                  "src": "818:16:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58752,
                  "mutability": "mutable",
                  "name": "snapPayload",
                  "nameLocation": "849:11:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58756,
                  "src": "836:24:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 58751,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "798:63:135"
            },
            "returnParameters": {
              "id": 58754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "871:0:135"
            },
            "scope": 58811,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58770,
            "nodeType": "FunctionDefinition",
            "src": "879:178:135",
            "nodes": [],
            "body": {
              "id": 58769,
              "nodeType": "Block",
              "src": "1055:2:135",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              10012
            ],
            "functionSelector": "00f34054",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptNotarySnapshot",
            "nameLocation": "888:20:135",
            "parameters": {
              "id": 58765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58758,
                  "mutability": "mutable",
                  "name": "notaryIndex",
                  "nameLocation": "916:11:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58770,
                  "src": "909:18:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 58757,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "909:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58760,
                  "mutability": "mutable",
                  "name": "sigIndex",
                  "nameLocation": "937:8:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58770,
                  "src": "929:16:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58762,
                  "mutability": "mutable",
                  "name": "agentRoot",
                  "nameLocation": "955:9:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58770,
                  "src": "947:17:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 58761,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58764,
                  "mutability": "mutable",
                  "name": "snapPayload",
                  "nameLocation": "979:11:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58770,
                  "src": "966:24:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 58763,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "908:83:135"
            },
            "returnParameters": {
              "id": 58768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58767,
                  "mutability": "mutable",
                  "name": "attPayload",
                  "nameLocation": "1039:10:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58770,
                  "src": "1026:23:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 58766,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1025:25:135"
            },
            "scope": 58811,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58776,
            "nodeType": "FunctionDefinition",
            "src": "1063:64:135",
            "nodes": [],
            "body": {
              "id": 58775,
              "nodeType": "Block",
              "src": "1125:2:135",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              10018
            ],
            "functionSelector": "0729ae8a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distributeTips",
            "nameLocation": "1072:14:135",
            "parameters": {
              "id": 58771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1086:2:135"
            },
            "returnParameters": {
              "id": 58774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58773,
                  "mutability": "mutable",
                  "name": "queuePopped",
                  "nameLocation": "1112:11:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58776,
                  "src": "1107:16:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 58772,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:4:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1106:18:135"
            },
            "scope": 58811,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58784,
            "nodeType": "FunctionDefinition",
            "src": "1133:64:135",
            "nodes": [],
            "body": {
              "id": 58783,
              "nodeType": "Block",
              "src": "1195:2:135",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              10026
            ],
            "functionSelector": "6170e4e6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTips",
            "nameLocation": "1142:12:135",
            "parameters": {
              "id": 58781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58778,
                  "mutability": "mutable",
                  "name": "origin",
                  "nameLocation": "1162:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58784,
                  "src": "1155:13:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 58777,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58780,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1178:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58784,
                  "src": "1170:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1170:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1154:31:135"
            },
            "returnParameters": {
              "id": 58782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1195:0:135"
            },
            "scope": 58811,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58796,
            "nodeType": "FunctionDefinition",
            "src": "1203:107:135",
            "nodes": [],
            "body": {
              "id": 58795,
              "nodeType": "Block",
              "src": "1308:2:135",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              10038
            ],
            "functionSelector": "47ca1b14",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "actorTips",
            "nameLocation": "1212:9:135",
            "parameters": {
              "id": 58789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58786,
                  "mutability": "mutable",
                  "name": "actor",
                  "nameLocation": "1230:5:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58796,
                  "src": "1222:13:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:7:135",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58788,
                  "mutability": "mutable",
                  "name": "origin",
                  "nameLocation": "1244:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58796,
                  "src": "1237:13:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 58787,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1237:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1221:30:135"
            },
            "returnParameters": {
              "id": 58794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58791,
                  "mutability": "mutable",
                  "name": "earned",
                  "nameLocation": "1283:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58796,
                  "src": "1275:14:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 58790,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58793,
                  "mutability": "mutable",
                  "name": "claimed",
                  "nameLocation": "1299:7:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58796,
                  "src": "1291:15:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 58792,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1291:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1274:33:135"
            },
            "scope": 58811,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58802,
            "nodeType": "FunctionDefinition",
            "src": "1316:64:135",
            "nodes": [],
            "body": {
              "id": 58801,
              "nodeType": "Block",
              "src": "1378:2:135",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              10044
            ],
            "functionSelector": "a5ba1a55",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "receiptQueueLength",
            "nameLocation": "1325:18:135",
            "parameters": {
              "id": 58797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1343:2:135"
            },
            "returnParameters": {
              "id": 58800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58799,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58802,
                  "src": "1369:7:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1369:7:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1368:9:135"
            },
            "scope": 58811,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58810,
            "nodeType": "FunctionDefinition",
            "src": "1386:91:135",
            "nodes": [],
            "body": {
              "id": 58809,
              "nodeType": "Block",
              "src": "1475:2:135",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              10052
            ],
            "functionSelector": "d17db53a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestState",
            "nameLocation": "1395:14:135",
            "parameters": {
              "id": 58805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58804,
                  "mutability": "mutable",
                  "name": "origin",
                  "nameLocation": "1417:6:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58810,
                  "src": "1410:13:135",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 58803,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1410:6:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1409:15:135"
            },
            "returnParameters": {
              "id": 58808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58807,
                  "mutability": "mutable",
                  "name": "statePayload",
                  "nameLocation": "1461:12:135",
                  "nodeType": "VariableDeclaration",
                  "scope": 58810,
                  "src": "1448:25:135",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 58806,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1448:5:135",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1447:27:135"
            },
            "scope": 58811,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 58718,
              "name": "SnapshotHubMock",
              "nameLocations": [
                "335:15:135"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 59220,
              "src": "335:15:135"
            },
            "id": 58719,
            "nodeType": "InheritanceSpecifier",
            "src": "335:15:135"
          },
          {
            "baseName": {
              "id": 58720,
              "name": "AgentSecuredMock",
              "nameLocations": [
                "352:16:135"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58872,
              "src": "352:16:135"
            },
            "id": 58721,
            "nodeType": "InheritanceSpecifier",
            "src": "352:16:135"
          },
          {
            "baseName": {
              "id": 58722,
              "name": "InterfaceSummit",
              "nameLocations": [
                "370:15:135"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10053,
              "src": "370:15:135"
            },
            "id": 58723,
            "nodeType": "InheritanceSpecifier",
            "src": "370:15:135"
          }
        ],
        "canonicalName": "SummitMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          58811,
          10053,
          58872,
          9180,
          59220,
          9341,
          59016
        ],
        "name": "SummitMock",
        "nameLocation": "321:10:135",
        "scope": 58812,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 135
}