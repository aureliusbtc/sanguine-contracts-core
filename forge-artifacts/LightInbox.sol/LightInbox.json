{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AgentNotActive",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AgentNotActiveNorUnstaking",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AgentNotGuard",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AgentNotNotary",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AgentUnknown",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectAgentDomain",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectDataHash",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectSnapshotProof",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectSnapshotRoot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectVersionLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IndexOutOfRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IndexedTooMuch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OccupiedMemory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PrecompileOutOfGas",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SynapseDomainForbidden",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TreeHeightTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnallocatedMemory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnformattedAttestation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnformattedReceipt",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnformattedSnapshot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnformattedState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ViewOverrun",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "notary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "name": "AttestationAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "rcptPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "rcptSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidReceipt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "rrPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "rrSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidReceiptReport",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "srPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "srSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidStateReport",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "statePayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidStateWithAttestation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "snapSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidStateWithSnapshot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "agentManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "destination",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getGuardReport",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "statementPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "reportSignature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReportsAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getStoredSignature",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agentManager_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destination_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "localDomain",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "allowFailure",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct MultiCallable.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "returnData",
              "type": "bytes"
            }
          ],
          "internalType": "struct MultiCallable.Result[]",
          "name": "callResults",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "origin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "agentRoot_",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "snapGas_",
          "type": "uint256[]"
        }
      ],
      "name": "submitAttestation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "wasAccepted",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "arSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "name": "submitAttestationReport",
      "outputs": [
        {
          "internalType": "bool",
          "name": "wasAccepted",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "srSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "name": "submitStateReportWithAttestation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "wasAccepted",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "srSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "snapSignature",
          "type": "bytes"
        }
      ],
      "name": "submitStateReportWithSnapshot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "wasAccepted",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "statePayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "srSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes32[]",
          "name": "snapProof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "name": "submitStateReportWithSnapshotProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "wasAccepted",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "rcptPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "rcptSignature",
          "type": "bytes"
        }
      ],
      "name": "verifyReceipt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidReceipt",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "rcptPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "rrSignature",
          "type": "bytes"
        }
      ],
      "name": "verifyReceiptReport",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidReport",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "statePayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "srSignature",
          "type": "bytes"
        }
      ],
      "name": "verifyStateReport",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidReport",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "name": "verifyStateWithAttestation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidState",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "snapSignature",
          "type": "bytes"
        }
      ],
      "name": "verifyStateWithSnapshot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidState",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "statePayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes32[]",
          "name": "snapProof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "name": "verifyStateWithSnapshotProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidState",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "versionString",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b506040516200377a3803806200377a83398101604081905262000034916200009e565b60408051808201909152600580825264302e302e3360d81b602083015260805281816200006181620000cd565b60a0525063ffffffff90811660c052821661038419019050620000975760405163079597d560e51b815260040160405180910390fd5b50620000f5565b600060208284031215620000b157600080fd5b815163ffffffff81168114620000c657600080fd5b9392505050565b80516020808301519190811015620000ef576000198160200360031b1b821691505b50919050565b60805160a05160c05161364762000133600039600081816102d60152818161172a0152611761015260006101ed015260006101ca01526136476000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80637be8e738116100c3578063c0c53b8b1161007c578063c0c53b8b14610357578063c25aa5851461036a578063c495912b1461037d578063ddeffa661461039e578063dfe39675146103b1578063f2fde38b146103c457600080fd5b80637be8e738146102be5780638d3638f4146102d15780638da5cb5b1461030d57806391af2e5d1461031e578063938b5f3214610331578063b269681d1461034457600080fd5b80636238970911610115578063623897091461023f5780636c38f72314610252578063715018a614610265578063756ed01d1461026f5780637622f78d1461028057806377ec5c10146102ab57600080fd5b80630b6b985c1461015d5780630db27e7714610185578063200f6b6614610198578063213a6ddb146101ab57806354fd4d50146101be57806360fc84661461021f575b600080fd5b61017061016b366004612a08565b6103d7565b60405190151581526020015b60405180910390f35b610170610193366004612b4c565b610509565b6101706101a6366004612c25565b610577565b6101706101b9366004612cb6565b61071e565b604080518082019091527f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201525b60405161017c9190612d68565b61023261022d366004612d7b565b61087c565b60405161017c9190612def565b61017061024d366004612c25565b6109cd565b610170610260366004612e65565b610abf565b61026d610c14565b005b609b5460405190815260200161017c565b609754610293906001600160a01b031681565b6040516001600160a01b03909116815260200161017c565b6101706102b9366004612f4a565b610c75565b6101706102cc366004612f98565b610d4d565b6102f87f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161017c565b6033546001600160a01b0316610293565b61017061032c366004612ffc565b610eba565b609854610293906001600160a01b031681565b609954610293906001600160a01b031681565b61026d610365366004613076565b611006565b610170610378366004612ffc565b611081565b61039061038b3660046130b9565b611152565b60405161017c9291906130d2565b6102126103ac3660046130b9565b6112fe565b6101706103bf366004612ffc565b6113ad565b61026d6103d23660046130f7565b61147f565b6000806103e38561154a565b905060006103f18289611563565b905060006103ff82896115d1565b50905061040b81611635565b600061041687611668565b90506000610424828861167b565b509050610430816116d4565b61043d8160200151611728565b610446826117aa565b61044f866117bb565b1461046d576040516312a37cf560e11b815260040160405180910390fd5b61048461047e85611893565b611893565b8b6118c9565b609754604084810151838201519151632885570d60e21b815263ffffffff9182166004820152911660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b1580156104e057600080fd5b505af11580156104f4573d6000803e3d6000fd5b5060019e9d5050505050505050505050505050565b60008061051587611963565b9050600061052382886115d1565b50905061052f81611635565b600061053a86611668565b90506000610548828761167b565b509050610554816116d4565b6105618160200151611728565b61056d828c868b611971565b6104848a8a6118c9565b60008061058384611668565b9050600080610592838661167b565b9150915061059f826116d4565b60006105aa8861154a565b90506105b5846117aa565b6105be826117bb565b146105dc576040516312a37cf560e11b815260040160405180910390fd5b60006105f16104796105ee848d611563565b90565b60985460405163a9dcf22d60e01b81529192506001600160a01b03169063a9dcf22d90610622908490600401612d68565b602060405180830381865afa15801561063f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106639190613112565b955085610711577f541491c63a99c21d0612ba7b3c4d90f7662f54a123363e65fae5c51e34e8a4928a828a8a60405161069f9493929190613134565b60405180910390a16097546020850151604051631429d07360e11b81526001600160a01b0390921691632853a0e6916106de9187903390600401613173565b600060405180830381600087803b1580156106f857600080fd5b505af115801561070c573d6000803e3d6000fd5b505050505b5050505050949350505050565b60008061072a8461154a565b905060008061073b83866000611a01565b91509150610748826116d4565b6098546001600160a01b031663a9dcf22d6107696104796105ee878c611563565b6040518263ffffffff1660e01b81526004016107859190612d68565b602060405180830381865afa1580156107a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c69190613112565b935083610872577f8ec8481d2e38a1ffe2c6ec35459332dc9e6248b1219d287dfa4143a68a75bbd18787876040516108009392919061319a565b60405180910390a16097546020830151604051631429d07360e11b81526001600160a01b0390921691632853a0e69161083f9185903390600401613173565b600060405180830381600087803b15801561085957600080fd5b505af115801561086d573d6000803e3d6000fd5b505050505b5050509392505050565b606081806001600160401b0381111561089757610897612953565b6040519080825280602002602001820160405280156108dd57816020015b6040805180820190915260008152606060208201528152602001906001900390816108b55790505b5091503660005b828110156109c4578585828181106108fe576108fe6131cf565b905060200281019061091091906131e5565b91506000848281518110610926576109266131cf565b60200260200101519050306001600160a01b031683806020019061094a9190613205565b60405161095892919061324b565b600060405180830381855af49150503d8060008114610993576040519150601f19603f3d011682016040523d82523d6000602084013e610998565b606091505b50602083015215158082528335176109bb576309ad446560e31b60005260046000fd5b506001016108e4565b50505092915050565b6000806109d98461154a565b905060006109e982856001611a01565b5090506109f5816116d4565b610a028160200151611728565b6000610a0e8389611563565b90506000610a1c82896115d1565b509050610a2881611635565b610a3a610a3483611893565b896118c9565b609754604082810151858201519151632885570d60e21b815263ffffffff9182166004820152911660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b158015610a9657600080fd5b505af1158015610aaa573d6000803e3d6000fd5b5050505060019450505050505b949350505050565b600080610acb86611668565b9050600080610ada838861167b565b91509150610ae782611635565b610af48260200151611728565b845160051b60208601208590610b0b908890611a70565b610b1485611aa6565b14610b325760405163184fb2df60e01b815260040160405180910390fd5b6000610b3d89611ab4565b6099546040808701519051631cff139b60e11b81529293506001600160a01b03909116916339fe273691610b7b9185908f908e90899060040161325b565b6020604051808303816000875af1158015610b9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbe9190613112565b95508515610711577f5fb28b72a4ff089027990125e187d936f30d65013d66fac1e54e0625f7ea00658460200151848c8c604051610bff94939291906132d4565b60405180910390a15050505050949350505050565b6033546001600160a01b03163314610c735760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b565b600080610c8185611668565b90506000610c8f8286611af7565b509050610c9b81611635565b6000610ca7838661167b565b509050610cb3816116d4565b610cc08160200151611728565b610cca87876118c9565b609754604083810151838201519151632885570d60e21b815263ffffffff9182166004820152911660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b158015610d2657600080fd5b505af1158015610d3a573d6000803e3d6000fd5b50505050600193505050505b9392505050565b600080610d5984611668565b9050600080610d68838661167b565b91509150610d75826116d4565b6000610d8089611963565b9050610d8e848b838b611971565b60985460405163a9dcf22d60e01b81526001600160a01b039091169063a9dcf22d90610dbe908c90600401612d68565b602060405180830381865afa158015610ddb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dff9190613112565b945084610ead577f541491c63a99c21d0612ba7b3c4d90f7662f54a123363e65fae5c51e34e8a4928a8a8989604051610e3b9493929190613134565b60405180910390a16097546020840151604051631429d07360e11b81526001600160a01b0390921691632853a0e691610e7a9186903390600401613173565b600060405180830381600087803b158015610e9457600080fd5b505af1158015610ea8573d6000803e3d6000fd5b505050505b5050505095945050505050565b600080610ec684611b20565b9050600080610ed58386611b33565b91509150610ee2826116d4565b60995460405163e2f006f760e01b81526001600160a01b039091169063e2f006f790610f12908990600401612d68565b602060405180830381865afa158015610f2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f539190613112565b159350836109c4577fa0cb383b7028fbeae86e018eb9fe765c15c869483a584edbb95bf550934465878686604051610f8c9291906130d2565b60405180910390a16097546020830151604051631429d07360e11b81526001600160a01b0390921691632853a0e691610fcb9185903390600401613173565b600060405180830381600087803b158015610fe557600080fd5b505af1158015610ff9573d6000803e3d6000fd5b5050505050505092915050565b60006110126001611b5c565b9050801561102a576000805461ff0019166101001790555b611035848484611be9565b801561107b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60008061108d84611b20565b905060008061109c8386611c5a565b915091506110a9826116d4565b60995460405163e2f006f760e01b81526001600160a01b039091169063e2f006f7906110d9908990600401612d68565b602060405180830381865afa1580156110f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111a9190613112565b9350836109c4577f4d4c3a87f0d5fbcea3c51d5baa727fceedb200dd7c9287f7ef85b60b794d6a8d8686604051610f8c9291906130d2565b609b546060908190831061117957604051631390f2a160e01b815260040160405180910390fd5b6000609b848154811061118e5761118e6131cf565b9060005260206000209060020201604051806040016040529081600082015481526020016001820180546111c190613316565b80601f01602080910402602001604051908101604052809291908181526020018280546111ed90613316565b801561123a5780601f1061120f5761010080835404028352916020019161123a565b820191906000526020600020905b81548152906001019060200180831161121d57829003601f168201915b505050505081525050905080602001519250609a816000015181548110611263576112636131cf565b90600052602060002001805461127890613316565b80601f01602080910402602001604051908101604052809291908181526020018280546112a490613316565b80156112f15780601f106112c6576101008083540402835291602001916112f1565b820191906000526020600020905b8154815290600101906020018083116112d457829003601f168201915b5050505050915050915091565b6060609a8281548110611313576113136131cf565b90600052602060002001805461132890613316565b80601f016020809104026020016040519081016040528092919081815260200182805461135490613316565b80156113a15780601f10611376576101008083540402835291602001916113a1565b820191906000526020600020905b81548152906001019060200180831161138457829003601f168201915b50505050509050919050565b6000806113b984611963565b90506000806113c883866115d1565b915091506113d5826116d4565b60985460405163a9dcf22d60e01b81526001600160a01b039091169063a9dcf22d90611405908990600401612d68565b602060405180830381865afa158015611422573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114469190613112565b159350836109c4577f9b0db5e74572fe0188dcef5afafe498161864c5706c3003c98ee506ae5c0282d8686604051610f8c9291906130d2565b6033546001600160a01b031633146114d95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610c6a565b6001600160a01b03811661153e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c6a565b61154781611c83565b50565b600061155d61155883611cd5565b611ce8565b92915050565b60008281611573600c6032613360565b61157d9085613373565b90506001600160801b03821681106115a857604051631390f2a160e01b815260040160405180910390fd5b6115c86115c3826115bb600c6032613360565b859190611d14565b611d6c565b95945050505050565b60408051606081018252600080825260208201819052918101829052906116006115fa85611d94565b84611dc2565b6020820151919350915063ffffffff161561162e576040516370488f8b60e01b815260040160405180910390fd5b9250929050565b60018151600581111561164a5761164a61338a565b1461154757604051632437e77160e11b815260040160405180910390fd5b600061155d61167683611cd5565b611ec8565b60408051606081018252600080825260208201819052918101829052906116a46115fa85611ef0565b6020820151919350915063ffffffff1660000361162e576040516354cc70e560e11b815260040160405180910390fd5b6001815160058111156116e9576116e961338a565b1415801561170a57506002815160058111156117075761170761338a565b14155b156115475760405163ec3d0d8560e01b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161415801561178c57507f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661038514155b1561154757604051630b09697760e11b815260040160405180910390fd5b600061155d816020845b9190611f1c565b6000806117c783611fb1565b90506000816001600160401b038111156117e3576117e3612953565b60405190808252806020026020018201604052801561180c578160200160208202803683370190505b50905060005b828110156118595761182c6118278683611563565b611fd2565b82828151811061183e5761183e6131cf565b6020908102919091010152611852816133a0565b9050611812565b5061186f8161186a600160066133b9565b612011565b80600081518110611882576118826131cf565b602002602001015192505050919050565b604051806118a483602083016120e5565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b60006118d482611ab4565b6040805180820190915281815260208101858152609b8054600181018255600091909152825160029091027fbba9db4cdbea0a37c207bbb83e20f828cd4441c49891101dc94fd20dc8efc3498101918255915193945091927fbba9db4cdbea0a37c207bbb83e20f828cd4441c49891101dc94fd20dc8efc34a9091019061195b9082613412565b505050505050565b600061155d6115c383611cd5565b600061197c8361215a565b9150508082600081518110611993576119936131cf565b6020026020010151146119b9576040516339bbd1f360e21b815260040160405180910390fd5b60006119d76119c7856117aa565b6119d086612189565b8588612198565b9050806119e3876117aa565b1461195b576040516312a37cf560e11b815260040160405180910390fd5b6040805160608101825260008082526020820181905291810182905290611a30611a2a866121db565b85611dc2565b9092509050828015611a4a5750602082015163ffffffff16155b15611a68576040516354cc70e560e11b815260040160405180910390fd5b935093915050565b60408051602081018490529081018290526000906060015b60405160208183030381529060405280519060200120905092915050565b600061155d602080846117b4565b609a80546001810182556000919091527f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be48101611af18382613412565b50919050565b60408051606081018252600080825260208201819052918101829052906116006115fa85612207565b600061155d611b2e83611cd5565b612233565b60408051606081018252600080825260208201819052918101829052906116006115fa8561225b565b60008054610100900460ff1615611ba3578160ff166001148015611b7f5750303b155b611b9b5760405162461bcd60e51b8152600401610c6a906134d1565b506000919050565b60005460ff808416911610611bca5760405162461bcd60e51b8152600401610c6a906134d1565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16611c105760405162461bcd60e51b8152600401610c6a9061351f565b609780546001600160a01b038086166001600160a01b031992831617909255609880548584169083161790556099805492841692909116919091179055611c55612287565b505050565b60408051606081018252600080825260208201819052918101829052906116a46115fa856122b6565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b805160009060208301610ab781836122e2565b6000611cf38261232c565b611d1057604051635cb1e1ad60e11b815260040160405180910390fd5b5090565b600080611d218560801c90565b9050611d2c85612379565b83611d378684613360565b611d419190613360565b1115611d605760405163a3b99ded60e01b815260040160405180910390fd5b6115c8848201846122e2565b6000611d7782612396565b611d1057604051631ae8107160e21b815260040160405180910390fd5b600061155d7f43713cd927f8eb63b519f3b180bd5f3708ebbe93666be9ba4b9624b7bc57e663835b906123b6565b6040805160608101825260008082526020820181905291810191909152600080611e39856040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050611e4581856123d9565b6097546040516328f3fac960e01b81526001600160a01b0380841660048301529294509116906328f3fac990602401606060405180830381865afa158015611e91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eb5919061357e565b9250611ec0836123fd565b509250929050565b6000611ed382612430565b611d1057604051633ae4998b60e21b815260040160405180910390fd5b600061155d7f3464bf887f210604c594030208052a323ac6628785466262d75241769120164183611dbc565b600081600003611f2e57506000610d46565b6020821115611f505760405163063af09560e31b815260040160405180910390fd5b6001600160801b038416611f648385613360565b1115611f835760405163a3b99ded60e01b815260040160405180910390fd5b600382901b6000611f948660801c90565b90940151600160ff1b600019929092019190911d16949350505050565b6000611fbf600c6032613360565b61155d906001600160801b0384166135ef565b6000806000611fe08461215a565b6040805160208082019490945280820192909252805180830382018152606090920190528051910120949350505050565b81516001821b8111156120375760405163c5360feb60e01b815260040160405180910390fd5b60005b8281101561107b5760005b828110156120d65760008160010190506000868381518110612069576120696131cf565b60200260200101519050600085831061208357600061209e565b878381518110612095576120956131cf565b60200260200101515b90506120aa8282612443565b88600186901c815181106120c0576120c06131cf565b6020908102919091010152505050600201612045565b506001918201821c910161203a565b6040516000906001600160801b03841690608085901c908085101561211d576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa90508061214757604051637c7d772f60e01b815260040160405180910390fd5b608086901b84175b979650505050505050565b6000808261217161216c82602461248f565b61249c565b925061218161216c8260246124be565b915050915091565b600061155d8260206004612502565b6000600182901b604081106121c057604051631390f2a160e01b815260040160405180910390fd5b60006121cc8787612523565b905061214f828287600661254e565b600061155d7ff304ae6578b1582b0b5b512e0a7070d6f76973b1f360f99dd500082d3bc9487783611dbc565b600061155d7fccfadb9c399e4e4257b6d0c3f92e1f9a9c00b1802b55a2f7d511702faa76909083611dbc565b600061223e826125dd565b611d1057604051631dad384f60e21b815260040160405180910390fd5b600061155d7fdf42b2c0137811ba604f5c79e20c4d6b94770aa819cc524eca444056544f8ab783611dbc565b600054610100900460ff166122ae5760405162461bcd60e51b8152600401610c6a9061351f565b610c736125f0565b600061155d7fb38669e8ca41a27fcd85729b868e8ab047d0f142073a017213e58f0a91e88ef383611dbc565b6000806122ef8385613360565b90506040518111156122ff575060005b806000036123205760405163085f79c360e11b815260040160405180910390fd5b608084901b8317610ab7565b60006001600160801b03821681612345600c6032613360565b61234f90836135ef565b90508161235e600c6032613360565b6123689083613373565b148015610ab75750610ab781612620565b60006001600160801b03821661238f8360801c90565b0192915050565b60006123a4600c6032613360565b6001600160801b0383165b1492915050565b6000816123c28461249c565b604080516020810193909352820152606001611a88565b60008060006123e88585612645565b915091506123f581612687565b509392505050565b6000815160058111156124125761241261338a565b036115475760405163dc449cb760e01b815260040160405180910390fd5b6000604e6001600160801b0383166123af565b600082158015612451575081155b1561245e5750600061155d565b604080516020810185905290810183905260600160405160208183030381529060405280519060200120905061155d565b6000610d46838284611d14565b6000806124a98360801c90565b6001600160801b039390931690922092915050565b60006001600160801b038316808311156124eb5760405163a3b99ded60e01b815260040160405180910390fd5b610ab7836124f98660801c90565b018483036122e2565b600080612510858585611f1c565b602084900360031b1c9150509392505050565b60008282604051602001611a8892919091825260e01b6001600160e01b031916602082015260240190565b8151600090828111156125745760405163c5360feb60e01b815260040160405180910390fd5b84915060005b818110156125b1576125a783868381518110612598576125986131cf565b6020026020010151898461283d565b925060010161257a565b50805b838110156125d3576125c9836000898461283d565b92506001016125b4565b5050949350505050565b600060856001600160801b0383166123af565b600054610100900460ff166126175760405162461bcd60e51b8152600401610c6a9061351f565b610c7333611c83565b6000811580159061155d5750612638600160066133b9565b6001901b82111592915050565b600080825160410361267b5760208301516040840151606085015160001a61266f87828585612866565b9450945050505061162e565b5060009050600261162e565b600081600481111561269b5761269b61338a565b036126a35750565b60018160048111156126b7576126b761338a565b036127045760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610c6a565b60028160048111156127185761271861338a565b036127655760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610c6a565b60038160048111156127795761277961338a565b036127d15760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610c6a565b60048160048111156127e5576127e561338a565b036115475760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610c6a565b6000600183831c16810361285c576128558585612443565b9050610ab7565b6128558486612443565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561289d575060009050600361294a565b8460ff16601b141580156128b557508460ff16601c14155b156128c6575060009050600461294a565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561291a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166129435760006001925092505061294a565b9150600090505b94509492505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561299157612991612953565b604052919050565b600082601f8301126129aa57600080fd5b81356001600160401b038111156129c3576129c3612953565b6129d6601f8201601f1916602001612969565b8181528460208386010111156129eb57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215612a2057600080fd5b8535945060208601356001600160401b0380821115612a3e57600080fd5b612a4a89838a01612999565b95506040880135915080821115612a6057600080fd5b612a6c89838a01612999565b94506060880135915080821115612a8257600080fd5b612a8e89838a01612999565b93506080880135915080821115612aa457600080fd5b50612ab188828901612999565b9150509295509295909350565b60006001600160401b03821115612ad757612ad7612953565b5060051b60200190565b600082601f830112612af257600080fd5b81356020612b07612b0283612abe565b612969565b82815260059290921b84018101918181019086841115612b2657600080fd5b8286015b84811015612b415780358352918301918301612b2a565b509695505050505050565b60008060008060008060c08789031215612b6557600080fd5b8635955060208701356001600160401b0380821115612b8357600080fd5b612b8f8a838b01612999565b96506040890135915080821115612ba557600080fd5b612bb18a838b01612999565b95506060890135915080821115612bc757600080fd5b612bd38a838b01612ae1565b94506080890135915080821115612be957600080fd5b612bf58a838b01612999565b935060a0890135915080821115612c0b57600080fd5b50612c1889828a01612999565b9150509295509295509295565b60008060008060808587031215612c3b57600080fd5b8435935060208501356001600160401b0380821115612c5957600080fd5b612c6588838901612999565b94506040870135915080821115612c7b57600080fd5b612c8788838901612999565b93506060870135915080821115612c9d57600080fd5b50612caa87828801612999565b91505092959194509250565b600080600060608486031215612ccb57600080fd5b8335925060208401356001600160401b0380821115612ce957600080fd5b612cf587838801612999565b93506040860135915080821115612d0b57600080fd5b50612d1886828701612999565b9150509250925092565b6000815180845260005b81811015612d4857602081850181015186830182015201612d2c565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d466020830184612d22565b60008060208385031215612d8e57600080fd5b82356001600160401b0380821115612da557600080fd5b818501915085601f830112612db957600080fd5b813581811115612dc857600080fd5b8660208260051b8501011115612ddd57600080fd5b60209290920196919550909350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015612e5757888303603f190185528151805115158452870151878401879052612e4487850182612d22565b9588019593505090860190600101612e16565b509098975050505050505050565b60008060008060808587031215612e7b57600080fd5b84356001600160401b0380821115612e9257600080fd5b612e9e88838901612999565b9550602091508187013581811115612eb557600080fd5b612ec189828a01612999565b95505060408701359350606087013581811115612edd57600080fd5b87019050601f81018813612ef057600080fd5b8035612efe612b0282612abe565b81815260059190911b8201830190838101908a831115612f1d57600080fd5b928401925b82841015612f3b57833582529284019290840190612f22565b979a9699509497505050505050565b600080600060608486031215612f5f57600080fd5b83356001600160401b0380821115612f7657600080fd5b612f8287838801612999565b94506020860135915080821115612ce957600080fd5b600080600080600060a08688031215612fb057600080fd5b8535945060208601356001600160401b0380821115612fce57600080fd5b612fda89838a01612999565b95506040880135915080821115612ff057600080fd5b612a6c89838a01612ae1565b6000806040838503121561300f57600080fd5b82356001600160401b038082111561302657600080fd5b61303286838701612999565b9350602085013591508082111561304857600080fd5b5061305585828601612999565b9150509250929050565b80356001600160a01b0381168114611be457600080fd5b60008060006060848603121561308b57600080fd5b6130948461305f565b92506130a26020850161305f565b91506130b06040850161305f565b90509250925092565b6000602082840312156130cb57600080fd5b5035919050565b6040815260006130e56040830185612d22565b82810360208401526115c88185612d22565b60006020828403121561310957600080fd5b610d468261305f565b60006020828403121561312457600080fd5b81518015158114610d4657600080fd5b84815260806020820152600061314d6080830186612d22565b828103604084015261315f8186612d22565b9050828103606084015261214f8185612d22565b63ffffffff9390931683526001600160a01b03918216602084015216604082015260600190565b8381526060602082015260006131b36060830185612d22565b82810360408401526131c58185612d22565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b60008235603e198336030181126131fb57600080fd5b9190910192915050565b6000808335601e1984360301811261321c57600080fd5b8301803591506001600160401b0382111561323657600080fd5b60200191503681900382131561162e57600080fd5b8183823760009101908152919050565b63ffffffff8616815260006020868184015260a0604084015261328160a0840187612d22565b60608401869052838103608085015284518082528286019183019060005b818110156132c45783516001600160801b03168352928401929184019160010161329f565b50909a9950505050505050505050565b63ffffffff851681526001600160a01b038416602082015260806040820181905260009061330490830185612d22565b828103606084015261214f8185612d22565b600181811c9082168061332a57607f821691505b602082108103611af157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561155d5761155d61334a565b808202811582820484141761155d5761155d61334a565b634e487b7160e01b600052602160045260246000fd5b6000600182016133b2576133b261334a565b5060010190565b8181038181111561155d5761155d61334a565b601f821115611c5557600081815260208120601f850160051c810160208610156133f35750805b601f850160051c820191505b8181101561195b578281556001016133ff565b81516001600160401b0381111561342b5761342b612953565b61343f816134398454613316565b846133cc565b602080601f831160018114613474576000841561345c5750858301515b600019600386901b1c1916600185901b17855561195b565b600085815260208120601f198616915b828110156134a357888601518255948401946001909101908401613484565b50858210156134c15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b805163ffffffff81168114611be457600080fd5b60006060828403121561359057600080fd5b604051606081018181106001600160401b03821117156135b2576135b2612953565b6040528251600681106135c457600080fd5b81526135d26020840161356a565b60208201526135e36040840161356a565b60408201529392505050565b60008261360c57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f2fcc8778241de27a5e9b5f9abc7825262a19b3b0d368dbec44d92113a92620d64736f6c63430008110033",
    "sourceMap": "1465:4312:28:-:0;;;1861:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1839:120:5;;;;;;;;;;;;;-1:-1:-1;;;1839:120:5;;;;1080:32:7;;1911:6:28;1839:120:5;1346:24:7;1360:8;1346:24;:::i;:::-;1338:32;;-1:-1:-1;1926:26:5::1;::::0;;::::1;;::::0;1933:24:28;::::1;-1:-1:-1::0;;1933:24:28;;-1:-1:-1;1929:61:28::1;;1966:24;;-1:-1:-1::0;;;1966:24:28::1;;;;;;;;;;;1929:61;1861:136:::0;1465:4312;;14:280:201;83:6;136:2;124:9;115:7;111:23;107:32;104:52;;;152:1;149;142:12;104:52;184:9;178:16;234:10;227:5;223:22;216:5;213:33;203:61;;260:1;257;250:12;203:61;283:5;14:280;-1:-1:-1;;;14:280:201:o;299:297::-;417:12;;464:4;453:16;;;447:23;;417:12;482:16;;479:111;;;576:1;572:6;562;556:4;552:17;549:1;545:25;541:38;534:5;530:50;521:59;;479:111;;299:297;;;:::o;:::-;1465:4312:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c80637be8e738116100c3578063c0c53b8b1161007c578063c0c53b8b14610357578063c25aa5851461036a578063c495912b1461037d578063ddeffa661461039e578063dfe39675146103b1578063f2fde38b146103c457600080fd5b80637be8e738146102be5780638d3638f4146102d15780638da5cb5b1461030d57806391af2e5d1461031e578063938b5f3214610331578063b269681d1461034457600080fd5b80636238970911610115578063623897091461023f5780636c38f72314610252578063715018a614610265578063756ed01d1461026f5780637622f78d1461028057806377ec5c10146102ab57600080fd5b80630b6b985c1461015d5780630db27e7714610185578063200f6b6614610198578063213a6ddb146101ab57806354fd4d50146101be57806360fc84661461021f575b600080fd5b61017061016b366004612a08565b6103d7565b60405190151581526020015b60405180910390f35b610170610193366004612b4c565b610509565b6101706101a6366004612c25565b610577565b6101706101b9366004612cb6565b61071e565b604080518082019091527f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201525b60405161017c9190612d68565b61023261022d366004612d7b565b61087c565b60405161017c9190612def565b61017061024d366004612c25565b6109cd565b610170610260366004612e65565b610abf565b61026d610c14565b005b609b5460405190815260200161017c565b609754610293906001600160a01b031681565b6040516001600160a01b03909116815260200161017c565b6101706102b9366004612f4a565b610c75565b6101706102cc366004612f98565b610d4d565b6102f87f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161017c565b6033546001600160a01b0316610293565b61017061032c366004612ffc565b610eba565b609854610293906001600160a01b031681565b609954610293906001600160a01b031681565b61026d610365366004613076565b611006565b610170610378366004612ffc565b611081565b61039061038b3660046130b9565b611152565b60405161017c9291906130d2565b6102126103ac3660046130b9565b6112fe565b6101706103bf366004612ffc565b6113ad565b61026d6103d23660046130f7565b61147f565b6000806103e38561154a565b905060006103f18289611563565b905060006103ff82896115d1565b50905061040b81611635565b600061041687611668565b90506000610424828861167b565b509050610430816116d4565b61043d8160200151611728565b610446826117aa565b61044f866117bb565b1461046d576040516312a37cf560e11b815260040160405180910390fd5b61048461047e85611893565b611893565b8b6118c9565b609754604084810151838201519151632885570d60e21b815263ffffffff9182166004820152911660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b1580156104e057600080fd5b505af11580156104f4573d6000803e3d6000fd5b5060019e9d5050505050505050505050505050565b60008061051587611963565b9050600061052382886115d1565b50905061052f81611635565b600061053a86611668565b90506000610548828761167b565b509050610554816116d4565b6105618160200151611728565b61056d828c868b611971565b6104848a8a6118c9565b60008061058384611668565b9050600080610592838661167b565b9150915061059f826116d4565b60006105aa8861154a565b90506105b5846117aa565b6105be826117bb565b146105dc576040516312a37cf560e11b815260040160405180910390fd5b60006105f16104796105ee848d611563565b90565b60985460405163a9dcf22d60e01b81529192506001600160a01b03169063a9dcf22d90610622908490600401612d68565b602060405180830381865afa15801561063f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106639190613112565b955085610711577f541491c63a99c21d0612ba7b3c4d90f7662f54a123363e65fae5c51e34e8a4928a828a8a60405161069f9493929190613134565b60405180910390a16097546020850151604051631429d07360e11b81526001600160a01b0390921691632853a0e6916106de9187903390600401613173565b600060405180830381600087803b1580156106f857600080fd5b505af115801561070c573d6000803e3d6000fd5b505050505b5050505050949350505050565b60008061072a8461154a565b905060008061073b83866000611a01565b91509150610748826116d4565b6098546001600160a01b031663a9dcf22d6107696104796105ee878c611563565b6040518263ffffffff1660e01b81526004016107859190612d68565b602060405180830381865afa1580156107a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c69190613112565b935083610872577f8ec8481d2e38a1ffe2c6ec35459332dc9e6248b1219d287dfa4143a68a75bbd18787876040516108009392919061319a565b60405180910390a16097546020830151604051631429d07360e11b81526001600160a01b0390921691632853a0e69161083f9185903390600401613173565b600060405180830381600087803b15801561085957600080fd5b505af115801561086d573d6000803e3d6000fd5b505050505b5050509392505050565b606081806001600160401b0381111561089757610897612953565b6040519080825280602002602001820160405280156108dd57816020015b6040805180820190915260008152606060208201528152602001906001900390816108b55790505b5091503660005b828110156109c4578585828181106108fe576108fe6131cf565b905060200281019061091091906131e5565b91506000848281518110610926576109266131cf565b60200260200101519050306001600160a01b031683806020019061094a9190613205565b60405161095892919061324b565b600060405180830381855af49150503d8060008114610993576040519150601f19603f3d011682016040523d82523d6000602084013e610998565b606091505b50602083015215158082528335176109bb576309ad446560e31b60005260046000fd5b506001016108e4565b50505092915050565b6000806109d98461154a565b905060006109e982856001611a01565b5090506109f5816116d4565b610a028160200151611728565b6000610a0e8389611563565b90506000610a1c82896115d1565b509050610a2881611635565b610a3a610a3483611893565b896118c9565b609754604082810151858201519151632885570d60e21b815263ffffffff9182166004820152911660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b158015610a9657600080fd5b505af1158015610aaa573d6000803e3d6000fd5b5050505060019450505050505b949350505050565b600080610acb86611668565b9050600080610ada838861167b565b91509150610ae782611635565b610af48260200151611728565b845160051b60208601208590610b0b908890611a70565b610b1485611aa6565b14610b325760405163184fb2df60e01b815260040160405180910390fd5b6000610b3d89611ab4565b6099546040808701519051631cff139b60e11b81529293506001600160a01b03909116916339fe273691610b7b9185908f908e90899060040161325b565b6020604051808303816000875af1158015610b9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbe9190613112565b95508515610711577f5fb28b72a4ff089027990125e187d936f30d65013d66fac1e54e0625f7ea00658460200151848c8c604051610bff94939291906132d4565b60405180910390a15050505050949350505050565b6033546001600160a01b03163314610c735760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b565b600080610c8185611668565b90506000610c8f8286611af7565b509050610c9b81611635565b6000610ca7838661167b565b509050610cb3816116d4565b610cc08160200151611728565b610cca87876118c9565b609754604083810151838201519151632885570d60e21b815263ffffffff9182166004820152911660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b158015610d2657600080fd5b505af1158015610d3a573d6000803e3d6000fd5b50505050600193505050505b9392505050565b600080610d5984611668565b9050600080610d68838661167b565b91509150610d75826116d4565b6000610d8089611963565b9050610d8e848b838b611971565b60985460405163a9dcf22d60e01b81526001600160a01b039091169063a9dcf22d90610dbe908c90600401612d68565b602060405180830381865afa158015610ddb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dff9190613112565b945084610ead577f541491c63a99c21d0612ba7b3c4d90f7662f54a123363e65fae5c51e34e8a4928a8a8989604051610e3b9493929190613134565b60405180910390a16097546020840151604051631429d07360e11b81526001600160a01b0390921691632853a0e691610e7a9186903390600401613173565b600060405180830381600087803b158015610e9457600080fd5b505af1158015610ea8573d6000803e3d6000fd5b505050505b5050505095945050505050565b600080610ec684611b20565b9050600080610ed58386611b33565b91509150610ee2826116d4565b60995460405163e2f006f760e01b81526001600160a01b039091169063e2f006f790610f12908990600401612d68565b602060405180830381865afa158015610f2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f539190613112565b159350836109c4577fa0cb383b7028fbeae86e018eb9fe765c15c869483a584edbb95bf550934465878686604051610f8c9291906130d2565b60405180910390a16097546020830151604051631429d07360e11b81526001600160a01b0390921691632853a0e691610fcb9185903390600401613173565b600060405180830381600087803b158015610fe557600080fd5b505af1158015610ff9573d6000803e3d6000fd5b5050505050505092915050565b60006110126001611b5c565b9050801561102a576000805461ff0019166101001790555b611035848484611be9565b801561107b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60008061108d84611b20565b905060008061109c8386611c5a565b915091506110a9826116d4565b60995460405163e2f006f760e01b81526001600160a01b039091169063e2f006f7906110d9908990600401612d68565b602060405180830381865afa1580156110f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111a9190613112565b9350836109c4577f4d4c3a87f0d5fbcea3c51d5baa727fceedb200dd7c9287f7ef85b60b794d6a8d8686604051610f8c9291906130d2565b609b546060908190831061117957604051631390f2a160e01b815260040160405180910390fd5b6000609b848154811061118e5761118e6131cf565b9060005260206000209060020201604051806040016040529081600082015481526020016001820180546111c190613316565b80601f01602080910402602001604051908101604052809291908181526020018280546111ed90613316565b801561123a5780601f1061120f5761010080835404028352916020019161123a565b820191906000526020600020905b81548152906001019060200180831161121d57829003601f168201915b505050505081525050905080602001519250609a816000015181548110611263576112636131cf565b90600052602060002001805461127890613316565b80601f01602080910402602001604051908101604052809291908181526020018280546112a490613316565b80156112f15780601f106112c6576101008083540402835291602001916112f1565b820191906000526020600020905b8154815290600101906020018083116112d457829003601f168201915b5050505050915050915091565b6060609a8281548110611313576113136131cf565b90600052602060002001805461132890613316565b80601f016020809104026020016040519081016040528092919081815260200182805461135490613316565b80156113a15780601f10611376576101008083540402835291602001916113a1565b820191906000526020600020905b81548152906001019060200180831161138457829003601f168201915b50505050509050919050565b6000806113b984611963565b90506000806113c883866115d1565b915091506113d5826116d4565b60985460405163a9dcf22d60e01b81526001600160a01b039091169063a9dcf22d90611405908990600401612d68565b602060405180830381865afa158015611422573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114469190613112565b159350836109c4577f9b0db5e74572fe0188dcef5afafe498161864c5706c3003c98ee506ae5c0282d8686604051610f8c9291906130d2565b6033546001600160a01b031633146114d95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610c6a565b6001600160a01b03811661153e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c6a565b61154781611c83565b50565b600061155d61155883611cd5565b611ce8565b92915050565b60008281611573600c6032613360565b61157d9085613373565b90506001600160801b03821681106115a857604051631390f2a160e01b815260040160405180910390fd5b6115c86115c3826115bb600c6032613360565b859190611d14565b611d6c565b95945050505050565b60408051606081018252600080825260208201819052918101829052906116006115fa85611d94565b84611dc2565b6020820151919350915063ffffffff161561162e576040516370488f8b60e01b815260040160405180910390fd5b9250929050565b60018151600581111561164a5761164a61338a565b1461154757604051632437e77160e11b815260040160405180910390fd5b600061155d61167683611cd5565b611ec8565b60408051606081018252600080825260208201819052918101829052906116a46115fa85611ef0565b6020820151919350915063ffffffff1660000361162e576040516354cc70e560e11b815260040160405180910390fd5b6001815160058111156116e9576116e961338a565b1415801561170a57506002815160058111156117075761170761338a565b14155b156115475760405163ec3d0d8560e01b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161415801561178c57507f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661038514155b1561154757604051630b09697760e11b815260040160405180910390fd5b600061155d816020845b9190611f1c565b6000806117c783611fb1565b90506000816001600160401b038111156117e3576117e3612953565b60405190808252806020026020018201604052801561180c578160200160208202803683370190505b50905060005b828110156118595761182c6118278683611563565b611fd2565b82828151811061183e5761183e6131cf565b6020908102919091010152611852816133a0565b9050611812565b5061186f8161186a600160066133b9565b612011565b80600081518110611882576118826131cf565b602002602001015192505050919050565b604051806118a483602083016120e5565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b60006118d482611ab4565b6040805180820190915281815260208101858152609b8054600181018255600091909152825160029091027fbba9db4cdbea0a37c207bbb83e20f828cd4441c49891101dc94fd20dc8efc3498101918255915193945091927fbba9db4cdbea0a37c207bbb83e20f828cd4441c49891101dc94fd20dc8efc34a9091019061195b9082613412565b505050505050565b600061155d6115c383611cd5565b600061197c8361215a565b9150508082600081518110611993576119936131cf565b6020026020010151146119b9576040516339bbd1f360e21b815260040160405180910390fd5b60006119d76119c7856117aa565b6119d086612189565b8588612198565b9050806119e3876117aa565b1461195b576040516312a37cf560e11b815260040160405180910390fd5b6040805160608101825260008082526020820181905291810182905290611a30611a2a866121db565b85611dc2565b9092509050828015611a4a5750602082015163ffffffff16155b15611a68576040516354cc70e560e11b815260040160405180910390fd5b935093915050565b60408051602081018490529081018290526000906060015b60405160208183030381529060405280519060200120905092915050565b600061155d602080846117b4565b609a80546001810182556000919091527f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be48101611af18382613412565b50919050565b60408051606081018252600080825260208201819052918101829052906116006115fa85612207565b600061155d611b2e83611cd5565b612233565b60408051606081018252600080825260208201819052918101829052906116006115fa8561225b565b60008054610100900460ff1615611ba3578160ff166001148015611b7f5750303b155b611b9b5760405162461bcd60e51b8152600401610c6a906134d1565b506000919050565b60005460ff808416911610611bca5760405162461bcd60e51b8152600401610c6a906134d1565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16611c105760405162461bcd60e51b8152600401610c6a9061351f565b609780546001600160a01b038086166001600160a01b031992831617909255609880548584169083161790556099805492841692909116919091179055611c55612287565b505050565b60408051606081018252600080825260208201819052918101829052906116a46115fa856122b6565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b805160009060208301610ab781836122e2565b6000611cf38261232c565b611d1057604051635cb1e1ad60e11b815260040160405180910390fd5b5090565b600080611d218560801c90565b9050611d2c85612379565b83611d378684613360565b611d419190613360565b1115611d605760405163a3b99ded60e01b815260040160405180910390fd5b6115c8848201846122e2565b6000611d7782612396565b611d1057604051631ae8107160e21b815260040160405180910390fd5b600061155d7f43713cd927f8eb63b519f3b180bd5f3708ebbe93666be9ba4b9624b7bc57e663835b906123b6565b6040805160608101825260008082526020820181905291810191909152600080611e39856040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050611e4581856123d9565b6097546040516328f3fac960e01b81526001600160a01b0380841660048301529294509116906328f3fac990602401606060405180830381865afa158015611e91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eb5919061357e565b9250611ec0836123fd565b509250929050565b6000611ed382612430565b611d1057604051633ae4998b60e21b815260040160405180910390fd5b600061155d7f3464bf887f210604c594030208052a323ac6628785466262d75241769120164183611dbc565b600081600003611f2e57506000610d46565b6020821115611f505760405163063af09560e31b815260040160405180910390fd5b6001600160801b038416611f648385613360565b1115611f835760405163a3b99ded60e01b815260040160405180910390fd5b600382901b6000611f948660801c90565b90940151600160ff1b600019929092019190911d16949350505050565b6000611fbf600c6032613360565b61155d906001600160801b0384166135ef565b6000806000611fe08461215a565b6040805160208082019490945280820192909252805180830382018152606090920190528051910120949350505050565b81516001821b8111156120375760405163c5360feb60e01b815260040160405180910390fd5b60005b8281101561107b5760005b828110156120d65760008160010190506000868381518110612069576120696131cf565b60200260200101519050600085831061208357600061209e565b878381518110612095576120956131cf565b60200260200101515b90506120aa8282612443565b88600186901c815181106120c0576120c06131cf565b6020908102919091010152505050600201612045565b506001918201821c910161203a565b6040516000906001600160801b03841690608085901c908085101561211d576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa90508061214757604051637c7d772f60e01b815260040160405180910390fd5b608086901b84175b979650505050505050565b6000808261217161216c82602461248f565b61249c565b925061218161216c8260246124be565b915050915091565b600061155d8260206004612502565b6000600182901b604081106121c057604051631390f2a160e01b815260040160405180910390fd5b60006121cc8787612523565b905061214f828287600661254e565b600061155d7ff304ae6578b1582b0b5b512e0a7070d6f76973b1f360f99dd500082d3bc9487783611dbc565b600061155d7fccfadb9c399e4e4257b6d0c3f92e1f9a9c00b1802b55a2f7d511702faa76909083611dbc565b600061223e826125dd565b611d1057604051631dad384f60e21b815260040160405180910390fd5b600061155d7fdf42b2c0137811ba604f5c79e20c4d6b94770aa819cc524eca444056544f8ab783611dbc565b600054610100900460ff166122ae5760405162461bcd60e51b8152600401610c6a9061351f565b610c736125f0565b600061155d7fb38669e8ca41a27fcd85729b868e8ab047d0f142073a017213e58f0a91e88ef383611dbc565b6000806122ef8385613360565b90506040518111156122ff575060005b806000036123205760405163085f79c360e11b815260040160405180910390fd5b608084901b8317610ab7565b60006001600160801b03821681612345600c6032613360565b61234f90836135ef565b90508161235e600c6032613360565b6123689083613373565b148015610ab75750610ab781612620565b60006001600160801b03821661238f8360801c90565b0192915050565b60006123a4600c6032613360565b6001600160801b0383165b1492915050565b6000816123c28461249c565b604080516020810193909352820152606001611a88565b60008060006123e88585612645565b915091506123f581612687565b509392505050565b6000815160058111156124125761241261338a565b036115475760405163dc449cb760e01b815260040160405180910390fd5b6000604e6001600160801b0383166123af565b600082158015612451575081155b1561245e5750600061155d565b604080516020810185905290810183905260600160405160208183030381529060405280519060200120905061155d565b6000610d46838284611d14565b6000806124a98360801c90565b6001600160801b039390931690922092915050565b60006001600160801b038316808311156124eb5760405163a3b99ded60e01b815260040160405180910390fd5b610ab7836124f98660801c90565b018483036122e2565b600080612510858585611f1c565b602084900360031b1c9150509392505050565b60008282604051602001611a8892919091825260e01b6001600160e01b031916602082015260240190565b8151600090828111156125745760405163c5360feb60e01b815260040160405180910390fd5b84915060005b818110156125b1576125a783868381518110612598576125986131cf565b6020026020010151898461283d565b925060010161257a565b50805b838110156125d3576125c9836000898461283d565b92506001016125b4565b5050949350505050565b600060856001600160801b0383166123af565b600054610100900460ff166126175760405162461bcd60e51b8152600401610c6a9061351f565b610c7333611c83565b6000811580159061155d5750612638600160066133b9565b6001901b82111592915050565b600080825160410361267b5760208301516040840151606085015160001a61266f87828585612866565b9450945050505061162e565b5060009050600261162e565b600081600481111561269b5761269b61338a565b036126a35750565b60018160048111156126b7576126b761338a565b036127045760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610c6a565b60028160048111156127185761271861338a565b036127655760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610c6a565b60038160048111156127795761277961338a565b036127d15760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610c6a565b60048160048111156127e5576127e561338a565b036115475760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610c6a565b6000600183831c16810361285c576128558585612443565b9050610ab7565b6128558486612443565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561289d575060009050600361294a565b8460ff16601b141580156128b557508460ff16601c14155b156128c6575060009050600461294a565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561291a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166129435760006001925092505061294a565b9150600090505b94509492505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561299157612991612953565b604052919050565b600082601f8301126129aa57600080fd5b81356001600160401b038111156129c3576129c3612953565b6129d6601f8201601f1916602001612969565b8181528460208386010111156129eb57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215612a2057600080fd5b8535945060208601356001600160401b0380821115612a3e57600080fd5b612a4a89838a01612999565b95506040880135915080821115612a6057600080fd5b612a6c89838a01612999565b94506060880135915080821115612a8257600080fd5b612a8e89838a01612999565b93506080880135915080821115612aa457600080fd5b50612ab188828901612999565b9150509295509295909350565b60006001600160401b03821115612ad757612ad7612953565b5060051b60200190565b600082601f830112612af257600080fd5b81356020612b07612b0283612abe565b612969565b82815260059290921b84018101918181019086841115612b2657600080fd5b8286015b84811015612b415780358352918301918301612b2a565b509695505050505050565b60008060008060008060c08789031215612b6557600080fd5b8635955060208701356001600160401b0380821115612b8357600080fd5b612b8f8a838b01612999565b96506040890135915080821115612ba557600080fd5b612bb18a838b01612999565b95506060890135915080821115612bc757600080fd5b612bd38a838b01612ae1565b94506080890135915080821115612be957600080fd5b612bf58a838b01612999565b935060a0890135915080821115612c0b57600080fd5b50612c1889828a01612999565b9150509295509295509295565b60008060008060808587031215612c3b57600080fd5b8435935060208501356001600160401b0380821115612c5957600080fd5b612c6588838901612999565b94506040870135915080821115612c7b57600080fd5b612c8788838901612999565b93506060870135915080821115612c9d57600080fd5b50612caa87828801612999565b91505092959194509250565b600080600060608486031215612ccb57600080fd5b8335925060208401356001600160401b0380821115612ce957600080fd5b612cf587838801612999565b93506040860135915080821115612d0b57600080fd5b50612d1886828701612999565b9150509250925092565b6000815180845260005b81811015612d4857602081850181015186830182015201612d2c565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d466020830184612d22565b60008060208385031215612d8e57600080fd5b82356001600160401b0380821115612da557600080fd5b818501915085601f830112612db957600080fd5b813581811115612dc857600080fd5b8660208260051b8501011115612ddd57600080fd5b60209290920196919550909350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015612e5757888303603f190185528151805115158452870151878401879052612e4487850182612d22565b9588019593505090860190600101612e16565b509098975050505050505050565b60008060008060808587031215612e7b57600080fd5b84356001600160401b0380821115612e9257600080fd5b612e9e88838901612999565b9550602091508187013581811115612eb557600080fd5b612ec189828a01612999565b95505060408701359350606087013581811115612edd57600080fd5b87019050601f81018813612ef057600080fd5b8035612efe612b0282612abe565b81815260059190911b8201830190838101908a831115612f1d57600080fd5b928401925b82841015612f3b57833582529284019290840190612f22565b979a9699509497505050505050565b600080600060608486031215612f5f57600080fd5b83356001600160401b0380821115612f7657600080fd5b612f8287838801612999565b94506020860135915080821115612ce957600080fd5b600080600080600060a08688031215612fb057600080fd5b8535945060208601356001600160401b0380821115612fce57600080fd5b612fda89838a01612999565b95506040880135915080821115612ff057600080fd5b612a6c89838a01612ae1565b6000806040838503121561300f57600080fd5b82356001600160401b038082111561302657600080fd5b61303286838701612999565b9350602085013591508082111561304857600080fd5b5061305585828601612999565b9150509250929050565b80356001600160a01b0381168114611be457600080fd5b60008060006060848603121561308b57600080fd5b6130948461305f565b92506130a26020850161305f565b91506130b06040850161305f565b90509250925092565b6000602082840312156130cb57600080fd5b5035919050565b6040815260006130e56040830185612d22565b82810360208401526115c88185612d22565b60006020828403121561310957600080fd5b610d468261305f565b60006020828403121561312457600080fd5b81518015158114610d4657600080fd5b84815260806020820152600061314d6080830186612d22565b828103604084015261315f8186612d22565b9050828103606084015261214f8185612d22565b63ffffffff9390931683526001600160a01b03918216602084015216604082015260600190565b8381526060602082015260006131b36060830185612d22565b82810360408401526131c58185612d22565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b60008235603e198336030181126131fb57600080fd5b9190910192915050565b6000808335601e1984360301811261321c57600080fd5b8301803591506001600160401b0382111561323657600080fd5b60200191503681900382131561162e57600080fd5b8183823760009101908152919050565b63ffffffff8616815260006020868184015260a0604084015261328160a0840187612d22565b60608401869052838103608085015284518082528286019183019060005b818110156132c45783516001600160801b03168352928401929184019160010161329f565b50909a9950505050505050505050565b63ffffffff851681526001600160a01b038416602082015260806040820181905260009061330490830185612d22565b828103606084015261214f8185612d22565b600181811c9082168061332a57607f821691505b602082108103611af157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561155d5761155d61334a565b808202811582820484141761155d5761155d61334a565b634e487b7160e01b600052602160045260246000fd5b6000600182016133b2576133b261334a565b5060010190565b8181038181111561155d5761155d61334a565b601f821115611c5557600081815260208120601f850160051c810160208610156133f35750805b601f850160051c820191505b8181101561195b578281556001016133ff565b81516001600160401b0381111561342b5761342b612953565b61343f816134398454613316565b846133cc565b602080601f831160018114613474576000841561345c5750858301515b600019600386901b1c1916600185901b17855561195b565b600085815260208120601f198616915b828110156134a357888601518255948401946001909101908401613484565b50858210156134c15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b805163ffffffff81168114611be457600080fd5b60006060828403121561359057600080fd5b604051606081018181106001600160401b03821117156135b2576135b2612953565b6040528251600681106135c457600080fd5b81526135d26020840161356a565b60208201526135e36040840161356a565b60408201529392505050565b60008261360c57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f2fcc8778241de27a5e9b5f9abc7825262a19b3b0d368dbec44d92113a92620d64736f6c63430008110033",
    "sourceMap": "1465:4312:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5988:1487:29;;;;;;:::i;:::-;;:::i;:::-;;;2136:14:201;;2129:22;2111:41;;2099:2;2084:18;5988:1487:29;;;;;;;;7517:1713;;;;;;:::i;:::-;;:::i;11279:1234::-;;;;;;:::i;:::-;;:::i;14096:980::-;;;;;;:::i;:::-;;:::i;1383:401:7:-;1554:28;;;;;;;;;1567:7;1554:28;;1576:5;1554:28;;;;1383:401;;;;;;;:::i;542:1352:6:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4627:1319:29:-;;;;;;:::i;:::-;;:::i;2702:1931:28:-;;;;;;:::i;:::-;;:::i;2184:57:5:-;;;:::i;:::-;;16404:105:29;16481:14;:21;16404:105;;9549:25:201;;;9537:2;9522:18;16404:105:29;9403:177:201;3119:27:29;;;;;-1:-1:-1;;;;;3119:27:29;;;;;;-1:-1:-1;;;;;9749:32:201;;;9731:51;;9719:2;9704:18;3119:27:29;9585:203:201;4679:1096:28;;;;;;:::i;:::-;;:::i;12555:1499:29:-;;;;;;:::i;:::-;;:::i;1356:35:5:-;;;;;;;;11747:10:201;11735:23;;;11717:42;;11705:2;11690:18;1356:35:5;11573:192:201;1276:85:87;1348:6;;-1:-1:-1;;;;;1348:6:87;1276:85;;10387:850:29;;;;;;:::i;:::-;;:::i;3152:21::-;;;;;-1:-1:-1;;;;;3152:21:29;;;3179:26;;;;;-1:-1:-1;;;;;3179:26:29;;;2179:179:28;;;;;;:::i;:::-;;:::i;9570:775:29:-;;;;;;:::i;:::-;;:::i;16551:420::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;17013:128::-;;;;;;:::i;:::-;;:::i;15118:910::-;;;;;;:::i;:::-;;:::i;2158:198:87:-;;;;;;:::i;:::-;;:::i;5988:1487:29:-;6218:16;6303:17;6323:28;:11;:26;:28::i;:::-;6303:48;-1:-1:-1;6420:11:29;6434:26;6303:48;6449:10;6434:14;:26::i;:::-;6420:40;;6542:30;6577:38;6596:5;6603:11;6577:18;:38::i;:::-;6541:74;;;6663:26;:11;:24;:26::i;:::-;6760:15;6778:30;:10;:28;:30::i;:::-;6760:48;;6880:31;6916:37;6935:3;6940:12;6916:18;:37::i;:::-;6879:74;;;7010:36;:12;:34;:36::i;:::-;7107:40;7127:12;:19;;;7107;:40::i;:::-;7189:14;:3;:12;:14::i;:::-;7161:24;:8;:22;:24::i;:::-;:42;7157:78;;7212:23;;-1:-1:-1;;;7212:23:29;;;;;;;;;;;7157:78;7245:48;7257:22;:5;:20;:22::i;:14::-;:20;:22::i;:::-;7281:11;7245;:48::i;:::-;7383:12;;7409:17;;;;;7428:18;;;;7369:78;;-1:-1:-1;;;7369:78:29;;13994:10:201;14031:15;;;7369:78:29;;;14013:34:201;14083:15;;14063:18;;;14056:43;-1:-1:-1;;;;;7383:12:29;;;;7369:39;;13957:18:201;;7369:78:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7464:4:29;;5988:1487;-1:-1:-1;;;;;;;;;;;;;;5988:1487:29:o;7517:1713::-;7786:16;7868:11;7882:26;:12;:24;:26::i;:::-;7868:40;;7990:30;8025:38;8044:5;8051:11;8025:18;:38::i;:::-;7989:74;;;8111:26;:11;:24;:26::i;:::-;8208:15;8226:30;:10;:28;:30::i;:::-;8208:48;;8327:31;8363:37;8382:3;8387:12;8363:18;:37::i;:::-;8326:74;;;8457:36;:12;:34;:36::i;:::-;8554:40;8574:12;:19;;;8554;:40::i;:::-;8944:56;8966:3;8971:10;8983:5;8990:9;8944:21;:56::i;:::-;9010:38;9022:12;9036:11;9010;:38::i;11279:1234::-;11469:17;11559:15;11577:30;:10;:28;:30::i;:::-;11559:48;;11694:25;11721:14;11739:37;11758:3;11763:12;11739:18;:37::i;:::-;11693:83;;;;11833:30;:6;:28;:30::i;:::-;11930:17;11950:28;:11;:26;:28::i;:::-;11930:48;;12020:14;:3;:12;:14::i;:::-;11992:24;:8;:22;:24::i;:::-;:42;11988:78;;12043:23;;-1:-1:-1;;;12043:23:29;;;;;;;;;;;11988:78;12142:25;12170:43;:35;:26;:8;12185:10;12170:14;:26::i;:::-;4917:5:56;4813:118;12170:43:29;12248:6;;12238:44;;-1:-1:-1;;;12238:44:29;;12142:71;;-1:-1:-1;;;;;;12248:6:29;;12238:30;;:44;;12142:71;;12238:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12223:59;;12297:12;12292:215;;12330:79;12358:10;12370:12;12384:10;12396:12;12330:79;;;;;;;;;:::i;:::-;;;;;;;;12437:12;;12462:13;;;;12423:73;;-1:-1:-1;;;12423:73:29;;-1:-1:-1;;;;;12437:12:29;;;;12423:38;;:73;;12477:6;;12485:10;;12423:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12292:215;11488:1025;;;;;11279:1234;;;;;;:::o;14096:980::-;14237:17;14327;14347:28;:11;:26;:28::i;:::-;14327:48;;14465:25;14492:13;14521:88;14548:8;14573:13;14602:5;14521:15;:88::i;:::-;14464:145;;;;14665:30;:6;:28;:30::i;:::-;14796:6;;-1:-1:-1;;;;;14796:6:29;14786:30;14817:43;:35;:26;:8;14832:10;14817:14;:26::i;:43::-;14786:75;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14771:90;;14876:12;14871:199;;14909:64;14934:10;14946:11;14959:13;14909:64;;;;;;;;:::i;:::-;;;;;;;;15001:12;;15026:13;;;;14987:72;;-1:-1:-1;;;14987:72:29;;-1:-1:-1;;;;;15001:12:29;;;;14987:38;;:72;;15041:5;;15048:10;;14987:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14871:199;14260:816;;;14096:980;;;;;:::o;542:1352:6:-;602:27;658:5;;-1:-1:-1;;;;;694:20:6;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;694:20:6;;;;;;;;;;;;;;;;680:34;;724:19;758:9;753:1135;777:6;773:1;:10;753:1135;;;808:5;;814:1;808:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;800:16;;830:20;853:11;865:1;853:14;;;;;;;;:::i;:::-;;;;;;;830:37;;1210:4;-1:-1:-1;;;;;1202:26:6;1229:5;:14;;;;;;;;:::i;:::-;1202:42;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1181:17:6;;;1164:80;;;;;;1517:19;;1514:38;1504:301;;-1:-1:-1;;;1675:4:6;1668:80;1782:4;1776;1769:18;1504:301;-1:-1:-1;1860:3:6;;753:1135;;;;631:1263;;542:1352;;;;:::o;4627:1319:29:-;4822:16;4907:17;4927:28;:11;:26;:28::i;:::-;4907:48;;5039:31;5087:87;5114:8;5139:13;5168:4;5087:15;:87::i;:::-;5038:136;;;5231:36;:12;:34;:36::i;:::-;5328:40;5348:12;:19;;;5328;:40::i;:::-;5437:11;5451:26;:8;5466:10;5451:14;:26::i;:::-;5437:40;;5559:30;5594:38;5613:5;5620:11;5594:18;:38::i;:::-;5558:74;;;5680:26;:11;:24;:26::i;:::-;5716:48;5728:22;:5;7257:20;:22::i;5728:::-;5752:11;5716;:48::i;:::-;5854:12;;5880:17;;;;;5899:18;;;;5840:78;;-1:-1:-1;;;5840:78:29;;13994:10:201;14031:15;;;5840:78:29;;;14013:34:201;14083:15;;14063:18;;;14056:43;-1:-1:-1;;;;;5854:12:29;;;;5840:39;;13957:18:201;;5840:78:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5935:4;5928:11;;;;;;4627:1319;;;;;;;:::o;2702:1931:28:-;2884:16;2973:15;2991:30;:10;:28;:30::i;:::-;2973:48;;3093:25;3120:14;3138:37;3157:3;3162:12;3138:18;:37::i;:::-;3092:83;;;;3224:21;:6;:19;:21::i;:::-;3306:34;3326:6;:13;;;3306:19;:34::i;:::-;9249:14:59;;9246:1;9242:22;9050:4;9037:18;;9340:19;3766:8:28;;3923:96;;3960:10;;3923:23;:96::i;:::-;3889:14;:3;:12;:14::i;:::-;:130;3872:209;;4051:19;;-1:-1:-1;;;4051:19:28;;;;;;;;;;;3872:209;4144:16;4163:28;4178:12;4163:14;:28::i;:::-;4288:11;;4346:12;;;;;4267:235;;-1:-1:-1;;;4267:235:28;;4144:47;;-1:-1:-1;;;;;;4288:11:28;;;;4267:51;;:235;;4144:47;;4416:10;;4451;;4484:7;;4267:235;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4253:249;;4516:11;4512:115;;;4548:68;4568:6;:13;;;4583:6;4591:10;4603:12;4548:68;;;;;;;;;:::i;:::-;;;;;;;;2902:1731;;;;;2702:1931;;;;;;:::o;2184:57:5:-;1348:6:87;;-1:-1:-1;;;;;1348:6:87;929:10:91;1488:23:87;1480:68;;;;-1:-1:-1;;;1480:68:87;;18959:2:201;1480:68:87;;;18941:21:201;;;18978:18;;;18971:30;19037:34;19017:18;;;19010:62;19089:18;;1480:68:87;;;;;;;;;2184:57:5:o;4679:1096:28:-;4824:16;4917:15;4935:30;:10;:28;:30::i;:::-;4917:48;;5046:30;5081:42;5106:3;5111:11;5081:24;:42::i;:::-;5045:78;;;5171:26;:11;:24;:26::i;:::-;5280:31;5316:37;5335:3;5340:12;5316:18;:37::i;:::-;5279:74;;;5410:36;:12;:34;:36::i;:::-;5507:40;5527:12;:19;;;5507;:40::i;:::-;5557:36;5569:10;5581:11;5557;:36::i;:::-;5683:12;;5709:17;;;;;5728:18;;;;5669:78;;-1:-1:-1;;;5669:78:28;;13994:10:201;14031:15;;;5669:78:28;;;14013:34:201;14083:15;;14063:18;;;14056:43;-1:-1:-1;;;;;5683:12:28;;;;5669:39;;13957:18:201;;5669:78:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5764:4;5757:11;;;;;4679:1096;;;;;;:::o;12555:1499:29:-;12784:17;12874:15;12892:30;:10;:28;:30::i;:::-;12874:48;;13009:25;13036:14;13054:37;13073:3;13078:12;13054:18;:37::i;:::-;13008:83;;;;13148:30;:6;:28;:30::i;:::-;13242:11;13256:26;:12;:24;:26::i;:::-;13242:40;;13632:56;13654:3;13659:10;13671:5;13678:9;13632:21;:56::i;:::-;13789:6;;13779:44;;-1:-1:-1;;;13779:44:29;;-1:-1:-1;;;;;13789:6:29;;;;13779:30;;:44;;13810:12;;13779:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13764:59;;13838:12;13833:215;;13871:79;13899:10;13911:12;13925:10;13937:12;13871:79;;;;;;;;;:::i;:::-;;;;;;;;13978:12;;14003:13;;;;13964:73;;-1:-1:-1;;;13964:73:29;;-1:-1:-1;;;;;13978:12:29;;;;13964:38;;:73;;14018:6;;14026:10;;13964:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13833:215;12803:1251;;;;12555:1499;;;;;;;:::o;10387:850::-;10502:18;10592:12;10607:27;:11;:25;:27::i;:::-;10592:42;;10715:25;10742:13;10759:39;10780:4;10786:11;10759:20;:39::i;:::-;10714:84;;;;10854:30;:6;:28;:30::i;:::-;10999:11;;10985:54;;-1:-1:-1;;;10985:54:29;;-1:-1:-1;;;;;10999:11:29;;;;10985:41;;:54;;11027:11;;10985:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10984:55;10968:71;;11054:13;11049:182;;11088:46;11109:11;11122;11088:46;;;;;;;:::i;:::-;;;;;;;;11162:12;;11187:13;;;;11148:72;;-1:-1:-1;;;11148:72:29;;-1:-1:-1;;;;;11162:12:29;;;;11148:38;;:72;;11202:5;;11209:10;;11148:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10526:711;;;10387:850;;;;:::o;2179:179:28:-;3111:19:88;3133:25;3156:1;3133:22;:25::i;:::-;3111:47;;3172:14;3168:65;;;3202:13;:20;;-1:-1:-1;;3202:20:88;;;;;3168:65;2292:59:28::1;2314:13;2329:7;2338:12;2292:21;:59::i;:::-;3257:14:88::0;3253:99;;;3303:5;3287:21;;-1:-1:-1;;3287:21:88;;;3327:14;;-1:-1:-1;19270:36:201;;3327:14:88;;19258:2:201;19243:18;3327:14:88;;;;;;;3253:99;3101:257;2179:179:28;;;:::o;9570:775:29:-;9681:19;9772:12;9787:27;:11;:25;:27::i;:::-;9772:42;;9901:25;9928:14;9946:35;9961:4;9967:13;9946:14;:35::i;:::-;9900:81;;;;10038:30;:6;:28;:30::i;:::-;10109:11;;10095:54;;-1:-1:-1;;;10095:54:29;;-1:-1:-1;;;;;10109:11:29;;;;10095:41;;:54;;10137:11;;10095:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10078:71;;10164:14;10159:180;;10199:42;10214:11;10227:13;10199:42;;;;;;;:::i;16551:420::-;16725:14;:21;16637:29;;;;16716:30;;16712:60;;16755:17;;-1:-1:-1;;;16755:17:29;;;;;;;;;;;16712:60;16782:32;16817:14;16832:5;16817:21;;;;;;;;:::i;:::-;;;;;;;;;;;16782:56;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16867:12;:29;;;16848:48;;16924:17;16942:12;:21;;;16924:40;;;;;;;;:::i;:::-;;;;;;;;16906:58;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16702:269;16551:420;;;:::o;17013:128::-;17079:12;17110:17;17128:5;17110:24;;;;;;;;:::i;:::-;;;;;;;;17103:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17013:128;;;:::o;15118:910::-;15232:18;15320:11;15334:26;:12;:24;:26::i;:::-;15320:40;;15441:25;15468:13;15485:38;15504:5;15511:11;15485:18;:38::i;:::-;15440:83;;;;15579:30;:6;:28;:30::i;:::-;15797:6;;15787:44;;-1:-1:-1;;;15787:44:29;;-1:-1:-1;;;;;15797:6:29;;;;15787:30;;:44;;15818:12;;15787:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15786:45;15770:61;;15846:13;15841:181;;15880:45;15899:12;15913:11;15880:45;;;;;;;:::i;2158:198:87:-;1348:6;;-1:-1:-1;;;;;1348:6:87;929:10:91;1488:23:87;1480:68;;;;-1:-1:-1;;;1480:68:87;;18959:2:201;1480:68:87;;;18941:21:201;;;18978:18;;;18971:30;19037:34;19017:18;;;19010:62;19089:18;;1480:68:87;18757:356:201;1480:68:87;-1:-1:-1;;;;;2246:22:87;::::1;2238:73;;;::::0;-1:-1:-1;;;2238:73:87;;19904:2:201;2238:73:87::1;::::0;::::1;19886:21:201::0;19943:2;19923:18;;;19916:30;19982:34;19962:18;;;19955:62;-1:-1:-1;;;20033:18:201;;;20026:36;20079:19;;2238:73:87::1;19702:402:201::0;2238:73:87::1;2321:28;2340:8;2321:18;:28::i;:::-;2158:198:::0;:::o;4187:132:55:-;4256:8;4283:29;4298:13;:7;:11;:13::i;:::-;4283:14;:29::i;:::-;4276:36;4187:132;-1:-1:-1;;4187:132:55:o;6104:342::-;6181:5;6216:8;6181:5;1387:20:45;1107:2;1387;:20;:::i;:::-;6263:25:55;;:10;:25;:::i;:::-;6243:45;-1:-1:-1;;;;;;7239:43:52;;6302:9:55;:26;6298:56;;6337:17;;-1:-1:-1;;;6337:17:55;;;;;;;;;;;6298:56;6371:68;:54;6394:9;1387:20:45;1107:2;1387;:20;:::i;:::-;6371:7:55;;:54;:13;:54::i;:::-;:66;:68::i;:::-;6364:75;6104:342;-1:-1:-1;;;;;6104:342:55:o;25177:416:29:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;25424:47:29;25438:19;:5;:17;:19::i;:::-;25459:11;25424:13;:47::i;:::-;25544:13;;;;25406:65;;-1:-1:-1;25406:65:29;-1:-1:-1;25544:18:29;;;25540:46;;25571:15;;-1:-1:-1;;;25571:15:29;;;;;;;;;;;25540:46;25177:416;;;;;:::o;3392:164:47:-;3484:16;3469:11;;:31;;;;;;;;:::i;:::-;;3465:85;;3523:16;;-1:-1:-1;;;3523:16:47;;;;;;;;;;;5288:141:49;5360:11;5390:32;5408:13;:7;:11;:13::i;:::-;5390:17;:32::i;20913:426:29:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;21167:44:29;21181:15;:3;:13;:15::i;21167:44::-;21289:13;;;;21148:63;;-1:-1:-1;21148:63:29;-1:-1:-1;21289:18:29;;21306:1;21289:18;21285:47;;21316:16;;-1:-1:-1;;;21316:16:29;;;;;;;;;;;3845:223:47;3946:16;3931:11;;:31;;;;;;;;:::i;:::-;;;:69;;;;-1:-1:-1;3981:19:47;3966:11;;:34;;;;;;;;:::i;:::-;;;3931:69;3927:135;;;4023:28;;-1:-1:-1;;;4023:28:47;;;;;;;;;;;19775:366:29;20059:11;20043:27;;:12;:27;;;;:60;;;;-1:-1:-1;20074:11:29;:29;;3861:3:45;20074:29:29;;20043:60;20039:95;;;20112:22;;-1:-1:-1;;;20112:22:29;;;;;;;;;;;7339:149:49;7397:7;7423:58;7397:7;7477:2;7423:3;:12;:18;:58;:18;:58::i;7594:807:55:-;7659:7;7678:21;7702:23;:8;:21;:23::i;:::-;7678:47;;7735:23;7775:13;-1:-1:-1;;;;;7761:28:55;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7761:28:55;;7735:54;;7804:9;7799:298;7823:13;7819:1;:17;7799:298;;;8062:24;:17;:8;8077:1;8062:14;:17::i;:::-;:22;:24::i;:::-;8050:6;8057:1;8050:9;;;;;;;;:::i;:::-;;;;;;;;;;:36;7838:3;;;:::i;:::-;;;7799:298;;;-1:-1:-1;8236:58:55;8261:6;8269:24;8292:1;645::45;8269:24:55;:::i;:::-;8236;:58::i;:::-;8385:6;8392:1;8385:9;;;;;;;;:::i;:::-;;;;;;;8378:16;;;;7594:807;;;:::o;4079:1041:52:-;4325:4;4319:11;;4455:34;4469:7;4484:4;4478:10;;4455:13;:34::i;:::-;-1:-1:-1;;;;;;7239:43:52;;4701:12;8097:2;8081:18;;-1:-1:-1;;8465:20:52;4997;;5019:4;4993:31;4987:4;4980:45;-1:-1:-1;5087:17:52;;4079:1041;;-1:-1:-1;4079:1041:52:o;17557:229:29:-;17658:16;17677:31;17692:15;17677:14;:31::i;:::-;17738:40;;;;;;;;;;;;;;;;;;17718:14;:61;;;;;;;-1:-1:-1;17718:61:29;;;;;;;;;;;;;;;;;;17658:50;;-1:-1:-1;17738:40:29;;17718:61;;;;;;;;;:::i;:::-;;;;17648:138;17557:229;;:::o;3771:123:56:-;3837:5;3861:26;3873:13;:7;:11;:13::i;27671:825:29:-;27918:20;27942:16;:5;:14;:16::i;:::-;27915:43;;;27988:12;27972:9;27982:1;27972:12;;;;;;;;:::i;:::-;;;;;;;:28;27968:65;;28009:24;;-1:-1:-1;;;28009:24:29;;;;;;;;;;;27968:65;28253:20;28276:78;28302:12;:5;:10;:12::i;:::-;28316:14;:5;:12;:14::i;:::-;28332:9;28343:10;28276:25;:78::i;:::-;28253:101;;28445:12;28427:14;:3;:12;:14::i;:::-;:30;28423:66;;28466:23;;-1:-1:-1;;;28466:23:29;;;;;;;;;;;26218:476;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;26489:50:29;26503:20;:8;:18;:20::i;:::-;26525:13;26489;:50::i;:::-;26471:68;;-1:-1:-1;26471:68:29;-1:-1:-1;26628:12:29;:34;;;;-1:-1:-1;26644:13:29;;;;:18;;;26628:34;26624:63;;;26671:16;;-1:-1:-1;;;26671:16:29;;;;;;;;;;;26624:63;26218:476;;;;;;:::o;7833:165:49:-;7952:38;;;;;;23304:19:201;;;23339:12;;;23332:28;;;7916:7:49;;23376:12:201;;7952:38:49;;;;;;;;;;;;;7942:49;;;;;;7935:56;;7833:165;;;;:::o;7586:149::-;7644:7;7670:58;3874:2;;7670:3;:12;4813:118:56;17848:179:29;17953:17;:24;;17987:33;;;;;17914:16;17987:33;;;;;;;;18010:9;17987:33;;:::i;:::-;;17848:179;;;:::o;21863:424::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;22120:45:29;22134:17;:3;:15;:17::i;4344:129:54:-;4412:7;4438:28;4452:13;:7;:11;:13::i;:::-;4438;:28::i;23980:418:29:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;24230:46:29;24244:18;:4;:16;:18::i;5287:808:88:-;5351:4;5684:13;;;;;;;5680:409;;;5738:7;:12;;5749:1;5738:12;:61;;;;-1:-1:-1;5793:4:88;1476:19:90;:23;5738:61:88;5713:166;;;;-1:-1:-1;;;5713:166:88;;;;;;;:::i;:::-;-1:-1:-1;5900:5:88;;5287:808;-1:-1:-1;5287:808:88:o;5680:409::-;5944:12;;:22;;;;:12;;:22;5936:81;;;;-1:-1:-1;;;5936:81:88;;;;;;;:::i;:::-;-1:-1:-1;6031:12:88;:22;;-1:-1:-1;;6031:22:88;;;;;;;;;;;;-1:-1:-1;;5287:808:88:o;5680:409::-;5287:808;;;:::o;3973:272:29:-;4698:13:88;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:88;;;;;;;:::i;:::-;4122:12:29::1;:28:::0;;-1:-1:-1;;;;;4122:28:29;;::::1;-1:-1:-1::0;;;;;;4122:28:29;;::::1;;::::0;;;4160:6:::1;:16:::0;;;;::::1;::::0;;::::1;;::::0;;4186:11:::1;:26:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;4222:16:::1;:14;:16::i;:::-;3973:272:::0;;;:::o;23051:418::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;23299:46:29;23313:16;:4;:14;:16::i;2510:187:87:-;2602:6;;;-1:-1:-1;;;;;2618:17:87;;;-1:-1:-1;;;;;;2618:17:87;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;2972:569:52:-;3060:10;;3026:7;;3486:4;3477:14;;3517:17;3477:14;3060:10;3517:5;:17::i;4471:200:55:-;4535:8;4560:19;4571:7;4560:10;:19::i;:::-;4555:54;;4588:21;;-1:-1:-1;;;4588:21:55;;;;;;;;;;;4555:54;-1:-1:-1;4655:7:55;4471:200::o;10331:484:52:-;10416:7;10435:12;10450:13;:7;6898:3;6871:30;;6712:196;10450:13;10435:28;;10546:13;:7;:11;:13::i;:::-;10539:4;10523:13;10530:6;10523:4;:13;:::i;:::-;:20;;;;:::i;:::-;:36;10519:87;;;10582:13;;-1:-1:-1;;;10582:13:52;;;;;;;;;;;10519:87;10758:40;10778:6;10771:4;:13;10792:4;10758:5;:40::i;4032:185:56:-;4093:5;4115:16;4123:7;4115;:16::i;:::-;4110:48;;4140:18;;-1:-1:-1;;;4140:18:56;;;;;;;;;;;4533:214;4590:7;4693:47;2996:31:45;4693:5:56;:14;:27;;:47::i;19167:531:29:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;19313:13:29;19342:20;19365:45;19394:15;7662:58:96;;25554:66:201;7662:58:96;;;25542:79:201;25637:12;;;25630:28;;;7532:7:96;;25674:12:201;;7662:58:96;;;;;;;;;;;;7652:69;;;;;;7645:76;;7463:265;;;;19365:45:29;19342:68;;19428:38;19442:12;19456:9;19428:13;:38::i;:::-;19499:12;;19485:46;;-1:-1:-1;;;19485:46:29;;-1:-1:-1;;;;;9749:32:201;;;19485:46:29;;;9731:51:201;19420:46:29;;-1:-1:-1;19499:12:29;;;19485:39;;9704:18:201;;19485:46:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19476:55;;19671:20;:6;:18;:20::i;:::-;19332:366;19167:531;;;;;:::o;5581:215:49:-;5648:11;5676:22;5690:7;5676:13;:22::i;:::-;5671:60;;5707:24;;-1:-1:-1;;;5707:24:49;;;;;;;;;;;6142:223;6201:7;6309:49;2619:35:45;6309:3:49;:12;4813:118:56;13860:1334:52;13947:14;13977:6;13987:1;13977:11;13973:59;;-1:-1:-1;14019:1:52;14004:17;;13973:59;14118:2;14109:6;:11;14105:65;;;14143:16;;-1:-1:-1;;;14143:16:52;;;;;;;;;;;14105:65;-1:-1:-1;;;;;7239:43:52;;14249:15;14258:6;14249;:15;:::i;:::-;:31;14245:82;;;14303:13;;-1:-1:-1;;;14303:13:52;;;;;;;;;;;14245:82;14366:1;14356:11;;;14336:17;14406:13;:7;6898:3;6871:30;;6712:196;14406:13;15153:17;;;15147:24;-1:-1:-1;;;;;14845:17:52;;;;14841:90;;;;15143:35;;13860:1334;-1:-1:-1;;;;13860:1334:52:o;6514:195:55:-;6578:7;1387:20:45;1107:2;1387;:20;:::i;:::-;6664:38:55;;-1:-1:-1;;;;;7239:43:52;;6664:38:55;:::i;5663:248:56:-;5713:7;5733:17;5752:18;5774:16;:5;:14;:16::i;:::-;5868:35;;;;;;;23304:19:201;;;;23339:12;;;23332:28;;;;5868:35:56;;;;;;;;;23376:12:201;;;;5868:35:56;;5858:46;;;;;;5663:248;-1:-1:-1;;;;5663:248:56:o;4547:1885:57:-;4657:13;;4790:1;:11;;4775:27;;4771:58;;;4811:18;;-1:-1:-1;;;4811:18:57;;;;;;;;;;;4771:58;5099:9;5094:1322;5118:6;5114:1;:10;5094:1322;;;5632:17;5627:618;5667:11;5655:9;:23;5627:618;;;5718:18;5739:9;5751:1;5739:13;5718:34;;5774:17;5794:6;5801:9;5794:17;;;;;;;;:::i;:::-;;;;;;;5774:37;;5887:18;5921:11;5908:10;:24;:58;;5964:1;5908:58;;;5935:6;5942:10;5935:18;;;;;;;;:::i;:::-;;;;;;;5908:58;5887:79;;6194:32;6204:9;6215:10;6194:9;:32::i;:::-;6169:6;6189:1;6176:9;:14;;6169:22;;;;;;;;:::i;:::-;;;;;;;;;;:57;-1:-1:-1;;;5693:1:57;5680:14;5627:618;;;-1:-1:-1;6400:1:57;6380:15;;;6379:22;;;5126:3;5094:1322;;18013:842:52;18352:4;18346:11;18091:7;;-1:-1:-1;;;;;7239:43:52;;;6898:3;6871:30;;;;18434:12;;;18430:66;;;18469:16;;-1:-1:-1;;;18469:16:52;;;;;;;;;;;18430:66;18505:8;18721:4;18713:6;18707:4;18699:6;18693:4;18686:5;18675:51;18668:58;;18750:3;18745:37;;18762:20;;-1:-1:-1;;;18762:20:52;;;;;;;;;;;18745:37;17362:3;17354:11;;;17353:20;;18799:49;18792:56;18013:842;-1:-1:-1;;;;;;;18013:842:52:o;6256:393:56:-;6310:17;;6377:5;6452:45;:36;6377:5;2354:2;6452:14;:36::i;:::-;:43;:45::i;:::-;6440:57;-1:-1:-1;6592:50:56;:41;:7;2354:2;6592:17;:41::i;:50::-;6579:63;;6349:300;6256:393;;;:::o;7939:152::-;7991:6;8023:60;:5;2306:2;8080:1;8023:24;:60::i;9026:841:55:-;9179:7;9315:1;9301:15;;;9418:25;9400:44;;9396:74;;9453:17;;-1:-1:-1;;;9453:17:55;;;;;;;;;;;9396:74;9565:16;9584:37;9602:10;9614:6;9584:17;:37::i;:::-;9565:56;;9782:78;9803:13;9818:8;9828:9;645:1:45;9782:20:55;:78::i;5284:236::-;5345:22;5462:51;2924:32:45;5462:8:55;:17;4813:118:56;6512:234:49;6573:7;6688:51;2700:37:45;6688:3:49;:12;4813:118:56;4615:195:54;4678:7;4702:18;4712:7;4702:9;:18::i;:::-;4697:52;;4729:20;;-1:-1:-1;;;4729:20:54;;;;;;;;;;;5521:230;5582:7;5693:51;2850:33:45;5693:7:54;:16;4813:118:56;988:95:87;4698:13:88;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:88;;;;;;;:::i;:::-;1050:26:87::1;:24;:26::i;5168:215:54:-:0;5227:7;5327:49;2777:31:45;5327:7:54;:16;4813:118:56;2092:540:52;2158:7;;2192:11;2199:4;2192;:11;:::i;:::-;2177:26;;2471:4;2465:11;2459:4;2456:21;2453:38;;;-1:-1:-1;2488:1:52;2453:38;2514:4;2522:1;2514:9;2510:66;;2546:19;;-1:-1:-1;;;2546:19:52;;;;;;;;;;;2510:66;17362:3;17354:11;;;17353:20;;2592:33;17029:352;4755:389:55;4815:4;-1:-1:-1;;;;;7239:43:52;;4815:4:55;1387:20:45;1107:2;1387;:20;:::i;:::-;5028:21:55;;:6;:21;:::i;:::-;5004:45;-1:-1:-1;5098:6:55;1387:20:45;1107:2;1387;:20;:::i;:::-;5066:28:55;;:13;:28;:::i;:::-;:38;:71;;;;;5108:29;5123:13;5108:14;:29::i;7459:258:52:-;7512:12;-1:-1:-1;;;;;7239:43:52;;7671:13;:7;6898:3;6871:30;;6712:196;7671:13;:29;;7459:258;-1:-1:-1;;7459:258:52:o;4283:116:56:-;4340:4;1387:20:45;1107:2;1387;:20;:::i;:::-;-1:-1:-1;;;;;7239:43:52;;4363:13:56;:29;;4283:116;-1:-1:-1;;4283:116:56:o;9558:169:52:-;9634:20;9696:4;9702:16;:7;:14;:16::i;:::-;9683:36;;;;;;23304:19:201;;;;23339:12;;23332:28;23376:12;;9683:36:52;23147:247:201;3759:227:96;3837:7;3857:17;3876:18;3898:27;3909:4;3915:9;3898:10;:27::i;:::-;3856:69;;;;3935:18;3947:5;3935:11;:18::i;:::-;-1:-1:-1;3970:9:96;3759:227;-1:-1:-1;;;3759:227:96:o;4353:162:47:-;4444:17;4429:11;;:32;;;;;;;;:::i;:::-;;4425:84;;4484:14;;-1:-1:-1;;;4484:14:47;;;;;;;;;;;5868:128:49;5931:4;985:2:45;-1:-1:-1;;;;;7239:43:52;;5954:13:49;7081:208:52;3115:287:57;3196:14;3226:23;;:51;;;;-1:-1:-1;3253:24:57;;3226:51;3222:174;;;-1:-1:-1;3300:1:57;3293:8;;3222:174;3349:35;;;;;;23304:19:201;;;23339:12;;;23332:28;;;23376:12;;3349:35:57;;;;;;;;;;;;3339:46;;;;;;3332:53;;;;11947:141:52;12017:7;12043:38;:7;12017;12075:4;12043:13;:38::i;9003:292::-;9059:14;9085:12;9100:13;:7;6898:3;6871:30;;6712:196;9100:13;-1:-1:-1;;;;;7239:43:52;;;;9258:21;;;;;-1:-1:-1;;9003:292:52:o;11126:529::-;11201:7;-1:-1:-1;;;;;7239:43:52;;11308:13;;;11304:64;;;11344:13;;-1:-1:-1;;;11344:13:52;;;;;;;;;;;11304:64;11580:58;11609:6;11593:13;:7;6898:3;6871:30;;6712:196;11593:13;:22;11630:6;11623:4;:13;11580:5;:58::i;15552:538::-;15643:7;;15685:29;:7;15699:6;15707;15685:13;:29::i;:::-;16055:2;:11;;;16071:1;16054:18;16028:45;;-1:-1:-1;;15552:538:52;;;;;:::o;6713:220:56:-;6785:7;6910:5;6917:7;6893:32;;;;;;;;25852:19:201;;;25927:3;25905:16;-1:-1:-1;;;;;;25901:43:201;25896:2;25887:12;;25880:65;25970:2;25961:12;;25697:282;843:900:57;1083:12;;978:13;;1109:17;;;1105:48;;;1135:18;;-1:-1:-1;;;1135:18:57;;;;;;;;;;;1105:48;1171:4;1163:12;;1340:9;1335:189;1359:8;1355:1;:12;1335:189;;;1473:36;1483:5;1490;1496:1;1490:8;;;;;;;;:::i;:::-;;;;;;;1500:5;1507:1;1473:9;:36::i;:::-;1465:44;-1:-1:-1;1369:3:57;;1335:189;;;-1:-1:-1;1621:8:57;1604:123;1635:6;1631:1;:10;1604:123;;;1674:38;1684:5;1699:1;1703:5;1710:1;1674:9;:38::i;:::-;1666:46;-1:-1:-1;1643:3:57;;1604:123;;;;997:746;843:900;;;;;;:::o;4878:152:54:-;4937:4;1255:3:45;-1:-1:-1;;;;;7239:43:52;;4992:13:54;7081:208:52;1089:111:87;4698:13:88;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:88;;;;;;;:::i;:::-;1161:32:87::1;929:10:91::0;1161:18:87::1;:32::i;10245:302:55:-:0;10315:4;10482:18;;;;;:58;;-1:-1:-1;1552:24:45;1575:1;645;1552:24;:::i;:::-;1546:1;:31;;10504:13:55;:36;;10475:65;10245:302;-1:-1:-1;;10245:302:55:o;2243:730:96:-;2324:7;2333:12;2361:9;:16;2381:2;2361:22;2357:610;;2697:4;2682:20;;2676:27;2746:4;2731:20;;2725:27;2803:4;2788:20;;2782:27;2399:9;2774:36;2844:25;2855:4;2774:36;2676:27;2725;2844:10;:25::i;:::-;2837:32;;;;;;;;;2357:610;-1:-1:-1;2916:1:96;;-1:-1:-1;2920:35:96;2900:56;;548:631;625:20;616:5;:29;;;;;;;;:::i;:::-;;612:561;;548:631;:::o;612:561::-;721:29;712:5;:38;;;;;;;;:::i;:::-;;708:465;;766:34;;-1:-1:-1;;;766:34:96;;26186:2:201;766:34:96;;;26168:21:201;26225:2;26205:18;;;26198:30;26264:26;26244:18;;;26237:54;26308:18;;766:34:96;25984:348:201;708:465:96;830:35;821:5;:44;;;;;;;;:::i;:::-;;817:356;;881:41;;-1:-1:-1;;;881:41:96;;26539:2:201;881:41:96;;;26521:21:201;26578:2;26558:18;;;26551:30;26617:33;26597:18;;;26590:61;26668:18;;881:41:96;26337:355:201;817:356:96;952:30;943:5;:39;;;;;;;;:::i;:::-;;939:234;;998:44;;-1:-1:-1;;;998:44:96;;26899:2:201;998:44:96;;;26881:21:201;26938:2;26918:18;;;26911:30;26977:34;26957:18;;;26950:62;-1:-1:-1;;;27028:18:201;;;27021:32;27070:19;;998:44:96;26697:398:201;939:234:96;1072:30;1063:5;:39;;;;;;;;:::i;:::-;;1059:114;;1118:44;;-1:-1:-1;;;1118:44:96;;27302:2:201;1118:44:96;;;27284:21:201;27341:2;27321:18;;;27314:30;27380:34;27360:18;;;27353:62;-1:-1:-1;;;27431:18:201;;;27424:32;27473:19;;1118:44:96;27100:398:201;2125:526:57;2261:14;2466:1;2439:23;;;2438:29;:34;;2434:211;;2521:24;2531:4;2537:7;2521:9;:24::i;:::-;2514:31;;;;2434:211;2610:24;2620:7;2629:4;2610:9;:24::i;5167:1603:96:-;5293:7;;6217:66;6204:79;;6200:161;;;-1:-1:-1;6315:1:96;;-1:-1:-1;6319:30:96;6299:51;;6200:161;6374:1;:7;;6379:2;6374:7;;:18;;;;;6385:1;:7;;6390:2;6385:7;;6374:18;6370:100;;;-1:-1:-1;6424:1:96;;-1:-1:-1;6428:30:96;6408:51;;6370:100;6581:24;;;6564:14;6581:24;;;;;;;;;27730:25:201;;;27803:4;27791:17;;27771:18;;;27764:45;;;;27825:18;;;27818:34;;;27868:18;;;27861:34;;;6581:24:96;;27702:19:201;;6581:24:96;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6581:24:96;;-1:-1:-1;;6581:24:96;;;-1:-1:-1;;;;;;;6619:20:96;;6615:101;;6671:1;6675:29;6655:50;;;;;;;6615:101;6734:6;-1:-1:-1;6742:20:96;;-1:-1:-1;5167:1603:96;;;;;;;;:::o;14:127:201:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:201;247:40;;-1:-1:-1;;;;;302:34:201;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:201:o;426:530::-;468:5;521:3;514:4;506:6;502:17;498:27;488:55;;539:1;536;529:12;488:55;575:6;562:20;-1:-1:-1;;;;;597:2:201;594:26;591:52;;;623:18;;:::i;:::-;667:55;710:2;691:13;;-1:-1:-1;;687:27:201;716:4;683:38;667:55;:::i;:::-;747:2;738:7;731:19;793:3;786:4;781:2;773:6;769:15;765:26;762:35;759:55;;;810:1;807;800:12;759:55;875:2;868:4;860:6;856:17;849:4;840:7;836:18;823:55;923:1;898:16;;;916:4;894:27;887:38;;;;902:7;426:530;-1:-1:-1;;;426:530:201:o;961:1005::-;1092:6;1100;1108;1116;1124;1177:3;1165:9;1156:7;1152:23;1148:33;1145:53;;;1194:1;1191;1184:12;1145:53;1230:9;1217:23;1207:33;;1291:2;1280:9;1276:18;1263:32;-1:-1:-1;;;;;1355:2:201;1347:6;1344:14;1341:34;;;1371:1;1368;1361:12;1341:34;1394:49;1435:7;1426:6;1415:9;1411:22;1394:49;:::i;:::-;1384:59;;1496:2;1485:9;1481:18;1468:32;1452:48;;1525:2;1515:8;1512:16;1509:36;;;1541:1;1538;1531:12;1509:36;1564:51;1607:7;1596:8;1585:9;1581:24;1564:51;:::i;:::-;1554:61;;1668:2;1657:9;1653:18;1640:32;1624:48;;1697:2;1687:8;1684:16;1681:36;;;1713:1;1710;1703:12;1681:36;1736:51;1779:7;1768:8;1757:9;1753:24;1736:51;:::i;:::-;1726:61;;1840:3;1829:9;1825:19;1812:33;1796:49;;1870:2;1860:8;1857:16;1854:36;;;1886:1;1883;1876:12;1854:36;;1909:51;1952:7;1941:8;1930:9;1926:24;1909:51;:::i;:::-;1899:61;;;961:1005;;;;;;;;:::o;2163:183::-;2223:4;-1:-1:-1;;;;;2248:6:201;2245:30;2242:56;;;2278:18;;:::i;:::-;-1:-1:-1;2323:1:201;2319:14;2335:4;2315:25;;2163:183::o;2351:662::-;2405:5;2458:3;2451:4;2443:6;2439:17;2435:27;2425:55;;2476:1;2473;2466:12;2425:55;2512:6;2499:20;2538:4;2562:60;2578:43;2618:2;2578:43;:::i;:::-;2562:60;:::i;:::-;2656:15;;;2742:1;2738:10;;;;2726:23;;2722:32;;;2687:12;;;;2766:15;;;2763:35;;;2794:1;2791;2784:12;2763:35;2830:2;2822:6;2818:15;2842:142;2858:6;2853:3;2850:15;2842:142;;;2924:17;;2912:30;;2962:12;;;;2875;;2842:142;;;-1:-1:-1;3002:5:201;2351:662;-1:-1:-1;;;;;;2351:662:201:o;3018:1232::-;3183:6;3191;3199;3207;3215;3223;3276:3;3264:9;3255:7;3251:23;3247:33;3244:53;;;3293:1;3290;3283:12;3244:53;3329:9;3316:23;3306:33;;3390:2;3379:9;3375:18;3362:32;-1:-1:-1;;;;;3454:2:201;3446:6;3443:14;3440:34;;;3470:1;3467;3460:12;3440:34;3493:49;3534:7;3525:6;3514:9;3510:22;3493:49;:::i;:::-;3483:59;;3595:2;3584:9;3580:18;3567:32;3551:48;;3624:2;3614:8;3611:16;3608:36;;;3640:1;3637;3630:12;3608:36;3663:51;3706:7;3695:8;3684:9;3680:24;3663:51;:::i;:::-;3653:61;;3767:2;3756:9;3752:18;3739:32;3723:48;;3796:2;3786:8;3783:16;3780:36;;;3812:1;3809;3802:12;3780:36;3835:63;3890:7;3879:8;3868:9;3864:24;3835:63;:::i;:::-;3825:73;;3951:3;3940:9;3936:19;3923:33;3907:49;;3981:2;3971:8;3968:16;3965:36;;;3997:1;3994;3987:12;3965:36;4020:51;4063:7;4052:8;4041:9;4037:24;4020:51;:::i;:::-;4010:61;;4124:3;4113:9;4109:19;4096:33;4080:49;;4154:2;4144:8;4141:16;4138:36;;;4170:1;4167;4160:12;4138:36;;4193:51;4236:7;4225:8;4214:9;4210:24;4193:51;:::i;:::-;4183:61;;;3018:1232;;;;;;;;:::o;4255:806::-;4368:6;4376;4384;4392;4445:3;4433:9;4424:7;4420:23;4416:33;4413:53;;;4462:1;4459;4452:12;4413:53;4498:9;4485:23;4475:33;;4559:2;4548:9;4544:18;4531:32;-1:-1:-1;;;;;4623:2:201;4615:6;4612:14;4609:34;;;4639:1;4636;4629:12;4609:34;4662:49;4703:7;4694:6;4683:9;4679:22;4662:49;:::i;:::-;4652:59;;4764:2;4753:9;4749:18;4736:32;4720:48;;4793:2;4783:8;4780:16;4777:36;;;4809:1;4806;4799:12;4777:36;4832:51;4875:7;4864:8;4853:9;4849:24;4832:51;:::i;:::-;4822:61;;4936:2;4925:9;4921:18;4908:32;4892:48;;4965:2;4955:8;4952:16;4949:36;;;4981:1;4978;4971:12;4949:36;;5004:51;5047:7;5036:8;5025:9;5021:24;5004:51;:::i;:::-;4994:61;;;4255:806;;;;;;;:::o;5066:607::-;5161:6;5169;5177;5230:2;5218:9;5209:7;5205:23;5201:32;5198:52;;;5246:1;5243;5236:12;5198:52;5282:9;5269:23;5259:33;;5343:2;5332:9;5328:18;5315:32;-1:-1:-1;;;;;5407:2:201;5399:6;5396:14;5393:34;;;5423:1;5420;5413:12;5393:34;5446:49;5487:7;5478:6;5467:9;5463:22;5446:49;:::i;:::-;5436:59;;5548:2;5537:9;5533:18;5520:32;5504:48;;5577:2;5567:8;5564:16;5561:36;;;5593:1;5590;5583:12;5561:36;;5616:51;5659:7;5648:8;5637:9;5633:24;5616:51;:::i;:::-;5606:61;;;5066:607;;;;;:::o;5678:423::-;5720:3;5758:5;5752:12;5785:6;5780:3;5773:19;5810:1;5820:162;5834:6;5831:1;5828:13;5820:162;;;5896:4;5952:13;;;5948:22;;5942:29;5924:11;;;5920:20;;5913:59;5849:12;5820:162;;;5824:3;6027:1;6020:4;6011:6;6006:3;6002:16;5998:27;5991:38;6090:4;6083:2;6079:7;6074:2;6066:6;6062:15;6058:29;6053:3;6049:39;6045:50;6038:57;;;5678:423;;;;:::o;6106:220::-;6255:2;6244:9;6237:21;6218:4;6275:45;6316:2;6305:9;6301:18;6293:6;6275:45;:::i;6331:639::-;6441:6;6449;6502:2;6490:9;6481:7;6477:23;6473:32;6470:52;;;6518:1;6515;6508:12;6470:52;6558:9;6545:23;-1:-1:-1;;;;;6628:2:201;6620:6;6617:14;6614:34;;;6644:1;6641;6634:12;6614:34;6682:6;6671:9;6667:22;6657:32;;6727:7;6720:4;6716:2;6712:13;6708:27;6698:55;;6749:1;6746;6739:12;6698:55;6789:2;6776:16;6815:2;6807:6;6804:14;6801:34;;;6831:1;6828;6821:12;6801:34;6884:7;6879:2;6869:6;6866:1;6862:14;6858:2;6854:23;6850:32;6847:45;6844:65;;;6905:1;6902;6895:12;6844:65;6936:2;6928:11;;;;;6958:6;;-1:-1:-1;6331:639:201;;-1:-1:-1;;;;6331:639:201:o;6975:1041::-;7165:4;7194:2;7234;7223:9;7219:18;7264:2;7253:9;7246:21;7287:6;7322;7316:13;7353:6;7345;7338:22;7379:2;7369:12;;7412:2;7401:9;7397:18;7390:25;;7474:2;7464:6;7461:1;7457:14;7446:9;7442:30;7438:39;7512:2;7504:6;7500:15;7533:1;7543:444;7557:6;7554:1;7551:13;7543:444;;;7622:22;;;-1:-1:-1;;7618:36:201;7606:49;;7678:13;;7733:9;;7726:17;7719:25;7704:41;;7784:11;;7778:18;7816:15;;;7809:27;;;7859:48;7891:15;;;7778:18;7859:48;:::i;:::-;7965:12;;;;7849:58;-1:-1:-1;;7930:15:201;;;;7579:1;7572:9;7543:444;;;-1:-1:-1;8004:6:201;;6975:1041;-1:-1:-1;;;;;;;;6975:1041:201:o;8021:1377::-;8150:6;8158;8166;8174;8227:3;8215:9;8206:7;8202:23;8198:33;8195:53;;;8244:1;8241;8234:12;8195:53;8284:9;8271:23;-1:-1:-1;;;;;8354:2:201;8346:6;8343:14;8340:34;;;8370:1;8367;8360:12;8340:34;8393:49;8434:7;8425:6;8414:9;8410:22;8393:49;:::i;:::-;8383:59;;8461:2;8451:12;;8516:2;8505:9;8501:18;8488:32;8545:2;8535:8;8532:16;8529:36;;;8561:1;8558;8551:12;8529:36;8584:51;8627:7;8616:8;8605:9;8601:24;8584:51;:::i;:::-;8574:61;;;8682:2;8671:9;8667:18;8654:32;8644:42;;8739:2;8728:9;8724:18;8711:32;8768:2;8758:8;8755:16;8752:36;;;8784:1;8781;8774:12;8752:36;8807:24;;;-1:-1:-1;8862:4:201;8854:13;;8850:27;-1:-1:-1;8840:55:201;;8891:1;8888;8881:12;8840:55;8927:2;8914:16;8950:60;8966:43;9006:2;8966:43;:::i;8950:60::-;9044:15;;;9126:1;9122:10;;;;9114:19;;9110:28;;;9075:12;;;;9150:19;;;9147:39;;;9182:1;9179;9172:12;9147:39;9206:11;;;;9226:142;9242:6;9237:3;9234:15;9226:142;;;9308:17;;9296:30;;9259:12;;;;9346;;;;9226:142;;;8021:1377;;;;-1:-1:-1;8021:1377:201;;-1:-1:-1;;;;;;8021:1377:201:o;9793:737::-;9897:6;9905;9913;9966:2;9954:9;9945:7;9941:23;9937:32;9934:52;;;9982:1;9979;9972:12;9934:52;10022:9;10009:23;-1:-1:-1;;;;;10092:2:201;10084:6;10081:14;10078:34;;;10108:1;10105;10098:12;10078:34;10131:49;10172:7;10163:6;10152:9;10148:22;10131:49;:::i;:::-;10121:59;;10233:2;10222:9;10218:18;10205:32;10189:48;;10262:2;10252:8;10249:16;10246:36;;;10278:1;10275;10268:12;10535:1033;10682:6;10690;10698;10706;10714;10767:3;10755:9;10746:7;10742:23;10738:33;10735:53;;;10784:1;10781;10774:12;10735:53;10820:9;10807:23;10797:33;;10881:2;10870:9;10866:18;10853:32;-1:-1:-1;;;;;10945:2:201;10937:6;10934:14;10931:34;;;10961:1;10958;10951:12;10931:34;10984:49;11025:7;11016:6;11005:9;11001:22;10984:49;:::i;:::-;10974:59;;11086:2;11075:9;11071:18;11058:32;11042:48;;11115:2;11105:8;11102:16;11099:36;;;11131:1;11128;11121:12;11099:36;11154:63;11209:7;11198:8;11187:9;11183:24;11154:63;:::i;11770:539::-;11856:6;11864;11917:2;11905:9;11896:7;11892:23;11888:32;11885:52;;;11933:1;11930;11923:12;11885:52;11973:9;11960:23;-1:-1:-1;;;;;12043:2:201;12035:6;12032:14;12029:34;;;12059:1;12056;12049:12;12029:34;12082:49;12123:7;12114:6;12103:9;12099:22;12082:49;:::i;:::-;12072:59;;12184:2;12173:9;12169:18;12156:32;12140:48;;12213:2;12203:8;12200:16;12197:36;;;12229:1;12226;12219:12;12197:36;;12252:51;12295:7;12284:8;12273:9;12269:24;12252:51;:::i;:::-;12242:61;;;11770:539;;;;;:::o;12314:173::-;12382:20;;-1:-1:-1;;;;;12431:31:201;;12421:42;;12411:70;;12477:1;12474;12467:12;12492:334;12569:6;12577;12585;12638:2;12626:9;12617:7;12613:23;12609:32;12606:52;;;12654:1;12651;12644:12;12606:52;12677:29;12696:9;12677:29;:::i;:::-;12667:39;;12725:38;12759:2;12748:9;12744:18;12725:38;:::i;:::-;12715:48;;12782:38;12816:2;12805:9;12801:18;12782:38;:::i;:::-;12772:48;;12492:334;;;;;:::o;12831:180::-;12890:6;12943:2;12931:9;12922:7;12918:23;12914:32;12911:52;;;12959:1;12956;12949:12;12911:52;-1:-1:-1;12982:23:201;;12831:180;-1:-1:-1;12831:180:201:o;13016:379::-;13209:2;13198:9;13191:21;13172:4;13235:45;13276:2;13265:9;13261:18;13253:6;13235:45;:::i;:::-;13328:9;13320:6;13316:22;13311:2;13300:9;13296:18;13289:50;13356:33;13382:6;13374;13356:33;:::i;13623:186::-;13682:6;13735:2;13723:9;13714:7;13710:23;13706:32;13703:52;;;13751:1;13748;13741:12;13703:52;13774:29;13793:9;13774:29;:::i;14110:277::-;14177:6;14230:2;14218:9;14209:7;14205:23;14201:32;14198:52;;;14246:1;14243;14236:12;14198:52;14278:9;14272:16;14331:5;14324:13;14317:21;14310:5;14307:32;14297:60;;14353:1;14350;14343:12;14392:613;14659:6;14648:9;14641:25;14702:3;14697:2;14686:9;14682:18;14675:31;14622:4;14729:46;14770:3;14759:9;14755:19;14747:6;14729:46;:::i;:::-;14823:9;14815:6;14811:22;14806:2;14795:9;14791:18;14784:50;14857:33;14883:6;14875;14857:33;:::i;:::-;14843:47;;14938:9;14930:6;14926:22;14921:2;14910:9;14906:18;14899:50;14966:33;14992:6;14984;14966:33;:::i;15010:390::-;15240:10;15228:23;;;;15210:42;;-1:-1:-1;;;;;15326:15:201;;;15321:2;15306:18;;15299:43;15378:15;15373:2;15358:18;;15351:43;15198:2;15183:18;;15010:390::o;15405:450::-;15626:6;15615:9;15608:25;15669:2;15664;15653:9;15649:18;15642:30;15589:4;15695:45;15736:2;15725:9;15721:18;15713:6;15695:45;:::i;:::-;15788:9;15780:6;15776:22;15771:2;15760:9;15756:18;15749:50;15816:33;15842:6;15834;15816:33;:::i;:::-;15808:41;15405:450;-1:-1:-1;;;;;;15405:450:201:o;15860:127::-;15921:10;15916:3;15912:20;15909:1;15902:31;15952:4;15949:1;15942:15;15976:4;15973:1;15966:15;15992:321;16082:4;16140:11;16127:25;16234:2;16230:7;16219:8;16203:14;16199:29;16195:43;16175:18;16171:68;16161:96;;16253:1;16250;16243:12;16161:96;16274:33;;;;;15992:321;-1:-1:-1;;15992:321:201:o;16318:521::-;16395:4;16401:6;16461:11;16448:25;16555:2;16551:7;16540:8;16524:14;16520:29;16516:43;16496:18;16492:68;16482:96;;16574:1;16571;16564:12;16482:96;16601:33;;16653:20;;;-1:-1:-1;;;;;;16685:30:201;;16682:50;;;16728:1;16725;16718:12;16682:50;16761:4;16749:17;;-1:-1:-1;16792:14:201;16788:27;;;16778:38;;16775:58;;;16829:1;16826;16819:12;16844:271;17027:6;17019;17014:3;17001:33;16983:3;17053:16;;17078:13;;;17053:16;16844:271;-1:-1:-1;16844:271:201:o;17120:1063::-;17469:10;17461:6;17457:23;17446:9;17439:42;17420:4;17500:2;17538:6;17533:2;17522:9;17518:18;17511:34;17581:3;17576:2;17565:9;17561:18;17554:31;17608:46;17649:3;17638:9;17634:19;17626:6;17608:46;:::i;:::-;17685:2;17670:18;;17663:34;;;17734:22;;;17728:3;17713:19;;17706:51;17806:13;;17828:22;;;17904:15;;;;17866;;;-1:-1:-1;17947:210:201;17961:6;17958:1;17955:13;17947:210;;;18026:13;;-1:-1:-1;;;;;18022:54:201;18010:67;;18132:15;;;;18097:12;;;;17983:1;17976:9;17947:210;;;-1:-1:-1;18174:3:201;;17120:1063;-1:-1:-1;;;;;;;;;;17120:1063:201:o;18188:564::-;18447:10;18435:23;;18417:42;;-1:-1:-1;;;;;18495:32:201;;18490:2;18475:18;;18468:60;18564:3;18559:2;18544:18;;18537:31;;;-1:-1:-1;;18591:46:201;;18617:19;;18609:6;18591:46;:::i;:::-;18685:9;18677:6;18673:22;18668:2;18657:9;18653:18;18646:50;18713:33;18739:6;18731;18713:33;:::i;19317:380::-;19396:1;19392:12;;;;19439;;;19460:61;;19514:4;19506:6;19502:17;19492:27;;19460:61;19567:2;19559:6;19556:14;19536:18;19533:38;19530:161;;19613:10;19608:3;19604:20;19601:1;19594:31;19648:4;19645:1;19638:15;19676:4;19673:1;19666:15;20109:127;20170:10;20165:3;20161:20;20158:1;20151:31;20201:4;20198:1;20191:15;20225:4;20222:1;20215:15;20241:125;20306:9;;;20327:10;;;20324:36;;;20340:18;;:::i;20371:168::-;20444:9;;;20475;;20492:15;;;20486:22;;20472:37;20462:71;;20513:18;;:::i;20544:127::-;20605:10;20600:3;20596:20;20593:1;20586:31;20636:4;20633:1;20626:15;20660:4;20657:1;20650:15;20676:135;20715:3;20736:17;;;20733:43;;20756:18;;:::i;:::-;-1:-1:-1;20803:1:201;20792:13;;20676:135::o;20816:128::-;20883:9;;;20904:11;;;20901:37;;;20918:18;;:::i;21074:544::-;21175:2;21170:3;21167:11;21164:448;;;21211:1;21236:5;21232:2;21225:17;21281:4;21277:2;21267:19;21351:2;21339:10;21335:19;21332:1;21328:27;21322:4;21318:38;21387:4;21375:10;21372:20;21369:47;;;-1:-1:-1;21410:4:201;21369:47;21465:2;21460:3;21456:12;21453:1;21449:20;21443:4;21439:31;21429:41;;21520:82;21538:2;21531:5;21528:13;21520:82;;;21583:17;;;21564:1;21553:13;21520:82;;21794:1348;21918:3;21912:10;-1:-1:-1;;;;;21937:6:201;21934:30;21931:56;;;21967:18;;:::i;:::-;21996:96;22085:6;22045:38;22077:4;22071:11;22045:38;:::i;:::-;22039:4;21996:96;:::i;:::-;22147:4;;22211:2;22200:14;;22228:1;22223:662;;;;22929:1;22946:6;22943:89;;;-1:-1:-1;22998:19:201;;;22992:26;22943:89;-1:-1:-1;;21751:1:201;21747:11;;;21743:24;21739:29;21729:40;21775:1;21771:11;;;21726:57;23045:81;;22193:943;;22223:662;21021:1;21014:14;;;21058:4;21045:18;;-1:-1:-1;;22259:20:201;;;22376:236;22390:7;22387:1;22384:14;22376:236;;;22479:19;;;22473:26;22458:42;;22571:27;;;;22539:1;22527:14;;;;22406:19;;22376:236;;;22380:3;22640:6;22631:7;22628:19;22625:201;;;22701:19;;;22695:26;-1:-1:-1;;22784:1:201;22780:14;;;22796:3;22776:24;22772:37;22768:42;22753:58;22738:74;;22625:201;-1:-1:-1;;;;;22872:1:201;22856:14;;;22852:22;22839:36;;-1:-1:-1;21794:1348:201:o;23399:410::-;23601:2;23583:21;;;23640:2;23620:18;;;23613:30;23679:34;23674:2;23659:18;;23652:62;-1:-1:-1;;;23745:2:201;23730:18;;23723:44;23799:3;23784:19;;23399:410::o;23814:407::-;24016:2;23998:21;;;24055:2;24035:18;;;24028:30;24094:34;24089:2;24074:18;;24067:62;-1:-1:-1;;;24160:2:201;24145:18;;24138:41;24211:3;24196:19;;23814:407::o;24226:167::-;24304:13;;24357:10;24346:22;;24336:33;;24326:61;;24383:1;24380;24373:12;24398:687;24498:6;24551:2;24539:9;24530:7;24526:23;24522:32;24519:52;;;24567:1;24564;24557:12;24519:52;24600:2;24594:9;24642:2;24634:6;24630:15;24711:6;24699:10;24696:22;-1:-1:-1;;;;;24663:10:201;24660:34;24657:62;24654:88;;;24722:18;;:::i;:::-;24758:2;24751:22;24795:16;;24840:1;24830:12;;24820:40;;24856:1;24853;24846:12;24820:40;24869:21;;24923:48;24967:2;24952:18;;24923:48;:::i;:::-;24918:2;24910:6;24906:15;24899:73;25005:48;25049:2;25038:9;25034:18;25005:48;:::i;:::-;25000:2;24988:15;;24981:73;24992:6;24398:687;-1:-1:-1;;;24398:687:201:o;25090:217::-;25130:1;25156;25146:132;;25200:10;25195:3;25191:20;25188:1;25181:31;25235:4;25232:1;25225:15;25263:4;25260:1;25253:15;25146:132;-1:-1:-1;25292:9:201;;25090:217::o",
    "linkReferences": {},
    "immutableReferences": {
      "2822": [
        {
          "start": 726,
          "length": 32
        },
        {
          "start": 5930,
          "length": 32
        },
        {
          "start": 5985,
          "length": 32
        }
      ],
      "2954": [
        {
          "start": 458,
          "length": 32
        }
      ],
      "2957": [
        {
          "start": 493,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "agentManager()": "7622f78d",
    "destination()": "b269681d",
    "getGuardReport(uint256)": "c495912b",
    "getReportsAmount()": "756ed01d",
    "getStoredSignature(uint256)": "ddeffa66",
    "initialize(address,address,address)": "c0c53b8b",
    "localDomain()": "8d3638f4",
    "multicall((bool,bytes)[])": "60fc8466",
    "origin()": "938b5f32",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "submitAttestation(bytes,bytes,bytes32,uint256[])": "6c38f723",
    "submitAttestationReport(bytes,bytes,bytes)": "77ec5c10",
    "submitStateReportWithAttestation(uint256,bytes,bytes,bytes,bytes)": "0b6b985c",
    "submitStateReportWithSnapshot(uint256,bytes,bytes,bytes)": "62389709",
    "submitStateReportWithSnapshotProof(uint256,bytes,bytes,bytes32[],bytes,bytes)": "0db27e77",
    "transferOwnership(address)": "f2fde38b",
    "verifyReceipt(bytes,bytes)": "c25aa585",
    "verifyReceiptReport(bytes,bytes)": "91af2e5d",
    "verifyStateReport(bytes,bytes)": "dfe39675",
    "verifyStateWithAttestation(uint256,bytes,bytes,bytes)": "200f6b66",
    "verifyStateWithSnapshot(uint256,bytes,bytes)": "213a6ddb",
    "verifyStateWithSnapshotProof(uint256,bytes,bytes32[],bytes,bytes)": "7be8e738",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AgentNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AgentNotActiveNorUnstaking\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AgentNotGuard\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AgentNotNotary\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AgentUnknown\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectAgentDomain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectDataHash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectSnapshotProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectSnapshotRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectVersionLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexedTooMuch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OccupiedMemory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PrecompileOutOfGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SynapseDomainForbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TreeHeightTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnallocatedMemory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnformattedAttestation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnformattedReceipt\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnformattedSnapshot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnformattedState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ViewOverrun\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"name\":\"AttestationAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"rcptPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"rcptSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidReceipt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"rrPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"rrSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidReceiptReport\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidStateReport\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"statePayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidStateWithAttestation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"snapSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidStateWithSnapshot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"agentManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getGuardReport\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"statementPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"reportSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReportsAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStoredSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agentManager_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destination_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localDomain\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct MultiCallable.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"multicall\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct MultiCallable.Result[]\",\"name\":\"callResults\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"origin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"agentRoot_\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"snapGas_\",\"type\":\"uint256[]\"}],\"name\":\"submitAttestation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"wasAccepted\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"arSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"name\":\"submitAttestationReport\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"wasAccepted\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"srSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"name\":\"submitStateReportWithAttestation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"wasAccepted\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"srSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"snapSignature\",\"type\":\"bytes\"}],\"name\":\"submitStateReportWithSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"wasAccepted\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"statePayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"srSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"snapProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"name\":\"submitStateReportWithSnapshotProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"wasAccepted\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"rcptPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"rcptSignature\",\"type\":\"bytes\"}],\"name\":\"verifyReceipt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValidReceipt\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"rcptPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"rrSignature\",\"type\":\"bytes\"}],\"name\":\"verifyReceiptReport\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValidReport\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"statePayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"srSignature\",\"type\":\"bytes\"}],\"name\":\"verifyStateReport\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValidReport\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"name\":\"verifyStateWithAttestation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValidState\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"snapSignature\",\"type\":\"bytes\"}],\"name\":\"verifyStateWithSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValidState\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"statePayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"snapProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"name\":\"verifyStateWithSnapshotProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValidState\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"versionString\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getGuardReport(uint256)\":{\"details\":\"Will revert if report with given index doesn't exist.\",\"params\":{\"index\":\"Report index\"},\"returns\":{\"reportSignature\":\" Guard signature for the report\",\"statementPayload\":\"Raw payload with statement that Guard reported as invalid\"}},\"getStoredSignature(uint256)\":{\"details\":\"Will revert if signature with given index doesn't exist.\",\"params\":{\"index\":\"Signature index\"},\"returns\":{\"_0\":\"Raw payload with signature\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Should be impossible to renounce ownership; we override OpenZeppelin OwnableUpgradeable's implementation of renounceOwnership to make it a no-op\"},\"submitAttestation(bytes,bytes,bytes32,uint256[])\":{\"params\":{\"agentRoot\":\"Agent Merkle Root from the Attestation\",\"attPayload\":\"Raw payload with Attestation data\",\"attSignature\":\"Notary signature for the attestation\",\"snapGas\":\"Gas data for each chain in the snapshot\"},\"returns\":{\"wasAccepted\":\"     Whether the Attestation was accepted\"}},\"submitAttestationReport(bytes,bytes,bytes)\":{\"params\":{\"arSignature\":\"Guard signature for the report\",\"attPayload\":\"Raw payload with Attestation data that Guard reports as invalid\",\"attSignature\":\"Notary signature for the reported attestation\"},\"returns\":{\"wasAccepted\":\"     Whether the Report was accepted (resulting in Dispute between the agents)\"}},\"submitStateReportWithAttestation(uint256,bytes,bytes,bytes,bytes)\":{\"params\":{\"attPayload\":\"Raw payload with Attestation data\",\"attSignature\":\"Notary signature for the Attestation\",\"snapPayload\":\"Raw payload with Snapshot data\",\"srSignature\":\"Guard signature for the report\",\"stateIndex\":\"Index of the reported State in the Snapshot\"},\"returns\":{\"wasAccepted\":\"     Whether the Report was accepted (resulting in Dispute between the agents)\"}},\"submitStateReportWithSnapshot(uint256,bytes,bytes,bytes)\":{\"params\":{\"snapPayload\":\"Raw payload with Snapshot data\",\"snapSignature\":\"Notary signature for the Snapshot\",\"srSignature\":\"Guard signature for the report\",\"stateIndex\":\"Index of the reported State in the Snapshot\"},\"returns\":{\"wasAccepted\":\"     Whether the Report was accepted (resulting in Dispute between the agents)\"}},\"submitStateReportWithSnapshotProof(uint256,bytes,bytes,bytes32[],bytes,bytes)\":{\"params\":{\"attPayload\":\"Raw payload with Attestation data\",\"attSignature\":\"Notary signature for the Attestation\",\"snapProof\":\"Proof of inclusion of reported State's Left Leaf into Snapshot Merkle Tree\",\"srSignature\":\"Guard signature for the report\",\"stateIndex\":\"Index of the reported State in the Snapshot\",\"statePayload\":\"Raw payload with State data that Guard reports as invalid\"},\"returns\":{\"wasAccepted\":\"     Whether the Report was accepted (resulting in Dispute between the agents)\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"verifyReceipt(bytes,bytes)\":{\"params\":{\"rcptPayload\":\"Raw payload with Receipt data\",\"rcptSignature\":\"Notary signature for the receipt\"},\"returns\":{\"isValidReceipt\":\"  Whether the provided receipt is valid.                          Notary is slashed, if return value is FALSE.\"}},\"verifyReceiptReport(bytes,bytes)\":{\"params\":{\"rcptPayload\":\"Raw payload with Receipt data that Guard reports as invalid\",\"rrSignature\":\"Guard signature for the report\"},\"returns\":{\"isValidReport\":\"   Whether the provided report is valid.                          Guard is slashed, if return value is FALSE.\"}},\"verifyStateReport(bytes,bytes)\":{\"params\":{\"srSignature\":\"Guard signature for the report\",\"statePayload\":\"Raw payload with State data that Guard reports as invalid\"},\"returns\":{\"isValidReport\":\"   Whether the provided report is valid.                          Guard is slashed, if return value is FALSE.\"}},\"verifyStateWithAttestation(uint256,bytes,bytes,bytes)\":{\"params\":{\"attPayload\":\"Raw payload with Attestation data\",\"attSignature\":\"Notary signature for the attestation\",\"snapPayload\":\"Raw payload with snapshot data\",\"stateIndex\":\"State index to check\"},\"returns\":{\"isValidState\":\"    Whether the provided state is valid.                          Notary is slashed, if return value is FALSE.\"}},\"verifyStateWithSnapshot(uint256,bytes,bytes)\":{\"params\":{\"snapPayload\":\"Raw payload with snapshot data\",\"snapSignature\":\"Agent signature for the snapshot\",\"stateIndex\":\"State index to check\"},\"returns\":{\"isValidState\":\"    Whether the provided state is valid.                          Agent is slashed, if return value is FALSE.\"}},\"verifyStateWithSnapshotProof(uint256,bytes,bytes32[],bytes,bytes)\":{\"params\":{\"attPayload\":\"Raw payload with Attestation data\",\"attSignature\":\"Notary signature for the attestation\",\"snapProof\":\"Proof of inclusion of provided State's Left Leaf into Snapshot Merkle Tree\",\"stateIndex\":\"Index of state in the snapshot\",\"statePayload\":\"Raw payload with State data to check\"},\"returns\":{\"isValidState\":\"    Whether the provided state is valid.                          Notary is slashed, if return value is FALSE.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AttestationAccepted(uint32,address,bytes,bytes)\":{\"notice\":\"Emitted when a snapshot is accepted by the Destination contract.\"},\"InvalidReceipt(bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid receipt statement is submitted.\"},\"InvalidReceiptReport(bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid receipt report is submitted.\"},\"InvalidStateReport(bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid state report is submitted.\"},\"InvalidStateWithAttestation(uint256,bytes,bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid state in the signed attestation is submitted.\"},\"InvalidStateWithSnapshot(uint256,bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid state in the signed snapshot is submitted.\"}},\"kind\":\"user\",\"methods\":{\"getGuardReport(uint256)\":{\"notice\":\"Returns the Guard report with the given index stored in StatementInbox. > Only reports that led to opening a Dispute are stored.\"},\"getReportsAmount()\":{\"notice\":\"Returns the amount of Guard Reports stored in StatementInbox. > Only reports that led to opening a Dispute are stored.\"},\"getStoredSignature(uint256)\":{\"notice\":\"Returns the signature with the given index stored in StatementInbox.\"},\"initialize(address,address,address)\":{\"notice\":\"Initializes `LightInbox` contract: - Sets `msg.sender` as the owner of the contract - Sets `agentManager`, `origin` and `destination` addresses\"},\"localDomain()\":{\"notice\":\"Domain of the local chain, set once upon contract creation\"},\"multicall((bool,bytes)[])\":{\"notice\":\"Aggregates a few calls to this contract into one multicall without modifying `msg.sender`.\"},\"submitAttestation(bytes,bytes,bytes32,uint256[])\":{\"notice\":\"Accepts an attestation signed by a Notary and passes it to Destination contract to save. > Attestation is created whenever a Notary-signed snapshot is saved in Summit on Synapse Chain. - Saved Attestation could be later used to prove the inclusion of message in the Origin Merkle Tree. - Messages coming from chains included in the Attestation's snapshot could be proven. - Proof only exists for messages that were sent prior to when the Attestation's snapshot was taken. > Will revert if any of these is true: > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary for local domain. > - Attestation signer is in Dispute. > - Attestation's snapshot root has been previously submitted. > - Attestation's data hash doesn't match the hash of provided agentRoot and snapshot gas data.\"},\"submitAttestationReport(bytes,bytes,bytes)\":{\"notice\":\"Accepts a Guard's attestation report signature, as well as Notary signature for the reported Attestation. > AttestationReport is a Guard statement saying \\\"Reported attestation is invalid\\\". - This results in an opened Dispute between the Guard and the Notary. - Note: Guard could (but doesn't have to) form a AttestationReport and use attestation signature from `verifyAttestation()` successful call that led to Notary being slashed in Summit on Synapse Chain. > Will revert if any of these is true: > - Attestation payload is not properly formatted. > - Attestation Report signer is not an active Guard. > - Attestation signer is not an active Notary for local domain.\"},\"submitStateReportWithAttestation(uint256,bytes,bytes,bytes,bytes)\":{\"notice\":\"Accepts a Guard's state report signature, a Snapshot containing the reported State, as well as Notary signature for the Attestation created from this Snapshot. > StateReport is a Guard statement saying \\\"Reported state is invalid\\\". - This results in an opened Dispute between the Guard and the Notary. - Note: Guard could (but doesn't have to) form a StateReport and use other values from `verifyStateWithAttestation()` successful call that led to Notary being slashed in remote Origin. > Will revert if any of these is true: > - State Report signer is not an active Guard. > - Snapshot payload is not properly formatted. > - State index is out of range. > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary. > - Attestation's snapshot root is not equal to Merkle Root derived from the Snapshot. > - The Guard or the Notary are already in a Dispute\"},\"submitStateReportWithSnapshot(uint256,bytes,bytes,bytes)\":{\"notice\":\"Accepts a Guard's state report signature, a Snapshot containing the reported State, as well as Notary signature for the Snapshot. > StateReport is a Guard statement saying \\\"Reported state is invalid\\\". - This results in an opened Dispute between the Guard and the Notary. - Note: Guard could (but doesn't have to) form a StateReport and use other values from `verifyStateWithSnapshot()` successful call that led to Notary being slashed in remote Origin. > Will revert if any of these is true: > - State Report signer is not an active Guard. > - Snapshot payload is not properly formatted. > - Snapshot signer is not an active Notary. > - State index is out of range. > - The Guard or the Notary are already in a Dispute\"},\"submitStateReportWithSnapshotProof(uint256,bytes,bytes,bytes32[],bytes,bytes)\":{\"notice\":\"Accepts a Guard's state report signature, a proof of inclusion of the reported State in an Attestation, as well as Notary signature for the Attestation. > StateReport is a Guard statement saying \\\"Reported state is invalid\\\". - This results in an opened Dispute between the Guard and the Notary. - Note: Guard could (but doesn't have to) form a StateReport and use other values from `verifyStateWithSnapshotProof()` successful call that led to Notary being slashed in remote Origin. > Will revert if any of these is true: > - State payload is not properly formatted. > - State Report signer is not an active Guard. > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary. > - Attestation's snapshot root is not equal to Merkle Root derived from State and Snapshot Proof. > - Snapshot Proof's first element does not match the State metadata. > - Snapshot Proof length exceeds Snapshot Tree Height. > - State index is out of range. > - The Guard or the Notary are already in a Dispute\"},\"verifyReceipt(bytes,bytes)\":{\"notice\":\"Verifies a message receipt signed by the Notary. - Does nothing, if the receipt is valid (matches the saved receipt data for the referenced message). - Slashes the Notary, if the receipt is invalid. > Will revert if any of these is true: > - Receipt payload is not properly formatted. > - Receipt signer is not an active Notary. > - Receipt's destination chain does not refer to this chain.\"},\"verifyReceiptReport(bytes,bytes)\":{\"notice\":\"Verifies a Guard's receipt report signature. - Does nothing, if the report is valid (if the reported receipt is invalid). - Slashes the Guard, if the report is invalid (if the reported receipt is valid). > Will revert if any of these is true: > - Receipt payload is not properly formatted. > - Receipt Report signer is not an active Guard. > - Receipt does not refer to this chain.\"},\"verifyStateReport(bytes,bytes)\":{\"notice\":\"Verifies a Guard's state report signature.  - Does nothing, if the report is valid (if the reported state is invalid).  - Slashes the Guard, if the report is invalid (if the reported state is valid). > Will revert if any of these is true: > - State payload is not properly formatted. > - State Report signer is not an active Guard. > - Reported State does not refer to this chain.\"},\"verifyStateWithAttestation(uint256,bytes,bytes,bytes)\":{\"notice\":\"Verifies a state from the snapshot, that was used for the Notary-signed attestation. - Does nothing, if the state is valid (matches the historical state of this contract). - Slashes the Notary, if the state is invalid. > Will revert if any of these is true: > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary. > - Attestation's snapshot root is not equal to Merkle Root derived from the Snapshot. > - Snapshot payload is not properly formatted. > - State index is out of range. > - State does not refer to this chain.\"},\"verifyStateWithSnapshot(uint256,bytes,bytes)\":{\"notice\":\"Verifies a state from the snapshot (a list of states) signed by a Guard or a Notary. - Does nothing, if the state is valid (matches the historical state of this contract). - Slashes the Agent, if the state is invalid. > Will revert if any of these is true: > - Snapshot payload is not properly formatted. > - Snapshot signer is not an active Agent. > - State index is out of range. > - State does not refer to this chain.\"},\"verifyStateWithSnapshotProof(uint256,bytes,bytes32[],bytes,bytes)\":{\"notice\":\"Verifies a state from the snapshot, that was used for the Notary-signed attestation. - Does nothing, if the state is valid (matches the historical state of this contract). - Slashes the Notary, if the state is invalid. > Will revert if any of these is true: > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary. > - Attestation's snapshot root is not equal to Merkle Root derived from State and Snapshot Proof. > - Snapshot Proof's first element does not match the State metadata. > - Snapshot Proof length exceeds Snapshot Tree Height. > - State payload is not properly formatted. > - State index is out of range. > - State does not refer to this chain.\"}},\"notice\":\"`LightInbox` is the child of `StatementInbox` contract, that is used chains other than the Synapse Chain. In addition to the functionality of `StatementInbox`, it also: - Accepts Notary Attestations and passes them to the `Destination` contract. - Accepts Attestation Reports and initiates a dispute between the Notary and the Guard.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/inbox/LightInbox.sol\":\"LightInbox\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/base/MessagingBase.sol\":{\"keccak256\":\"0x01a7e9d9a5547e90d2efc4478485c7fc308a870d596a47d2b59383eaf2a02dd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a5ab808e51515e2a8d2efccb3f9d89054c2fc7e9cb5f44514b734a097d8c114\",\"dweb:/ipfs/QmUJ1E1MXy1H2Nb8xCGA7hpsTMNF3CXNoU11qGyd5M8498\"]},\"contracts/base/MultiCallable.sol\":{\"keccak256\":\"0x9645f1629cdf8db803c40725f6b0ee165df64bfc142db4613efd385a88f13699\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc99799fdd946c11c893b89dad922822c866d14bdecded86913948a146f71053\",\"dweb:/ipfs/QmZGRZuhU2w6pAStcaQ5NyzyeUn69nJCJd9a9NnjuBVLsn\"]},\"contracts/base/Version.sol\":{\"keccak256\":\"0x63131bbdb149a0c83685da246afc0faa71d1009a20154b1f39650cef4369fe84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21f001efca9d0550162dd1154f5b1d977c85a703e6df883103638ae0fe65af9b\",\"dweb:/ipfs/QmX3BfuJ3yKxWFXphq6RcKcGrja1v5xJQ1fFCwRQvGV8u8\"]},\"contracts/events/StatementInboxEvents.sol\":{\"keccak256\":\"0x31b50f36f0c2060313ea7a8b6564057449c9a957a77d202c5ec3c02623c20511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d794adac1f7491f684964233bb3d5152402555dfe20743bb8c8ca1a61c17a5d8\",\"dweb:/ipfs/QmZbj2btws52KkpHy8maks6xkqL9nq76LZx8ey2QKmxeFS\"]},\"contracts/inbox/LightInbox.sol\":{\"keccak256\":\"0xe51f525afc5e8bd2c87bbd72b3e3dbb3eec33de58a41910a547805b2fc41e11d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a547051a6f6eb585d297190cae5c86aa95499efb2aa64657faba6dfb70bb74a\",\"dweb:/ipfs/QmXysrcjZgybcUUe9pn1FQm3x21DMdeHzHEREFvHAHpma3\"]},\"contracts/inbox/StatementInbox.sol\":{\"keccak256\":\"0x097c1578b0f71f3a090bd0f9340e55e59056944351cf82f55eda43f5d01cdfd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e6182a19c0f82a755817b1ee6de921703b36cf9f2ad418a7293f4b6917ac375\",\"dweb:/ipfs/QmYNxEDbZ6VAitzbk1kHFKcaaZ5EtCZiyzuMyL8Hu3SxBX\"]},\"contracts/interfaces/IAgentManager.sol\":{\"keccak256\":\"0xc6fded8bc39cdb24e2bc038ba9b0ae168ad42fb15ed9d5883b89940b4e970a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://898f25a9d1f375ab7e5dc7cd791263934b50d3b0a44dc29a4c914578a1b06339\",\"dweb:/ipfs/QmXi3CVhvWpGxVvmw4n7UvEoX2bD2ZD2rg4oZhYETYWJ3a\"]},\"contracts/interfaces/IExecutionHub.sol\":{\"keccak256\":\"0x98f6ff39ecb926b480474d122350d753ca18358ca4d18d36d1850ec7af7ae6f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36485341a0ed70b0f151b258124f6a0db003f5d37af22b8bea65b8d5249a252d\",\"dweb:/ipfs/QmfBEDFSGwnSjTyv2AZuuUDjrqWRvacyCx46dXegioWMDL\"]},\"contracts/interfaces/IStateHub.sol\":{\"keccak256\":\"0x26cf1842739cb65203ed5f243879b11939d2e77c46cc629349f016d667c003f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f9959d5230d5b0cac7bc3171cee2cfd95ab548bbcff0da3b06d02a02f61f31\",\"dweb:/ipfs/QmezRqMJF1MfxxU8dzXYFVteBTPq4yuaMVZLNVTMayUzuV\"]},\"contracts/interfaces/IStatementInbox.sol\":{\"keccak256\":\"0x99c93edd056d33d33ce57ae7d6d17328b88e94fe971c4e9d23d2fceaa9f1e41c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76a2cf74f7a24ab3c669efab5372dff18a29463504b09a0d3dde4b4184a2eff3\",\"dweb:/ipfs/Qmb1sy2izNESmgS8FVkFHMXpWc2UM3unQeKMghFYCHNfn4\"]},\"contracts/interfaces/InterfaceDestination.sol\":{\"keccak256\":\"0x708371d239580f8e6dc44e790fd32f47e074cbfb8ae9e75609adbc0de303678c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5061c85c3779304f5c3919d2b1bc6620d1029a4ead7186c3f3f5b409a9bd855\",\"dweb:/ipfs/QmW4Hrz2NGMCRV2Rqv22G4xArsR4jUZtNr1garSR8AZud6\"]},\"contracts/interfaces/InterfaceLightInbox.sol\":{\"keccak256\":\"0xb8edda08e49ec7602c201292ddf9da6b9ea2fd0db9575b2d52c8e3f482f5cfec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d515e2f48537cdbb89efed74cae919febd10df2676f0aff143fac906f2c7ca4\",\"dweb:/ipfs/Qmc2XxY9ghXitxQMTvpSNsCMp65J5dbmYoybk9YMW3GxgW\"]},\"contracts/libs/Constants.sol\":{\"keccak256\":\"0x9ead9581411ac7f702ccba26e3f478610f8c9c785ec3f96f3d9324d162177c2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cba4a834737651bee39e2abca02d59e676cd149439d21182ab6e4320d5e61279\",\"dweb:/ipfs/QmS2K5LKspFZPKuedWoaqywUw6v1nH9xdHa35dN8J9jDEi\"]},\"contracts/libs/Errors.sol\":{\"keccak256\":\"0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b\",\"dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB\"]},\"contracts/libs/Structures.sol\":{\"keccak256\":\"0x3eaa63f5d9aac514328111e8fdd037dc6fdb18af7541a8287deeacd2e44f7137\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://633619910c74a0685ef2993a2e7cc44088929121a15c8a9fc26c9bbadffbda71\",\"dweb:/ipfs/QmZceJv6UntiMWW4JZHbmytLsqXshbuav8yoiritksvqqy\"]},\"contracts/libs/memory/Attestation.sol\":{\"keccak256\":\"0x83b58e2d80cc7139b8996c51c5e9015f34e833e73b92036b53a1af6641e2b699\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a097c82542ba977de931c6331a9b01a39ef2e46b8916414a6f4f550bc59c113\",\"dweb:/ipfs/QmYRHMoPXzrnx86rZnHAEiFxqM5poEs6wyZinLLTEfwZH3\"]},\"contracts/libs/memory/MemView.sol\":{\"keccak256\":\"0x95dd48e50e353b59fadce29f22f02629c91bd3b5e07c0efa588bd7c808536587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4347457c5338192aca52c237c7f588d15a4f541482cd44b0632c59f36f9558eb\",\"dweb:/ipfs/QmXn1sKY7nVNrgKtbtE9PaMHFKBadyg73fs2jhw4Navyb1\"]},\"contracts/libs/memory/Receipt.sol\":{\"keccak256\":\"0x009e8cfffa4806d1a0a326a31350ead092c9cd22105d4890c86bf93d20c7824d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa9905170f86e4e2d9b62e9fabaab36381398da14f001e0b9bb98c31c174a48e\",\"dweb:/ipfs/QmYpHjdY2yf3w6kFi9urUTyrMyVZBBsCGGEkE1kyTnXqVn\"]},\"contracts/libs/memory/Snapshot.sol\":{\"keccak256\":\"0x5df6aa04b1cbb65e410c7f1a02787e0e11dbcdb5cde18ae50d435029c27c1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2e19b5c6778338b7e8e9c8ef82738797d8955d37884c7db70d7cdea43329910\",\"dweb:/ipfs/Qma1cRGHqRM3tkh5JyzR2Td6iKKST2HapTygBwVNTRJJZD\"]},\"contracts/libs/memory/State.sol\":{\"keccak256\":\"0x3997f3a820110b3bce6f87ea8df3e1f8b006d1ac45efff1dc2f8873f8bbfa5af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf973a3633546dfff75b550673b4a680b7fab48d7fc8923157983a4fde3d5da4\",\"dweb:/ipfs/QmZ8NNwcYaqVxtar8g5MH5mqDXXuMTQLe6vi7zYGswFA3N\"]},\"contracts/libs/merkle/MerkleMath.sol\":{\"keccak256\":\"0xbd13c07bdc40b80f56c7d75e3f31b6c4a85a78d444b760604a5b71083d14925c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3162b491e4e216c0f2d143ce3baab4cf9e2a8b1b42466256a5d5b1f8b0385507\",\"dweb:/ipfs/QmYnDSZyxiGHfmB8Fx46zh1LZe3aCdVaKzpaQuD9piTc7u\"]},\"contracts/libs/stack/GasData.sol\":{\"keccak256\":\"0x2007fd4b97cf33bfe4aa7dc6ac887af87b4010ec9834636b4dd5685582ac26cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b54ca8b659d63ef7138c5b3b243190ca19b1e893b7b49dee1f8790d55b9e691\",\"dweb:/ipfs/Qmc2FGb16uosZ5kvyEK2onpWVPvWeE9X72xNWeJw8CbweD\"]},\"contracts/libs/stack/Number.sol\":{\"keccak256\":\"0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd\",\"dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AgentNotActive"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AgentNotActiveNorUnstaking"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AgentNotGuard"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AgentNotNotary"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AgentUnknown"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectAgentDomain"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectDataHash"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectSnapshotProof"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectSnapshotRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectVersionLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IndexOutOfRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IndexedTooMuch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OccupiedMemory"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PrecompileOutOfGas"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SynapseDomainForbidden"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TreeHeightTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnallocatedMemory"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnformattedAttestation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnformattedReceipt"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnformattedSnapshot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnformattedState"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ViewOverrun"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "notary",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AttestationAccepted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "rcptPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "rcptSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidReceipt",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "rrPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "rrSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidReceiptReport",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "srPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "srSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidStateReport",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "statePayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidStateWithAttestation",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "snapSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidStateWithSnapshot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "agentManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "destination",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getGuardReport",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "statementPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "reportSignature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReportsAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStoredSignature",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agentManager_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "origin_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "destination_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "localDomain",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MultiCallable.Call[]",
              "name": "calls",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bool",
                  "name": "allowFailure",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "struct MultiCallable.Result[]",
              "name": "callResults",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "returnData",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "origin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "agentRoot_",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "snapGas_",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitAttestation",
          "outputs": [
            {
              "internalType": "bool",
              "name": "wasAccepted",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "arSignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitAttestationReport",
          "outputs": [
            {
              "internalType": "bool",
              "name": "wasAccepted",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "srSignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitStateReportWithAttestation",
          "outputs": [
            {
              "internalType": "bool",
              "name": "wasAccepted",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "srSignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "snapSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitStateReportWithSnapshot",
          "outputs": [
            {
              "internalType": "bool",
              "name": "wasAccepted",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "statePayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "srSignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes32[]",
              "name": "snapProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitStateReportWithSnapshotProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "wasAccepted",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "rcptPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "rcptSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyReceipt",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValidReceipt",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "rcptPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "rrSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyReceiptReport",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValidReport",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "statePayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "srSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyStateReport",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValidReport",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyStateWithAttestation",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValidState",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "snapSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyStateWithSnapshot",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValidState",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "statePayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes32[]",
              "name": "snapProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyStateWithSnapshotProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValidState",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "versionString",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getGuardReport(uint256)": {
            "details": "Will revert if report with given index doesn't exist.",
            "params": {
              "index": "Report index"
            },
            "returns": {
              "reportSignature": " Guard signature for the report",
              "statementPayload": "Raw payload with statement that Guard reported as invalid"
            }
          },
          "getStoredSignature(uint256)": {
            "details": "Will revert if signature with given index doesn't exist.",
            "params": {
              "index": "Signature index"
            },
            "returns": {
              "_0": "Raw payload with signature"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Should be impossible to renounce ownership; we override OpenZeppelin OwnableUpgradeable's implementation of renounceOwnership to make it a no-op"
          },
          "submitAttestation(bytes,bytes,bytes32,uint256[])": {
            "params": {
              "agentRoot": "Agent Merkle Root from the Attestation",
              "attPayload": "Raw payload with Attestation data",
              "attSignature": "Notary signature for the attestation",
              "snapGas": "Gas data for each chain in the snapshot"
            },
            "returns": {
              "wasAccepted": "     Whether the Attestation was accepted"
            }
          },
          "submitAttestationReport(bytes,bytes,bytes)": {
            "params": {
              "arSignature": "Guard signature for the report",
              "attPayload": "Raw payload with Attestation data that Guard reports as invalid",
              "attSignature": "Notary signature for the reported attestation"
            },
            "returns": {
              "wasAccepted": "     Whether the Report was accepted (resulting in Dispute between the agents)"
            }
          },
          "submitStateReportWithAttestation(uint256,bytes,bytes,bytes,bytes)": {
            "params": {
              "attPayload": "Raw payload with Attestation data",
              "attSignature": "Notary signature for the Attestation",
              "snapPayload": "Raw payload with Snapshot data",
              "srSignature": "Guard signature for the report",
              "stateIndex": "Index of the reported State in the Snapshot"
            },
            "returns": {
              "wasAccepted": "     Whether the Report was accepted (resulting in Dispute between the agents)"
            }
          },
          "submitStateReportWithSnapshot(uint256,bytes,bytes,bytes)": {
            "params": {
              "snapPayload": "Raw payload with Snapshot data",
              "snapSignature": "Notary signature for the Snapshot",
              "srSignature": "Guard signature for the report",
              "stateIndex": "Index of the reported State in the Snapshot"
            },
            "returns": {
              "wasAccepted": "     Whether the Report was accepted (resulting in Dispute between the agents)"
            }
          },
          "submitStateReportWithSnapshotProof(uint256,bytes,bytes,bytes32[],bytes,bytes)": {
            "params": {
              "attPayload": "Raw payload with Attestation data",
              "attSignature": "Notary signature for the Attestation",
              "snapProof": "Proof of inclusion of reported State's Left Leaf into Snapshot Merkle Tree",
              "srSignature": "Guard signature for the report",
              "stateIndex": "Index of the reported State in the Snapshot",
              "statePayload": "Raw payload with State data that Guard reports as invalid"
            },
            "returns": {
              "wasAccepted": "     Whether the Report was accepted (resulting in Dispute between the agents)"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "verifyReceipt(bytes,bytes)": {
            "params": {
              "rcptPayload": "Raw payload with Receipt data",
              "rcptSignature": "Notary signature for the receipt"
            },
            "returns": {
              "isValidReceipt": "  Whether the provided receipt is valid.                          Notary is slashed, if return value is FALSE."
            }
          },
          "verifyReceiptReport(bytes,bytes)": {
            "params": {
              "rcptPayload": "Raw payload with Receipt data that Guard reports as invalid",
              "rrSignature": "Guard signature for the report"
            },
            "returns": {
              "isValidReport": "   Whether the provided report is valid.                          Guard is slashed, if return value is FALSE."
            }
          },
          "verifyStateReport(bytes,bytes)": {
            "params": {
              "srSignature": "Guard signature for the report",
              "statePayload": "Raw payload with State data that Guard reports as invalid"
            },
            "returns": {
              "isValidReport": "   Whether the provided report is valid.                          Guard is slashed, if return value is FALSE."
            }
          },
          "verifyStateWithAttestation(uint256,bytes,bytes,bytes)": {
            "params": {
              "attPayload": "Raw payload with Attestation data",
              "attSignature": "Notary signature for the attestation",
              "snapPayload": "Raw payload with snapshot data",
              "stateIndex": "State index to check"
            },
            "returns": {
              "isValidState": "    Whether the provided state is valid.                          Notary is slashed, if return value is FALSE."
            }
          },
          "verifyStateWithSnapshot(uint256,bytes,bytes)": {
            "params": {
              "snapPayload": "Raw payload with snapshot data",
              "snapSignature": "Agent signature for the snapshot",
              "stateIndex": "State index to check"
            },
            "returns": {
              "isValidState": "    Whether the provided state is valid.                          Agent is slashed, if return value is FALSE."
            }
          },
          "verifyStateWithSnapshotProof(uint256,bytes,bytes32[],bytes,bytes)": {
            "params": {
              "attPayload": "Raw payload with Attestation data",
              "attSignature": "Notary signature for the attestation",
              "snapProof": "Proof of inclusion of provided State's Left Leaf into Snapshot Merkle Tree",
              "stateIndex": "Index of state in the snapshot",
              "statePayload": "Raw payload with State data to check"
            },
            "returns": {
              "isValidState": "    Whether the provided state is valid.                          Notary is slashed, if return value is FALSE."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getGuardReport(uint256)": {
            "notice": "Returns the Guard report with the given index stored in StatementInbox. > Only reports that led to opening a Dispute are stored."
          },
          "getReportsAmount()": {
            "notice": "Returns the amount of Guard Reports stored in StatementInbox. > Only reports that led to opening a Dispute are stored."
          },
          "getStoredSignature(uint256)": {
            "notice": "Returns the signature with the given index stored in StatementInbox."
          },
          "initialize(address,address,address)": {
            "notice": "Initializes `LightInbox` contract: - Sets `msg.sender` as the owner of the contract - Sets `agentManager`, `origin` and `destination` addresses"
          },
          "localDomain()": {
            "notice": "Domain of the local chain, set once upon contract creation"
          },
          "multicall((bool,bytes)[])": {
            "notice": "Aggregates a few calls to this contract into one multicall without modifying `msg.sender`."
          },
          "submitAttestation(bytes,bytes,bytes32,uint256[])": {
            "notice": "Accepts an attestation signed by a Notary and passes it to Destination contract to save. > Attestation is created whenever a Notary-signed snapshot is saved in Summit on Synapse Chain. - Saved Attestation could be later used to prove the inclusion of message in the Origin Merkle Tree. - Messages coming from chains included in the Attestation's snapshot could be proven. - Proof only exists for messages that were sent prior to when the Attestation's snapshot was taken. > Will revert if any of these is true: > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary for local domain. > - Attestation signer is in Dispute. > - Attestation's snapshot root has been previously submitted. > - Attestation's data hash doesn't match the hash of provided agentRoot and snapshot gas data."
          },
          "submitAttestationReport(bytes,bytes,bytes)": {
            "notice": "Accepts a Guard's attestation report signature, as well as Notary signature for the reported Attestation. > AttestationReport is a Guard statement saying \"Reported attestation is invalid\". - This results in an opened Dispute between the Guard and the Notary. - Note: Guard could (but doesn't have to) form a AttestationReport and use attestation signature from `verifyAttestation()` successful call that led to Notary being slashed in Summit on Synapse Chain. > Will revert if any of these is true: > - Attestation payload is not properly formatted. > - Attestation Report signer is not an active Guard. > - Attestation signer is not an active Notary for local domain."
          },
          "submitStateReportWithAttestation(uint256,bytes,bytes,bytes,bytes)": {
            "notice": "Accepts a Guard's state report signature, a Snapshot containing the reported State, as well as Notary signature for the Attestation created from this Snapshot. > StateReport is a Guard statement saying \"Reported state is invalid\". - This results in an opened Dispute between the Guard and the Notary. - Note: Guard could (but doesn't have to) form a StateReport and use other values from `verifyStateWithAttestation()` successful call that led to Notary being slashed in remote Origin. > Will revert if any of these is true: > - State Report signer is not an active Guard. > - Snapshot payload is not properly formatted. > - State index is out of range. > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary. > - Attestation's snapshot root is not equal to Merkle Root derived from the Snapshot. > - The Guard or the Notary are already in a Dispute"
          },
          "submitStateReportWithSnapshot(uint256,bytes,bytes,bytes)": {
            "notice": "Accepts a Guard's state report signature, a Snapshot containing the reported State, as well as Notary signature for the Snapshot. > StateReport is a Guard statement saying \"Reported state is invalid\". - This results in an opened Dispute between the Guard and the Notary. - Note: Guard could (but doesn't have to) form a StateReport and use other values from `verifyStateWithSnapshot()` successful call that led to Notary being slashed in remote Origin. > Will revert if any of these is true: > - State Report signer is not an active Guard. > - Snapshot payload is not properly formatted. > - Snapshot signer is not an active Notary. > - State index is out of range. > - The Guard or the Notary are already in a Dispute"
          },
          "submitStateReportWithSnapshotProof(uint256,bytes,bytes,bytes32[],bytes,bytes)": {
            "notice": "Accepts a Guard's state report signature, a proof of inclusion of the reported State in an Attestation, as well as Notary signature for the Attestation. > StateReport is a Guard statement saying \"Reported state is invalid\". - This results in an opened Dispute between the Guard and the Notary. - Note: Guard could (but doesn't have to) form a StateReport and use other values from `verifyStateWithSnapshotProof()` successful call that led to Notary being slashed in remote Origin. > Will revert if any of these is true: > - State payload is not properly formatted. > - State Report signer is not an active Guard. > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary. > - Attestation's snapshot root is not equal to Merkle Root derived from State and Snapshot Proof. > - Snapshot Proof's first element does not match the State metadata. > - Snapshot Proof length exceeds Snapshot Tree Height. > - State index is out of range. > - The Guard or the Notary are already in a Dispute"
          },
          "verifyReceipt(bytes,bytes)": {
            "notice": "Verifies a message receipt signed by the Notary. - Does nothing, if the receipt is valid (matches the saved receipt data for the referenced message). - Slashes the Notary, if the receipt is invalid. > Will revert if any of these is true: > - Receipt payload is not properly formatted. > - Receipt signer is not an active Notary. > - Receipt's destination chain does not refer to this chain."
          },
          "verifyReceiptReport(bytes,bytes)": {
            "notice": "Verifies a Guard's receipt report signature. - Does nothing, if the report is valid (if the reported receipt is invalid). - Slashes the Guard, if the report is invalid (if the reported receipt is valid). > Will revert if any of these is true: > - Receipt payload is not properly formatted. > - Receipt Report signer is not an active Guard. > - Receipt does not refer to this chain."
          },
          "verifyStateReport(bytes,bytes)": {
            "notice": "Verifies a Guard's state report signature.  - Does nothing, if the report is valid (if the reported state is invalid).  - Slashes the Guard, if the report is invalid (if the reported state is valid). > Will revert if any of these is true: > - State payload is not properly formatted. > - State Report signer is not an active Guard. > - Reported State does not refer to this chain."
          },
          "verifyStateWithAttestation(uint256,bytes,bytes,bytes)": {
            "notice": "Verifies a state from the snapshot, that was used for the Notary-signed attestation. - Does nothing, if the state is valid (matches the historical state of this contract). - Slashes the Notary, if the state is invalid. > Will revert if any of these is true: > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary. > - Attestation's snapshot root is not equal to Merkle Root derived from the Snapshot. > - Snapshot payload is not properly formatted. > - State index is out of range. > - State does not refer to this chain."
          },
          "verifyStateWithSnapshot(uint256,bytes,bytes)": {
            "notice": "Verifies a state from the snapshot (a list of states) signed by a Guard or a Notary. - Does nothing, if the state is valid (matches the historical state of this contract). - Slashes the Agent, if the state is invalid. > Will revert if any of these is true: > - Snapshot payload is not properly formatted. > - Snapshot signer is not an active Agent. > - State index is out of range. > - State does not refer to this chain."
          },
          "verifyStateWithSnapshotProof(uint256,bytes,bytes32[],bytes,bytes)": {
            "notice": "Verifies a state from the snapshot, that was used for the Notary-signed attestation. - Does nothing, if the state is valid (matches the historical state of this contract). - Slashes the Notary, if the state is invalid. > Will revert if any of these is true: > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary. > - Attestation's snapshot root is not equal to Merkle Root derived from State and Snapshot Proof. > - Snapshot Proof's first element does not match the State metadata. > - Snapshot Proof length exceeds Snapshot Tree Height. > - State payload is not properly formatted. > - State index is out of range. > - State does not refer to this chain."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/inbox/LightInbox.sol": "LightInbox"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/MessagingBase.sol": {
        "keccak256": "0x01a7e9d9a5547e90d2efc4478485c7fc308a870d596a47d2b59383eaf2a02dd1",
        "urls": [
          "bzz-raw://2a5ab808e51515e2a8d2efccb3f9d89054c2fc7e9cb5f44514b734a097d8c114",
          "dweb:/ipfs/QmUJ1E1MXy1H2Nb8xCGA7hpsTMNF3CXNoU11qGyd5M8498"
        ],
        "license": "MIT"
      },
      "contracts/base/MultiCallable.sol": {
        "keccak256": "0x9645f1629cdf8db803c40725f6b0ee165df64bfc142db4613efd385a88f13699",
        "urls": [
          "bzz-raw://cc99799fdd946c11c893b89dad922822c866d14bdecded86913948a146f71053",
          "dweb:/ipfs/QmZGRZuhU2w6pAStcaQ5NyzyeUn69nJCJd9a9NnjuBVLsn"
        ],
        "license": "MIT"
      },
      "contracts/base/Version.sol": {
        "keccak256": "0x63131bbdb149a0c83685da246afc0faa71d1009a20154b1f39650cef4369fe84",
        "urls": [
          "bzz-raw://21f001efca9d0550162dd1154f5b1d977c85a703e6df883103638ae0fe65af9b",
          "dweb:/ipfs/QmX3BfuJ3yKxWFXphq6RcKcGrja1v5xJQ1fFCwRQvGV8u8"
        ],
        "license": "MIT"
      },
      "contracts/events/StatementInboxEvents.sol": {
        "keccak256": "0x31b50f36f0c2060313ea7a8b6564057449c9a957a77d202c5ec3c02623c20511",
        "urls": [
          "bzz-raw://d794adac1f7491f684964233bb3d5152402555dfe20743bb8c8ca1a61c17a5d8",
          "dweb:/ipfs/QmZbj2btws52KkpHy8maks6xkqL9nq76LZx8ey2QKmxeFS"
        ],
        "license": "MIT"
      },
      "contracts/inbox/LightInbox.sol": {
        "keccak256": "0xe51f525afc5e8bd2c87bbd72b3e3dbb3eec33de58a41910a547805b2fc41e11d",
        "urls": [
          "bzz-raw://2a547051a6f6eb585d297190cae5c86aa95499efb2aa64657faba6dfb70bb74a",
          "dweb:/ipfs/QmXysrcjZgybcUUe9pn1FQm3x21DMdeHzHEREFvHAHpma3"
        ],
        "license": "MIT"
      },
      "contracts/inbox/StatementInbox.sol": {
        "keccak256": "0x097c1578b0f71f3a090bd0f9340e55e59056944351cf82f55eda43f5d01cdfd9",
        "urls": [
          "bzz-raw://4e6182a19c0f82a755817b1ee6de921703b36cf9f2ad418a7293f4b6917ac375",
          "dweb:/ipfs/QmYNxEDbZ6VAitzbk1kHFKcaaZ5EtCZiyzuMyL8Hu3SxBX"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IAgentManager.sol": {
        "keccak256": "0xc6fded8bc39cdb24e2bc038ba9b0ae168ad42fb15ed9d5883b89940b4e970a10",
        "urls": [
          "bzz-raw://898f25a9d1f375ab7e5dc7cd791263934b50d3b0a44dc29a4c914578a1b06339",
          "dweb:/ipfs/QmXi3CVhvWpGxVvmw4n7UvEoX2bD2ZD2rg4oZhYETYWJ3a"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IExecutionHub.sol": {
        "keccak256": "0x98f6ff39ecb926b480474d122350d753ca18358ca4d18d36d1850ec7af7ae6f0",
        "urls": [
          "bzz-raw://36485341a0ed70b0f151b258124f6a0db003f5d37af22b8bea65b8d5249a252d",
          "dweb:/ipfs/QmfBEDFSGwnSjTyv2AZuuUDjrqWRvacyCx46dXegioWMDL"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStateHub.sol": {
        "keccak256": "0x26cf1842739cb65203ed5f243879b11939d2e77c46cc629349f016d667c003f1",
        "urls": [
          "bzz-raw://d8f9959d5230d5b0cac7bc3171cee2cfd95ab548bbcff0da3b06d02a02f61f31",
          "dweb:/ipfs/QmezRqMJF1MfxxU8dzXYFVteBTPq4yuaMVZLNVTMayUzuV"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStatementInbox.sol": {
        "keccak256": "0x99c93edd056d33d33ce57ae7d6d17328b88e94fe971c4e9d23d2fceaa9f1e41c",
        "urls": [
          "bzz-raw://76a2cf74f7a24ab3c669efab5372dff18a29463504b09a0d3dde4b4184a2eff3",
          "dweb:/ipfs/Qmb1sy2izNESmgS8FVkFHMXpWc2UM3unQeKMghFYCHNfn4"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceDestination.sol": {
        "keccak256": "0x708371d239580f8e6dc44e790fd32f47e074cbfb8ae9e75609adbc0de303678c",
        "urls": [
          "bzz-raw://e5061c85c3779304f5c3919d2b1bc6620d1029a4ead7186c3f3f5b409a9bd855",
          "dweb:/ipfs/QmW4Hrz2NGMCRV2Rqv22G4xArsR4jUZtNr1garSR8AZud6"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceLightInbox.sol": {
        "keccak256": "0xb8edda08e49ec7602c201292ddf9da6b9ea2fd0db9575b2d52c8e3f482f5cfec",
        "urls": [
          "bzz-raw://6d515e2f48537cdbb89efed74cae919febd10df2676f0aff143fac906f2c7ca4",
          "dweb:/ipfs/Qmc2XxY9ghXitxQMTvpSNsCMp65J5dbmYoybk9YMW3GxgW"
        ],
        "license": "MIT"
      },
      "contracts/libs/Constants.sol": {
        "keccak256": "0x9ead9581411ac7f702ccba26e3f478610f8c9c785ec3f96f3d9324d162177c2c",
        "urls": [
          "bzz-raw://cba4a834737651bee39e2abca02d59e676cd149439d21182ab6e4320d5e61279",
          "dweb:/ipfs/QmS2K5LKspFZPKuedWoaqywUw6v1nH9xdHa35dN8J9jDEi"
        ],
        "license": "MIT"
      },
      "contracts/libs/Errors.sol": {
        "keccak256": "0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011",
        "urls": [
          "bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b",
          "dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB"
        ],
        "license": "MIT"
      },
      "contracts/libs/Structures.sol": {
        "keccak256": "0x3eaa63f5d9aac514328111e8fdd037dc6fdb18af7541a8287deeacd2e44f7137",
        "urls": [
          "bzz-raw://633619910c74a0685ef2993a2e7cc44088929121a15c8a9fc26c9bbadffbda71",
          "dweb:/ipfs/QmZceJv6UntiMWW4JZHbmytLsqXshbuav8yoiritksvqqy"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Attestation.sol": {
        "keccak256": "0x83b58e2d80cc7139b8996c51c5e9015f34e833e73b92036b53a1af6641e2b699",
        "urls": [
          "bzz-raw://1a097c82542ba977de931c6331a9b01a39ef2e46b8916414a6f4f550bc59c113",
          "dweb:/ipfs/QmYRHMoPXzrnx86rZnHAEiFxqM5poEs6wyZinLLTEfwZH3"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/MemView.sol": {
        "keccak256": "0x95dd48e50e353b59fadce29f22f02629c91bd3b5e07c0efa588bd7c808536587",
        "urls": [
          "bzz-raw://4347457c5338192aca52c237c7f588d15a4f541482cd44b0632c59f36f9558eb",
          "dweb:/ipfs/QmXn1sKY7nVNrgKtbtE9PaMHFKBadyg73fs2jhw4Navyb1"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Receipt.sol": {
        "keccak256": "0x009e8cfffa4806d1a0a326a31350ead092c9cd22105d4890c86bf93d20c7824d",
        "urls": [
          "bzz-raw://aa9905170f86e4e2d9b62e9fabaab36381398da14f001e0b9bb98c31c174a48e",
          "dweb:/ipfs/QmYpHjdY2yf3w6kFi9urUTyrMyVZBBsCGGEkE1kyTnXqVn"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Snapshot.sol": {
        "keccak256": "0x5df6aa04b1cbb65e410c7f1a02787e0e11dbcdb5cde18ae50d435029c27c1ce5",
        "urls": [
          "bzz-raw://d2e19b5c6778338b7e8e9c8ef82738797d8955d37884c7db70d7cdea43329910",
          "dweb:/ipfs/Qma1cRGHqRM3tkh5JyzR2Td6iKKST2HapTygBwVNTRJJZD"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/State.sol": {
        "keccak256": "0x3997f3a820110b3bce6f87ea8df3e1f8b006d1ac45efff1dc2f8873f8bbfa5af",
        "urls": [
          "bzz-raw://bf973a3633546dfff75b550673b4a680b7fab48d7fc8923157983a4fde3d5da4",
          "dweb:/ipfs/QmZ8NNwcYaqVxtar8g5MH5mqDXXuMTQLe6vi7zYGswFA3N"
        ],
        "license": "MIT"
      },
      "contracts/libs/merkle/MerkleMath.sol": {
        "keccak256": "0xbd13c07bdc40b80f56c7d75e3f31b6c4a85a78d444b760604a5b71083d14925c",
        "urls": [
          "bzz-raw://3162b491e4e216c0f2d143ce3baab4cf9e2a8b1b42466256a5d5b1f8b0385507",
          "dweb:/ipfs/QmYnDSZyxiGHfmB8Fx46zh1LZe3aCdVaKzpaQuD9piTc7u"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/GasData.sol": {
        "keccak256": "0x2007fd4b97cf33bfe4aa7dc6ac887af87b4010ec9834636b4dd5685582ac26cb",
        "urls": [
          "bzz-raw://8b54ca8b659d63ef7138c5b3b243190ca19b1e893b7b49dee1f8790d55b9e691",
          "dweb:/ipfs/Qmc2FGb16uosZ5kvyEK2onpWVPvWeE9X72xNWeJw8CbweD"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Number.sol": {
        "keccak256": "0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96",
        "urls": [
          "bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd",
          "dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34",
        "urls": [
          "bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7",
          "dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba",
        "urls": [
          "bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8",
          "dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d",
        "urls": [
          "bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f",
          "dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5",
        "urls": [
          "bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900",
          "dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/inbox/LightInbox.sol",
    "id": 7775,
    "exportedSymbols": {
      "AgentStatus": [
        10357
      ],
      "Attestation": [
        10527
      ],
      "AttestationLib": [
        10809
      ],
      "ChainGas": [
        14599
      ],
      "GasDataLib": [
        14991
      ],
      "IAgentManager": [
        9127
      ],
      "IncorrectDataHash": [
        10190
      ],
      "InterfaceDestination": [
        9719
      ],
      "InterfaceLightInbox": [
        9874
      ],
      "LightInbox": [
        7774
      ],
      "MessagingBase": [
        2851
      ],
      "SYNAPSE_DOMAIN": [
        10170
      ],
      "StatementInbox": [
        9030
      ],
      "SynapseDomainForbidden": [
        10292
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5746:28",
    "nodes": [
      {
        "id": 7540,
        "nodeType": "PragmaDirective",
        "src": "32:23:28",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 7543,
        "nodeType": "ImportDirective",
        "src": "258:75:28",
        "nodes": [],
        "absolutePath": "contracts/libs/memory/Attestation.sol",
        "file": "../libs/memory/Attestation.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7775,
        "sourceUnit": 10810,
        "symbolAliases": [
          {
            "foreign": {
              "id": 7541,
              "name": "Attestation",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10527,
              "src": "266:11:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 7542,
              "name": "AttestationLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10809,
              "src": "279:14:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7545,
        "nodeType": "ImportDirective",
        "src": "334:53:28",
        "nodes": [],
        "absolutePath": "contracts/libs/Constants.sol",
        "file": "../libs/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7775,
        "sourceUnit": 10171,
        "symbolAliases": [
          {
            "foreign": {
              "id": 7544,
              "name": "SYNAPSE_DOMAIN",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10170,
              "src": "342:14:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7548,
        "nodeType": "ImportDirective",
        "src": "388:77:28",
        "nodes": [],
        "absolutePath": "contracts/libs/Errors.sol",
        "file": "../libs/Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7775,
        "sourceUnit": 10335,
        "symbolAliases": [
          {
            "foreign": {
              "id": 7546,
              "name": "IncorrectDataHash",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10190,
              "src": "396:17:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 7547,
              "name": "SynapseDomainForbidden",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10292,
              "src": "415:22:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7551,
        "nodeType": "ImportDirective",
        "src": "466:63:28",
        "nodes": [],
        "absolutePath": "contracts/libs/stack/GasData.sol",
        "file": "../libs/stack/GasData.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7775,
        "sourceUnit": 14992,
        "symbolAliases": [
          {
            "foreign": {
              "id": 7549,
              "name": "ChainGas",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14599,
              "src": "474:8:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 7550,
              "name": "GasDataLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14991,
              "src": "484:10:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7553,
        "nodeType": "ImportDirective",
        "src": "530:51:28",
        "nodes": [],
        "absolutePath": "contracts/libs/Structures.sol",
        "file": "../libs/Structures.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7775,
        "sourceUnit": 10474,
        "symbolAliases": [
          {
            "foreign": {
              "id": 7552,
              "name": "AgentStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10357,
              "src": "538:11:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7555,
        "nodeType": "ImportDirective",
        "src": "781:52:28",
        "nodes": [],
        "absolutePath": "contracts/inbox/StatementInbox.sol",
        "file": "./StatementInbox.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7775,
        "sourceUnit": 9031,
        "symbolAliases": [
          {
            "foreign": {
              "id": 7554,
              "name": "StatementInbox",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9030,
              "src": "789:14:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7557,
        "nodeType": "ImportDirective",
        "src": "834:56:28",
        "nodes": [],
        "absolutePath": "contracts/base/MessagingBase.sol",
        "file": "../base/MessagingBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7775,
        "sourceUnit": 2852,
        "symbolAliases": [
          {
            "foreign": {
              "id": 7556,
              "name": "MessagingBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2851,
              "src": "842:13:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7559,
        "nodeType": "ImportDirective",
        "src": "891:62:28",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IAgentManager.sol",
        "file": "../interfaces/IAgentManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7775,
        "sourceUnit": 9128,
        "symbolAliases": [
          {
            "foreign": {
              "id": 7558,
              "name": "IAgentManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9127,
              "src": "899:13:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7561,
        "nodeType": "ImportDirective",
        "src": "954:76:28",
        "nodes": [],
        "absolutePath": "contracts/interfaces/InterfaceDestination.sol",
        "file": "../interfaces/InterfaceDestination.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7775,
        "sourceUnit": 9720,
        "symbolAliases": [
          {
            "foreign": {
              "id": 7560,
              "name": "InterfaceDestination",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9719,
              "src": "962:20:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7563,
        "nodeType": "ImportDirective",
        "src": "1031:74:28",
        "nodes": [],
        "absolutePath": "contracts/interfaces/InterfaceLightInbox.sol",
        "file": "../interfaces/InterfaceLightInbox.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7775,
        "sourceUnit": 9875,
        "symbolAliases": [
          {
            "foreign": {
              "id": 7562,
              "name": "InterfaceLightInbox",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9874,
              "src": "1039:19:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7774,
        "nodeType": "ContractDefinition",
        "src": "1465:4312:28",
        "nodes": [
          {
            "id": 7571,
            "nodeType": "UsingForDirective",
            "src": "1530:31:28",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 7569,
              "name": "AttestationLib",
              "nameLocations": [
                "1536:14:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10809,
              "src": "1536:14:28"
            },
            "typeName": {
              "id": 7570,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1555:5:28",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "id": 7588,
            "nodeType": "FunctionDefinition",
            "src": "1861:136:28",
            "nodes": [],
            "body": {
              "id": 7587,
              "nodeType": "Block",
              "src": "1919:78:28",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 7582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7580,
                      "name": "domain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7573,
                      "src": "1933:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 7581,
                      "name": "SYNAPSE_DOMAIN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10170,
                      "src": "1943:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1933:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7586,
                  "nodeType": "IfStatement",
                  "src": "1929:61:28",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7583,
                        "name": "SynapseDomainForbidden",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10292,
                        "src": "1966:22:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 7584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1966:24:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 7585,
                    "nodeType": "RevertStatement",
                    "src": "1959:31:28"
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "302e302e33",
                    "id": 7576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1902:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cf7237ef3acb94b87ad359c2a069e622db390803036159a6818cbdd245669abf",
                      "typeString": "literal_string \"0.0.3\""
                    },
                    "value": "0.0.3"
                  },
                  {
                    "id": 7577,
                    "name": "domain",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7573,
                    "src": "1911:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 7578,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 7575,
                  "name": "MessagingBase",
                  "nameLocations": [
                    "1888:13:28"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2851,
                  "src": "1888:13:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "1888:30:28"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 7574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7573,
                  "mutability": "mutable",
                  "name": "domain",
                  "nameLocation": "1880:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7588,
                  "src": "1873:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7572,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1873:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1872:15:28"
            },
            "returnParameters": {
              "id": 7579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1919:0:28"
            },
            "scope": 7774,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 7607,
            "nodeType": "FunctionDefinition",
            "src": "2179:179:28",
            "nodes": [],
            "body": {
              "id": 7606,
              "nodeType": "Block",
              "src": "2282:76:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7601,
                        "name": "agentManager_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7591,
                        "src": "2314:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7602,
                        "name": "origin_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7593,
                        "src": "2329:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7603,
                        "name": "destination_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7595,
                        "src": "2338:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7600,
                      "name": "__StatementInbox_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7884,
                      "src": "2292:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 7604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2292:59:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7605,
                  "nodeType": "ExpressionStatement",
                  "src": "2292:59:28"
                }
              ]
            },
            "documentation": {
              "id": 7589,
              "nodeType": "StructuredDocumentation",
              "src": "2003:171:28",
              "text": "@notice Initializes `LightInbox` contract:\n - Sets `msg.sender` as the owner of the contract\n - Sets `agentManager`, `origin` and `destination` addresses"
            },
            "functionSelector": "c0c53b8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7598,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7597,
                  "name": "initializer",
                  "nameLocations": [
                    "2270:11:28"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46735,
                  "src": "2270:11:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "2270:11:28"
              }
            ],
            "name": "initialize",
            "nameLocation": "2188:10:28",
            "parameters": {
              "id": 7596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7591,
                  "mutability": "mutable",
                  "name": "agentManager_",
                  "nameLocation": "2207:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7607,
                  "src": "2199:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2199:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7593,
                  "mutability": "mutable",
                  "name": "origin_",
                  "nameLocation": "2230:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7607,
                  "src": "2222:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2222:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7595,
                  "mutability": "mutable",
                  "name": "destination_",
                  "nameLocation": "2247:12:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7607,
                  "src": "2239:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2239:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2198:62:28"
            },
            "returnParameters": {
              "id": 7599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2282:0:28"
            },
            "scope": 7774,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7705,
            "nodeType": "FunctionDefinition",
            "src": "2702:1931:28",
            "nodes": [],
            "body": {
              "id": 7704,
              "nodeType": "Block",
              "src": "2902:1731:28",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7624
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7624,
                      "mutability": "mutable",
                      "name": "att",
                      "nameLocation": "2985:3:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 7704,
                      "src": "2973:15:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                        "typeString": "Attestation"
                      },
                      "typeName": {
                        "id": 7623,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7622,
                          "name": "Attestation",
                          "nameLocations": [
                            "2973:11:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10527,
                          "src": "2973:11:28"
                        },
                        "referencedDeclaration": 10527,
                        "src": "2973:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                          "typeString": "Attestation"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7628,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7625,
                        "name": "attPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7610,
                        "src": "2991:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 7626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3002:17:28",
                      "memberName": "castToAttestation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10593,
                      "src": "2991:28:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_userDefinedValueType$_Attestation_$10527_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (Attestation)"
                      }
                    },
                    "id": 7627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2991:30:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                      "typeString": "Attestation"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2973:48:28"
                },
                {
                  "assignments": [
                    7631,
                    7633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7631,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "3112:6:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 7704,
                      "src": "3093:25:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                        "typeString": "struct AgentStatus"
                      },
                      "typeName": {
                        "id": 7630,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7629,
                          "name": "AgentStatus",
                          "nameLocations": [
                            "3093:11:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10357,
                          "src": "3093:11:28"
                        },
                        "referencedDeclaration": 10357,
                        "src": "3093:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_storage_ptr",
                          "typeString": "struct AgentStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7633,
                      "mutability": "mutable",
                      "name": "notary",
                      "nameLocation": "3128:6:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 7704,
                      "src": "3120:14:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7632,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3120:7:28",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7638,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7635,
                        "name": "att",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7624,
                        "src": "3157:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                          "typeString": "Attestation"
                        }
                      },
                      {
                        "id": 7636,
                        "name": "attSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7612,
                        "src": "3162:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                          "typeString": "Attestation"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7634,
                      "name": "_verifyAttestation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8801,
                      "src": "3138:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Attestation_$10527_$_t_bytes_memory_ptr_$returns$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                        "typeString": "function (Attestation,bytes memory) view returns (struct AgentStatus memory,address)"
                      }
                    },
                    "id": 7637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3138:37:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                      "typeString": "tuple(struct AgentStatus memory,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3092:83:28"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7639,
                        "name": "status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7631,
                        "src": "3224:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                          "typeString": "struct AgentStatus memory"
                        }
                      },
                      "id": 7641,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3231:12:28",
                      "memberName": "verifyActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10394,
                      "src": "3224:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_AgentStatus_$10357_memory_ptr_$returns$__$bound_to$_t_struct$_AgentStatus_$10357_memory_ptr_$",
                        "typeString": "function (struct AgentStatus memory) pure"
                      }
                    },
                    "id": 7642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3224:21:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7643,
                  "nodeType": "ExpressionStatement",
                  "src": "3224:21:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7645,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7631,
                          "src": "3326:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                            "typeString": "struct AgentStatus memory"
                          }
                        },
                        "id": 7646,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3333:6:28",
                        "memberName": "domain",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10354,
                        "src": "3326:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 7644,
                      "name": "_verifyNotaryDomain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8767,
                      "src": "3306:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$__$",
                        "typeString": "function (uint32) view"
                      }
                    },
                    "id": 7647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3306:34:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7648,
                  "nodeType": "ExpressionStatement",
                  "src": "3306:34:28"
                },
                {
                  "assignments": [
                    7653
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7653,
                      "mutability": "mutable",
                      "name": "snapGas",
                      "nameLocation": "3659:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 7704,
                      "src": "3641:25:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_userDefinedValueType$_ChainGas_$14599_$dyn_memory_ptr",
                        "typeString": "ChainGas[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 7651,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 7650,
                            "name": "ChainGas",
                            "nameLocations": [
                              "3641:8:28"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 14599,
                            "src": "3641:8:28"
                          },
                          "referencedDeclaration": 14599,
                          "src": "3641:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_ChainGas_$14599",
                            "typeString": "ChainGas"
                          }
                        },
                        "id": 7652,
                        "nodeType": "ArrayTypeName",
                        "src": "3641:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_ChainGas_$14599_$dyn_storage_ptr",
                          "typeString": "ChainGas[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7654,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3641:25:28"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3741:43:28",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3755:19:28",
                        "value": {
                          "name": "snapGas_",
                          "nodeType": "YulIdentifier",
                          "src": "3766:8:28"
                        },
                        "variableNames": [
                          {
                            "name": "snapGas",
                            "nodeType": "YulIdentifier",
                            "src": "3755:7:28"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 7653,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3755:7:28",
                      "valueSize": 1
                    },
                    {
                      "declaration": 7617,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3766:8:28",
                      "valueSize": 1
                    }
                  ],
                  "id": 7655,
                  "nodeType": "InlineAssembly",
                  "src": "3732:52:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 7667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 7656,
                          "name": "att",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7624,
                          "src": "3889:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                            "typeString": "Attestation"
                          }
                        },
                        "id": 7657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3893:8:28",
                        "memberName": "dataHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10725,
                        "src": "3889:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Attestation_$10527_$returns$_t_bytes32_$bound_to$_t_userDefinedValueType$_Attestation_$10527_$",
                          "typeString": "function (Attestation) pure returns (bytes32)"
                        }
                      },
                      "id": 7658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3889:14:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 7661,
                          "name": "agentRoot_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7614,
                          "src": "3960:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 7664,
                              "name": "snapGas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7653,
                              "src": "4009:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_userDefinedValueType$_ChainGas_$14599_$dyn_memory_ptr",
                                "typeString": "ChainGas[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_userDefinedValueType$_ChainGas_$14599_$dyn_memory_ptr",
                                "typeString": "ChainGas[] memory"
                              }
                            ],
                            "expression": {
                              "id": 7662,
                              "name": "GasDataLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14991,
                              "src": "3986:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_GasDataLib_$14991_$",
                                "typeString": "type(library GasDataLib)"
                              }
                            },
                            "id": 7663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3997:11:28",
                            "memberName": "snapGasHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14990,
                            "src": "3986:22:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_array$_t_userDefinedValueType$_ChainGas_$14599_$dyn_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (ChainGas[] memory) pure returns (bytes32)"
                            }
                          },
                          "id": 7665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3986:31:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 7659,
                          "name": "AttestationLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10809,
                          "src": "3923:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AttestationLib_$10809_$",
                            "typeString": "type(library AttestationLib)"
                          }
                        },
                        "id": 7660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3938:8:28",
                        "memberName": "dataHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10745,
                        "src": "3923:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                        }
                      },
                      "id": 7666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3948:10:28",
                        "3972:12:28"
                      ],
                      "names": [
                        "agentRoot_",
                        "snapGasHash_"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3923:96:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3889:130:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7672,
                  "nodeType": "IfStatement",
                  "src": "3872:209:28",
                  "trueBody": {
                    "id": 7671,
                    "nodeType": "Block",
                    "src": "4030:51:28",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7668,
                            "name": "IncorrectDataHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10190,
                            "src": "4051:17:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 7669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4051:19:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7670,
                        "nodeType": "RevertStatement",
                        "src": "4044:26:28"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    7674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7674,
                      "mutability": "mutable",
                      "name": "sigIndex",
                      "nameLocation": "4152:8:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 7704,
                      "src": "4144:16:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7673,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4144:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7678,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7676,
                        "name": "attSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7612,
                        "src": "4178:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7675,
                      "name": "_saveSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8706,
                      "src": "4163:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes memory) returns (uint256)"
                      }
                    },
                    "id": 7677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4163:28:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4144:47:28"
                },
                {
                  "expression": {
                    "id": 7691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7679,
                      "name": "wasAccepted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7620,
                      "src": "4253:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 7684,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7631,
                            "src": "4346:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                              "typeString": "struct AgentStatus memory"
                            }
                          },
                          "id": 7685,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4353:5:28",
                          "memberName": "index",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10356,
                          "src": "4346:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 7686,
                          "name": "sigIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7674,
                          "src": "4382:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7687,
                          "name": "attPayload",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7610,
                          "src": "4416:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 7688,
                          "name": "agentRoot_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7614,
                          "src": "4451:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 7689,
                          "name": "snapGas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7653,
                          "src": "4484:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_userDefinedValueType$_ChainGas_$14599_$dyn_memory_ptr",
                            "typeString": "ChainGas[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_array$_t_userDefinedValueType$_ChainGas_$14599_$dyn_memory_ptr",
                            "typeString": "ChainGas[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 7681,
                              "name": "destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7844,
                              "src": "4288:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 7680,
                            "name": "InterfaceDestination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9719,
                            "src": "4267:20:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_InterfaceDestination_$9719_$",
                              "typeString": "type(contract InterfaceDestination)"
                            }
                          },
                          "id": 7682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4267:33:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_InterfaceDestination_$9719",
                            "typeString": "contract InterfaceDestination"
                          }
                        },
                        "id": 7683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4301:17:28",
                        "memberName": "acceptAttestation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9675,
                        "src": "4267:51:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_userDefinedValueType$_ChainGas_$14599_$dyn_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (uint32,uint256,bytes memory,bytes32,ChainGas[] memory) external returns (bool)"
                        }
                      },
                      "id": 7690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4333:11:28",
                        "4372:8:28",
                        "4404:10:28",
                        "4440:9:28",
                        "4475:7:28"
                      ],
                      "names": [
                        "notaryIndex",
                        "sigIndex",
                        "attPayload",
                        "agentRoot",
                        "snapGas"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4267:235:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4253:249:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7692,
                  "nodeType": "ExpressionStatement",
                  "src": "4253:249:28"
                },
                {
                  "condition": {
                    "id": 7693,
                    "name": "wasAccepted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7620,
                    "src": "4516:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7703,
                  "nodeType": "IfStatement",
                  "src": "4512:115:28",
                  "trueBody": {
                    "id": 7702,
                    "nodeType": "Block",
                    "src": "4529:98:28",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7695,
                                "name": "status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7631,
                                "src": "4568:6:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                                  "typeString": "struct AgentStatus memory"
                                }
                              },
                              "id": 7696,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4575:6:28",
                              "memberName": "domain",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10354,
                              "src": "4568:13:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 7697,
                              "name": "notary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7633,
                              "src": "4583:6:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7698,
                              "name": "attPayload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7610,
                              "src": "4591:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 7699,
                              "name": "attSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7612,
                              "src": "4603:12:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 7694,
                            "name": "AttestationAccepted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4061,
                            "src": "4548:19:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint32,address,bytes memory,bytes memory)"
                            }
                          },
                          "id": 7700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4548:68:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7701,
                        "nodeType": "EmitStatement",
                        "src": "4543:73:28"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              9861
            ],
            "documentation": {
              "id": 7608,
              "nodeType": "StructuredDocumentation",
              "src": "2662:35:28",
              "text": "@inheritdoc InterfaceLightInbox"
            },
            "functionSelector": "6c38f723",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitAttestation",
            "nameLocation": "2711:17:28",
            "parameters": {
              "id": 7618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7610,
                  "mutability": "mutable",
                  "name": "attPayload",
                  "nameLocation": "2751:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7705,
                  "src": "2738:23:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7609,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2738:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7612,
                  "mutability": "mutable",
                  "name": "attSignature",
                  "nameLocation": "2784:12:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7705,
                  "src": "2771:25:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7611,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2771:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7614,
                  "mutability": "mutable",
                  "name": "agentRoot_",
                  "nameLocation": "2814:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7705,
                  "src": "2806:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7613,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2806:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7617,
                  "mutability": "mutable",
                  "name": "snapGas_",
                  "nameLocation": "2851:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7705,
                  "src": "2834:25:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7615,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2834:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7616,
                    "nodeType": "ArrayTypeName",
                    "src": "2834:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2728:137:28"
            },
            "returnParameters": {
              "id": 7621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7620,
                  "mutability": "mutable",
                  "name": "wasAccepted",
                  "nameLocation": "2889:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7705,
                  "src": "2884:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7619,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2884:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2883:18:28"
            },
            "scope": 7774,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7773,
            "nodeType": "FunctionDefinition",
            "src": "4679:1096:28",
            "nodes": [],
            "body": {
              "id": 7772,
              "nodeType": "Block",
              "src": "4846:929:28",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7719
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7719,
                      "mutability": "mutable",
                      "name": "att",
                      "nameLocation": "4929:3:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 7772,
                      "src": "4917:15:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                        "typeString": "Attestation"
                      },
                      "typeName": {
                        "id": 7718,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7717,
                          "name": "Attestation",
                          "nameLocations": [
                            "4917:11:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10527,
                          "src": "4917:11:28"
                        },
                        "referencedDeclaration": 10527,
                        "src": "4917:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                          "typeString": "Attestation"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7723,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7720,
                        "name": "attPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7708,
                        "src": "4935:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 7721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4946:17:28",
                      "memberName": "castToAttestation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10593,
                      "src": "4935:28:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_userDefinedValueType$_Attestation_$10527_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (Attestation)"
                      }
                    },
                    "id": 7722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4935:30:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                      "typeString": "Attestation"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4917:48:28"
                },
                {
                  "assignments": [
                    7726,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7726,
                      "mutability": "mutable",
                      "name": "guardStatus",
                      "nameLocation": "5065:11:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 7772,
                      "src": "5046:30:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                        "typeString": "struct AgentStatus"
                      },
                      "typeName": {
                        "id": 7725,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7724,
                          "name": "AgentStatus",
                          "nameLocations": [
                            "5046:11:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10357,
                          "src": "5046:11:28"
                        },
                        "referencedDeclaration": 10357,
                        "src": "5046:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_storage_ptr",
                          "typeString": "struct AgentStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 7731,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7728,
                        "name": "att",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7719,
                        "src": "5106:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                          "typeString": "Attestation"
                        }
                      },
                      {
                        "id": 7729,
                        "name": "arSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7710,
                        "src": "5111:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                          "typeString": "Attestation"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7727,
                      "name": "_verifyAttestationReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8835,
                      "src": "5081:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Attestation_$10527_$_t_bytes_memory_ptr_$returns$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                        "typeString": "function (Attestation,bytes memory) view returns (struct AgentStatus memory,address)"
                      }
                    },
                    "id": 7730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5081:42:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                      "typeString": "tuple(struct AgentStatus memory,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5045:78:28"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7732,
                        "name": "guardStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7726,
                        "src": "5171:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                          "typeString": "struct AgentStatus memory"
                        }
                      },
                      "id": 7734,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5183:12:28",
                      "memberName": "verifyActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10394,
                      "src": "5171:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_AgentStatus_$10357_memory_ptr_$returns$__$bound_to$_t_struct$_AgentStatus_$10357_memory_ptr_$",
                        "typeString": "function (struct AgentStatus memory) pure"
                      }
                    },
                    "id": 7735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5171:26:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7736,
                  "nodeType": "ExpressionStatement",
                  "src": "5171:26:28"
                },
                {
                  "assignments": [
                    7739,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7739,
                      "mutability": "mutable",
                      "name": "notaryStatus",
                      "nameLocation": "5299:12:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 7772,
                      "src": "5280:31:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                        "typeString": "struct AgentStatus"
                      },
                      "typeName": {
                        "id": 7738,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7737,
                          "name": "AgentStatus",
                          "nameLocations": [
                            "5280:11:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10357,
                          "src": "5280:11:28"
                        },
                        "referencedDeclaration": 10357,
                        "src": "5280:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_storage_ptr",
                          "typeString": "struct AgentStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 7744,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7741,
                        "name": "att",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7719,
                        "src": "5335:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                          "typeString": "Attestation"
                        }
                      },
                      {
                        "id": 7742,
                        "name": "attSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7712,
                        "src": "5340:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                          "typeString": "Attestation"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7740,
                      "name": "_verifyAttestation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8801,
                      "src": "5316:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Attestation_$10527_$_t_bytes_memory_ptr_$returns$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                        "typeString": "function (Attestation,bytes memory) view returns (struct AgentStatus memory,address)"
                      }
                    },
                    "id": 7743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5316:37:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                      "typeString": "tuple(struct AgentStatus memory,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5279:74:28"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7745,
                        "name": "notaryStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7739,
                        "src": "5410:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                          "typeString": "struct AgentStatus memory"
                        }
                      },
                      "id": 7747,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5423:21:28",
                      "memberName": "verifyActiveUnstaking",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10436,
                      "src": "5410:34:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_AgentStatus_$10357_memory_ptr_$returns$__$bound_to$_t_struct$_AgentStatus_$10357_memory_ptr_$",
                        "typeString": "function (struct AgentStatus memory) pure"
                      }
                    },
                    "id": 7748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5410:36:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7749,
                  "nodeType": "ExpressionStatement",
                  "src": "5410:36:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7751,
                          "name": "notaryStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7739,
                          "src": "5527:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                            "typeString": "struct AgentStatus memory"
                          }
                        },
                        "id": 7752,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5540:6:28",
                        "memberName": "domain",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10354,
                        "src": "5527:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 7750,
                      "name": "_verifyNotaryDomain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8767,
                      "src": "5507:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$__$",
                        "typeString": "function (uint32) view"
                      }
                    },
                    "id": 7753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5507:40:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7754,
                  "nodeType": "ExpressionStatement",
                  "src": "5507:40:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7756,
                        "name": "attPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7708,
                        "src": "5569:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7757,
                        "name": "arSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7710,
                        "src": "5581:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7755,
                      "name": "_saveReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8686,
                      "src": "5557:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory)"
                      }
                    },
                    "id": 7758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5557:36:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7759,
                  "nodeType": "ExpressionStatement",
                  "src": "5557:36:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7764,
                          "name": "guardStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7726,
                          "src": "5709:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                            "typeString": "struct AgentStatus memory"
                          }
                        },
                        "id": 7765,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5721:5:28",
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10356,
                        "src": "5709:17:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 7766,
                          "name": "notaryStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7739,
                          "src": "5728:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                            "typeString": "struct AgentStatus memory"
                          }
                        },
                        "id": 7767,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5741:5:28",
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10356,
                        "src": "5728:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7761,
                            "name": "agentManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7840,
                            "src": "5683:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7760,
                          "name": "IAgentManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9127,
                          "src": "5669:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAgentManager_$9127_$",
                            "typeString": "type(contract IAgentManager)"
                          }
                        },
                        "id": 7762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5669:27:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAgentManager_$9127",
                          "typeString": "contract IAgentManager"
                        }
                      },
                      "id": 7763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5697:11:28",
                      "memberName": "openDispute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9043,
                      "src": "5669:39:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_uint32_$returns$__$",
                        "typeString": "function (uint32,uint32) external"
                      }
                    },
                    "id": 7768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5669:78:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7769,
                  "nodeType": "ExpressionStatement",
                  "src": "5669:78:28"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5764:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7716,
                  "id": 7771,
                  "nodeType": "Return",
                  "src": "5757:11:28"
                }
              ]
            },
            "baseFunctions": [
              9873
            ],
            "documentation": {
              "id": 7706,
              "nodeType": "StructuredDocumentation",
              "src": "4639:35:28",
              "text": "@inheritdoc InterfaceLightInbox"
            },
            "functionSelector": "77ec5c10",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitAttestationReport",
            "nameLocation": "4688:23:28",
            "parameters": {
              "id": 7713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7708,
                  "mutability": "mutable",
                  "name": "attPayload",
                  "nameLocation": "4725:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7773,
                  "src": "4712:23:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7707,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4712:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7710,
                  "mutability": "mutable",
                  "name": "arSignature",
                  "nameLocation": "4750:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7773,
                  "src": "4737:24:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7709,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4737:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7712,
                  "mutability": "mutable",
                  "name": "attSignature",
                  "nameLocation": "4776:12:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7773,
                  "src": "4763:25:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7711,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4763:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4711:78:28"
            },
            "returnParameters": {
              "id": 7716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7715,
                  "mutability": "mutable",
                  "name": "wasAccepted",
                  "nameLocation": "4829:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7773,
                  "src": "4824:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7714,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4824:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4823:18:28"
            },
            "scope": 7774,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7565,
              "name": "StatementInbox",
              "nameLocations": [
                "1488:14:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9030,
              "src": "1488:14:28"
            },
            "id": 7566,
            "nodeType": "InheritanceSpecifier",
            "src": "1488:14:28"
          },
          {
            "baseName": {
              "id": 7567,
              "name": "InterfaceLightInbox",
              "nameLocations": [
                "1504:19:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9874,
              "src": "1504:19:28"
            },
            "id": 7568,
            "nodeType": "InheritanceSpecifier",
            "src": "1504:19:28"
          }
        ],
        "canonicalName": "LightInbox",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7564,
          "nodeType": "StructuredDocumentation",
          "src": "1107:358:28",
          "text": "@notice `LightInbox` is the child of `StatementInbox` contract, that is used chains other than the Synapse Chain.\n In addition to the functionality of `StatementInbox`, it also:\n - Accepts Notary Attestations and passes them to the `Destination` contract.\n - Accepts Attestation Reports and initiates a dispute between the Notary and the Guard."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          7774,
          9874,
          9030,
          9521,
          4103,
          2851,
          46691,
          47177,
          46833,
          3004,
          2941
        ],
        "name": "LightInbox",
        "nameLocation": "1474:10:28",
        "scope": 7775,
        "usedErrors": [
          10184,
          10190,
          10196,
          10198,
          10206,
          10216,
          10222,
          10234,
          10240,
          10242,
          10252,
          10264,
          10266,
          10270,
          10272,
          10278,
          10292,
          10324,
          10326,
          10328,
          10330,
          10332
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 28
}