{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AgentNotActiveNorUnstaking",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CallerNotDestination",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CallerNotInbox",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeAlreadyResolved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeNotOpened",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DisputeNotStuck",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GuardInDispute",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectAgentDomain",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectAgentIndex",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectAgentProof",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectVersionLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IndexOutOfRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MustBeSynapseDomain",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotaryInDispute",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SynapseDomainForbidden",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TreeHeightTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WithdrawTipsOptimisticPeriod",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "disputeIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "guardIndex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "notaryIndex",
          "type": "uint32"
        }
      ],
      "name": "DisputeOpened",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "disputeIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "slashedIndex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "rivalIndex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "fraudProver",
          "type": "address"
        }
      ],
      "name": "DisputeResolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newRoot",
          "type": "bytes32"
        }
      ],
      "name": "RootUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum AgentFlag",
          "name": "flag",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "StatusUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "agentRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "agentStatus",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum AgentFlag",
              "name": "flag",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "internalType": "struct AgentStatus",
          "name": "status",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "destination",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "disputeStatus",
      "outputs": [
        {
          "internalType": "enum DisputeFlag",
          "name": "flag",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "rival",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "fraudProver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "disputePtr",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getAgent",
      "outputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum AgentFlag",
              "name": "flag",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "internalType": "struct AgentStatus",
          "name": "status",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getDispute",
      "outputs": [
        {
          "internalType": "address",
          "name": "guard",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "notary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "slashedAgent",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "fraudProver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "reportPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "reportSignature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDisputesAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "inbox",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "origin_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destination_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "inbox_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "localDomain",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "allowFailure",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct MultiCallable.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "returnData",
              "type": "bytes"
            }
          ],
          "internalType": "struct MultiCallable.Result[]",
          "name": "callResults",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "guardIndex",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "notaryIndex",
          "type": "uint32"
        }
      ],
      "name": "openDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "origin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "msgOrigin",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "proofMaturity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "remoteWithdrawTips",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magicValue",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "slashedAgent",
          "type": "address"
        }
      ],
      "name": "resolveStuckDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "agentRoot_",
          "type": "bytes32"
        }
      ],
      "name": "setAgentRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "prover",
          "type": "address"
        }
      ],
      "name": "slashAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum AgentFlag",
              "name": "flag",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "internalType": "struct AgentStatus",
          "name": "status",
          "type": "tuple"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgentStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "versionString",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b50604051620025ce380380620025ce83398101604081905262000034916200009e565b60408051808201909152600580825264302e302e3360d81b602083015260805281816200006181620000cd565b60a0525063ffffffff90811660c052821661038419019050620000975760405163079597d560e51b815260040160405180910390fd5b50620000f5565b600060208284031215620000b157600080fd5b815163ffffffff81168114620000c657600080fd5b9392505050565b80516020808301519190811015620000ef576000198160200360031b1b821691505b50919050565b60805160a05160c0516124a96200012560003960006102c10152600061023e0152600061021b01526124a96000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806389791e17116100b8578063b269681d1161007c578063b269681d14610343578063c0c53b8b14610356578063cbd0596514610369578063e3a96cbd1461037c578063f2fde38b146103a1578063fb0e722b146103b457600080fd5b806389791e17146102a95780638d3638f4146102bc5780638da5cb5b146102f8578063938b5f321461031d578063a2155c341461033057600080fd5b806336cba43c1161010a57806336cba43c146101f15780633aaeccc61461020857806354fd4d5014610210578063586681761461026e57806360fc846614610281578063715018a6146102a157600080fd5b80631fa07138146101475780632853a0e61461017857806328f3fac91461018d5780632de5aaf7146101ad5780633463d1b1146101ce575b600080fd5b61015a610155366004611b8b565b6103c7565b6040516001600160e01b031990911681526020015b60405180910390f35b61018b610186366004611bd1565b6104ba565b005b6101a061019b366004611c16565b6104f5565b60405161016f9190611c87565b6101c06101bb366004611c95565b610596565b60405161016f929190611cae565b6101e16101dc366004611c16565b6105e3565b60405161016f9493929190611ccb565b6101fa60c95481565b60405190815260200161016f565b609b546101fa565b6040805180820182527f000000000000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006020820152905161016f9190611d52565b61018b61027c366004611c95565b61074b565b61029461028f366004611d65565b610782565b60405161016f9190611dda565b61018b6108d4565b61018b6102b7366004611e50565b610909565b6102e37f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161016f565b6033546001600160a01b03165b6040516001600160a01b03909116815260200161016f565b609754610305906001600160a01b031681565b61018b61033e366004611e85565b610aea565b609854610305906001600160a01b031681565b61018b610364366004611ebe565b610ddf565b61018b610377366004611fcc565b610e61565b61038f61038a366004611c95565b611079565b60405161016f96959493929190612074565b61018b6103af366004611c16565b611207565b609954610305906001600160a01b031681565b6098546000906001600160a01b031633146103f557604051636efcc49f60e01b815260040160405180910390fd5b63ffffffff85166103851461041d57604051632b3a807f60e01b815260040160405180910390fd5b620151808410156104415760405163df5728f360e01b815260040160405180910390fd5b609754604051634e04e7a760e01b81526001600160a01b0385811660048301526024820185905290911690634e04e7a790604401600060405180830381600087803b15801561048f57600080fd5b505af11580156104a3573d6000803e3d6000fd5b506303f40e2760e31b93505050505b949350505050565b6099546001600160a01b031633146104e55760405163dbc2fa8560e01b815260040160405180910390fd5b6104f083838361129f565b505050565b604080516060810182526000808252602082018190529181019190915261051b82611347565b90506002609a6000610542856001600160a01b0316600090815260cc602052604090205490565b815260208101919091526040016000205460ff16600281111561056757610567611c31565b148015610587575060058151600581111561058457610584611c31565b14155b1561059157600481525b919050565b60408051606081018252600080825260208201819052918101829052600083815260cb60205260409020546001600160a01b0316915081156105de576105db826104f5565b90505b915091565b600080600080600061060a866001600160a01b0316600090815260cc602052604090205490565b6000818152609a602052604080822081516060810190925280549394509192909190829060ff16600281111561064257610642611c31565b600281111561065357610653611c31565b8152905461010081046001600160581b03908116602080850191909152600160601b9092046001600160a01b03166040938401528351928401519184015192995090965016935090508215610742576000609b6106b16001866120e5565b815481106106c1576106c16120f8565b600091825260209182902060408051606081018252929091015463ffffffff8082168085526401000000008304821695850195909552600160401b9091041690820152915061073e90841461071757815161071d565b81602001515b63ffffffff16600090815260cb60205260409020546001600160a01b031690565b9550505b50509193509193565b6098546001600160a01b0316331461077657604051636efcc49f60e01b815260040160405180910390fd5b61077f816113e3565b50565b6060818067ffffffffffffffff81111561079e5761079e611edc565b6040519080825280602002602001820160405280156107e457816020015b6040805180820190915260008152606060208201528152602001906001900390816107bc5790505b5091503660005b828110156108cb57858582818110610805576108056120f8565b9050602002810190610817919061210e565b9150600084828151811061082d5761082d6120f8565b60200260200101519050306001600160a01b0316838060200190610851919061212e565b60405161085f92919061217c565b600060405180830381855af49150503d806000811461089a576040519150601f19603f3d011682016040523d82523d6000602084013e61089f565b606091505b50602083015215158082528335176108c2576309ad446560e31b60005260046000fd5b506001016107eb565b50505092915050565b6033546001600160a01b031633146109075760405162461bcd60e51b81526004016108fe9061218c565b60405180910390fd5b565b6033546001600160a01b031633146109335760405162461bcd60e51b81526004016108fe9061218c565b6000609a6000610958846001600160a01b0316600090815260cc602052604090205490565b8152602081019190915260409081016000208151606081019092528054829060ff16600281111561098b5761098b611c31565b600281111561099c5761099c611c31565b8152905461010081046001600160581b03166020830152600160601b90046001600160a01b031660409091015290506000815160028111156109e0576109e0611c31565b036109fe576040516359d38fd160e11b815260040160405180910390fd5b600281516002811115610a1357610a13611c31565b03610a315760405163f10068b560e01b815260040160405180910390fd5b6098546040805163204c48a960e11b815290516000926001600160a01b03169163409891529160048083019260609291908290030181865afa158015610a7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9f91906121d6565b505090508064ffffffffff16613840610ab8919061221d565b421015610ad8576040516301bf715b60e61b815260040160405180910390fd5b610ae48484600061129f565b50505050565b6099546001600160a01b03163314610b155760405163dbc2fa8560e01b815260040160405180910390fd5b63ffffffff82166000908152609a602052604081205460ff166002811115610b3f57610b3f611c31565b14610b5d5760405163367526d360e21b815260040160405180910390fd5b63ffffffff81166000908152609a602052604081205460ff166002811115610b8757610b87611c31565b14610ba557604051636893014360e01b815260040160405180910390fd5b604080516060808201835263ffffffff8086168352848116602084019081526000848601818152609b8054600181810183559382905296517fbba9db4cdbea0a37c207bbb83e20f828cd4441c49891101dc94fd20dc8efc3499097018054945192518616600160401b0263ffffffff60401b199387166401000000000267ffffffffffffffff1990961698909616979097179390931716929092179093559154835191820190935290819081526001600160581b0383166020808301919091526000604092830181905263ffffffff87168152609a9091522081518154829060ff19166001836002811115610c9c57610c9c611c31565b0217905550602082015181546040938401516001600160a01b0316600160601b026001600160601b036001600160581b03909316610100029290921660ff9091161717905580516060810190915280600181526001600160581b0383166020808301919091526000604092830181905263ffffffff86168152609a9091522081518154829060ff19166001836002811115610d3957610d39611c31565b0217905550602082015181546040909301516001600160a01b0316600160601b026001600160601b036001600160581b03909216610100029190911660ff909316929092179190911790557fd0672fae056abe2bf0637742527d49add67fdb68192a6c6f6bf86eac19fe0530610db06001836120e5565b6040805191825263ffffffff808716602084015285169082015260600160405180910390a16104f08383611427565b6000610deb600161148f565b90508015610e03576000805461ff0019166101001790555b610e0e848484611517565b610e1661157d565b8015610ae4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b60408083015163ffffffff16600090815260cb60205220546001600160a01b03168015801590610ea35750836001600160a01b0316816001600160a01b031614155b15610ec1576040516312b88bb960e21b815260040160405180910390fd5b6000610ed684600001518560200151876115ac565b9050600060c954905080610ef7866040015163ffffffff16848760206115e3565b14610f1557604051634cc472e760e01b815260040160405180910390fd5b6001600160a01b038316610f6f576040858101805163ffffffff908116600090815260cb602090815284822080546001600160a01b0319166001600160a01b038d16908117909155935193825260cc905292909220911690555b600081815260ca602090815260408083206001600160a01b038a16845290915290208551815487929190829060ff19166001836005811115610fb357610fb3611c31565b0217905550602082810151825460409485015168ffffffffffffffff001990911661010063ffffffff9384160268ffffffff0000000000191617650100000000009183169190910217909255870151875192516001600160a01b038a169391909216917f8f9b8b0f4f062833bec85ea9a8465e4a1207b4be6eb565bbd0ae8b913588d04e9161104191612230565b60405180910390a360058551600581111561105e5761105e611c31565b0361107157611071856040015133611672565b505050505050565b600080600080606080609b8054905087106110a757604051631390f2a160e01b815260040160405180910390fd5b6000609b88815481106110bc576110bc6120f8565b6000918252602080832060408051606081018252939091015463ffffffff80821680865264010000000083048216868601908152600160401b909304821686850152865260cb9093528185205490519092168452909220546001600160a01b03928316995090925016604082015190965063ffffffff16156111875760408082015163ffffffff16600090815260cb60205220546001600160a01b031660408281015163ffffffff166000908152609a6020522054909550600160601b90046001600160a01b031693505b60995460405163c495912b60e01b8152600481018a90526001600160a01b039091169063c495912b90602401600060405180830381865afa1580156111d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111f891908101906122a2565b97999698509496939592505050565b6033546001600160a01b031633146112315760405162461bcd60e51b81526004016108fe9061218c565b6001600160a01b0381166112965760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108fe565b61077f81611907565b60006112aa83611347565b90506112b581611959565b8363ffffffff16816020015163ffffffff16146112e557604051630b09697760e11b815260040160405180910390fd5b826001600160a01b03168463ffffffff167f8f9b8b0f4f062833bec85ea9a8465e4a1207b4be6eb565bbd0ae8b913588d04e60046040516113269190612230565b60405180910390a361133c816040015183611672565b610ae48484846119ad565b60408051606080820183526000808352602080840182905283850182905260c954825260ca81528482206001600160a01b038716835290528390208351918201909352825491929091829060ff1660058111156113a6576113a6611c31565b60058111156113b7576113b7611c31565b8152905463ffffffff610100820481166020840152650100000000009091041660409091015292915050565b8060c9541461077f5760c98190556040518181527f2cbc14f49c068133583f7cb530018af451c87c1cf1327cf2a4ff4698c4730aa49060200160405180910390a150565b609854604051632885570d60e21b815263ffffffff8085166004830152831660248201526001600160a01b039091169063a2155c34906044015b600060405180830381600087803b15801561147b57600080fd5b505af1158015611071573d6000803e3d6000fd5b60008054610100900460ff16156114d6578160ff1660011480156114b25750303b155b6114ce5760405162461bcd60e51b81526004016108fe90612306565b506000919050565b60005460ff8084169116106114fd5760405162461bcd60e51b81526004016108fe90612306565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff1661153e5760405162461bcd60e51b81526004016108fe90612354565b609780546001600160a01b039485166001600160a01b031991821617909155609880549385169382169390931790925560998054919093169116179055565b600054610100900460ff166115a45760405162461bcd60e51b81526004016108fe90612354565b610907611a7d565b60008383836040516020016115c39392919061239f565b6040516020818303038152906040528051906020012090505b9392505050565b8151600090828111156116095760405163c5360feb60e01b815260040160405180910390fd5b84915060005b818110156116465761163c8386838151811061162d5761162d6120f8565b60200260200101518984611aad565b925060010161160f565b50805b838110156116685761165e8360008984611aad565b9250600101611649565b5050949350505050565b63ffffffff82166000908152609a60205260408082208151606081019092528054829060ff1660028111156116a9576116a9611c31565b60028111156116ba576116ba611c31565b8152905461010081046001600160581b03166020830152600160601b90046001600160a01b031660409091015290506002815160028111156116fe576116fe611c31565b0361171c5760405163f10068b560e01b815260040160405180910390fd5b60028082526001600160a01b03831660408084019190915263ffffffff85166000908152609a60205220825181548493839160ff191690600190849081111561176757611767611c31565b021790555060208281015182546040909401516001600160a01b0316600160601b026001600160601b036001600160581b03928316610100021660ff909516949094179390931790915582015160009116156118fd576000600183602001516117d091906123ec565b6001600160581b031690506000609b82815481106117f0576117f06120f8565b600091825260209182902060408051606081018252919092015463ffffffff80821683526401000000008204811694830194909452600160401b900490921690820152609b805491925087918490811061184c5761184c6120f8565b600091825260209182902001805463ffffffff60401b1916600160401b63ffffffff9485160217905582015187821691161461188c57806020015161188f565b80515b63ffffffff8181166000818152609a60209081526040808320929092558151878152938b16908401528201526001600160a01b03871660608201529093507fb4cad5624e1d1c6c622ec70516ee582fe3f6519440c5b47e5165141edc9c54cf9060800160405180910390a150505b610ae48482611ad6565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60018151600581111561196e5761196e611c31565b1415801561198f575060028151600581111561198c5761198c611c31565b14155b1561077f5760405163ec3d0d8560e01b815260040160405180910390fd5b6097546040805163ffffffff861660248201526001600160a01b03858116604483015284811660648084019190915283518084039091018152608490920183526020820180516001600160e01b0316639d228a5160e01b179052915163a1c702a760e01b8152919092169163a1c702a791611a349161038591620151809190600401612413565b60408051808303816000875af1158015611a52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a769190612445565b5050505050565b600054610100900460ff16611aa45760405162461bcd60e51b81526004016108fe90612354565b61090733611907565b6000600183831c168103611acc57611ac58585611b14565b90506104b2565b611ac58486611b14565b609854604051630c22d24360e31b815263ffffffff8085166004830152831660248201526001600160a01b0390911690636116921890604401611461565b600082158015611b22575081155b15611b2f57506000611b5c565b60408051602081018590529081018390526060016040516020818303038152906040528051906020012090505b92915050565b63ffffffff8116811461077f57600080fd5b80356001600160a01b038116811461059157600080fd5b60008060008060808587031215611ba157600080fd5b8435611bac81611b62565b935060208501359250611bc160408601611b74565b9396929550929360600135925050565b600080600060608486031215611be657600080fd5b8335611bf181611b62565b9250611bff60208501611b74565b9150611c0d60408501611b74565b90509250925092565b600060208284031215611c2857600080fd5b6115dc82611b74565b634e487b7160e01b600052602160045260246000fd5b60068110611c5757611c57611c31565b9052565b611c66828251611c47565b60208181015163ffffffff9081169184019190915260409182015116910152565b60608101611b5c8284611c5b565b600060208284031215611ca757600080fd5b5035919050565b6001600160a01b0383168152608081016115dc6020830184611c5b565b6080810160038610611cdf57611cdf611c31565b9481526001600160a01b0393841660208201529190921660408201526060015290565b60005b83811015611d1d578181015183820152602001611d05565b50506000910152565b60008151808452611d3e816020860160208601611d02565b601f01601f19169290920160200192915050565b6020815260006115dc6020830184611d26565b60008060208385031215611d7857600080fd5b823567ffffffffffffffff80821115611d9057600080fd5b818501915085601f830112611da457600080fd5b813581811115611db357600080fd5b8660208260051b8501011115611dc857600080fd5b60209290920196919550909350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611e4257888303603f190185528151805115158452870151878401879052611e2f87850182611d26565b9588019593505090860190600101611e01565b509098975050505050505050565b60008060408385031215611e6357600080fd5b8235611e6e81611b62565b9150611e7c60208401611b74565b90509250929050565b60008060408385031215611e9857600080fd5b8235611ea381611b62565b91506020830135611eb381611b62565b809150509250929050565b600080600060608486031215611ed357600080fd5b611bf184611b74565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611f1557611f15611edc565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611f4457611f44611edc565b604052919050565b600082601f830112611f5d57600080fd5b8135602067ffffffffffffffff821115611f7957611f79611edc565b8160051b611f88828201611f1b565b9283528481018201928281019087851115611fa257600080fd5b83870192505b84831015611fc157823582529183019190830190611fa8565b979650505050505050565b600080600083850360a0811215611fe257600080fd5b611feb85611b74565b93506060601f1982011215611fff57600080fd5b50612008611ef2565b60208501356006811061201a57600080fd5b8152604085013561202a81611b62565b6020820152606085013561203d81611b62565b60408201529150608084013567ffffffffffffffff81111561205e57600080fd5b61206a86828701611f4c565b9150509250925092565b6001600160a01b038781168252868116602083015285811660408301528416606082015260c0608082018190526000906120b090830185611d26565b82810360a08401526120c28185611d26565b9998505050505050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115611b5c57611b5c6120cf565b634e487b7160e01b600052603260045260246000fd5b60008235603e1983360301811261212457600080fd5b9190910192915050565b6000808335601e1984360301811261214557600080fd5b83018035915067ffffffffffffffff82111561216057600080fd5b60200191503681900382131561217557600080fd5b9250929050565b8183823760009101908152919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b805164ffffffffff8116811461059157600080fd5b6000806000606084860312156121eb57600080fd5b6121f4846121c1565b9250612202602085016121c1565b9150604084015161221281611b62565b809150509250925092565b80820180821115611b5c57611b5c6120cf565b60208101611b5c8284611c47565b600082601f83011261224f57600080fd5b815167ffffffffffffffff81111561226957612269611edc565b61227c601f8201601f1916602001611f1b565b81815284602083860101111561229157600080fd5b6104b2826020830160208701611d02565b600080604083850312156122b557600080fd5b825167ffffffffffffffff808211156122cd57600080fd5b6122d98683870161223e565b935060208501519150808211156122ef57600080fd5b506122fc8582860161223e565b9150509250929050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000600685106123b1576123b1611c31565b5060f89390931b835260e09190911b6001600160e01b031916600183015260601b6bffffffffffffffffffffffff1916600582015260190190565b6001600160581b0382811682821603908082111561240c5761240c6120cf565b5092915050565b600063ffffffff80861683528085166020840152506060604083015261243c6060830184611d26565b95945050505050565b6000806040838503121561245857600080fd5b825161246381611b62565b602093909301519294929350505056fea2646970667358221220c05f658f7fc637b13a61173b5dcaf81fcd71f8353ceee1798ec64a2ef53406ca64736f6c63430008110033",
    "sourceMap": "1947:7417:66:-:0;;;2972:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1839:120:5;;;;;;;;;;;;;-1:-1:-1;;;1839:120:5;;;;1080:32:7;;3022:6:66;1839:120:5;1346:24:7;1360:8;1346:24;:::i;:::-;1338:32;;-1:-1:-1;1926:26:5::1;::::0;;::::1;;::::0;3044:24:66;::::1;-1:-1:-1::0;;3044:24:66;;-1:-1:-1;3040:61:66::1;;3077:24;;-1:-1:-1::0;;;3077:24:66::1;;;;;;;;;;;3040:61;2972:136:::0;1947:7417;;14:280:201;83:6;136:2;124:9;115:7;111:23;107:32;104:52;;;152:1;149;142:12;104:52;184:9;178:16;234:10;227:5;223:22;216:5;213:33;203:61;;260:1;257;250:12;203:61;283:5;14:280;-1:-1:-1;;;14:280:201:o;299:297::-;417:12;;464:4;453:16;;;447:23;;417:12;482:16;;479:111;;;576:1;572:6;562;556:4;552:17;549:1;545:25;541:38;534:5;530:50;521:59;;479:111;;299:297;;;:::o;:::-;1947:7417:66;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1947:7417:66:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5506:850;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;941:33:201;;;923:52;;911:2;896:18;5506:850:66;;;;;;;;6105:136:64;;;;;;:::i;:::-;;:::i;:::-;;6856:417;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6615:201::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;8293:633::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;2377:24:66:-;;;;;;;;;3654:25:201;;;3642:2;3627:18;2377:24:66;3508:177:201;7313:101:64;7391:9;:16;7313:101;;1383:401:7;1554:28;;;;;;;;1567:7;1554:28;;1576:5;1554:28;;;;1383:401;;;;1554:28;1383:401;:::i;4914:220:66:-;;;;;;:::i;:::-;;:::i;542:1352:6:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2184:57:5:-;;;:::i;3920:751:64:-;;;;;;:::i;:::-;;:::i;1356:35:5:-;;;;;;;;7001:10:201;6989:23;;;6971:42;;6959:2;6944:18;1356:35:5;6827:192:201;1276:85:87;1348:6;;-1:-1:-1;;;;;1348:6:87;1276:85;;;-1:-1:-1;;;;;7188:32:201;;;7170:51;;7158:2;7143:18;1276:85:87;7024:203:201;2454:21:64;;;;;-1:-1:-1;;;;;2454:21:64;;;5035:1030;;;;;;:::i;:::-;;:::i;2482:26::-;;;;;-1:-1:-1;;;;;2482:26:64;;;3114:189:66;;;;;;:::i;:::-;;:::i;3671:1195::-;;;;;;:::i;:::-;;:::i;7454:799:64:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;2158:198:87:-;;;;;;:::i;:::-;;:::i;2515:20:64:-;;;;;-1:-1:-1;;;;;2515:20:64;;;5506:850:66;5749:11;;5644:17;;-1:-1:-1;;;;;5749:11:66;5735:10;:25;5731:60;;5769:22;;-1:-1:-1;;;5769:22:66;;;;;;;;;;;5731:60;5890:27;;;3861:3:45;5890:27:66;5886:61;;5926:21;;-1:-1:-1;;;5926:21:66;;;;;;;;;;;5886:61;3406:6:45;6087:41:66;;6083:84;;;6137:30;;-1:-1:-1;;;6137:30:66;;;;;;;;;;;6083:84;6193:6;;6177:55;;-1:-1:-1;;;6177:55:66;;-1:-1:-1;;;;;11320:32:201;;;6177:55:66;;;11302:51:201;11369:18;;;11362:34;;;6193:6:66;;;;6177:36;;11275:18:201;;6177:55:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;6317:32:66;-1:-1:-1;;;;5506:850:66;;;;;;;:::o;6105:136:64:-;2882:5;;-1:-1:-1;;;;;2882:5:64;2868:10;:19;2864:48;;2896:16;;-1:-1:-1;;;2896:16:64;;;;;;;;;;;2864:48;6200:34:::1;6212:6;6220:5;6227:6;6200:11;:34::i;:::-;6105:136:::0;;;:::o;6856:417::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;6959:25:64;6978:5;6959:18;:25::i;:::-;6950:34;-1:-1:-1;7151:19:64;7111:13;:31;7125:16;7135:5;-1:-1:-1;;;;;9335:20:66;9303:13;9335:20;;;:13;:20;;;;;;;9237:125;7125:16:64;7111:31;;;;;;;;;;;-1:-1:-1;7111:31:64;:36;;;:59;;;;;;;;:::i;:::-;;:95;;;;-1:-1:-1;7189:17:64;7174:11;;:32;;;;;;;;:::i;:::-;;;7111:95;7107:160;;;7236:20;7222:34;;7107:160;6856:417;;;:::o;6615:201::-;-1:-1:-1;;;;;;;;6671:13:64;-1:-1:-1;;;;;;;;;;;;;;;9001:13:66;9033:14;;;:7;:14;;;;;;-1:-1:-1;;;;;9033:14:66;;-1:-1:-1;6761:19:64;;6757:52;;6791:18;6803:5;6791:11;:18::i;:::-;6782:27;;6757:52;6615:201;;;:::o;8293:633::-;8378:16;8396:13;8411:19;8432:18;8466;8487:16;8497:5;-1:-1:-1;;;;;9335:20:66;9303:13;9335:20;;;:13;:20;;;;;;;9237:125;8487:16:64;8513:32;8548:25;;;:13;:25;;;;;;8513:60;;;;;;;;;;8466:37;;-1:-1:-1;8513:32:64;;:60;;8548:25;8513:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;8513:60:64;;;;;;;;;;;-1:-1:-1;;;8513:60:64;;;-1:-1:-1;;;;;8513:60:64;;;;;;8590:17;;8631:24;;;;8678:23;;;;8590:17;;-1:-1:-1;8631:24:64;;-1:-1:-1;8665:36:64;;-1:-1:-1;8590:17:64;-1:-1:-1;8715:14:64;;8711:209;;8745:28;8776:9;8786:14;8799:1;8786:10;:14;:::i;:::-;8776:25;;;;;;;;:::i;:::-;;;;;;;;;;8745:56;;;;;;;;8776:25;;;;8745:56;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8745:56:64;;;;;;;;;-1:-1:-1;8823:86:64;;8833:32;;:75;;8890:18;;8833:75;;;8868:7;:19;;;8833:75;8823:86;;9001:13:66;9033:14;;;:7;:14;;;;;;-1:-1:-1;;;;;9033:14:66;;8935:119;8823:86:64;8815:94;;8731:189;8711:209;8456:470;;8293:633;;;;;:::o;4914:220:66:-;5050:11;;-1:-1:-1;;;;;5050:11:66;5036:10;:25;5032:60;;5070:22;;-1:-1:-1;;;5070:22:66;;;;;;;;;;;5032:60;5102:25;5116:10;5102:13;:25::i;:::-;4914:220;:::o;542:1352:6:-;602:27;658:5;;694:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;694:20:6;;;;;;;;;;;;;;;;680:34;;724:19;758:9;753:1135;777:6;773:1;:10;753:1135;;;808:5;;814:1;808:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;800:16;;830:20;853:11;865:1;853:14;;;;;;;;:::i;:::-;;;;;;;830:37;;1210:4;-1:-1:-1;;;;;1202:26:6;1229:5;:14;;;;;;;;:::i;:::-;1202:42;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1181:17:6;;;1164:80;;;;;;1517:19;;1514:38;1504:301;;-1:-1:-1;;;1675:4:6;1668:80;1782:4;1776;1769:18;1504:301;-1:-1:-1;1860:3:6;;753:1135;;;;631:1263;;542:1352;;;;:::o;2184:57:5:-;1348:6:87;;-1:-1:-1;;;;;1348:6:87;929:10:91;1488:23:87;1480:68;;;;-1:-1:-1;;;1480:68:87;;;;;;;:::i;:::-;;;;;;;;;2184:57:5:o;3920:751:64:-;1348:6:87;;-1:-1:-1;;;;;1348:6:87;929:10:91;1488:23:87;1480:68;;;;-1:-1:-1;;;1480:68:87;;;;;;;:::i;:::-;4015:34:64::1;4052:13;:38;4066:23;4076:12;-1:-1:-1::0;;;;;9335:20:66;9303:13;9335:20;;;:13;:20;;;;;;;9237:125;4066:23:64::1;4052:38:::0;;::::1;::::0;::::1;::::0;;;;;;;;-1:-1:-1;4052:38:64;4015:75;;::::1;::::0;::::1;::::0;;;;;;;::::1;;;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;;;::::1;::::0;::::1;-1:-1:-1::0;;;;;4015:75:64::1;;::::0;::::1;::::0;-1:-1:-1;;;4015:75:64;::::1;-1:-1:-1::0;;;;;4015:75:64::1;::::0;;;;;;-1:-1:-1;;4104:19:64;;:39:::1;::::0;::::1;;;;;;:::i;:::-;::::0;4100:70:::1;;4152:18;;-1:-1:-1::0;;;4152:18:64::1;;;;;;;;;;;4100:70;4207:19;4184::::0;;:42:::1;::::0;::::1;;;;;;:::i;:::-;::::0;4180:79:::1;;4235:24;;-1:-1:-1::0;;;4235:24:64::1;;;;;;;;;;;4180:79;4396:11;::::0;4375:46:::1;::::0;;-1:-1:-1;;;4375:46:64;;;;4350:19:::1;::::0;-1:-1:-1;;;;;4396:11:64::1;::::0;4375:44:::1;::::0;:46:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;4396:11;4375:46:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4349:72;;;;4474:12;4453:33;;3567:7:45;4453:33:64;;;;:::i;:::-;4435:15;:51;4431:81;;;4495:17;;-1:-1:-1::0;;;4495:17:64::1;;;;;;;;;;;4431:81;4594:70;4615:6;4630:12;4660:1;4594:11;:70::i;:::-;4005:666;;3920:751:::0;;:::o;5035:1030::-;2882:5;;-1:-1:-1;;;;;2882:5:64;2868:10;:19;2864:48;;2896:16;;-1:-1:-1;;;2896:16:64;;;;;;;;;;;2864:48;5186:25:::1;::::0;::::1;5220:16;5186:25:::0;;;:13:::1;:25;::::0;;;;:30;::::1;;:50;::::0;::::1;;;;;;:::i;:::-;;5182:79;;5245:16;;-1:-1:-1::0;;;5245:16:64::1;;;;;;;;;;;5182:79;5275:26;::::0;::::1;5310:16;5275:26:::0;;;:13:::1;:26;::::0;;;;:31;::::1;;:51;::::0;::::1;;;;;;:::i;:::-;;5271:81;;5335:17;;-1:-1:-1::0;;;5335:17:64::1;;;;;;;;;;;5271:81;5377:41;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;::::1;;::::0;::::1;::::0;;;-1:-1:-1;5377:41:64;;;;;;5362:9:::1;:57:::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;::::1;::::0;;;;;;;::::1;-1:-1:-1::0;;;5362:57:64::1;-1:-1:-1::0;;;;5362:57:64;;::::1;::::0;::::1;-1:-1:-1::0;;5362:57:64;;;;;;::::1;::::0;;;;;;;::::1;;::::0;;;::::1;::::0;;;5559:16;;5613:65;;;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;5613:65:64;::::1;;::::0;;::::1;::::0;;;;-1:-1:-1;5613:65:64;;;;;;;5585:25:::1;::::0;::::1;::::0;;:13:::1;:25:::0;;;;:93;;;;:25;;-1:-1:-1;;5585:93:64::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;5585:93:64::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;5585:93:64::1;-1:-1:-1::0;;;5585:93:64::1;-1:-1:-1::0;;;;;;;;;;5585:93:64;;::::1;;;::::0;;;;;;;;;::::1;::::0;;5717:65;;::::1;::::0;::::1;::::0;;;;5585:93:::1;5717:65:::0;;-1:-1:-1;;;;;5717:65:64;::::1;;::::0;;::::1;::::0;;;;-1:-1:-1;5717:65:64;;;;;;;5688:26:::1;::::0;::::1;::::0;;:13:::1;:26:::0;;;;:94;;;;:26;;-1:-1:-1;;5688:94:64::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;5688:94:64::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;5688:94:64::1;-1:-1:-1::0;;;5688:94:64::1;-1:-1:-1::0;;;;;;;;;;5688:94:64;;::::1;;;::::0;;;;;;;;;;;;;;;::::1;::::0;;5908:95:::1;5937:14;5688:94;5937:10:::0;:14:::1;:::i;:::-;5908:95;::::0;;14215:25:201;;;14259:10;14305:15;;;14300:2;14285:18;;14278:43;14357:15;;14337:18;;;14330:43;14203:2;14188:18;5908:95:64::1;;;;;;;6013:45;6034:10;6046:11;6013:20;:45::i;3114:189:66:-:0;3111:19:88;3133:25;3156:1;3133:22;:25::i;:::-;3111:47;;3172:14;3168:65;;;3202:13;:20;;-1:-1:-1;;3202:20:88;;;;;3168:65;3220:50:66::1;3240:7;3249:12;3263:6;3220:19;:50::i;:::-;3280:16;:14;:16::i;:::-;3257:14:88::0;3253:99;;;3303:5;3287:21;;-1:-1:-1;;3287:21:88;;;3327:14;;-1:-1:-1;14536:36:201;;3327:14:88;;14524:2:201;14509:18;3327:14:88;;;;;;;3101:257;3114:189:66;;;:::o;3671:1195::-;3813:12;;;;;3805:21;;3783:19;3805:21;;;:7;:21;;;;-1:-1:-1;;;;;3805:21:66;3840:25;;;;;:49;;;3884:5;-1:-1:-1;;;;;3869:20:66;:11;-1:-1:-1;;;;;3869:20:66;;;3840:49;3836:83;;;3898:21;;-1:-1:-1;;;3898:21:66;;;;;;;;;;;3836:83;3990:12;4005:45;4016:6;:11;;;4029:6;:13;;;4044:5;4005:10;:45::i;:::-;3990:60;;4060:12;4075:9;;4060:24;;4227:4;4157:66;4178:6;:12;;;4157:66;;4192:4;4198:5;428:2:45;4157:20:66;:66::i;:::-;:74;4153:108;;4240:21;;-1:-1:-1;;;4240:21:66;;;;;;;;;;;4153:108;-1:-1:-1;;;;;4317:25:66;;4313:134;;4366:12;;;;;;4358:21;;;;;;;;:7;:21;;;;;;;:29;;-1:-1:-1;;;;;;4358:29:66;-1:-1:-1;;;;;4358:29:66;;;;;;;;4424:12;;4401:20;;;:13;:20;;;;;;:35;;;;4313:134;4509:15;;;;:9;:15;;;;;;;;-1:-1:-1;;;;;4509:22:66;;;;;;;;;:31;;;;4534:6;;4509:22;:31;:22;;-1:-1:-1;;4509:31:66;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;4509:31:66;;;;;;;;;;;;-1:-1:-1;;4509:31:66;;;;;;;;;-1:-1:-1;;4509:31:66;;;;;;;;;;;;;;4582:13;;;4569:11;;4555:48;;-1:-1:-1;;;;;4555:48:66;;;;;;;;;;;;;:::i;:::-;;;;;;;;4705:17;4690:11;;:32;;;;;;;;:::i;:::-;;4686:174;;4808:41;4824:6;:12;;;4838:10;4808:15;:41::i;:::-;3773:1093;;;3671:1195;;;:::o;7454:799:64:-;7549:13;7576:14;7604:20;7638:19;7671:26;7711:28;7777:9;:16;;;;7768:5;:25;7764:55;;7802:17;;-1:-1:-1;;;7802:17:64;;;;;;;;;;;7764:55;7829:28;7860:9;7870:5;7860:16;;;;;;;;:::i;:::-;;;;;;;;;7829:47;;;;;;;;7860:16;;;;7829:47;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7829:47:64;;;;;;;;;9033:14:66;;:7;:14;;;;;;;7952:19:64;;7942:30;;;9033:14:66;;;;;;-1:-1:-1;;;;;9033:14:66;;;;-1:-1:-1;7829:47:64;;-1:-1:-1;9033:14:66;7986:20:64;;;;7933:39;;-1:-1:-1;7986:24:64;;;7982:176;;8051:20;;;;;8041:31;;9001:13:66;9033:14;;;:7;:14;;;;-1:-1:-1;;;;;9033:14:66;8114:20:64;;;;;8100:35;;;;;;:13;:35;;;:47;8026:46;;-1:-1:-1;;;;8100:47:64;;-1:-1:-1;;;;;8100:47:64;;-1:-1:-1;7982:176:64;8218:5;;8202:44;;-1:-1:-1;;;8202:44:64;;;;;3654:25:201;;;-1:-1:-1;;;;;8218:5:64;;;;8202:37;;3627:18:201;;8202:44:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8202:44:64;;;;;;;;;;;;:::i;:::-;7454:799;;;;-1:-1:-1;7454:799:64;;;;;-1:-1:-1;;;7454:799:64:o;2158:198:87:-;1348:6;;-1:-1:-1;;;;;1348:6:87;929:10:91;1488:23:87;1480:68;;;;-1:-1:-1;;;1480:68:87;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:22:87;::::1;2238:73;;;::::0;-1:-1:-1;;;2238:73:87;;16076:2:201;2238:73:87::1;::::0;::::1;16058:21:201::0;16115:2;16095:18;;;16088:30;16154:34;16134:18;;;16127:62;-1:-1:-1;;;16205:18:201;;;16198:36;16251:19;;2238:73:87::1;15874:402:201::0;2238:73:87::1;2321:28;2340:8;2321:18;:28::i;10109:775:64:-:0;10270:25;10298;10317:5;10298:18;:25::i;:::-;10270:53;;10333:30;:6;:28;:30::i;:::-;10394:6;10377:23;;:6;:13;;;:23;;;10373:58;;10409:22;;-1:-1:-1;;;10409:22:64;;;;;;;;;;;10373:58;10602:5;-1:-1:-1;;;;;10558:50:64;10594:6;10558:50;;;10572:20;10558:50;;;;;;:::i;:::-;;;;;;;;10684:37;10700:6;:12;;;10714:6;10684:15;:37::i;:::-;10836:41;10855:6;10863:5;10870:6;10836:18;:41::i;8604:146:66:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;8726:9:66;;8716:20;;:9;:20;;;;;-1:-1:-1;;;;;8716:27:66;;;;;;;;;8709:34;;;;;;;;;;-1:-1:-1;;8709:34:66;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;8604:146;-1:-1:-1;;8604:146:66:o;7966:186::-;8045:10;8032:9;;:23;8028:118;;8071:9;:22;;;8112:23;;3654:25:201;;;8112:23:66;;3642:2:201;3627:18;8112:23:66;;;;;;;7966:186;:::o;7329:233::-;7506:11;;7492:63;;-1:-1:-1;;;7492:63:66;;16461:10:201;16498:15;;;7492:63:66;;;16480:34:201;16550:15;;16530:18;;;16523:43;-1:-1:-1;;;;;7506:11:66;;;;7492:38;;16424:18:201;;7492:63:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5287:808:88;5351:4;5684:13;;;;;;;5680:409;;;5738:7;:12;;5749:1;5738:12;:61;;;;-1:-1:-1;5793:4:88;1476:19:90;:23;5738:61:88;5713:166;;;;-1:-1:-1;;;5713:166:88;;;;;;;:::i;:::-;-1:-1:-1;5900:5:88;;5287:808;-1:-1:-1;5287:808:88:o;5680:409::-;5944:12;;:22;;;;:12;;:22;5936:81;;;;-1:-1:-1;;;5936:81:88;;;;;;;:::i;:::-;-1:-1:-1;6031:12:88;:22;;-1:-1:-1;;6031:22:88;;;;;;;;;;;;-1:-1:-1;;5287:808:88:o;3311:203:64:-;4698:13:88;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:88;;;;;;;:::i;:::-;3431:6:64::1;:16:::0;;-1:-1:-1;;;;;3431:16:64;;::::1;-1:-1:-1::0;;;;;;3431:16:64;;::::1;;::::0;;;3457:11:::1;:26:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;3493:5:::1;:14:::0;;;;;::::1;::::0;::::1;;::::0;;3311:203::o;988:95:87:-;4698:13:88;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:88;;;;;;;:::i;:::-;1050:26:87::1;:24;:26::i;12447:170:64:-:0;12536:7;12589:4;12595:6;12603:5;12572:37;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12562:48;;;;;;12555:55;;12447:170;;;;;;:::o;843:900:57:-;1083:12;;978:13;;1109:17;;;1105:48;;;1135:18;;-1:-1:-1;;;1135:18:57;;;;;;;;;;;1105:48;1171:4;1163:12;;1340:9;1335:189;1359:8;1355:1;:12;1335:189;;;1473:36;1483:5;1490;1496:1;1490:8;;;;;;;;:::i;:::-;;;;;;;1500:5;1507:1;1473:9;:36::i;:::-;1465:44;-1:-1:-1;1369:3:57;;1335:189;;;-1:-1:-1;1621:8:57;1604:123;1635:6;1631:1;:10;1604:123;;;1674:38;1684:5;1699:1;1703:5;1710:1;1674:9;:38::i;:::-;1666:46;-1:-1:-1;1643:3:57;;1604:123;;;;997:746;843:900;;;;;;:::o;10982:1078:64:-;11098:27;;;11063:32;11098:27;;;:13;:27;;;;;;11063:62;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;11063:62:64;;;;;-1:-1:-1;;;11063:62:64;;-1:-1:-1;;;;;11063:62:64;;;;;;;-1:-1:-1;11160:19:64;11139:17;;:40;;;;;;;;:::i;:::-;;11135:77;;11188:24;;-1:-1:-1;;;11188:24:64;;;;;;;;;;;11135:77;11242:19;11222:39;;;-1:-1:-1;;;;;11271:33:64;;:24;;;;:33;;;;11314:27;;;-1:-1:-1;11314:27:64;;;:13;:27;;;:42;;;;11222:12;;11314:27;;-1:-1:-1;;11314:42:64;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;11314:42:64;;;;;;;;;;;;-1:-1:-1;;;;;11314:42:64;-1:-1:-1;;;11314:42:64;-1:-1:-1;;;;;;;;;;11314:42:64;;;;;;;;;;;;;;;;;;;;;11471:23;;;11314:42;;11471:28;;11467:529;;11515:20;11564:1;11538:12;:23;;;:27;;;;:::i;:::-;-1:-1:-1;;;;;11515:50:64;;;11579:28;11610:9;11620:12;11610:23;;;;;;;;:::i;:::-;;;;;;;;;;11579:54;;;;;;;;11610:23;;;;11579:54;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11579:54:64;;;;;;;;;11647:9;:23;;11579:54;;-1:-1:-1;11686:12:64;;11657;;11647:23;;;;;;:::i;:::-;;;;;;;;;;;:51;;-1:-1:-1;;;;11647:51:64;-1:-1:-1;;;11647:51:64;;;;;;;;11779:19;;;:35;;;;;;:78;;11838:7;:19;;;11779:78;;;11817:18;;11779:78;11878:25;;;;;;;;:13;:25;;;;;;;;11871:32;;;;11922:63;;18301:25:201;;;18391:15;;;18371:18;;;18364:43;18423:18;;18416:43;-1:-1:-1;;;;;18495:32:201;;18490:2;18475:18;;18468:60;11878:25:64;;-1:-1:-1;11922:63:64;;18288:3:201;18273:19;11922:63:64;;;;;;;11501:495;;11467:529;12005:48;12028:12;12042:10;12005:22;:48::i;2510:187:87:-;2602:6;;;-1:-1:-1;;;;;2618:17:87;;;-1:-1:-1;;;;;;2618:17:87;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;3845:223:47:-;3946:16;3931:11;;:31;;;;;;;;:::i;:::-;;;:69;;;;-1:-1:-1;3981:19:47;3966:11;;:34;;;;;;;;:::i;:::-;;;3931:69;3927:135;;;4023:28;;-1:-1:-1;;;4023:28:47;;;;;;;;;;;6678:570:66;6986:6;;7134:96;;;18769:10:201;18757:23;;7134:96:66;;;18739:42:201;-1:-1:-1;;;;;18855:15:201;;;18835:18;;;18828:43;18907:15;;;18887:18;;;;18880:43;;;;7134:96:66;;;;;;;;;;18712:18:201;;;;7134:96:66;;;;;;;-1:-1:-1;;;;;7134:96:66;-1:-1:-1;;;7134:96:66;;;6970:271;;-1:-1:-1;;;6970:271:66;;6986:6;;;;;6970:42;;:271;;3861:3:45;;3406:6;;7134:96:66;6970:271;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6678:570;;;:::o;1089:111:87:-;4698:13:88;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:88;;;;;;;:::i;:::-;1161:32:87::1;929:10:91::0;1161:18:87::1;:32::i;2125:526:57:-:0;2261:14;2466:1;2439:23;;;2438:29;:34;;2434:211;;2521:24;2531:4;2537:7;2521:9;:24::i;:::-;2514:31;;;;2434:211;2610:24;2620:7;2629:4;2610:9;:24::i;7645:240:66:-;7825:11;;7811:67;;-1:-1:-1;;;7811:67:66;;16461:10:201;16498:15;;;7811:67:66;;;16480:34:201;16550:15;;16530:18;;;16523:43;-1:-1:-1;;;;;7825:11:66;;;;7811:41;;16424:18:201;;7811:67:66;16281:291:201;3115:287:57;3196:14;3226:23;;:51;;;;-1:-1:-1;3253:24:57;;3226:51;3222:174;;;-1:-1:-1;3300:1:57;3293:8;;3222:174;3349:35;;;;;;19814:19:201;;;19849:12;;;19842:28;;;19886:12;;3349:35:57;;;;;;;;;;;;3339:46;;;;;;3332:53;;3222:174;3115:287;;;;:::o;14:121:201:-;99:10;92:5;88:22;81:5;78:33;68:61;;125:1;122;115:12;140:173;208:20;;-1:-1:-1;;;;;257:31:201;;247:42;;237:70;;303:1;300;293:12;318:456;403:6;411;419;427;480:3;468:9;459:7;455:23;451:33;448:53;;;497:1;494;487:12;448:53;536:9;523:23;555:30;579:5;555:30;:::i;:::-;604:5;-1:-1:-1;656:2:201;641:18;;628:32;;-1:-1:-1;679:38:201;713:2;698:18;;679:38;:::i;:::-;318:456;;;;-1:-1:-1;669:48:201;;764:2;749:18;736:32;;-1:-1:-1;;318:456:201:o;986:393::-;1062:6;1070;1078;1131:2;1119:9;1110:7;1106:23;1102:32;1099:52;;;1147:1;1144;1137:12;1099:52;1186:9;1173:23;1205:30;1229:5;1205:30;:::i;:::-;1254:5;-1:-1:-1;1278:38:201;1312:2;1297:18;;1278:38;:::i;:::-;1268:48;;1335:38;1369:2;1358:9;1354:18;1335:38;:::i;:::-;1325:48;;986:393;;;;;:::o;1384:186::-;1443:6;1496:2;1484:9;1475:7;1471:23;1467:32;1464:52;;;1512:1;1509;1502:12;1464:52;1535:29;1554:9;1535:29;:::i;1575:127::-;1636:10;1631:3;1627:20;1624:1;1617:31;1667:4;1664:1;1657:15;1691:4;1688:1;1681:15;1707:140;1788:1;1781:5;1778:12;1768:46;;1794:18;;:::i;:::-;1823;;1707:140::o;1852:315::-;1917:44;1957:3;1949:5;1943:12;1917:44;:::i;:::-;2007:4;1996:16;;;1990:23;2032:10;2074:21;;;2058:14;;;2051:45;;;;2149:4;2138:16;;;2132:23;2128:32;2112:14;;2105:56;1852:315::o;2172:260::-;2366:2;2351:18;;2378:48;2355:9;2408:6;2378:48;:::i;2437:180::-;2496:6;2549:2;2537:9;2528:7;2524:23;2520:32;2517:52;;;2565:1;2562;2555:12;2517:52;-1:-1:-1;2588:23:201;;2437:180;-1:-1:-1;2437:180:201:o;2622:358::-;-1:-1:-1;;;;;2875:32:201;;2857:51;;2844:3;2829:19;;2917:57;2970:2;2955:18;;2947:6;2917:57;:::i;2985:518::-;3218:3;3203:19;;3252:1;3241:13;;3231:47;;3258:18;;:::i;:::-;3287:25;;;-1:-1:-1;;;;;3386:15:201;;;3381:2;3366:18;;3359:43;3438:15;;;;3433:2;3418:18;;3411:43;3485:2;3470:18;3463:34;2985:518;:::o;3872:250::-;3957:1;3967:113;3981:6;3978:1;3975:13;3967:113;;;4057:11;;;4051:18;4038:11;;;4031:39;4003:2;3996:10;3967:113;;;-1:-1:-1;;4114:1:201;4096:16;;4089:27;3872:250::o;4127:271::-;4169:3;4207:5;4201:12;4234:6;4229:3;4222:19;4250:76;4319:6;4312:4;4307:3;4303:14;4296:4;4289:5;4285:16;4250:76;:::i;:::-;4380:2;4359:15;-1:-1:-1;;4355:29:201;4346:39;;;;4387:4;4342:50;;4127:271;-1:-1:-1;;4127:271:201:o;4403:220::-;4552:2;4541:9;4534:21;4515:4;4572:45;4613:2;4602:9;4598:18;4590:6;4572:45;:::i;4813:639::-;4923:6;4931;4984:2;4972:9;4963:7;4959:23;4955:32;4952:52;;;5000:1;4997;4990:12;4952:52;5040:9;5027:23;5069:18;5110:2;5102:6;5099:14;5096:34;;;5126:1;5123;5116:12;5096:34;5164:6;5153:9;5149:22;5139:32;;5209:7;5202:4;5198:2;5194:13;5190:27;5180:55;;5231:1;5228;5221:12;5180:55;5271:2;5258:16;5297:2;5289:6;5286:14;5283:34;;;5313:1;5310;5303:12;5283:34;5366:7;5361:2;5351:6;5348:1;5344:14;5340:2;5336:23;5332:32;5329:45;5326:65;;;5387:1;5384;5377:12;5326:65;5418:2;5410:11;;;;;5440:6;;-1:-1:-1;4813:639:201;;-1:-1:-1;;;;4813:639:201:o;5457:1041::-;5647:4;5676:2;5716;5705:9;5701:18;5746:2;5735:9;5728:21;5769:6;5804;5798:13;5835:6;5827;5820:22;5861:2;5851:12;;5894:2;5883:9;5879:18;5872:25;;5956:2;5946:6;5943:1;5939:14;5928:9;5924:30;5920:39;5994:2;5986:6;5982:15;6015:1;6025:444;6039:6;6036:1;6033:13;6025:444;;;6104:22;;;-1:-1:-1;;6100:36:201;6088:49;;6160:13;;6215:9;;6208:17;6201:25;6186:41;;6266:11;;6260:18;6298:15;;;6291:27;;;6341:48;6373:15;;;6260:18;6341:48;:::i;:::-;6447:12;;;;6331:58;-1:-1:-1;;6412:15:201;;;;6061:1;6054:9;6025:444;;;-1:-1:-1;6486:6:201;;5457:1041;-1:-1:-1;;;;;;;;5457:1041:201:o;6503:319::-;6570:6;6578;6631:2;6619:9;6610:7;6606:23;6602:32;6599:52;;;6647:1;6644;6637:12;6599:52;6686:9;6673:23;6705:30;6729:5;6705:30;:::i;:::-;6754:5;-1:-1:-1;6778:38:201;6812:2;6797:18;;6778:38;:::i;:::-;6768:48;;6503:319;;;;;:::o;7232:384::-;7298:6;7306;7359:2;7347:9;7338:7;7334:23;7330:32;7327:52;;;7375:1;7372;7365:12;7327:52;7414:9;7401:23;7433:30;7457:5;7433:30;:::i;:::-;7482:5;-1:-1:-1;7539:2:201;7524:18;;7511:32;7552;7511;7552;:::i;:::-;7603:7;7593:17;;;7232:384;;;;;:::o;7621:334::-;7698:6;7706;7714;7767:2;7755:9;7746:7;7742:23;7738:32;7735:52;;;7783:1;7780;7773:12;7735:52;7806:29;7825:9;7806:29;:::i;7960:127::-;8021:10;8016:3;8012:20;8009:1;8002:31;8052:4;8049:1;8042:15;8076:4;8073:1;8066:15;8092:253;8164:2;8158:9;8206:4;8194:17;;8241:18;8226:34;;8262:22;;;8223:62;8220:88;;;8288:18;;:::i;:::-;8324:2;8317:22;8092:253;:::o;8350:275::-;8421:2;8415:9;8486:2;8467:13;;-1:-1:-1;;8463:27:201;8451:40;;8521:18;8506:34;;8542:22;;;8503:62;8500:88;;;8568:18;;:::i;:::-;8604:2;8597:22;8350:275;;-1:-1:-1;8350:275:201:o;8630:712::-;8684:5;8737:3;8730:4;8722:6;8718:17;8714:27;8704:55;;8755:1;8752;8745:12;8704:55;8791:6;8778:20;8817:4;8840:18;8836:2;8833:26;8830:52;;;8862:18;;:::i;:::-;8908:2;8905:1;8901:10;8931:28;8955:2;8951;8947:11;8931:28;:::i;:::-;8993:15;;;9063;;;9059:24;;;9024:12;;;;9095:15;;;9092:35;;;9123:1;9120;9113:12;9092:35;9159:2;9151:6;9147:15;9136:26;;9171:142;9187:6;9182:3;9179:15;9171:142;;;9253:17;;9241:30;;9204:12;;;;9291;;;;9171:142;;;9331:5;8630:712;-1:-1:-1;;;;;;;8630:712:201:o;9347:1030::-;9479:6;9487;9495;9539:9;9530:7;9526:23;9569:3;9565:2;9561:12;9558:32;;;9586:1;9583;9576:12;9558:32;9609:29;9628:9;9609:29;:::i;:::-;9599:39;-1:-1:-1;9672:4:201;-1:-1:-1;;9654:16:201;;9650:27;9647:47;;;9690:1;9687;9680:12;9647:47;;9716:22;;:::i;:::-;9790:2;9779:9;9775:18;9762:32;9825:1;9816:7;9813:14;9803:42;;9841:1;9838;9831:12;9803:42;9854:22;;9928:2;9913:18;;9900:32;9941;9900;9941;:::i;:::-;10000:2;9989:14;;9982:31;10065:4;10050:20;;10037:34;10080:32;10037:34;10080:32;:::i;:::-;10139:2;10128:14;;10121:31;10132:5;-1:-1:-1;10227:3:201;10212:19;;10199:33;10255:18;10244:30;;10241:50;;;10287:1;10284;10277:12;10241:50;10310:61;10363:7;10354:6;10343:9;10339:22;10310:61;:::i;:::-;10300:71;;;9347:1030;;;;;:::o;10382:741::-;-1:-1:-1;;;;;10725:15:201;;;10707:34;;10777:15;;;10772:2;10757:18;;10750:43;10829:15;;;10824:2;10809:18;;10802:43;10881:15;;10876:2;10861:18;;10854:43;10934:3;10928;10913:19;;10906:32;;;10650:4;;10961:46;;10987:19;;10979:6;10961:46;:::i;:::-;11056:9;11048:6;11044:22;11038:3;11027:9;11023:19;11016:51;11084:33;11110:6;11102;11084:33;:::i;:::-;11076:41;10382:741;-1:-1:-1;;;;;;;;;10382:741:201:o;11407:127::-;11468:10;11463:3;11459:20;11456:1;11449:31;11499:4;11496:1;11489:15;11523:4;11520:1;11513:15;11539:128;11606:9;;;11627:11;;;11624:37;;;11641:18;;:::i;11672:127::-;11733:10;11728:3;11724:20;11721:1;11714:31;11764:4;11761:1;11754:15;11788:4;11785:1;11778:15;11804:321;11894:4;11952:11;11939:25;12046:2;12042:7;12031:8;12015:14;12011:29;12007:43;11987:18;11983:68;11973:96;;12065:1;12062;12055:12;11973:96;12086:33;;;;;11804:321;-1:-1:-1;;11804:321:201:o;12130:521::-;12207:4;12213:6;12273:11;12260:25;12367:2;12363:7;12352:8;12336:14;12332:29;12328:43;12308:18;12304:68;12294:96;;12386:1;12383;12376:12;12294:96;12413:33;;12465:20;;;-1:-1:-1;12508:18:201;12497:30;;12494:50;;;12540:1;12537;12530:12;12494:50;12573:4;12561:17;;-1:-1:-1;12604:14:201;12600:27;;;12590:38;;12587:58;;;12641:1;12638;12631:12;12587:58;12130:521;;;;;:::o;12656:271::-;12839:6;12831;12826:3;12813:33;12795:3;12865:16;;12890:13;;;12865:16;12656:271;-1:-1:-1;12656:271:201:o;12932:356::-;13134:2;13116:21;;;13153:18;;;13146:30;13212:34;13207:2;13192:18;;13185:62;13279:2;13264:18;;12932:356::o;13293:169::-;13371:13;;13424:12;13413:24;;13403:35;;13393:63;;13452:1;13449;13442:12;13467:415;13552:6;13560;13568;13621:2;13609:9;13600:7;13596:23;13592:32;13589:52;;;13637:1;13634;13627:12;13589:52;13660:39;13689:9;13660:39;:::i;:::-;13650:49;;13718:48;13762:2;13751:9;13747:18;13718:48;:::i;:::-;13708:58;;13809:2;13798:9;13794:18;13788:25;13822:30;13846:5;13822:30;:::i;:::-;13871:5;13861:15;;;13467:415;;;;;:::o;13887:125::-;13952:9;;;13973:10;;;13970:36;;;13986:18;;:::i;14583:209::-;14730:2;14715:18;;14742:44;14719:9;14768:6;14742:44;:::i;14797:509::-;14850:5;14903:3;14896:4;14888:6;14884:17;14880:27;14870:55;;14921:1;14918;14911:12;14870:55;14950:6;14944:13;14976:18;14972:2;14969:26;14966:52;;;14998:18;;:::i;:::-;15042:55;15085:2;15066:13;;-1:-1:-1;;15062:27:201;15091:4;15058:38;15042:55;:::i;:::-;15122:2;15113:7;15106:19;15168:3;15161:4;15156:2;15148:6;15144:15;15140:26;15137:35;15134:55;;;15185:1;15182;15175:12;15134:55;15198:77;15272:2;15265:4;15256:7;15252:18;15245:4;15237:6;15233:17;15198:77;:::i;15311:558::-;15408:6;15416;15469:2;15457:9;15448:7;15444:23;15440:32;15437:52;;;15485:1;15482;15475:12;15437:52;15518:9;15512:16;15547:18;15588:2;15580:6;15577:14;15574:34;;;15604:1;15601;15594:12;15574:34;15627:60;15679:7;15670:6;15659:9;15655:22;15627:60;:::i;:::-;15617:70;;15733:2;15722:9;15718:18;15712:25;15696:41;;15762:2;15752:8;15749:16;15746:36;;;15778:1;15775;15768:12;15746:36;;15801:62;15855:7;15844:8;15833:9;15829:24;15801:62;:::i;:::-;15791:72;;;15311:558;;;;;:::o;16577:410::-;16779:2;16761:21;;;16818:2;16798:18;;;16791:30;16857:34;16852:2;16837:18;;16830:62;-1:-1:-1;;;16923:2:201;16908:18;;16901:44;16977:3;16962:19;;16577:410::o;16992:407::-;17194:2;17176:21;;;17233:2;17213:18;;;17206:30;17272:34;17267:2;17252:18;;17245:62;-1:-1:-1;;;17338:2:201;17323:18;;17316:41;17389:3;17374:19;;16992:407::o;17404:471::-;17582:3;17621:1;17613:6;17610:13;17600:47;;17627:18;;:::i;:::-;-1:-1:-1;17672:3:201;17668:16;;;;17656:29;;17740:3;17718:16;;;;-1:-1:-1;;;;;;17714:43:201;17710:1;17701:11;;17694:64;17795:2;17791:15;-1:-1:-1;;17787:53:201;17783:1;17774:11;;17767:74;17866:2;17857:12;;17404:471::o;17880:189::-;-1:-1:-1;;;;;18005:10:201;;;17993;;;17989:27;;18028:12;;;18025:38;;;18043:18;;:::i;:::-;18025:38;17880:189;;;;:::o;18934:403::-;19096:4;19125:10;19174:2;19166:6;19162:15;19151:9;19144:34;19226:2;19218:6;19214:15;19209:2;19198:9;19194:18;19187:43;;19266:2;19261;19250:9;19246:18;19239:30;19286:45;19327:2;19316:9;19312:18;19304:6;19286:45;:::i;:::-;19278:53;18934:403;-1:-1:-1;;;;;18934:403:201:o;19342:310::-;19420:6;19428;19481:2;19469:9;19460:7;19456:23;19452:32;19449:52;;;19497:1;19494;19487:12;19449:52;19529:9;19523:16;19548:30;19572:5;19548:30;:::i;:::-;19642:2;19627:18;;;;19621:25;19597:5;;19621:25;;-1:-1:-1;;;19342:310:201:o",
    "linkReferences": {},
    "immutableReferences": {
      "2822": [
        {
          "start": 705,
          "length": 32
        }
      ],
      "2954": [
        {
          "start": 539,
          "length": 32
        }
      ],
      "2957": [
        {
          "start": 574,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "agentRoot()": "36cba43c",
    "agentStatus(address)": "28f3fac9",
    "destination()": "b269681d",
    "disputeStatus(address)": "3463d1b1",
    "getAgent(uint256)": "2de5aaf7",
    "getDispute(uint256)": "e3a96cbd",
    "getDisputesAmount()": "3aaeccc6",
    "inbox()": "fb0e722b",
    "initialize(address,address,address)": "c0c53b8b",
    "localDomain()": "8d3638f4",
    "multicall((bool,bytes)[])": "60fc8466",
    "openDispute(uint32,uint32)": "a2155c34",
    "origin()": "938b5f32",
    "owner()": "8da5cb5b",
    "remoteWithdrawTips(uint32,uint256,address,uint256)": "1fa07138",
    "renounceOwnership()": "715018a6",
    "resolveStuckDispute(uint32,address)": "89791e17",
    "setAgentRoot(bytes32)": "58668176",
    "slashAgent(uint32,address,address)": "2853a0e6",
    "transferOwnership(address)": "f2fde38b",
    "updateAgentStatus(address,(uint8,uint32,uint32),bytes32[])": "cbd05965",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AgentNotActiveNorUnstaking\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallerNotDestination\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallerNotInbox\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeAlreadyResolved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeNotOpened\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeNotStuck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GuardInDispute\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectAgentDomain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectAgentIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectAgentProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectVersionLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustBeSynapseDomain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotaryInDispute\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SynapseDomainForbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TreeHeightTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawTipsOptimisticPeriod\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"disputeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"guardIndex\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"notaryIndex\",\"type\":\"uint32\"}],\"name\":\"DisputeOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"disputeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"slashedIndex\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"rivalIndex\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fraudProver\",\"type\":\"address\"}],\"name\":\"DisputeResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newRoot\",\"type\":\"bytes32\"}],\"name\":\"RootUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum AgentFlag\",\"name\":\"flag\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"StatusUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"agentRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"agentStatus\",\"outputs\":[{\"components\":[{\"internalType\":\"enum AgentFlag\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"internalType\":\"struct AgentStatus\",\"name\":\"status\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"disputeStatus\",\"outputs\":[{\"internalType\":\"enum DisputeFlag\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"rival\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fraudProver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"disputePtr\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum AgentFlag\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"internalType\":\"struct AgentStatus\",\"name\":\"status\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDispute\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"guard\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"slashedAgent\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fraudProver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"reportPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"reportSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDisputesAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inbox\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"origin_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destination_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbox_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localDomain\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct MultiCallable.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"multicall\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct MultiCallable.Result[]\",\"name\":\"callResults\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"guardIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"notaryIndex\",\"type\":\"uint32\"}],\"name\":\"openDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"origin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"msgOrigin\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"proofMaturity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"remoteWithdrawTips\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"slashedAgent\",\"type\":\"address\"}],\"name\":\"resolveStuckDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"agentRoot_\",\"type\":\"bytes32\"}],\"name\":\"setAgentRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"prover\",\"type\":\"address\"}],\"name\":\"slashAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum AgentFlag\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"internalType\":\"struct AgentStatus\",\"name\":\"status\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgentStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"versionString\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"agentStatus(address)\":{\"details\":\"Will return AgentFlag.Fraudulent for agents that have been proven to commit fraud, but their status is not updated to Slashed yet.\",\"params\":{\"agent\":\"Agent address\"},\"returns\":{\"status\":\"Status for the given agent: (flag, domain, index).\"}},\"disputeStatus(address)\":{\"details\":\"Every returned value will be set to zero if agent was not slashed and is not in Dispute. `rival` and `disputePtr` will be set to zero if the agent was slashed without being in Dispute.\",\"params\":{\"agent\":\"Agent address\"},\"returns\":{\"disputePtr\":\"  Index of the opened Dispute PLUS ONE. Zero if agent is not in Dispute.\",\"flag\":\"        Flag describing the current Dispute status for the agent: None/Pending/Slashed\",\"fraudProver\":\" Address who provided fraud proof to resolve the Dispute\",\"rival\":\"       Address of the rival agent in the Dispute\"}},\"getAgent(uint256)\":{\"details\":\"Will return empty values if agent with given index doesn't exist.\",\"params\":{\"index\":\"Agent index in the Agent Merkle Tree\"},\"returns\":{\"agent\":\"   Agent address\",\"status\":\"  Status for the given agent: (flag, domain, index)\"}},\"getDispute(uint256)\":{\"details\":\"Will revert if dispute with given index hasn't been opened yet.\",\"params\":{\"index\":\"Dispute index\"},\"returns\":{\"fraudProver\":\"     Address who provided fraud proof to resolve the Dispute\",\"guard\":\"           Address of the Guard in the Dispute\",\"notary\":\"          Address of the Notary in the Dispute\",\"reportPayload\":\"   Raw payload with report data that led to the Dispute\",\"reportSignature\":\" Guard signature for the report payload\",\"slashedAgent\":\"    Address of the Agent who was slashed when Dispute was resolved\"}},\"getDisputesAmount()\":{\"details\":\"This includes the Disputes that have been resolved already.\"},\"openDispute(uint32,uint32)\":{\"params\":{\"guardIndex\":\"Index of the Guard in the Agent Merkle Tree\",\"notaryIndex\":\"Index of the Notary in the Agent Merkle Tree\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"remoteWithdrawTips(uint32,uint256,address,uint256)\":{\"details\":\"Could only be remote-called by BondingManager contract on Synapse Chain. Note: as an extra security check this function returns its own selector, so that Destination could verify that a \\\"remote\\\" function was called when executing a manager message.\",\"params\":{\"amount\":\"Tips value to withdraw\",\"recipient\":\"Address to withdraw tips to\"}},\"renounceOwnership()\":{\"details\":\"Should be impossible to renounce ownership; we override OpenZeppelin OwnableUpgradeable's implementation of renounceOwnership to make it a no-op\"},\"resolveStuckDispute(uint32,address)\":{\"params\":{\"slashedAgent\":\"Agent that is being slashed\"}},\"setAgentRoot(bytes32)\":{\"params\":{\"agentRoot\":\"New Agent Merkle Root\"}},\"slashAgent(uint32,address,address)\":{\"params\":{\"agent\":\"Address of the Agent\",\"domain\":\"Domain where the Agent is active\",\"prover\":\"Address that initially provided fraud proof\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateAgentStatus(address,(uint8,uint32,uint32),bytes32[])\":{\"details\":\"Will revert if the provided proof doesn't match the latest merkle root.\",\"params\":{\"agent\":\"Agent address\",\"proof\":\"Merkle proof of Active status for the agent\",\"status\":\"Structure specifying agent status: (flag, domain, index)\"}}},\"version\":1},\"userdoc\":{\"events\":{\"DisputeOpened(uint256,uint32,uint32)\":{\"notice\":\"Emitted whenever a Dispute is opened between two agents. This happens when a Guard submits their report for the Notary-signed statement to `StatementInbox`.\"},\"DisputeResolved(uint256,uint32,uint32,address)\":{\"notice\":\"Emitted whenever a Dispute is resolved. This happens when an Agent who was in Dispute is slashed. Note: this won't be emitted, if an Agent was slashed without being in Dispute.\"},\"RootUpdated(bytes32)\":{\"notice\":\"Emitted whenever the root of the Agent Merkle Tree is updated.\"},\"StatusUpdated(uint8,uint32,address)\":{\"notice\":\"Emitted whenever a status of the agent is updated.\"}},\"kind\":\"user\",\"methods\":{\"agentRoot()\":{\"notice\":\"Returns the latest known root of the Agent Merkle Tree.\"},\"agentStatus(address)\":{\"notice\":\"Returns (flag, domain, index) for a given agent. See Structures.sol for details.\"},\"disputeStatus(address)\":{\"notice\":\"Returns the current Dispute status of a given agent. See Structures.sol for details.\"},\"getAgent(uint256)\":{\"notice\":\"Returns agent address and their current status for a given agent index.\"},\"getDispute(uint256)\":{\"notice\":\"Returns information about the dispute with the given index.\"},\"getDisputesAmount()\":{\"notice\":\"Returns the number of opened Disputes.\"},\"localDomain()\":{\"notice\":\"Domain of the local chain, set once upon contract creation\"},\"multicall((bool,bytes)[])\":{\"notice\":\"Aggregates a few calls to this contract into one multicall without modifying `msg.sender`.\"},\"openDispute(uint32,uint32)\":{\"notice\":\"Allows Inbox to open a Dispute between a Guard and a Notary, if they are both not in Dispute already. > Will revert if any of these is true: > - Caller is not Inbox. > - Guard or Notary is already in Dispute.\"},\"remoteWithdrawTips(uint32,uint256,address,uint256)\":{\"notice\":\"Withdraws locked base message tips from local Origin to the recipient.\"},\"resolveStuckDispute(uint32,address)\":{\"notice\":\"Allows contract owner to resolve a stuck Dispute. This could only be called if no fresh data has been submitted by the Notaries to the Inbox, which is required for the Dispute to be resolved naturally. > Will revert if any of these is true: > - Caller is not contract owner. > - Domain doesn't match the saved agent domain. > - `slashedAgent` is not in Dispute. > - Less than `FRESH_DATA_TIMEOUT` has passed since the last Notary submission to the Inbox.\"},\"setAgentRoot(bytes32)\":{\"notice\":\"Updates the root of Agent Merkle Tree that the Light Manager is tracking. Could be only called by a local Destination contract, which is supposed to verify the attested Agent Merkle Roots.\"},\"slashAgent(uint32,address,address)\":{\"notice\":\"Allows Inbox to slash an agent, if their fraud was proven. > Will revert if any of these is true: > - Caller is not Inbox. > - Domain doesn't match the saved agent domain.\"},\"updateAgentStatus(address,(uint8,uint32,uint32),bytes32[])\":{\"notice\":\"Updates agent status, using a proof against the latest known Agent Merkle Root.\"}},\"notice\":\"LightManager keeps track of all agents on chains other than Synapse Chain. Is uses the Agent Merkle Roots from the Notary-signed attestations to stay in sync with the `BondingManager`. `LightManager` is responsible for the following: - Accepting the Agent Merkle Roots (passing the optimistic period check) from the `Destination` contract. - Using these roots to enable agents to register themselves by proving their status. - Accepting Manager Message from `BondingManager` on Synapse Chain to withdraw tips. - Sending Manager Messages to `BondingManager` on Synapse Chain to slash agents, when their fraud is proven.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/manager/LightManager.sol\":\"LightManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/base/MessagingBase.sol\":{\"keccak256\":\"0x01a7e9d9a5547e90d2efc4478485c7fc308a870d596a47d2b59383eaf2a02dd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a5ab808e51515e2a8d2efccb3f9d89054c2fc7e9cb5f44514b734a097d8c114\",\"dweb:/ipfs/QmUJ1E1MXy1H2Nb8xCGA7hpsTMNF3CXNoU11qGyd5M8498\"]},\"contracts/base/MultiCallable.sol\":{\"keccak256\":\"0x9645f1629cdf8db803c40725f6b0ee165df64bfc142db4613efd385a88f13699\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc99799fdd946c11c893b89dad922822c866d14bdecded86913948a146f71053\",\"dweb:/ipfs/QmZGRZuhU2w6pAStcaQ5NyzyeUn69nJCJd9a9NnjuBVLsn\"]},\"contracts/base/Version.sol\":{\"keccak256\":\"0x63131bbdb149a0c83685da246afc0faa71d1009a20154b1f39650cef4369fe84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21f001efca9d0550162dd1154f5b1d977c85a703e6df883103638ae0fe65af9b\",\"dweb:/ipfs/QmX3BfuJ3yKxWFXphq6RcKcGrja1v5xJQ1fFCwRQvGV8u8\"]},\"contracts/events/AgentManagerEvents.sol\":{\"keccak256\":\"0xa56624a0db82d304bfba608d1b4d58f9c3d6165d6f7bfb2f7b90d91f232b646a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32f9e512ad758b98cb3a99611a2cac035ec9e8b0e4f031c88ea8dd46bb2a7dbe\",\"dweb:/ipfs/QmbZXsV3jcBgbsAc8FRGTkMrWDVHPk19p2GoKkxmHov9ei\"]},\"contracts/interfaces/IAgentManager.sol\":{\"keccak256\":\"0xc6fded8bc39cdb24e2bc038ba9b0ae168ad42fb15ed9d5883b89940b4e970a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://898f25a9d1f375ab7e5dc7cd791263934b50d3b0a44dc29a4c914578a1b06339\",\"dweb:/ipfs/QmXi3CVhvWpGxVvmw4n7UvEoX2bD2ZD2rg4oZhYETYWJ3a\"]},\"contracts/interfaces/IAgentSecured.sol\":{\"keccak256\":\"0x9a7efecf8fe37cc8245e3b0e3f5d6d6ee056cdd97ccb5631ff6347bdfc9fc889\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7877d223162a76d3fe75490069719b3a4f14cd66fc42bfa915f2813390b7d2aa\",\"dweb:/ipfs/QmZhE1rnffA9bbtkNAwVk6iitMPk14gHbK56mdeHQEPhxj\"]},\"contracts/interfaces/IStatementInbox.sol\":{\"keccak256\":\"0x99c93edd056d33d33ce57ae7d6d17328b88e94fe971c4e9d23d2fceaa9f1e41c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76a2cf74f7a24ab3c669efab5372dff18a29463504b09a0d3dde4b4184a2eff3\",\"dweb:/ipfs/Qmb1sy2izNESmgS8FVkFHMXpWc2UM3unQeKMghFYCHNfn4\"]},\"contracts/interfaces/InterfaceBondingManager.sol\":{\"keccak256\":\"0x0c94cb27bd86eb1f0a48bf9ae15f747f4d0cc9c3e210a7eb75f255d44ccb3ec6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ca990b2704379039a58af30ef2e4f8db6165d8634cb77bcf2c34a1f3c09eb42\",\"dweb:/ipfs/Qmb5aNdpJrqry3o87KWwYf23kT691xf7GujzmQFy2S3sop\"]},\"contracts/interfaces/InterfaceDestination.sol\":{\"keccak256\":\"0x708371d239580f8e6dc44e790fd32f47e074cbfb8ae9e75609adbc0de303678c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5061c85c3779304f5c3919d2b1bc6620d1029a4ead7186c3f3f5b409a9bd855\",\"dweb:/ipfs/QmW4Hrz2NGMCRV2Rqv22G4xArsR4jUZtNr1garSR8AZud6\"]},\"contracts/interfaces/InterfaceLightManager.sol\":{\"keccak256\":\"0xfd56fe81fd6776faae469d615e66d71387512fac1997157a1dd3f80ada8e7dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1ef5b8bbdc189ce2148cc74f61f6eb9ca8bdcbf53ac84948ec72953ed4433d2\",\"dweb:/ipfs/Qmbe1Qm94avKV2mw1Yj33SZ698ykCA8vEpZhqjL9o4oqev\"]},\"contracts/interfaces/InterfaceOrigin.sol\":{\"keccak256\":\"0xe2c7feb15991348e274a413ee7e24c4cc4e2225c851924955ad2f025c8b5c42f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://314cdd9daf29e9d6ed288e02be302487cce6c0ca89805e5e8f6d78fb150c6ea6\",\"dweb:/ipfs/QmP6vY22Cpf45a3eDR6hPBnDDqCPcu4cRXJhH7W41ohkD6\"]},\"contracts/libs/Constants.sol\":{\"keccak256\":\"0x9ead9581411ac7f702ccba26e3f478610f8c9c785ec3f96f3d9324d162177c2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cba4a834737651bee39e2abca02d59e676cd149439d21182ab6e4320d5e61279\",\"dweb:/ipfs/QmS2K5LKspFZPKuedWoaqywUw6v1nH9xdHa35dN8J9jDEi\"]},\"contracts/libs/Errors.sol\":{\"keccak256\":\"0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b\",\"dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB\"]},\"contracts/libs/Structures.sol\":{\"keccak256\":\"0x3eaa63f5d9aac514328111e8fdd037dc6fdb18af7541a8287deeacd2e44f7137\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://633619910c74a0685ef2993a2e7cc44088929121a15c8a9fc26c9bbadffbda71\",\"dweb:/ipfs/QmZceJv6UntiMWW4JZHbmytLsqXshbuav8yoiritksvqqy\"]},\"contracts/libs/merkle/MerkleMath.sol\":{\"keccak256\":\"0xbd13c07bdc40b80f56c7d75e3f31b6c4a85a78d444b760604a5b71083d14925c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3162b491e4e216c0f2d143ce3baab4cf9e2a8b1b42466256a5d5b1f8b0385507\",\"dweb:/ipfs/QmYnDSZyxiGHfmB8Fx46zh1LZe3aCdVaKzpaQuD9piTc7u\"]},\"contracts/libs/stack/GasData.sol\":{\"keccak256\":\"0x2007fd4b97cf33bfe4aa7dc6ac887af87b4010ec9834636b4dd5685582ac26cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b54ca8b659d63ef7138c5b3b243190ca19b1e893b7b49dee1f8790d55b9e691\",\"dweb:/ipfs/Qmc2FGb16uosZ5kvyEK2onpWVPvWeE9X72xNWeJw8CbweD\"]},\"contracts/libs/stack/Number.sol\":{\"keccak256\":\"0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd\",\"dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5\"]},\"contracts/manager/AgentManager.sol\":{\"keccak256\":\"0x6b6bb9d62e624a5efa1d3bfbf0571a117ee48bbbb3868ebb6f8ff58071f6d475\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac93ed3f2c169c0297dd70f37e72595799738b4879131be12292dea8f5625663\",\"dweb:/ipfs/QmNwi7wXMaxg4kg4RxsUrxhz4jLocT7XrVyvQ2dfEAHqJi\"]},\"contracts/manager/LightManager.sol\":{\"keccak256\":\"0x174147269ca22fbaa91accd50de05a8190e11b2d6847323a4ec3a7458e8c2cda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f10c56e793c383ef84f3bd10b499b76dcf1a5b59b5cc5efad1747cde7fb2d5b\",\"dweb:/ipfs/QmY6PaFz899oCoap5Pf3ng7iwmzREuTD9c2FAoRUFv6Y1b\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AgentNotActiveNorUnstaking"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerNotDestination"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerNotInbox"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DisputeAlreadyResolved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DisputeNotOpened"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DisputeNotStuck"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "GuardInDispute"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectAgentDomain"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectAgentIndex"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectAgentProof"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectVersionLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IndexOutOfRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MustBeSynapseDomain"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotaryInDispute"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SynapseDomainForbidden"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TreeHeightTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawTipsOptimisticPeriod"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "disputeIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "guardIndex",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "notaryIndex",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DisputeOpened",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "disputeIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "slashedIndex",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "rivalIndex",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "fraudProver",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DisputeResolved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "newRoot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RootUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum AgentFlag",
              "name": "flag",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "agent",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StatusUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "agentRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "agentStatus",
          "outputs": [
            {
              "internalType": "struct AgentStatus",
              "name": "status",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum AgentFlag",
                  "name": "flag",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "domain",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "index",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "destination",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "disputeStatus",
          "outputs": [
            {
              "internalType": "enum DisputeFlag",
              "name": "flag",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "rival",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "fraudProver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "disputePtr",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgent",
          "outputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "struct AgentStatus",
              "name": "status",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum AgentFlag",
                  "name": "flag",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "domain",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "index",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDispute",
          "outputs": [
            {
              "internalType": "address",
              "name": "guard",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "notary",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "slashedAgent",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "fraudProver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "reportPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "reportSignature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDisputesAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "inbox",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "destination_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbox_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "localDomain",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MultiCallable.Call[]",
              "name": "calls",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bool",
                  "name": "allowFailure",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "struct MultiCallable.Result[]",
              "name": "callResults",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "returnData",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "guardIndex",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "notaryIndex",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "openDispute"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "origin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "msgOrigin",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "proofMaturity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remoteWithdrawTips",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "magicValue",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "slashedAgent",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resolveStuckDispute"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "agentRoot_",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAgentRoot"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "prover",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "slashAgent"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "struct AgentStatus",
              "name": "status",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum AgentFlag",
                  "name": "flag",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "domain",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "index",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgentStatus"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "versionString",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "agentStatus(address)": {
            "details": "Will return AgentFlag.Fraudulent for agents that have been proven to commit fraud, but their status is not updated to Slashed yet.",
            "params": {
              "agent": "Agent address"
            },
            "returns": {
              "status": "Status for the given agent: (flag, domain, index)."
            }
          },
          "disputeStatus(address)": {
            "details": "Every returned value will be set to zero if agent was not slashed and is not in Dispute. `rival` and `disputePtr` will be set to zero if the agent was slashed without being in Dispute.",
            "params": {
              "agent": "Agent address"
            },
            "returns": {
              "disputePtr": "  Index of the opened Dispute PLUS ONE. Zero if agent is not in Dispute.",
              "flag": "        Flag describing the current Dispute status for the agent: None/Pending/Slashed",
              "fraudProver": " Address who provided fraud proof to resolve the Dispute",
              "rival": "       Address of the rival agent in the Dispute"
            }
          },
          "getAgent(uint256)": {
            "details": "Will return empty values if agent with given index doesn't exist.",
            "params": {
              "index": "Agent index in the Agent Merkle Tree"
            },
            "returns": {
              "agent": "   Agent address",
              "status": "  Status for the given agent: (flag, domain, index)"
            }
          },
          "getDispute(uint256)": {
            "details": "Will revert if dispute with given index hasn't been opened yet.",
            "params": {
              "index": "Dispute index"
            },
            "returns": {
              "fraudProver": "     Address who provided fraud proof to resolve the Dispute",
              "guard": "           Address of the Guard in the Dispute",
              "notary": "          Address of the Notary in the Dispute",
              "reportPayload": "   Raw payload with report data that led to the Dispute",
              "reportSignature": " Guard signature for the report payload",
              "slashedAgent": "    Address of the Agent who was slashed when Dispute was resolved"
            }
          },
          "getDisputesAmount()": {
            "details": "This includes the Disputes that have been resolved already."
          },
          "openDispute(uint32,uint32)": {
            "params": {
              "guardIndex": "Index of the Guard in the Agent Merkle Tree",
              "notaryIndex": "Index of the Notary in the Agent Merkle Tree"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "remoteWithdrawTips(uint32,uint256,address,uint256)": {
            "details": "Could only be remote-called by BondingManager contract on Synapse Chain. Note: as an extra security check this function returns its own selector, so that Destination could verify that a \"remote\" function was called when executing a manager message.",
            "params": {
              "amount": "Tips value to withdraw",
              "recipient": "Address to withdraw tips to"
            }
          },
          "renounceOwnership()": {
            "details": "Should be impossible to renounce ownership; we override OpenZeppelin OwnableUpgradeable's implementation of renounceOwnership to make it a no-op"
          },
          "resolveStuckDispute(uint32,address)": {
            "params": {
              "slashedAgent": "Agent that is being slashed"
            }
          },
          "setAgentRoot(bytes32)": {
            "params": {
              "agentRoot": "New Agent Merkle Root"
            }
          },
          "slashAgent(uint32,address,address)": {
            "params": {
              "agent": "Address of the Agent",
              "domain": "Domain where the Agent is active",
              "prover": "Address that initially provided fraud proof"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateAgentStatus(address,(uint8,uint32,uint32),bytes32[])": {
            "details": "Will revert if the provided proof doesn't match the latest merkle root.",
            "params": {
              "agent": "Agent address",
              "proof": "Merkle proof of Active status for the agent",
              "status": "Structure specifying agent status: (flag, domain, index)"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "agentRoot()": {
            "notice": "Returns the latest known root of the Agent Merkle Tree."
          },
          "agentStatus(address)": {
            "notice": "Returns (flag, domain, index) for a given agent. See Structures.sol for details."
          },
          "disputeStatus(address)": {
            "notice": "Returns the current Dispute status of a given agent. See Structures.sol for details."
          },
          "getAgent(uint256)": {
            "notice": "Returns agent address and their current status for a given agent index."
          },
          "getDispute(uint256)": {
            "notice": "Returns information about the dispute with the given index."
          },
          "getDisputesAmount()": {
            "notice": "Returns the number of opened Disputes."
          },
          "localDomain()": {
            "notice": "Domain of the local chain, set once upon contract creation"
          },
          "multicall((bool,bytes)[])": {
            "notice": "Aggregates a few calls to this contract into one multicall without modifying `msg.sender`."
          },
          "openDispute(uint32,uint32)": {
            "notice": "Allows Inbox to open a Dispute between a Guard and a Notary, if they are both not in Dispute already. > Will revert if any of these is true: > - Caller is not Inbox. > - Guard or Notary is already in Dispute."
          },
          "remoteWithdrawTips(uint32,uint256,address,uint256)": {
            "notice": "Withdraws locked base message tips from local Origin to the recipient."
          },
          "resolveStuckDispute(uint32,address)": {
            "notice": "Allows contract owner to resolve a stuck Dispute. This could only be called if no fresh data has been submitted by the Notaries to the Inbox, which is required for the Dispute to be resolved naturally. > Will revert if any of these is true: > - Caller is not contract owner. > - Domain doesn't match the saved agent domain. > - `slashedAgent` is not in Dispute. > - Less than `FRESH_DATA_TIMEOUT` has passed since the last Notary submission to the Inbox."
          },
          "setAgentRoot(bytes32)": {
            "notice": "Updates the root of Agent Merkle Tree that the Light Manager is tracking. Could be only called by a local Destination contract, which is supposed to verify the attested Agent Merkle Roots."
          },
          "slashAgent(uint32,address,address)": {
            "notice": "Allows Inbox to slash an agent, if their fraud was proven. > Will revert if any of these is true: > - Caller is not Inbox. > - Domain doesn't match the saved agent domain."
          },
          "updateAgentStatus(address,(uint8,uint32,uint32),bytes32[])": {
            "notice": "Updates agent status, using a proof against the latest known Agent Merkle Root."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/manager/LightManager.sol": "LightManager"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/MessagingBase.sol": {
        "keccak256": "0x01a7e9d9a5547e90d2efc4478485c7fc308a870d596a47d2b59383eaf2a02dd1",
        "urls": [
          "bzz-raw://2a5ab808e51515e2a8d2efccb3f9d89054c2fc7e9cb5f44514b734a097d8c114",
          "dweb:/ipfs/QmUJ1E1MXy1H2Nb8xCGA7hpsTMNF3CXNoU11qGyd5M8498"
        ],
        "license": "MIT"
      },
      "contracts/base/MultiCallable.sol": {
        "keccak256": "0x9645f1629cdf8db803c40725f6b0ee165df64bfc142db4613efd385a88f13699",
        "urls": [
          "bzz-raw://cc99799fdd946c11c893b89dad922822c866d14bdecded86913948a146f71053",
          "dweb:/ipfs/QmZGRZuhU2w6pAStcaQ5NyzyeUn69nJCJd9a9NnjuBVLsn"
        ],
        "license": "MIT"
      },
      "contracts/base/Version.sol": {
        "keccak256": "0x63131bbdb149a0c83685da246afc0faa71d1009a20154b1f39650cef4369fe84",
        "urls": [
          "bzz-raw://21f001efca9d0550162dd1154f5b1d977c85a703e6df883103638ae0fe65af9b",
          "dweb:/ipfs/QmX3BfuJ3yKxWFXphq6RcKcGrja1v5xJQ1fFCwRQvGV8u8"
        ],
        "license": "MIT"
      },
      "contracts/events/AgentManagerEvents.sol": {
        "keccak256": "0xa56624a0db82d304bfba608d1b4d58f9c3d6165d6f7bfb2f7b90d91f232b646a",
        "urls": [
          "bzz-raw://32f9e512ad758b98cb3a99611a2cac035ec9e8b0e4f031c88ea8dd46bb2a7dbe",
          "dweb:/ipfs/QmbZXsV3jcBgbsAc8FRGTkMrWDVHPk19p2GoKkxmHov9ei"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IAgentManager.sol": {
        "keccak256": "0xc6fded8bc39cdb24e2bc038ba9b0ae168ad42fb15ed9d5883b89940b4e970a10",
        "urls": [
          "bzz-raw://898f25a9d1f375ab7e5dc7cd791263934b50d3b0a44dc29a4c914578a1b06339",
          "dweb:/ipfs/QmXi3CVhvWpGxVvmw4n7UvEoX2bD2ZD2rg4oZhYETYWJ3a"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IAgentSecured.sol": {
        "keccak256": "0x9a7efecf8fe37cc8245e3b0e3f5d6d6ee056cdd97ccb5631ff6347bdfc9fc889",
        "urls": [
          "bzz-raw://7877d223162a76d3fe75490069719b3a4f14cd66fc42bfa915f2813390b7d2aa",
          "dweb:/ipfs/QmZhE1rnffA9bbtkNAwVk6iitMPk14gHbK56mdeHQEPhxj"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStatementInbox.sol": {
        "keccak256": "0x99c93edd056d33d33ce57ae7d6d17328b88e94fe971c4e9d23d2fceaa9f1e41c",
        "urls": [
          "bzz-raw://76a2cf74f7a24ab3c669efab5372dff18a29463504b09a0d3dde4b4184a2eff3",
          "dweb:/ipfs/Qmb1sy2izNESmgS8FVkFHMXpWc2UM3unQeKMghFYCHNfn4"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceBondingManager.sol": {
        "keccak256": "0x0c94cb27bd86eb1f0a48bf9ae15f747f4d0cc9c3e210a7eb75f255d44ccb3ec6",
        "urls": [
          "bzz-raw://3ca990b2704379039a58af30ef2e4f8db6165d8634cb77bcf2c34a1f3c09eb42",
          "dweb:/ipfs/Qmb5aNdpJrqry3o87KWwYf23kT691xf7GujzmQFy2S3sop"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceDestination.sol": {
        "keccak256": "0x708371d239580f8e6dc44e790fd32f47e074cbfb8ae9e75609adbc0de303678c",
        "urls": [
          "bzz-raw://e5061c85c3779304f5c3919d2b1bc6620d1029a4ead7186c3f3f5b409a9bd855",
          "dweb:/ipfs/QmW4Hrz2NGMCRV2Rqv22G4xArsR4jUZtNr1garSR8AZud6"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceLightManager.sol": {
        "keccak256": "0xfd56fe81fd6776faae469d615e66d71387512fac1997157a1dd3f80ada8e7dac",
        "urls": [
          "bzz-raw://e1ef5b8bbdc189ce2148cc74f61f6eb9ca8bdcbf53ac84948ec72953ed4433d2",
          "dweb:/ipfs/Qmbe1Qm94avKV2mw1Yj33SZ698ykCA8vEpZhqjL9o4oqev"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceOrigin.sol": {
        "keccak256": "0xe2c7feb15991348e274a413ee7e24c4cc4e2225c851924955ad2f025c8b5c42f",
        "urls": [
          "bzz-raw://314cdd9daf29e9d6ed288e02be302487cce6c0ca89805e5e8f6d78fb150c6ea6",
          "dweb:/ipfs/QmP6vY22Cpf45a3eDR6hPBnDDqCPcu4cRXJhH7W41ohkD6"
        ],
        "license": "MIT"
      },
      "contracts/libs/Constants.sol": {
        "keccak256": "0x9ead9581411ac7f702ccba26e3f478610f8c9c785ec3f96f3d9324d162177c2c",
        "urls": [
          "bzz-raw://cba4a834737651bee39e2abca02d59e676cd149439d21182ab6e4320d5e61279",
          "dweb:/ipfs/QmS2K5LKspFZPKuedWoaqywUw6v1nH9xdHa35dN8J9jDEi"
        ],
        "license": "MIT"
      },
      "contracts/libs/Errors.sol": {
        "keccak256": "0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011",
        "urls": [
          "bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b",
          "dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB"
        ],
        "license": "MIT"
      },
      "contracts/libs/Structures.sol": {
        "keccak256": "0x3eaa63f5d9aac514328111e8fdd037dc6fdb18af7541a8287deeacd2e44f7137",
        "urls": [
          "bzz-raw://633619910c74a0685ef2993a2e7cc44088929121a15c8a9fc26c9bbadffbda71",
          "dweb:/ipfs/QmZceJv6UntiMWW4JZHbmytLsqXshbuav8yoiritksvqqy"
        ],
        "license": "MIT"
      },
      "contracts/libs/merkle/MerkleMath.sol": {
        "keccak256": "0xbd13c07bdc40b80f56c7d75e3f31b6c4a85a78d444b760604a5b71083d14925c",
        "urls": [
          "bzz-raw://3162b491e4e216c0f2d143ce3baab4cf9e2a8b1b42466256a5d5b1f8b0385507",
          "dweb:/ipfs/QmYnDSZyxiGHfmB8Fx46zh1LZe3aCdVaKzpaQuD9piTc7u"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/GasData.sol": {
        "keccak256": "0x2007fd4b97cf33bfe4aa7dc6ac887af87b4010ec9834636b4dd5685582ac26cb",
        "urls": [
          "bzz-raw://8b54ca8b659d63ef7138c5b3b243190ca19b1e893b7b49dee1f8790d55b9e691",
          "dweb:/ipfs/Qmc2FGb16uosZ5kvyEK2onpWVPvWeE9X72xNWeJw8CbweD"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Number.sol": {
        "keccak256": "0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96",
        "urls": [
          "bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd",
          "dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5"
        ],
        "license": "MIT"
      },
      "contracts/manager/AgentManager.sol": {
        "keccak256": "0x6b6bb9d62e624a5efa1d3bfbf0571a117ee48bbbb3868ebb6f8ff58071f6d475",
        "urls": [
          "bzz-raw://ac93ed3f2c169c0297dd70f37e72595799738b4879131be12292dea8f5625663",
          "dweb:/ipfs/QmNwi7wXMaxg4kg4RxsUrxhz4jLocT7XrVyvQ2dfEAHqJi"
        ],
        "license": "MIT"
      },
      "contracts/manager/LightManager.sol": {
        "keccak256": "0x174147269ca22fbaa91accd50de05a8190e11b2d6847323a4ec3a7458e8c2cda",
        "urls": [
          "bzz-raw://1f10c56e793c383ef84f3bd10b499b76dcf1a5b59b5cc5efad1747cde7fb2d5b",
          "dweb:/ipfs/QmY6PaFz899oCoap5Pf3ng7iwmzREuTD9c2FAoRUFv6Y1b"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34",
        "urls": [
          "bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7",
          "dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba",
        "urls": [
          "bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8",
          "dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d",
        "urls": [
          "bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f",
          "dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/manager/LightManager.sol",
    "id": 17982,
    "exportedSymbols": {
      "AGENT_TREE_HEIGHT": [
        10059
      ],
      "AgentFlag": [
        10349
      ],
      "AgentManager": [
        16652
      ],
      "AgentStatus": [
        10357
      ],
      "BONDING_OPTIMISTIC_PERIOD": [
        10154
      ],
      "CallerNotDestination": [
        10176
      ],
      "IAgentManager": [
        9127
      ],
      "IAgentSecured": [
        9180
      ],
      "IncorrectAgentIndex": [
        10186
      ],
      "IncorrectAgentProof": [
        10188
      ],
      "InterfaceBondingManager": [
        9644
      ],
      "InterfaceLightManager": [
        9911
      ],
      "InterfaceOrigin": [
        9966
      ],
      "LightManager": [
        17981
      ],
      "MerkleMath": [
        14266
      ],
      "MessagingBase": [
        2851
      ],
      "MustBeSynapseDomain": [
        10290
      ],
      "SYNAPSE_DOMAIN": [
        10170
      ],
      "SynapseDomainForbidden": [
        10292
      ],
      "WithdrawTipsOptimisticPeriod": [
        10260
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:9333:66",
    "nodes": [
      {
        "id": 17579,
        "nodeType": "PragmaDirective",
        "src": "32:23:66",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 17583,
        "nodeType": "ImportDirective",
        "src": "258:99:66",
        "nodes": [],
        "absolutePath": "contracts/libs/Constants.sol",
        "file": "../libs/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17982,
        "sourceUnit": 10171,
        "symbolAliases": [
          {
            "foreign": {
              "id": 17580,
              "name": "AGENT_TREE_HEIGHT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10059,
              "src": "266:17:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 17581,
              "name": "BONDING_OPTIMISTIC_PERIOD",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10154,
              "src": "285:25:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 17582,
              "name": "SYNAPSE_DOMAIN",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10170,
              "src": "312:14:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 17590,
        "nodeType": "ImportDirective",
        "src": "358:199:66",
        "nodes": [],
        "absolutePath": "contracts/libs/Errors.sol",
        "file": "../libs/Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17982,
        "sourceUnit": 10335,
        "symbolAliases": [
          {
            "foreign": {
              "id": 17584,
              "name": "IncorrectAgentIndex",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10186,
              "src": "371:19:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 17585,
              "name": "IncorrectAgentProof",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10188,
              "src": "396:19:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 17586,
              "name": "CallerNotDestination",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10176,
              "src": "421:20:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 17587,
              "name": "MustBeSynapseDomain",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10290,
              "src": "447:19:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 17588,
              "name": "SynapseDomainForbidden",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10292,
              "src": "472:22:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 17589,
              "name": "WithdrawTipsOptimisticPeriod",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10260,
              "src": "500:28:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 17592,
        "nodeType": "ImportDirective",
        "src": "558:57:66",
        "nodes": [],
        "absolutePath": "contracts/libs/merkle/MerkleMath.sol",
        "file": "../libs/merkle/MerkleMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17982,
        "sourceUnit": 14267,
        "symbolAliases": [
          {
            "foreign": {
              "id": 17591,
              "name": "MerkleMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14266,
              "src": "566:10:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 17595,
        "nodeType": "ImportDirective",
        "src": "616:62:66",
        "nodes": [],
        "absolutePath": "contracts/libs/Structures.sol",
        "file": "../libs/Structures.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17982,
        "sourceUnit": 10474,
        "symbolAliases": [
          {
            "foreign": {
              "id": 17593,
              "name": "AgentFlag",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10349,
              "src": "624:9:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 17594,
              "name": "AgentStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10357,
              "src": "635:11:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 17598,
        "nodeType": "ImportDirective",
        "src": "878:63:66",
        "nodes": [],
        "absolutePath": "contracts/manager/AgentManager.sol",
        "file": "./AgentManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17982,
        "sourceUnit": 16653,
        "symbolAliases": [
          {
            "foreign": {
              "id": 17596,
              "name": "AgentManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 16652,
              "src": "886:12:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 17597,
              "name": "IAgentManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9127,
              "src": "900:13:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 17600,
        "nodeType": "ImportDirective",
        "src": "942:56:66",
        "nodes": [],
        "absolutePath": "contracts/base/MessagingBase.sol",
        "file": "../base/MessagingBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17982,
        "sourceUnit": 2852,
        "symbolAliases": [
          {
            "foreign": {
              "id": 17599,
              "name": "MessagingBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2851,
              "src": "950:13:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 17602,
        "nodeType": "ImportDirective",
        "src": "999:62:66",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IAgentSecured.sol",
        "file": "../interfaces/IAgentSecured.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17982,
        "sourceUnit": 9181,
        "symbolAliases": [
          {
            "foreign": {
              "id": 17601,
              "name": "IAgentSecured",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9180,
              "src": "1007:13:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 17604,
        "nodeType": "ImportDirective",
        "src": "1062:82:66",
        "nodes": [],
        "absolutePath": "contracts/interfaces/InterfaceBondingManager.sol",
        "file": "../interfaces/InterfaceBondingManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17982,
        "sourceUnit": 9645,
        "symbolAliases": [
          {
            "foreign": {
              "id": 17603,
              "name": "InterfaceBondingManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9644,
              "src": "1070:23:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 17606,
        "nodeType": "ImportDirective",
        "src": "1145:78:66",
        "nodes": [],
        "absolutePath": "contracts/interfaces/InterfaceLightManager.sol",
        "file": "../interfaces/InterfaceLightManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17982,
        "sourceUnit": 9912,
        "symbolAliases": [
          {
            "foreign": {
              "id": 17605,
              "name": "InterfaceLightManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9911,
              "src": "1153:21:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 17608,
        "nodeType": "ImportDirective",
        "src": "1224:66:66",
        "nodes": [],
        "absolutePath": "contracts/interfaces/InterfaceOrigin.sol",
        "file": "../interfaces/InterfaceOrigin.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17982,
        "sourceUnit": 9967,
        "symbolAliases": [
          {
            "foreign": {
              "id": 17607,
              "name": "InterfaceOrigin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9966,
              "src": "1232:15:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 17981,
        "nodeType": "ContractDefinition",
        "src": "1947:7417:66",
        "nodes": [
          {
            "id": 17616,
            "nodeType": "VariableDeclaration",
            "src": "2377:24:66",
            "nodes": [],
            "baseFunctions": [
              9067
            ],
            "constant": false,
            "documentation": {
              "id": 17614,
              "nodeType": "StructuredDocumentation",
              "src": "2343:29:66",
              "text": "@inheritdoc IAgentManager"
            },
            "functionSelector": "36cba43c",
            "mutability": "mutable",
            "name": "agentRoot",
            "nameLocation": "2392:9:66",
            "scope": 17981,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 17615,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2377:7:66",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 17623,
            "nodeType": "VariableDeclaration",
            "src": "2448:69:66",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_agentMap",
            "nameLocation": "2508:9:66",
            "scope": 17981,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_AgentStatus_$10357_storage_$_$",
              "typeString": "mapping(bytes32 => mapping(address => struct AgentStatus))"
            },
            "typeName": {
              "id": 17622,
              "keyType": {
                "id": 17617,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2456:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2448:51:66",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_AgentStatus_$10357_storage_$_$",
                "typeString": "mapping(bytes32 => mapping(address => struct AgentStatus))"
              },
              "valueType": {
                "id": 17621,
                "keyType": {
                  "id": 17618,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2475:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2467:31:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AgentStatus_$10357_storage_$",
                  "typeString": "mapping(address => struct AgentStatus)"
                },
                "valueType": {
                  "id": 17620,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 17619,
                    "name": "AgentStatus",
                    "nameLocations": [
                      "2486:11:66"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 10357,
                    "src": "2486:11:66"
                  },
                  "referencedDeclaration": 10357,
                  "src": "2486:11:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AgentStatus_$10357_storage_ptr",
                    "typeString": "struct AgentStatus"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 17627,
            "nodeType": "VariableDeclaration",
            "src": "2548:43:66",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_agents",
            "nameLocation": "2584:7:66",
            "scope": 17981,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 17626,
              "keyType": {
                "id": 17624,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2556:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2548:27:66",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 17625,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2567:7:66",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 17631,
            "nodeType": "VariableDeclaration",
            "src": "2622:49:66",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_agentIndexes",
            "nameLocation": "2658:13:66",
            "scope": 17981,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 17630,
              "keyType": {
                "id": 17628,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2630:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2622:27:66",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 17629,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2641:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 17648,
            "nodeType": "FunctionDefinition",
            "src": "2972:136:66",
            "nodes": [],
            "body": {
              "id": 17647,
              "nodeType": "Block",
              "src": "3030:78:66",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 17642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 17640,
                      "name": "domain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17633,
                      "src": "3044:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 17641,
                      "name": "SYNAPSE_DOMAIN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10170,
                      "src": "3054:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3044:24:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17646,
                  "nodeType": "IfStatement",
                  "src": "3040:61:66",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 17643,
                        "name": "SynapseDomainForbidden",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10292,
                        "src": "3077:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 17644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3077:24:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 17645,
                    "nodeType": "RevertStatement",
                    "src": "3070:31:66"
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "302e302e33",
                    "id": 17636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3013:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cf7237ef3acb94b87ad359c2a069e622db390803036159a6818cbdd245669abf",
                      "typeString": "literal_string \"0.0.3\""
                    },
                    "value": "0.0.3"
                  },
                  {
                    "id": 17637,
                    "name": "domain",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17633,
                    "src": "3022:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 17638,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 17635,
                  "name": "MessagingBase",
                  "nameLocations": [
                    "2999:13:66"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2851,
                  "src": "2999:13:66"
                },
                "nodeType": "ModifierInvocation",
                "src": "2999:30:66"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 17634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17633,
                  "mutability": "mutable",
                  "name": "domain",
                  "nameLocation": "2991:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17648,
                  "src": "2984:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 17632,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2984:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2983:15:66"
            },
            "returnParameters": {
              "id": 17639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3030:0:66"
            },
            "scope": 17981,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 17669,
            "nodeType": "FunctionDefinition",
            "src": "3114:189:66",
            "nodes": [],
            "body": {
              "id": 17668,
              "nodeType": "Block",
              "src": "3210:93:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17660,
                        "name": "origin_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17650,
                        "src": "3240:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17661,
                        "name": "destination_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17652,
                        "src": "3249:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17662,
                        "name": "inbox_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17654,
                        "src": "3263:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 17659,
                      "name": "__AgentManager_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16010,
                      "src": "3220:19:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 17663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3220:50:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17664,
                  "nodeType": "ExpressionStatement",
                  "src": "3220:50:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 17665,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46594,
                      "src": "3280:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 17666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3280:16:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17667,
                  "nodeType": "ExpressionStatement",
                  "src": "3280:16:66"
                }
              ]
            },
            "functionSelector": "c0c53b8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17657,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 17656,
                  "name": "initializer",
                  "nameLocations": [
                    "3198:11:66"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46735,
                  "src": "3198:11:66"
                },
                "nodeType": "ModifierInvocation",
                "src": "3198:11:66"
              }
            ],
            "name": "initialize",
            "nameLocation": "3123:10:66",
            "parameters": {
              "id": 17655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17650,
                  "mutability": "mutable",
                  "name": "origin_",
                  "nameLocation": "3142:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17669,
                  "src": "3134:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3134:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17652,
                  "mutability": "mutable",
                  "name": "destination_",
                  "nameLocation": "3159:12:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17669,
                  "src": "3151:20:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3151:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17654,
                  "mutability": "mutable",
                  "name": "inbox_",
                  "nameLocation": "3181:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17669,
                  "src": "3173:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3173:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3133:55:66"
            },
            "returnParameters": {
              "id": 17658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3210:0:66"
            },
            "scope": 17981,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 17783,
            "nodeType": "FunctionDefinition",
            "src": "3671:1195:66",
            "nodes": [],
            "body": {
              "id": 17782,
              "nodeType": "Block",
              "src": "3773:1093:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    17682
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17682,
                      "mutability": "mutable",
                      "name": "storedAgent",
                      "nameLocation": "3791:11:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 17782,
                      "src": "3783:19:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 17681,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3783:7:66",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17687,
                  "initialValue": {
                    "baseExpression": {
                      "id": 17683,
                      "name": "_agents",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17627,
                      "src": "3805:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 17686,
                    "indexExpression": {
                      "expression": {
                        "id": 17684,
                        "name": "status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17675,
                        "src": "3813:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                          "typeString": "struct AgentStatus memory"
                        }
                      },
                      "id": 17685,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3820:5:66",
                      "memberName": "index",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10356,
                      "src": "3813:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3805:21:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3783:43:66"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 17697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 17693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 17688,
                        "name": "storedAgent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17682,
                        "src": "3840:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 17691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3863:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 17690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3855:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 17689,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3855:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 17692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3855:10:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3840:25:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 17696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 17694,
                        "name": "storedAgent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17682,
                        "src": "3869:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 17695,
                        "name": "agent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17672,
                        "src": "3884:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3869:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3840:49:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17701,
                  "nodeType": "IfStatement",
                  "src": "3836:83:66",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 17698,
                        "name": "IncorrectAgentIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10186,
                        "src": "3898:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 17699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3898:21:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 17700,
                    "nodeType": "RevertStatement",
                    "src": "3891:28:66"
                  }
                },
                {
                  "assignments": [
                    17703
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17703,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "3998:4:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 17782,
                      "src": "3990:12:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 17702,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3990:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17711,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 17705,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17675,
                          "src": "4016:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                            "typeString": "struct AgentStatus memory"
                          }
                        },
                        "id": 17706,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4023:4:66",
                        "memberName": "flag",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10352,
                        "src": "4016:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AgentFlag_$10349",
                          "typeString": "enum AgentFlag"
                        }
                      },
                      {
                        "expression": {
                          "id": 17707,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17675,
                          "src": "4029:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                            "typeString": "struct AgentStatus memory"
                          }
                        },
                        "id": 17708,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4036:6:66",
                        "memberName": "domain",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10354,
                        "src": "4029:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 17709,
                        "name": "agent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17672,
                        "src": "4044:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_AgentFlag_$10349",
                          "typeString": "enum AgentFlag"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 17704,
                      "name": "_agentLeaf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16626,
                      "src": "4005:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_enum$_AgentFlag_$10349_$_t_uint32_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (enum AgentFlag,uint32,address) pure returns (bytes32)"
                      }
                    },
                    "id": 17710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4005:45:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3990:60:66"
                },
                {
                  "assignments": [
                    17713
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17713,
                      "mutability": "mutable",
                      "name": "root",
                      "nameLocation": "4068:4:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 17782,
                      "src": "4060:12:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 17712,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4060:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17715,
                  "initialValue": {
                    "id": 17714,
                    "name": "agentRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17616,
                    "src": "4075:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4060:24:66"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 17725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 17718,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17675,
                            "src": "4178:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                              "typeString": "struct AgentStatus memory"
                            }
                          },
                          "id": 17719,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4185:5:66",
                          "memberName": "index",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10356,
                          "src": "4178:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 17720,
                          "name": "leaf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17703,
                          "src": "4192:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 17721,
                          "name": "proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17678,
                          "src": "4198:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        {
                          "id": 17722,
                          "name": "AGENT_TREE_HEIGHT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10059,
                          "src": "4205:17:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 17716,
                          "name": "MerkleMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14266,
                          "src": "4157:10:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MerkleMath_$14266_$",
                            "typeString": "type(library MerkleMath)"
                          }
                        },
                        "id": 17717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4168:9:66",
                        "memberName": "proofRoot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13929,
                        "src": "4157:20:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (uint256,bytes32,bytes32[] memory,uint256) pure returns (bytes32)"
                        }
                      },
                      "id": 17723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4157:66:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 17724,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17713,
                      "src": "4227:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4157:74:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17729,
                  "nodeType": "IfStatement",
                  "src": "4153:108:66",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 17726,
                        "name": "IncorrectAgentProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10188,
                        "src": "4240:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 17727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4240:21:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 17728,
                    "nodeType": "RevertStatement",
                    "src": "4233:28:66"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 17735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 17730,
                      "name": "storedAgent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17682,
                      "src": "4317:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 17733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4340:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 17732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4332:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 17731,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4332:7:66",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 17734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4332:10:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4317:25:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17751,
                  "nodeType": "IfStatement",
                  "src": "4313:134:66",
                  "trueBody": {
                    "id": 17750,
                    "nodeType": "Block",
                    "src": "4344:103:66",
                    "statements": [
                      {
                        "expression": {
                          "id": 17741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 17736,
                              "name": "_agents",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17627,
                              "src": "4358:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 17739,
                            "indexExpression": {
                              "expression": {
                                "id": 17737,
                                "name": "status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17675,
                                "src": "4366:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                                  "typeString": "struct AgentStatus memory"
                                }
                              },
                              "id": 17738,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4373:5:66",
                              "memberName": "index",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10356,
                              "src": "4366:12:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4358:21:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 17740,
                            "name": "agent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17672,
                            "src": "4382:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4358:29:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 17742,
                        "nodeType": "ExpressionStatement",
                        "src": "4358:29:66"
                      },
                      {
                        "expression": {
                          "id": 17748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 17743,
                              "name": "_agentIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17631,
                              "src": "4401:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 17745,
                            "indexExpression": {
                              "id": 17744,
                              "name": "agent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17672,
                              "src": "4415:5:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4401:20:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 17746,
                              "name": "status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17675,
                              "src": "4424:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                                "typeString": "struct AgentStatus memory"
                              }
                            },
                            "id": 17747,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4431:5:66",
                            "memberName": "index",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10356,
                            "src": "4424:12:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "4401:35:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 17749,
                        "nodeType": "ExpressionStatement",
                        "src": "4401:35:66"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 17758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 17752,
                          "name": "_agentMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17623,
                          "src": "4509:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_AgentStatus_$10357_storage_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => struct AgentStatus storage ref))"
                          }
                        },
                        "id": 17755,
                        "indexExpression": {
                          "id": 17753,
                          "name": "root",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17713,
                          "src": "4519:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4509:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AgentStatus_$10357_storage_$",
                          "typeString": "mapping(address => struct AgentStatus storage ref)"
                        }
                      },
                      "id": 17756,
                      "indexExpression": {
                        "id": 17754,
                        "name": "agent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17672,
                        "src": "4525:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4509:22:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AgentStatus_$10357_storage",
                        "typeString": "struct AgentStatus storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 17757,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17675,
                      "src": "4534:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                        "typeString": "struct AgentStatus memory"
                      }
                    },
                    "src": "4509:31:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AgentStatus_$10357_storage",
                      "typeString": "struct AgentStatus storage ref"
                    }
                  },
                  "id": 17759,
                  "nodeType": "ExpressionStatement",
                  "src": "4509:31:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 17761,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17675,
                          "src": "4569:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                            "typeString": "struct AgentStatus memory"
                          }
                        },
                        "id": 17762,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4576:4:66",
                        "memberName": "flag",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10352,
                        "src": "4569:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AgentFlag_$10349",
                          "typeString": "enum AgentFlag"
                        }
                      },
                      {
                        "expression": {
                          "id": 17763,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17675,
                          "src": "4582:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                            "typeString": "struct AgentStatus memory"
                          }
                        },
                        "id": 17764,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4589:6:66",
                        "memberName": "domain",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10354,
                        "src": "4582:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 17765,
                        "name": "agent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17672,
                        "src": "4597:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_AgentFlag_$10349",
                          "typeString": "enum AgentFlag"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 17760,
                      "name": "StatusUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3921,
                      "src": "4555:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_AgentFlag_$10349_$_t_uint32_$_t_address_$returns$__$",
                        "typeString": "function (enum AgentFlag,uint32,address)"
                      }
                    },
                    "id": 17766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4555:48:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17767,
                  "nodeType": "EmitStatement",
                  "src": "4550:53:66"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_AgentFlag_$10349",
                      "typeString": "enum AgentFlag"
                    },
                    "id": 17772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 17768,
                        "name": "status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17675,
                        "src": "4690:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                          "typeString": "struct AgentStatus memory"
                        }
                      },
                      "id": 17769,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4697:4:66",
                      "memberName": "flag",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10352,
                      "src": "4690:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgentFlag_$10349",
                        "typeString": "enum AgentFlag"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 17770,
                        "name": "AgentFlag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10349,
                        "src": "4705:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AgentFlag_$10349_$",
                          "typeString": "type(enum AgentFlag)"
                        }
                      },
                      "id": 17771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4715:7:66",
                      "memberName": "Slashed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10348,
                      "src": "4705:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgentFlag_$10349",
                        "typeString": "enum AgentFlag"
                      }
                    },
                    "src": "4690:32:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17781,
                  "nodeType": "IfStatement",
                  "src": "4686:174:66",
                  "trueBody": {
                    "id": 17780,
                    "nodeType": "Block",
                    "src": "4724:136:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 17774,
                                "name": "status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17675,
                                "src": "4824:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                                  "typeString": "struct AgentStatus memory"
                                }
                              },
                              "id": 17775,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4831:5:66",
                              "memberName": "index",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10356,
                              "src": "4824:12:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "expression": {
                                "id": 17776,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4838:3:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 17777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4842:6:66",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4838:10:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17773,
                            "name": "_resolveDispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16603,
                            "src": "4808:15:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_address_$returns$__$",
                              "typeString": "function (uint32,address)"
                            }
                          },
                          "id": 17778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4808:41:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 17779,
                        "nodeType": "ExpressionStatement",
                        "src": "4808:41:66"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              9890
            ],
            "documentation": {
              "id": 17670,
              "nodeType": "StructuredDocumentation",
              "src": "3629:37:66",
              "text": "@inheritdoc InterfaceLightManager"
            },
            "functionSelector": "cbd05965",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateAgentStatus",
            "nameLocation": "3680:17:66",
            "parameters": {
              "id": 17679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17672,
                  "mutability": "mutable",
                  "name": "agent",
                  "nameLocation": "3706:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17783,
                  "src": "3698:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17671,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3698:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17675,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "3732:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17783,
                  "src": "3713:25:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                    "typeString": "struct AgentStatus"
                  },
                  "typeName": {
                    "id": 17674,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 17673,
                      "name": "AgentStatus",
                      "nameLocations": [
                        "3713:11:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10357,
                      "src": "3713:11:66"
                    },
                    "referencedDeclaration": 10357,
                    "src": "3713:11:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AgentStatus_$10357_storage_ptr",
                      "typeString": "struct AgentStatus"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17678,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "3757:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17783,
                  "src": "3740:22:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17676,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3740:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 17677,
                    "nodeType": "ArrayTypeName",
                    "src": "3740:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3697:66:66"
            },
            "returnParameters": {
              "id": 17680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3773:0:66"
            },
            "scope": 17981,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 17802,
            "nodeType": "FunctionDefinition",
            "src": "4914:220:66",
            "nodes": [],
            "body": {
              "id": 17801,
              "nodeType": "Block",
              "src": "4965:169:66",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 17792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 17789,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5036:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 17790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5040:6:66",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5036:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 17791,
                      "name": "destination",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15958,
                      "src": "5050:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5036:25:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17796,
                  "nodeType": "IfStatement",
                  "src": "5032:60:66",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 17793,
                        "name": "CallerNotDestination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10176,
                        "src": "5070:20:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 17794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5070:22:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 17795,
                    "nodeType": "RevertStatement",
                    "src": "5063:29:66"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17798,
                        "name": "agentRoot_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17786,
                        "src": "5116:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 17797,
                      "name": "_setAgentRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17935,
                      "src": "5102:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 17799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5102:25:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17800,
                  "nodeType": "ExpressionStatement",
                  "src": "5102:25:66"
                }
              ]
            },
            "baseFunctions": [
              9896
            ],
            "documentation": {
              "id": 17784,
              "nodeType": "StructuredDocumentation",
              "src": "4872:37:66",
              "text": "@inheritdoc InterfaceLightManager"
            },
            "functionSelector": "58668176",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAgentRoot",
            "nameLocation": "4923:12:66",
            "parameters": {
              "id": 17787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17786,
                  "mutability": "mutable",
                  "name": "agentRoot_",
                  "nameLocation": "4944:10:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17802,
                  "src": "4936:18:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 17785,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4936:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4935:20:66"
            },
            "returnParameters": {
              "id": 17788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4965:0:66"
            },
            "scope": 17981,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 17851,
            "nodeType": "FunctionDefinition",
            "src": "5506:850:66",
            "nodes": [],
            "body": {
              "id": 17850,
              "nodeType": "Block",
              "src": "5667:689:66",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 17819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 17816,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5735:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 17817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5739:6:66",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5735:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 17818,
                      "name": "destination",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15958,
                      "src": "5749:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5735:25:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17823,
                  "nodeType": "IfStatement",
                  "src": "5731:60:66",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 17820,
                        "name": "CallerNotDestination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10176,
                        "src": "5769:20:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 17821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5769:22:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 17822,
                    "nodeType": "RevertStatement",
                    "src": "5762:29:66"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 17826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 17824,
                      "name": "msgOrigin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17805,
                      "src": "5890:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 17825,
                      "name": "SYNAPSE_DOMAIN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10170,
                      "src": "5903:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "5890:27:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17830,
                  "nodeType": "IfStatement",
                  "src": "5886:61:66",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 17827,
                        "name": "MustBeSynapseDomain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10290,
                        "src": "5926:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 17828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5926:21:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 17829,
                    "nodeType": "RevertStatement",
                    "src": "5919:28:66"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 17833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 17831,
                      "name": "proofMaturity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17807,
                      "src": "6087:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 17832,
                      "name": "BONDING_OPTIMISTIC_PERIOD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10154,
                      "src": "6103:25:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "6087:41:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17837,
                  "nodeType": "IfStatement",
                  "src": "6083:84:66",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 17834,
                        "name": "WithdrawTipsOptimisticPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10260,
                        "src": "6137:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 17835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6137:30:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 17836,
                    "nodeType": "RevertStatement",
                    "src": "6130:37:66"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17842,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17809,
                        "src": "6214:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17843,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17811,
                        "src": "6225:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 17839,
                            "name": "origin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15956,
                            "src": "6193:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 17838,
                          "name": "InterfaceOrigin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9966,
                          "src": "6177:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_InterfaceOrigin_$9966_$",
                            "typeString": "type(contract InterfaceOrigin)"
                          }
                        },
                        "id": 17840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6177:23:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InterfaceOrigin_$9966",
                          "typeString": "contract InterfaceOrigin"
                        }
                      },
                      "id": 17841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6201:12:66",
                      "memberName": "withdrawTips",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9953,
                      "src": "6177:36:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 17844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6177:55:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17845,
                  "nodeType": "ExpressionStatement",
                  "src": "6177:55:66"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 17846,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "6317:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LightManager_$17981",
                          "typeString": "contract LightManager"
                        }
                      },
                      "id": 17847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6322:18:66",
                      "memberName": "remoteWithdrawTips",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17851,
                      "src": "6317:23:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_bytes4_$",
                        "typeString": "function (uint32,uint256,address,uint256) external returns (bytes4)"
                      }
                    },
                    "id": 17848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "6341:8:66",
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "6317:32:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 17815,
                  "id": 17849,
                  "nodeType": "Return",
                  "src": "6310:39:66"
                }
              ]
            },
            "baseFunctions": [
              9910
            ],
            "documentation": {
              "id": 17803,
              "nodeType": "StructuredDocumentation",
              "src": "5464:37:66",
              "text": "@inheritdoc InterfaceLightManager"
            },
            "functionSelector": "1fa07138",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remoteWithdrawTips",
            "nameLocation": "5515:18:66",
            "parameters": {
              "id": 17812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17805,
                  "mutability": "mutable",
                  "name": "msgOrigin",
                  "nameLocation": "5541:9:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17851,
                  "src": "5534:16:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 17804,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5534:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17807,
                  "mutability": "mutable",
                  "name": "proofMaturity",
                  "nameLocation": "5560:13:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17851,
                  "src": "5552:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5552:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17809,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "5583:9:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17851,
                  "src": "5575:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5575:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17811,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5602:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17851,
                  "src": "5594:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5594:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5533:76:66"
            },
            "returnParameters": {
              "id": 17815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17814,
                  "mutability": "mutable",
                  "name": "magicValue",
                  "nameLocation": "5651:10:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17851,
                  "src": "5644:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 17813,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5644:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5643:19:66"
            },
            "scope": 17981,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 17879,
            "nodeType": "FunctionDefinition",
            "src": "6678:570:66",
            "nodes": [],
            "body": {
              "id": 17878,
              "nodeType": "Block",
              "src": "6778:470:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17865,
                        "name": "SYNAPSE_DOMAIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10170,
                        "src": "7040:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 17866,
                        "name": "BONDING_OPTIMISTIC_PERIOD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10154,
                        "src": "7086:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 17869,
                                "name": "InterfaceBondingManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9644,
                                "src": "7157:23:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_InterfaceBondingManager_$9644_$",
                                  "typeString": "type(contract InterfaceBondingManager)"
                                }
                              },
                              "id": 17870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7181:16:66",
                              "memberName": "remoteSlashAgent",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9583,
                              "src": "7157:40:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint32_$_t_uint256_$_t_uint32_$_t_address_$_t_address_$returns$_t_bytes4_$",
                                "typeString": "function InterfaceBondingManager.remoteSlashAgent(uint32,uint256,uint32,address,address) returns (bytes4)"
                              }
                            },
                            "id": 17871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "7198:8:66",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "7157:49:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 17872,
                            "name": "domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17853,
                            "src": "7208:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 17873,
                            "name": "agent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17855,
                            "src": "7216:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 17874,
                            "name": "prover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17857,
                            "src": "7223:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 17867,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7134:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 17868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7138:18:66",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "7134:22:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 17875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7134:96:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 17862,
                            "name": "origin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15956,
                            "src": "6986:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 17861,
                          "name": "InterfaceOrigin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9966,
                          "src": "6970:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_InterfaceOrigin_$9966_$",
                            "typeString": "type(contract InterfaceOrigin)"
                          }
                        },
                        "id": 17863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6970:23:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InterfaceOrigin_$9966",
                          "typeString": "contract InterfaceOrigin"
                        }
                      },
                      "id": 17864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6994:18:66",
                      "memberName": "sendManagerMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9945,
                      "src": "6970:42:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_uint32_$_t_bytes_memory_ptr_$returns$_t_uint32_$_t_bytes32_$",
                        "typeString": "function (uint32,uint32,bytes memory) external returns (uint32,bytes32)"
                      }
                    },
                    "id": 17876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "7027:11:66",
                      "7068:16:66",
                      "7125:7:66"
                    ],
                    "names": [
                      "destination",
                      "optimisticPeriod",
                      "payload"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6970:271:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint32_$_t_bytes32_$",
                      "typeString": "tuple(uint32,bytes32)"
                    }
                  },
                  "id": 17877,
                  "nodeType": "ExpressionStatement",
                  "src": "6970:271:66"
                }
              ]
            },
            "baseFunctions": [
              16433
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterAgentSlashed",
            "nameLocation": "6687:18:66",
            "overrides": {
              "id": 17859,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6769:8:66"
            },
            "parameters": {
              "id": 17858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17853,
                  "mutability": "mutable",
                  "name": "domain",
                  "nameLocation": "6713:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17879,
                  "src": "6706:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 17852,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6706:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17855,
                  "mutability": "mutable",
                  "name": "agent",
                  "nameLocation": "6729:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17879,
                  "src": "6721:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6721:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17857,
                  "mutability": "mutable",
                  "name": "prover",
                  "nameLocation": "6744:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17879,
                  "src": "6736:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17856,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6736:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6705:46:66"
            },
            "returnParameters": {
              "id": 17860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6778:0:66"
            },
            "scope": 17981,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 17897,
            "nodeType": "FunctionDefinition",
            "src": "7329:233:66",
            "nodes": [],
            "body": {
              "id": 17896,
              "nodeType": "Block",
              "src": "7416:146:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17892,
                        "name": "guardIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17882,
                        "src": "7531:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 17893,
                        "name": "notaryIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17884,
                        "src": "7543:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 17889,
                            "name": "destination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15958,
                            "src": "7506:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 17888,
                          "name": "IAgentSecured",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9180,
                          "src": "7492:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAgentSecured_$9180_$",
                            "typeString": "type(contract IAgentSecured)"
                          }
                        },
                        "id": 17890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7492:26:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAgentSecured_$9180",
                          "typeString": "contract IAgentSecured"
                        }
                      },
                      "id": 17891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7519:11:66",
                      "memberName": "openDispute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9139,
                      "src": "7492:38:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_uint32_$returns$__$",
                        "typeString": "function (uint32,uint32) external"
                      }
                    },
                    "id": 17894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7492:63:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17895,
                  "nodeType": "ExpressionStatement",
                  "src": "7492:63:66"
                }
              ]
            },
            "baseFunctions": [
              16441
            ],
            "documentation": {
              "id": 17880,
              "nodeType": "StructuredDocumentation",
              "src": "7254:70:66",
              "text": "@dev Notify local AgentSecured contracts about the opened dispute."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_notifyDisputeOpened",
            "nameLocation": "7338:20:66",
            "overrides": {
              "id": 17886,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7407:8:66"
            },
            "parameters": {
              "id": 17885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17882,
                  "mutability": "mutable",
                  "name": "guardIndex",
                  "nameLocation": "7366:10:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17897,
                  "src": "7359:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 17881,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7359:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17884,
                  "mutability": "mutable",
                  "name": "notaryIndex",
                  "nameLocation": "7385:11:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17897,
                  "src": "7378:18:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 17883,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7378:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7358:39:66"
            },
            "returnParameters": {
              "id": 17887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7416:0:66"
            },
            "scope": 17981,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 17915,
            "nodeType": "FunctionDefinition",
            "src": "7645:240:66",
            "nodes": [],
            "body": {
              "id": 17914,
              "nodeType": "Block",
              "src": "7735:150:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17910,
                        "name": "slashedIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17900,
                        "src": "7853:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 17911,
                        "name": "rivalIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17902,
                        "src": "7867:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 17907,
                            "name": "destination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15958,
                            "src": "7825:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 17906,
                          "name": "IAgentSecured",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9180,
                          "src": "7811:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAgentSecured_$9180_$",
                            "typeString": "type(contract IAgentSecured)"
                          }
                        },
                        "id": 17908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7811:26:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAgentSecured_$9180",
                          "typeString": "contract IAgentSecured"
                        }
                      },
                      "id": 17909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7838:14:66",
                      "memberName": "resolveDispute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9147,
                      "src": "7811:41:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_uint32_$returns$__$",
                        "typeString": "function (uint32,uint32) external"
                      }
                    },
                    "id": 17912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7811:67:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17913,
                  "nodeType": "ExpressionStatement",
                  "src": "7811:67:66"
                }
              ]
            },
            "baseFunctions": [
              16449
            ],
            "documentation": {
              "id": 17898,
              "nodeType": "StructuredDocumentation",
              "src": "7568:72:66",
              "text": "@dev Notify local AgentSecured contracts about the resolved dispute."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_notifyDisputeResolved",
            "nameLocation": "7654:22:66",
            "overrides": {
              "id": 17904,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7726:8:66"
            },
            "parameters": {
              "id": 17903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17900,
                  "mutability": "mutable",
                  "name": "slashedIndex",
                  "nameLocation": "7684:12:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17915,
                  "src": "7677:19:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 17899,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7677:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17902,
                  "mutability": "mutable",
                  "name": "rivalIndex",
                  "nameLocation": "7705:10:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17915,
                  "src": "7698:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 17901,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7698:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7676:40:66"
            },
            "returnParameters": {
              "id": 17905,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7735:0:66"
            },
            "scope": 17981,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 17935,
            "nodeType": "FunctionDefinition",
            "src": "7966:186:66",
            "nodes": [],
            "body": {
              "id": 17934,
              "nodeType": "Block",
              "src": "8018:134:66",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 17923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 17921,
                      "name": "agentRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17616,
                      "src": "8032:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 17922,
                      "name": "_agentRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17918,
                      "src": "8045:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "8032:23:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17933,
                  "nodeType": "IfStatement",
                  "src": "8028:118:66",
                  "trueBody": {
                    "id": 17932,
                    "nodeType": "Block",
                    "src": "8057:89:66",
                    "statements": [
                      {
                        "expression": {
                          "id": 17926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 17924,
                            "name": "agentRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17616,
                            "src": "8071:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 17925,
                            "name": "_agentRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17918,
                            "src": "8083:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "8071:22:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 17927,
                        "nodeType": "ExpressionStatement",
                        "src": "8071:22:66"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 17929,
                              "name": "_agentRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17918,
                              "src": "8124:10:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 17928,
                            "name": "RootUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3911,
                            "src": "8112:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 17930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8112:23:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 17931,
                        "nodeType": "EmitStatement",
                        "src": "8107:28:66"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 17916,
              "nodeType": "StructuredDocumentation",
              "src": "7891:70:66",
              "text": "@dev Updates the Agent Merkle Root that Light Manager is tracking."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setAgentRoot",
            "nameLocation": "7975:13:66",
            "parameters": {
              "id": 17919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17918,
                  "mutability": "mutable",
                  "name": "_agentRoot",
                  "nameLocation": "7997:10:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17935,
                  "src": "7989:18:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 17917,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7989:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7988:20:66"
            },
            "returnParameters": {
              "id": 17920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8018:0:66"
            },
            "scope": 17981,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 17952,
            "nodeType": "FunctionDefinition",
            "src": "8604:146:66",
            "nodes": [],
            "body": {
              "id": 17951,
              "nodeType": "Block",
              "src": "8699:51:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 17945,
                        "name": "_agentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17623,
                        "src": "8716:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_AgentStatus_$10357_storage_$_$",
                          "typeString": "mapping(bytes32 => mapping(address => struct AgentStatus storage ref))"
                        }
                      },
                      "id": 17947,
                      "indexExpression": {
                        "id": 17946,
                        "name": "agentRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17616,
                        "src": "8726:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8716:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AgentStatus_$10357_storage_$",
                        "typeString": "mapping(address => struct AgentStatus storage ref)"
                      }
                    },
                    "id": 17949,
                    "indexExpression": {
                      "id": 17948,
                      "name": "agent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17938,
                      "src": "8737:5:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8716:27:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AgentStatus_$10357_storage",
                      "typeString": "struct AgentStatus storage ref"
                    }
                  },
                  "functionReturnParameters": 17944,
                  "id": 17950,
                  "nodeType": "Return",
                  "src": "8709:34:66"
                }
              ]
            },
            "baseFunctions": [
              16635
            ],
            "documentation": {
              "id": 17936,
              "nodeType": "StructuredDocumentation",
              "src": "8474:125:66",
              "text": "@dev Returns the stored status for the agent: whether or not they have been added\n using latest Agent merkle Root."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_storedAgentStatus",
            "nameLocation": "8613:18:66",
            "overrides": {
              "id": 17940,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8661:8:66"
            },
            "parameters": {
              "id": 17939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17938,
                  "mutability": "mutable",
                  "name": "agent",
                  "nameLocation": "8640:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17952,
                  "src": "8632:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8632:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8631:15:66"
            },
            "returnParameters": {
              "id": 17944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17943,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17952,
                  "src": "8679:18:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                    "typeString": "struct AgentStatus"
                  },
                  "typeName": {
                    "id": 17942,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 17941,
                      "name": "AgentStatus",
                      "nameLocations": [
                        "8679:11:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10357,
                      "src": "8679:11:66"
                    },
                    "referencedDeclaration": 10357,
                    "src": "8679:11:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AgentStatus_$10357_storage_ptr",
                      "typeString": "struct AgentStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8678:20:66"
            },
            "scope": 17981,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 17966,
            "nodeType": "FunctionDefinition",
            "src": "8935:119:66",
            "nodes": [],
            "body": {
              "id": 17965,
              "nodeType": "Block",
              "src": "9016:38:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 17961,
                      "name": "_agents",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17627,
                      "src": "9033:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 17963,
                    "indexExpression": {
                      "id": 17962,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17955,
                      "src": "9041:5:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9033:14:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 17960,
                  "id": 17964,
                  "nodeType": "Return",
                  "src": "9026:21:66"
                }
              ]
            },
            "baseFunctions": [
              16643
            ],
            "documentation": {
              "id": 17953,
              "nodeType": "StructuredDocumentation",
              "src": "8756:174:66",
              "text": "@dev Returns agent address for the given index. Returns zero for non existing indexes, or for indexes\n of the agents that have not been added to Light Manager yet."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getAgent",
            "nameLocation": "8944:9:66",
            "overrides": {
              "id": 17957,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8983:8:66"
            },
            "parameters": {
              "id": 17956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17955,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "8962:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17966,
                  "src": "8954:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8954:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8953:15:66"
            },
            "returnParameters": {
              "id": 17960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17959,
                  "mutability": "mutable",
                  "name": "agent",
                  "nameLocation": "9009:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17966,
                  "src": "9001:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9001:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9000:15:66"
            },
            "scope": 17981,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 17980,
            "nodeType": "FunctionDefinition",
            "src": "9237:125:66",
            "nodes": [],
            "body": {
              "id": 17979,
              "nodeType": "Block",
              "src": "9318:44:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 17975,
                      "name": "_agentIndexes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17631,
                      "src": "9335:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 17977,
                    "indexExpression": {
                      "id": 17976,
                      "name": "agent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17969,
                      "src": "9349:5:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9335:20:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 17974,
                  "id": 17978,
                  "nodeType": "Return",
                  "src": "9328:27:66"
                }
              ]
            },
            "baseFunctions": [
              16651
            ],
            "documentation": {
              "id": 17967,
              "nodeType": "StructuredDocumentation",
              "src": "9060:172:66",
              "text": "@dev Returns the index of the agent in the Agent Merkle Tree. Returns zero for non existing agents, or\n for agents that have not been added to Light Manager yet."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getIndex",
            "nameLocation": "9246:9:66",
            "overrides": {
              "id": 17971,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9285:8:66"
            },
            "parameters": {
              "id": 17970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17969,
                  "mutability": "mutable",
                  "name": "agent",
                  "nameLocation": "9264:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17980,
                  "src": "9256:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9256:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9255:15:66"
            },
            "returnParameters": {
              "id": 17974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17973,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "9311:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 17980,
                  "src": "9303:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9303:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9302:15:66"
            },
            "scope": 17981,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 17610,
              "name": "AgentManager",
              "nameLocations": [
                "1972:12:66"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16652,
              "src": "1972:12:66"
            },
            "id": 17611,
            "nodeType": "InheritanceSpecifier",
            "src": "1972:12:66"
          },
          {
            "baseName": {
              "id": 17612,
              "name": "InterfaceLightManager",
              "nameLocations": [
                "1986:21:66"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9911,
              "src": "1986:21:66"
            },
            "id": 17613,
            "nodeType": "InheritanceSpecifier",
            "src": "1986:21:66"
          }
        ],
        "canonicalName": "LightManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 17609,
          "nodeType": "StructuredDocumentation",
          "src": "1292:655:66",
          "text": "@notice LightManager keeps track of all agents on chains other than Synapse Chain.\n Is uses the Agent Merkle Roots from the Notary-signed attestations to stay in sync with the `BondingManager`.\n `LightManager` is responsible for the following:\n - Accepting the Agent Merkle Roots (passing the optimistic period check) from the `Destination` contract.\n - Using these roots to enable agents to register themselves by proving their status.\n - Accepting Manager Message from `BondingManager` on Synapse Chain to withdraw tips.\n - Sending Manager Messages to `BondingManager` on Synapse Chain to slash agents, when their fraud is proven."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          17981,
          9911,
          16652,
          9127,
          3922,
          2851,
          46691,
          47177,
          46833,
          3004,
          2941
        ],
        "name": "LightManager",
        "nameLocation": "1956:12:66",
        "scope": 17982,
        "usedErrors": [
          10176,
          10178,
          10184,
          10186,
          10188,
          10206,
          10216,
          10252,
          10260,
          10272,
          10280,
          10282,
          10284,
          10286,
          10288,
          10290,
          10292
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 66
}