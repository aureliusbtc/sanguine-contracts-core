{
  "abi": [
    {
      "inputs": [],
      "name": "IncorrectStatesAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IndexOutOfRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OccupiedMemory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PrecompileOutOfGas",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TreeHeightTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnallocatedMemory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnformattedSnapshot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnformattedState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ViewOverrun",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "origin",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint40",
              "name": "blockNumber",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "timestamp",
              "type": "uint40"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "gasPrice",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "dataPrice",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "execBuffer",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "amortAttCost",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "etherPrice",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "number",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct RawNumber",
                  "name": "markup",
                  "type": "tuple"
                }
              ],
              "internalType": "struct RawGasData",
              "name": "gasData",
              "type": "tuple"
            }
          ],
          "internalType": "struct RawState",
          "name": "rawState",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "statesAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct RawStateIndex",
          "name": "rsi",
          "type": "tuple"
        }
      ],
      "name": "test_attestationProof",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b50612a728061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063916a17c611610071578063916a17c61461011b578063b5508aa914610123578063ba414fa61461012b578063e20c9f7114610143578063f86e9b431461014b578063fa7626d41461015e57600080fd5b80630a9254e4146100b95780631ed7831c146100c35780633e5e3c23146100e15780633f7286f4146100e957806366d9a9a0146100f157806385226c8114610106575b600080fd5b6100c161016b565b005b6100cb6101b6565b6040516100d8919061197c565b60405180910390f35b6100cb610218565b6100cb610278565b6100f96102d8565b6040516100d891906119c9565b61010e6103c7565b6040516100d89190611acc565b6100f9610497565b61010e61057d565b61013361064d565b60405190151581526020016100d8565b6100cb610778565b6100c1610159366004611c6b565b6107d8565b6000546101339060ff1681565b604051610177906118cf565b604051809103906000f080158015610193573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d80548060200260200160405190810160405280929190818152602001828054801561020e57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101f0575b5050505050905090565b6060600f80548060200260200160405190810160405280929190818152602001828054801561020e576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101f0575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801561020e576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101f0575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156103be5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156103a657602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116103685790505b505050505081525050815260200190600101906102fc565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156103be57838290600052602060002001805461040a90611d89565b80601f016020809104026020016040519081016040528092919081815260200182805461043690611d89565b80156104835780601f1061045857610100808354040283529160200191610483565b820191906000526020600020905b81548152906001019060200180831161046657829003601f168201915b5050505050815260200190600101906103eb565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156103be5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561056557602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116105275790505b505050505081525050815260200190600101906104bb565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156103be5783829060005260206000200180546105c090611d89565b80601f01602080910402602001604051908101604052809291908181526020018280546105ec90611d89565b80156106395780601f1061060e57610100808354040283529160200191610639565b820191906000526020600020905b81548152906001019060200180831161061c57829003601f168201915b5050505050815260200190600101906105a1565b60008054610100900460ff161561066d5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156107735760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916106fb917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611dbd565b60408051601f198184030181529082905261071591611dee565b6000604051808303816000865af19150503d8060008114610752576040519150601f19603f3d011682016040523d82523d6000602084013e610757565b606091505b509150508080602001905181019061076f9190611e0a565b9150505b919050565b6060600c80548060200260200160405190810160405280929190818152602001828054801561020e576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101f0575050505050905090565b6107e1816109f7565b60006107ed8383610a38565b905060006107fa82610b08565b9050600061080785610b21565b9050600061081484610b34565b601b5460405163671dc16f60e01b81529192506001600160a01b03169063671dc16f90610845908490600401611e2c565b600060405180830381600087803b15801561085f57600080fd5b505af1158015610873573d6000803e3d6000fd5b505050506000601b60009054906101000a90046001600160a01b03166001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f09190611e81565b905061092a816108ff86610bef565b6040518060400160405280600d81526020016c085cdb985c1cda1bdd149bdbdd609a1b815250610cc8565b600061093584610d15565b508751601b546040516311c6930d60e21b81526004810183905292935060019190911b916000916001600160a01b03169063471a4c3490602401600060405180830381865afa15801561098c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109b49190810190611e9a565b90506109eb6109c68385846006610d44565b856040518060400160405280600681526020016510b83937b7b360d11b815250610cc8565b50505050505050505050565b610a0360016006611f56565b6001901b8160200151610a169190611f7f565b610a21906001611f93565b602082018190528151610a349190611f7f565b9052565b604080516020810190915260608152816020015167ffffffffffffffff811115610a6457610a64611b2e565b604051908082528060200260200182016040528015610a9d57816020015b610a8a6118dc565b815260200190600190039081610a825790505b50815260005b8260200151811015610b015782518114610acf57610aca610ac5826001611f93565b610dd3565b610ad1565b835b8251805183908110610ae557610ae5611fa6565b602002602001018190525080610afa90611fbc565b9050610aa3565b5092915050565b6000610b1b610b1683610e4b565b610f0a565b92915050565b6000610b1b610b2f83610f1d565b610fb9565b80515160609067ffffffffffffffff811115610b5257610b52611b2e565b604051908082528060200260200182016040528015610b8557816020015b6060815260200190600190039081610b705790505b50905060005b825151811015610be957610bbb83600001518281518110610bae57610bae611fa6565b6020026020010151610f1d565b828281518110610bcd57610bcd611fa6565b602002602001018190525080610be290611fbc565b9050610b8b565b50919050565b600080610bfb83610fcc565b905060008167ffffffffffffffff811115610c1857610c18611b2e565b604051908082528060200260200182016040528015610c41578160200160208202803683370190505b50905060005b82811015610c8e57610c61610c5c8683610fed565b611056565b828281518110610c7357610c73611fa6565b6020908102919091010152610c8781611fbc565b9050610c47565b50610ca481610c9f60016006611f56565b611095565b80600081518110610cb757610cb7611fa6565b602002602001015192505050919050565b818314610d10577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051610cfe9190611fd5565b60405180910390a1610d10838361116f565b505050565b60008082610d2c610d2782602461129d565b6112aa565b9250610d3c610d278260246112cc565b915050915091565b815160009082811115610d6a5760405163c5360feb60e01b815260040160405180910390fd5b84915060005b81811015610da757610d9d83868381518110610d8e57610d8e611fa6565b60200260200101518984611318565b9250600101610d70565b50805b83811015610dc957610dbf8360008984611318565b9250600101610daa565b5050949350505050565b610ddb6118dc565b81815263ffffffff8216602080830182905260408084019290925264ffffffffff8416606080850182905260808086019290925260a080860180515161ffff9098169788905280519094015187905283519094015186905282510151859052815101518490525101519190915290565b6060600082600001515167ffffffffffffffff811115610e6d57610e6d611b2e565b604051908082528060200260200182016040528015610e96578160200160208202803683370190505b50905060005b835151811015610ef957610ecc84600001518281518110610ebf57610ebf611fa6565b6020026020010151610b21565b828281518110610ede57610ede611fa6565b6020908102919091010152610ef281611fbc565b9050610e9c565b50610f0381611341565b9392505050565b6000610b1b610f1883611415565b611428565b6060610b1b82600001518360200151846040015185606001518660800151610f488860a00151611454565b60408051602081019790975260e095861b6001600160e01b0319908116888301529490951b909316604486015260d891821b6001600160d81b03199081166048870152911b16604d84015260a01b6001600160a01b03191660528301528051603e818403018152605e909201905290565b6000610b1b610fc783611415565b6114d4565b6000610fda600c6032611f93565b610b1b906001600160801b038416612004565b60008281610ffd600c6032611f93565b6110079085612018565b90506001600160801b038216811061103257604051631390f2a160e01b815260040160405180910390fd5b61104d610fc782611045600c6032611f93565b8591906114fc565b95945050505050565b600080600061106484610d15565b6040805160208082019490945280820192909252805180830382018152606090920190528051910120949350505050565b81516001821b8111156110bb5760405163c5360feb60e01b815260040160405180910390fd5b60005b828110156111695760005b8281101561115a57600081600101905060008683815181106110ed576110ed611fa6565b602002602001015190506000858310611107576000611122565b87838151811061111957611119611fa6565b60200260200101515b905061112e8282611554565b88600186901c8151811061114457611144611fa6565b60209081029190910101525050506002016110c9565b506001918201821c91016110be565b50505050565b808214611299577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516111e39060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a16112996115a0565b5050565b6000610f038382846114fc565b6000806112b78360801c90565b6001600160801b039390931690922092915050565b60006001600160801b038316808311156112f95760405163a3b99ded60e01b815260040160405180910390fd5b611310836113078660801c90565b018483036116ac565b949350505050565b6000600183831c168103611337576113308585611554565b9050611310565b6113308486611554565b606061134d82516116f6565b61136a576040516376cc6d3360e11b815260040160405180910390fd5b815160008167ffffffffffffffff81111561138757611387611b2e565b6040519080825280602002602001820160405280156113b0578160200160208202803683370190505b50905060005b8281101561140b576113de8582815181106113d3576113d3611fa6565b602002602001015190565b8282815181106113f0576113f0611fa6565b602090810291909101015261140481611fbc565b90506113b6565b506113108161171b565b80516000906020830161131081836116ac565b600061143382611750565b61145057604051635cb1e1ad60e11b815260040160405180910390fd5b5090565b805151600090610b1b9060208401515160408501515160608601515160808701515160a08801515161ffff60501b605087901b1669ffff0000000000000000604087901b161767ffff000000000000603086901b161765ffff00000000602085901b161763ffff0000601084901b161761ffff8216179695505050505050565b60006114df8261179d565b61145057604051631ae8107160e21b815260040160405180910390fd5b6000806115098560801c90565b9050611514856117bc565b8361151f8684611f93565b6115299190611f93565b11156115485760405163a3b99ded60e01b815260040160405180910390fd5b61104d848201846116ac565b600082158015611562575081155b1561156f57506000610b1b565b6040805160208101859052908101839052606001604051602081830303815290604052805190602001209050610b1b565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561169b5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905261163a9291602001611dbd565b60408051601f198184030181529082905261165491611dee565b6000604051808303816000865af19150503d8060008114611691576040519150601f19603f3d011682016040523d82523d6000602084013e611696565b606091505b505050505b6000805461ff001916610100179055565b6000806116b98385611f93565b90506040518111156116c9575060005b806000036116ea5760405163085f79c360e11b815260040160405180910390fd5b608084901b8317611310565b60008115801590610b1b575061170e60016006611f56565b6001901b82111592915050565b60405180600061172e84602084016117d9565b6001600160801b0316601f8101601f1916830160200160405290915250919050565b60006001600160801b03821681611769600c6032611f93565b6117739083612004565b905081611782600c6032611f93565b61178c9083612018565b1480156113105750611310816116f6565b60006117ab600c6032611f93565b6001600160801b0383161492915050565b60006001600160801b0382166117d28360801c90565b0192915050565b60405160009080831015611800576040516312ca856360e21b815260040160405180910390fd5b6000805b855181101561184e57600086828151811061182157611821611fa6565b602002602001015190506118378184880161185b565b506001600160801b03169190910190600101611804565b50608084901b811761104d565b6040516000906001600160801b03841690608085901c9080851015611893576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa9050806118bd57604051637c7d772f60e01b815260040160405180910390fd5b608086901b8417979650505050505050565b610a0d8061203083390190565b6040805160c08101825260008082526020820181905291810182905260608101829052608081019190915260a081016119776040805160e081018252600060c0820181815282528251602080820185528282528084019190915283518082018552828152838501528351808201855282815260608401528351808201855282815260808401528351908101909352825260a081019190915290565b905290565b6020808252825182820181905260009190848201906040850190845b818110156119bd5783516001600160a01b031683529284019291840191600101611998565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015611a6d57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015611a585783516001600160e01b0319168252928b019260019290920191908b0190611a2e565b50978a019795505050918701916001016119f1565b50919998505050505050505050565b60005b83811015611a97578181015183820152602001611a7f565b50506000910152565b60008151808452611ab8816020860160208601611a7c565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611b2157603f19888603018452611b0f858351611aa0565b94509285019290850190600101611af3565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611b6757611b67611b2e565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611b9657611b96611b2e565b604052919050565b803563ffffffff8116811461077357600080fd5b803564ffffffffff8116811461077357600080fd5b600060208284031215611bd957600080fd5b6040516020810181811067ffffffffffffffff82111715611bfc57611bfc611b2e565b604052905080823561ffff81168114611c1457600080fd5b905292915050565b600060408284031215611c2e57600080fd5b6040516040810181811067ffffffffffffffff82111715611c5157611c51611b2e565b604052823581526020928301359281019290925250919050565b6000808284036101a0811215611c8057600080fd5b61016080821215611c9057600080fd5b611c98611b44565b85358152611ca860208701611b9e565b6020820152611cb960408701611b9e565b6040820152611cca60608701611bb2565b6060820152611cdb60808701611bb2565b608082015260c0609f1984011215611cf257600080fd5b611cfa611b44565b9250611d098760a08801611bc7565b8352611d188760c08801611bc7565b6020840152611d2a8760e08801611bc7565b6040840152611d3d876101008801611bc7565b6060840152611d50876101208801611bc7565b6080840152611d63876101408801611bc7565b60a08401528260a082015280945050611d7e86828701611c1c565b925050509250929050565b600181811c90821680611d9d57607f821691505b602082108103610be957634e487b7160e01b600052602260045260246000fd5b6001600160e01b0319831681528151600090611de0816004850160208701611a7c565b919091016004019392505050565b60008251611e00818460208701611a7c565b9190910192915050565b600060208284031215611e1c57600080fd5b81518015158114610f0357600080fd5b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611b2157603f19888603018452611e6f858351611aa0565b94509285019290850190600101611e53565b600060208284031215611e9357600080fd5b5051919050565b60006020808385031215611ead57600080fd5b825167ffffffffffffffff80821115611ec557600080fd5b818501915085601f830112611ed957600080fd5b815181811115611eeb57611eeb611b2e565b8060051b9150611efc848301611b6d565b8181529183018401918481019088841115611f1657600080fd5b938501935b83851015611f3457845182529385019390850190611f1b565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610b1b57610b1b611f40565b634e487b7160e01b600052601260045260246000fd5b600082611f8e57611f8e611f69565b500690565b80820180821115610b1b57610b1b611f40565b634e487b7160e01b600052603260045260246000fd5b600060018201611fce57611fce611f40565b5060010190565b60408152600560408201526422b93937b960d91b6060820152608060208201526000610f036080830184611aa0565b60008261201357612013611f69565b500490565b8082028115828204841417610b1b57610b1b611f4056fe608060405234801561001057600080fd5b506109ed806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e75378114610051578063471a4c341461007a578063671dc16f1461008d578063ebf0c717146100a2575b600080fd5b61006461005f366004610724565b6100b9565b60405161007191906107ba565b60405180910390f35b6100646100883660046107fe565b6101a5565b6100a061009b366004610817565b61028c565b005b6100ab60005481565b604051908152602001610071565b80516060905b6000811180156100f257506000836100d8600184610934565b815181106100e8576100e8610947565b6020026020010151145b15610107576101008161095d565b90506100bf565b8067ffffffffffffffff811115610120576101206106b9565b604051908082528060200260200182016040528015610149578160200160208202803683370190505b50915060005b8181101561019e5783818151811061016957610169610947565b602002602001015183828151811061018357610183610947565b602090810291909101015261019781610974565b905061014f565b5050919050565b606060006101b483600261098d565b9050604081106101f95760405162461bcd60e51b815260206004820152600c60248201526b4f7574206f662072616e676560a01b604482015260640160405180910390fd5b60408051600680825260e082019092526000916020820160c08036833701905050905060005b600681101561027a5760008181526001602081815260408084209287188452919052902054825183908390811061025857610258610947565b602090810291909101015260019290921c9161027381610974565b905061021f565b50610284816100b9565b949350505050565b60406000805b8351811015610345576102c56102c08583815181106102b3576102b3610947565b602002602001015161048d565b6104a6565b6000848152600160205260408120906102df85600261098d565b81526020019081526020016000206000600160008781526020019081526020016000206000866002610311919061098d565b61031c9060016109a4565b8152602081019190915260400160002092909255919091555061033e81610974565b9050610292565b50600083516002610356919061098d565b90505b8281101561038b57600082815260016020908152604080832084845290915281205561038481610974565b9050610359565b505b600182111561046d5761039f81610974565b9050600182901c915060005b828110156104675761043d600160006103c48286610934565b815260200190815260200160002060008360026103e1919061098d565b815260200190815260200160002054600160006001866104019190610934565b8152602001908152602001600020600084600261041e919061098d565b6104299060016109a4565b8152602001908152602001600020546104d5565b600083815260016020908152604080832085845290915290205561046081610974565b90506103ab565b5061038d565b600090815260016020908152604080832083805290915281205490555050565b60006104a061049b8361051d565b610530565b92915050565b600080826104bd6104b882602461055c565b610570565b92506104cd6104b8826024610592565b915050915091565b6000821580156104e3575081155b156104f0575060006104a0565b50604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b80516000906020830161028481836105d2565b600061053b8261061c565b61055857604051631ae8107160e21b815260040160405180910390fd5b5090565b600061056983828461063b565b9392505050565b60008061057d8360801c90565b6001600160801b039390931690922092915050565b60006001600160801b038316808311156105bf5760405163a3b99ded60e01b815260040160405180910390fd5b610284836105cd8660801c90565b018483035b6000806105df83856109a4565b90506040518111156105ef575060005b806000036106105760405163085f79c360e11b815260040160405180910390fd5b608084901b8317610284565b600061062a600c60326109a4565b6001600160801b0383161492915050565b6000806106488560801c90565b90506106538561069c565b8361065e86846109a4565b61066891906109a4565b11156106875760405163a3b99ded60e01b815260040160405180910390fd5b610693848201846105d2565b95945050505050565b60006001600160801b0382166106b28360801c90565b0192915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156106f8576106f86106b9565b604052919050565b600067ffffffffffffffff82111561071a5761071a6106b9565b5060051b60200190565b6000602080838503121561073757600080fd5b823567ffffffffffffffff81111561074e57600080fd5b8301601f8101851361075f57600080fd5b803561077261076d82610700565b6106cf565b81815260059190911b8201830190838101908783111561079157600080fd5b928401925b828410156107af57833582529284019290840190610796565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156107f2578351835292840192918401916001016107d6565b50909695505050505050565b60006020828403121561081057600080fd5b5035919050565b6000602080838503121561082a57600080fd5b823567ffffffffffffffff8082111561084257600080fd5b8185019150601f868184011261085757600080fd5b823561086561076d82610700565b81815260059190911b8401850190858101908983111561088457600080fd5b8686015b83811015610910578035868111156108a05760008081fd5b8701603f81018c136108b25760008081fd5b888101356040888211156108c8576108c86106b9565b6108d9828901601f19168c016106cf565b8281528e828486010111156108ee5760008081fd5b828285018d83013760009281018c019290925250845250918701918701610888565b509998505050505050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156104a0576104a061091e565b634e487b7160e01b600052603260045260246000fd5b60008161096c5761096c61091e565b506000190190565b6000600182016109865761098661091e565b5060010190565b80820281158282048414176104a0576104a061091e565b808201808211156104a0576104a061091e56fea26469706673582212203102dff0fa7527ec90bfe7055b099d94ba4ae4fb12d06868d6fb0f9555139f4264736f6c63430008110033a2646970667358221220dbb161983ede5c2220de68a28f92356725e337ad8e0638ad15e057014ad77ff064736f6c63430008110033",
    "sourceMap": "499:985:191:-:0;;;1572:26:67;;;1594:4;-1:-1:-1;;1572:26:67;;;;;;;;3288:44:71;;;;;;;;;;;499:985:191;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063916a17c611610071578063916a17c61461011b578063b5508aa914610123578063ba414fa61461012b578063e20c9f7114610143578063f86e9b431461014b578063fa7626d41461015e57600080fd5b80630a9254e4146100b95780631ed7831c146100c35780633e5e3c23146100e15780633f7286f4146100e957806366d9a9a0146100f157806385226c8114610106575b600080fd5b6100c161016b565b005b6100cb6101b6565b6040516100d8919061197c565b60405180910390f35b6100cb610218565b6100cb610278565b6100f96102d8565b6040516100d891906119c9565b61010e6103c7565b6040516100d89190611acc565b6100f9610497565b61010e61057d565b61013361064d565b60405190151581526020016100d8565b6100cb610778565b6100c1610159366004611c6b565b6107d8565b6000546101339060ff1681565b604051610177906118cf565b604051809103906000f080158015610193573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d80548060200260200160405190810160405280929190818152602001828054801561020e57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101f0575b5050505050905090565b6060600f80548060200260200160405190810160405280929190818152602001828054801561020e576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101f0575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801561020e576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101f0575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156103be5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156103a657602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116103685790505b505050505081525050815260200190600101906102fc565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156103be57838290600052602060002001805461040a90611d89565b80601f016020809104026020016040519081016040528092919081815260200182805461043690611d89565b80156104835780601f1061045857610100808354040283529160200191610483565b820191906000526020600020905b81548152906001019060200180831161046657829003601f168201915b5050505050815260200190600101906103eb565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156103be5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561056557602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116105275790505b505050505081525050815260200190600101906104bb565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156103be5783829060005260206000200180546105c090611d89565b80601f01602080910402602001604051908101604052809291908181526020018280546105ec90611d89565b80156106395780601f1061060e57610100808354040283529160200191610639565b820191906000526020600020905b81548152906001019060200180831161061c57829003601f168201915b5050505050815260200190600101906105a1565b60008054610100900460ff161561066d5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156107735760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916106fb917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611dbd565b60408051601f198184030181529082905261071591611dee565b6000604051808303816000865af19150503d8060008114610752576040519150601f19603f3d011682016040523d82523d6000602084013e610757565b606091505b509150508080602001905181019061076f9190611e0a565b9150505b919050565b6060600c80548060200260200160405190810160405280929190818152602001828054801561020e576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101f0575050505050905090565b6107e1816109f7565b60006107ed8383610a38565b905060006107fa82610b08565b9050600061080785610b21565b9050600061081484610b34565b601b5460405163671dc16f60e01b81529192506001600160a01b03169063671dc16f90610845908490600401611e2c565b600060405180830381600087803b15801561085f57600080fd5b505af1158015610873573d6000803e3d6000fd5b505050506000601b60009054906101000a90046001600160a01b03166001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f09190611e81565b905061092a816108ff86610bef565b6040518060400160405280600d81526020016c085cdb985c1cda1bdd149bdbdd609a1b815250610cc8565b600061093584610d15565b508751601b546040516311c6930d60e21b81526004810183905292935060019190911b916000916001600160a01b03169063471a4c3490602401600060405180830381865afa15801561098c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109b49190810190611e9a565b90506109eb6109c68385846006610d44565b856040518060400160405280600681526020016510b83937b7b360d11b815250610cc8565b50505050505050505050565b610a0360016006611f56565b6001901b8160200151610a169190611f7f565b610a21906001611f93565b602082018190528151610a349190611f7f565b9052565b604080516020810190915260608152816020015167ffffffffffffffff811115610a6457610a64611b2e565b604051908082528060200260200182016040528015610a9d57816020015b610a8a6118dc565b815260200190600190039081610a825790505b50815260005b8260200151811015610b015782518114610acf57610aca610ac5826001611f93565b610dd3565b610ad1565b835b8251805183908110610ae557610ae5611fa6565b602002602001018190525080610afa90611fbc565b9050610aa3565b5092915050565b6000610b1b610b1683610e4b565b610f0a565b92915050565b6000610b1b610b2f83610f1d565b610fb9565b80515160609067ffffffffffffffff811115610b5257610b52611b2e565b604051908082528060200260200182016040528015610b8557816020015b6060815260200190600190039081610b705790505b50905060005b825151811015610be957610bbb83600001518281518110610bae57610bae611fa6565b6020026020010151610f1d565b828281518110610bcd57610bcd611fa6565b602002602001018190525080610be290611fbc565b9050610b8b565b50919050565b600080610bfb83610fcc565b905060008167ffffffffffffffff811115610c1857610c18611b2e565b604051908082528060200260200182016040528015610c41578160200160208202803683370190505b50905060005b82811015610c8e57610c61610c5c8683610fed565b611056565b828281518110610c7357610c73611fa6565b6020908102919091010152610c8781611fbc565b9050610c47565b50610ca481610c9f60016006611f56565b611095565b80600081518110610cb757610cb7611fa6565b602002602001015192505050919050565b818314610d10577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051610cfe9190611fd5565b60405180910390a1610d10838361116f565b505050565b60008082610d2c610d2782602461129d565b6112aa565b9250610d3c610d278260246112cc565b915050915091565b815160009082811115610d6a5760405163c5360feb60e01b815260040160405180910390fd5b84915060005b81811015610da757610d9d83868381518110610d8e57610d8e611fa6565b60200260200101518984611318565b9250600101610d70565b50805b83811015610dc957610dbf8360008984611318565b9250600101610daa565b5050949350505050565b610ddb6118dc565b81815263ffffffff8216602080830182905260408084019290925264ffffffffff8416606080850182905260808086019290925260a080860180515161ffff9098169788905280519094015187905283519094015186905282510151859052815101518490525101519190915290565b6060600082600001515167ffffffffffffffff811115610e6d57610e6d611b2e565b604051908082528060200260200182016040528015610e96578160200160208202803683370190505b50905060005b835151811015610ef957610ecc84600001518281518110610ebf57610ebf611fa6565b6020026020010151610b21565b828281518110610ede57610ede611fa6565b6020908102919091010152610ef281611fbc565b9050610e9c565b50610f0381611341565b9392505050565b6000610b1b610f1883611415565b611428565b6060610b1b82600001518360200151846040015185606001518660800151610f488860a00151611454565b60408051602081019790975260e095861b6001600160e01b0319908116888301529490951b909316604486015260d891821b6001600160d81b03199081166048870152911b16604d84015260a01b6001600160a01b03191660528301528051603e818403018152605e909201905290565b6000610b1b610fc783611415565b6114d4565b6000610fda600c6032611f93565b610b1b906001600160801b038416612004565b60008281610ffd600c6032611f93565b6110079085612018565b90506001600160801b038216811061103257604051631390f2a160e01b815260040160405180910390fd5b61104d610fc782611045600c6032611f93565b8591906114fc565b95945050505050565b600080600061106484610d15565b6040805160208082019490945280820192909252805180830382018152606090920190528051910120949350505050565b81516001821b8111156110bb5760405163c5360feb60e01b815260040160405180910390fd5b60005b828110156111695760005b8281101561115a57600081600101905060008683815181106110ed576110ed611fa6565b602002602001015190506000858310611107576000611122565b87838151811061111957611119611fa6565b60200260200101515b905061112e8282611554565b88600186901c8151811061114457611144611fa6565b60209081029190910101525050506002016110c9565b506001918201821c91016110be565b50505050565b808214611299577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516111e39060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a16112996115a0565b5050565b6000610f038382846114fc565b6000806112b78360801c90565b6001600160801b039390931690922092915050565b60006001600160801b038316808311156112f95760405163a3b99ded60e01b815260040160405180910390fd5b611310836113078660801c90565b018483036116ac565b949350505050565b6000600183831c168103611337576113308585611554565b9050611310565b6113308486611554565b606061134d82516116f6565b61136a576040516376cc6d3360e11b815260040160405180910390fd5b815160008167ffffffffffffffff81111561138757611387611b2e565b6040519080825280602002602001820160405280156113b0578160200160208202803683370190505b50905060005b8281101561140b576113de8582815181106113d3576113d3611fa6565b602002602001015190565b8282815181106113f0576113f0611fa6565b602090810291909101015261140481611fbc565b90506113b6565b506113108161171b565b80516000906020830161131081836116ac565b600061143382611750565b61145057604051635cb1e1ad60e11b815260040160405180910390fd5b5090565b805151600090610b1b9060208401515160408501515160608601515160808701515160a08801515161ffff60501b605087901b1669ffff0000000000000000604087901b161767ffff000000000000603086901b161765ffff00000000602085901b161763ffff0000601084901b161761ffff8216179695505050505050565b60006114df8261179d565b61145057604051631ae8107160e21b815260040160405180910390fd5b6000806115098560801c90565b9050611514856117bc565b8361151f8684611f93565b6115299190611f93565b11156115485760405163a3b99ded60e01b815260040160405180910390fd5b61104d848201846116ac565b600082158015611562575081155b1561156f57506000610b1b565b6040805160208101859052908101839052606001604051602081830303815290604052805190602001209050610b1b565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561169b5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905261163a9291602001611dbd565b60408051601f198184030181529082905261165491611dee565b6000604051808303816000865af19150503d8060008114611691576040519150601f19603f3d011682016040523d82523d6000602084013e611696565b606091505b505050505b6000805461ff001916610100179055565b6000806116b98385611f93565b90506040518111156116c9575060005b806000036116ea5760405163085f79c360e11b815260040160405180910390fd5b608084901b8317611310565b60008115801590610b1b575061170e60016006611f56565b6001901b82111592915050565b60405180600061172e84602084016117d9565b6001600160801b0316601f8101601f1916830160200160405290915250919050565b60006001600160801b03821681611769600c6032611f93565b6117739083612004565b905081611782600c6032611f93565b61178c9083612018565b1480156113105750611310816116f6565b60006117ab600c6032611f93565b6001600160801b0383161492915050565b60006001600160801b0382166117d28360801c90565b0192915050565b60405160009080831015611800576040516312ca856360e21b815260040160405180910390fd5b6000805b855181101561184e57600086828151811061182157611821611fa6565b602002602001015190506118378184880161185b565b506001600160801b03169190910190600101611804565b50608084901b811761104d565b6040516000906001600160801b03841690608085901c9080851015611893576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa9050806118bd57604051637c7d772f60e01b815260040160405180910390fd5b608086901b8417979650505050505050565b610a0d8061203083390190565b6040805160c08101825260008082526020820181905291810182905260608101829052608081019190915260a081016119776040805160e081018252600060c0820181815282528251602080820185528282528084019190915283518082018552828152838501528351808201855282815260608401528351808201855282815260808401528351908101909352825260a081019190915290565b905290565b6020808252825182820181905260009190848201906040850190845b818110156119bd5783516001600160a01b031683529284019291840191600101611998565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015611a6d57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015611a585783516001600160e01b0319168252928b019260019290920191908b0190611a2e565b50978a019795505050918701916001016119f1565b50919998505050505050505050565b60005b83811015611a97578181015183820152602001611a7f565b50506000910152565b60008151808452611ab8816020860160208601611a7c565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611b2157603f19888603018452611b0f858351611aa0565b94509285019290850190600101611af3565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611b6757611b67611b2e565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611b9657611b96611b2e565b604052919050565b803563ffffffff8116811461077357600080fd5b803564ffffffffff8116811461077357600080fd5b600060208284031215611bd957600080fd5b6040516020810181811067ffffffffffffffff82111715611bfc57611bfc611b2e565b604052905080823561ffff81168114611c1457600080fd5b905292915050565b600060408284031215611c2e57600080fd5b6040516040810181811067ffffffffffffffff82111715611c5157611c51611b2e565b604052823581526020928301359281019290925250919050565b6000808284036101a0811215611c8057600080fd5b61016080821215611c9057600080fd5b611c98611b44565b85358152611ca860208701611b9e565b6020820152611cb960408701611b9e565b6040820152611cca60608701611bb2565b6060820152611cdb60808701611bb2565b608082015260c0609f1984011215611cf257600080fd5b611cfa611b44565b9250611d098760a08801611bc7565b8352611d188760c08801611bc7565b6020840152611d2a8760e08801611bc7565b6040840152611d3d876101008801611bc7565b6060840152611d50876101208801611bc7565b6080840152611d63876101408801611bc7565b60a08401528260a082015280945050611d7e86828701611c1c565b925050509250929050565b600181811c90821680611d9d57607f821691505b602082108103610be957634e487b7160e01b600052602260045260246000fd5b6001600160e01b0319831681528151600090611de0816004850160208701611a7c565b919091016004019392505050565b60008251611e00818460208701611a7c565b9190910192915050565b600060208284031215611e1c57600080fd5b81518015158114610f0357600080fd5b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611b2157603f19888603018452611e6f858351611aa0565b94509285019290850190600101611e53565b600060208284031215611e9357600080fd5b5051919050565b60006020808385031215611ead57600080fd5b825167ffffffffffffffff80821115611ec557600080fd5b818501915085601f830112611ed957600080fd5b815181811115611eeb57611eeb611b2e565b8060051b9150611efc848301611b6d565b8181529183018401918481019088841115611f1657600080fd5b938501935b83851015611f3457845182529385019390850190611f1b565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610b1b57610b1b611f40565b634e487b7160e01b600052601260045260246000fd5b600082611f8e57611f8e611f69565b500690565b80820180821115610b1b57610b1b611f40565b634e487b7160e01b600052603260045260246000fd5b600060018201611fce57611fce611f40565b5060010190565b60408152600560408201526422b93937b960d91b6060820152608060208201526000610f036080830184611aa0565b60008261201357612013611f69565b500490565b8082028115828204841417610b1b57610b1b611f4056fe608060405234801561001057600080fd5b506109ed806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e75378114610051578063471a4c341461007a578063671dc16f1461008d578063ebf0c717146100a2575b600080fd5b61006461005f366004610724565b6100b9565b60405161007191906107ba565b60405180910390f35b6100646100883660046107fe565b6101a5565b6100a061009b366004610817565b61028c565b005b6100ab60005481565b604051908152602001610071565b80516060905b6000811180156100f257506000836100d8600184610934565b815181106100e8576100e8610947565b6020026020010151145b15610107576101008161095d565b90506100bf565b8067ffffffffffffffff811115610120576101206106b9565b604051908082528060200260200182016040528015610149578160200160208202803683370190505b50915060005b8181101561019e5783818151811061016957610169610947565b602002602001015183828151811061018357610183610947565b602090810291909101015261019781610974565b905061014f565b5050919050565b606060006101b483600261098d565b9050604081106101f95760405162461bcd60e51b815260206004820152600c60248201526b4f7574206f662072616e676560a01b604482015260640160405180910390fd5b60408051600680825260e082019092526000916020820160c08036833701905050905060005b600681101561027a5760008181526001602081815260408084209287188452919052902054825183908390811061025857610258610947565b602090810291909101015260019290921c9161027381610974565b905061021f565b50610284816100b9565b949350505050565b60406000805b8351811015610345576102c56102c08583815181106102b3576102b3610947565b602002602001015161048d565b6104a6565b6000848152600160205260408120906102df85600261098d565b81526020019081526020016000206000600160008781526020019081526020016000206000866002610311919061098d565b61031c9060016109a4565b8152602081019190915260400160002092909255919091555061033e81610974565b9050610292565b50600083516002610356919061098d565b90505b8281101561038b57600082815260016020908152604080832084845290915281205561038481610974565b9050610359565b505b600182111561046d5761039f81610974565b9050600182901c915060005b828110156104675761043d600160006103c48286610934565b815260200190815260200160002060008360026103e1919061098d565b815260200190815260200160002054600160006001866104019190610934565b8152602001908152602001600020600084600261041e919061098d565b6104299060016109a4565b8152602001908152602001600020546104d5565b600083815260016020908152604080832085845290915290205561046081610974565b90506103ab565b5061038d565b600090815260016020908152604080832083805290915281205490555050565b60006104a061049b8361051d565b610530565b92915050565b600080826104bd6104b882602461055c565b610570565b92506104cd6104b8826024610592565b915050915091565b6000821580156104e3575081155b156104f0575060006104a0565b50604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b80516000906020830161028481836105d2565b600061053b8261061c565b61055857604051631ae8107160e21b815260040160405180910390fd5b5090565b600061056983828461063b565b9392505050565b60008061057d8360801c90565b6001600160801b039390931690922092915050565b60006001600160801b038316808311156105bf5760405163a3b99ded60e01b815260040160405180910390fd5b610284836105cd8660801c90565b018483035b6000806105df83856109a4565b90506040518111156105ef575060005b806000036106105760405163085f79c360e11b815260040160405180910390fd5b608084901b8317610284565b600061062a600c60326109a4565b6001600160801b0383161492915050565b6000806106488560801c90565b90506106538561069c565b8361065e86846109a4565b61066891906109a4565b11156106875760405163a3b99ded60e01b815260040160405180910390fd5b610693848201846105d2565b95945050505050565b60006001600160801b0382166106b28360801c90565b0192915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156106f8576106f86106b9565b604052919050565b600067ffffffffffffffff82111561071a5761071a6106b9565b5060051b60200190565b6000602080838503121561073757600080fd5b823567ffffffffffffffff81111561074e57600080fd5b8301601f8101851361075f57600080fd5b803561077261076d82610700565b6106cf565b81815260059190911b8201830190838101908783111561079157600080fd5b928401925b828410156107af57833582529284019290840190610796565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156107f2578351835292840192918401916001016107d6565b50909695505050505050565b60006020828403121561081057600080fd5b5035919050565b6000602080838503121561082a57600080fd5b823567ffffffffffffffff8082111561084257600080fd5b8185019150601f868184011261085757600080fd5b823561086561076d82610700565b81815260059190911b8401850190858101908983111561088457600080fd5b8686015b83811015610910578035868111156108a05760008081fd5b8701603f81018c136108b25760008081fd5b888101356040888211156108c8576108c86106b9565b6108d9828901601f19168c016106cf565b8281528e828486010111156108ee5760008081fd5b828285018d83013760009281018c019290925250845250918701918701610888565b509998505050505050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156104a0576104a061091e565b634e487b7160e01b600052603260045260246000fd5b60008161096c5761096c61091e565b506000190190565b6000600182016109865761098661091e565b5060010190565b80820281158282048414176104a0576104a061091e565b808201808211156104a0576104a061091e56fea26469706673582212203102dff0fa7527ec90bfe7055b099d94ba4ae4fb12d06868d6fb0f9555139f4264736f6c63430008110033a2646970667358221220dbb161983ede5c2220de68a28f92356725e337ad8e0638ad15e057014ad77ff064736f6c63430008110033",
    "sourceMap": "499:985:191:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;602:83;;;:::i;:::-;;2161:134:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2930:133;;;:::i;2631:141::-;;;:::i;2447:178::-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;1866:141::-;;;:::i;1819:584:67:-;;;:::i;:::-;;;3755:14:199;;3748:22;3730:41;;3718:2;3703:18;1819:584:67;3590:187:199;2013:142:74;;;:::i;691:791:191:-;;;;;;:::i;:::-;;:::i;1572:26:67:-;;;;;;;;;602:83:191;647:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;636:8:191;:42;;-1:-1:-1;;;;;;636:42:191;-1:-1:-1;;;;;636:42:191;;;;;;;;;;602:83::o;2161:134:74:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:74;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:74;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:74;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:67;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:67;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;7822:51:199;;;-1:-1:-1;;;7889:18:199;;;7882:34;2196:43:67;;;;;;;;;7795:18:199;;;2196:43:67;;;-1:-1:-1;;1671:64:67;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:67;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:67:o;2013:142:74:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:74;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;691:791:191:-;791:21;:3;:19;:21::i;:::-;822:26;851:27;864:8;874:3;851:12;:27::i;:::-;822:56;;888:17;908:24;:7;:22;:24::i;:::-;888:44;;942:11;956:22;:8;:20;:22::i;:::-;942:36;;988:21;1012:22;:7;:20;:22::i;:::-;1044:8;;:31;;-1:-1:-1;;;1044:31:191;;988:46;;-1:-1:-1;;;;;;1044:8:191;;:23;;:31;;988:46;;1044:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:20;1108:8;;;;;;;;;-1:-1:-1;;;;;1108:8:191;-1:-1:-1;;;;;1108:13:191;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1085:38;;1133:65;1142:12;1156:24;:8;:22;:24::i;:::-;1133:65;;;;;;;;;;;;;-1:-1:-1;;;1133:65:191;;;:8;:65::i;:::-;1210:12;1227:16;:5;:14;:16::i;:::-;-1:-1:-1;1273:14:191;;1327:8;;:38;;-1:-1:-1;;;1327:38:191;;;;;10031:25:199;;;1209:34:191;;-1:-1:-1;1291:1:191;1273:19;;;;;1253:17;;-1:-1:-1;;;;;1327:8:191;;:22;;10004:18:199;;1327:38:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1327:38:191;;;;;;;;;;;;:::i;:::-;1302:63;;1375:100;1384:66;1405:9;1416:4;1422:5;645:1:45;1384:20:191;:66::i;:::-;1452:12;1375:100;;;;;;;;;;;;;-1:-1:-1;;;1375:100:191;;;:8;:100::i;:::-;781:701;;;;;;;;691:791;;:::o;16190:284:189:-;1552:24:45;1575:1;645;1552:24;:::i;:::-;1546:1;:31;;16332:3:189;:16;;;:38;;;;:::i;:::-;16328:42;;:1;:42;:::i;:::-;16309:16;;;:61;;;16434:14;;:33;;16309:61;16434:33;:::i;:::-;16417:50;;16190:284::o;1107:358:187:-;-1:-1:-1;;;;;;;;;;;;1258:3:187;:16;;;1243:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;1226:49:187;;:14;1281:182;1305:3;:16;;;1301:1;:20;1281:182;;;1415:14;;1410:19;;:46;;1440:16;1450:5;:1;1454;1450:5;:::i;:::-;1440:9;:16::i;:::-;1410:46;;;1432:5;1410:46;1390:14;;:17;;1405:1;;1390:17;;;;;;:::i;:::-;;;;;;:66;;;;1323:3;;;;:::i;:::-;;;1281:182;;;;1107:358;;;;:::o;18009:153:189:-;18084:12;18114:41;:24;:7;:22;:24::i;:::-;:39;:41::i;:::-;18108:47;18009:153;-1:-1:-1;;18009:153:189:o;15021:128::-;15085:9;15112:30;:16;:2;:14;:16::i;:::-;:28;:30::i;16808:285::-;16935:14;;:21;16881;;16923:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16914:43;;16972:9;16967:120;16991:14;;:21;16987:25;;16967:120;;;17045:31;:7;:14;;;17060:1;17045:17;;;;;;;;:::i;:::-;;;;;;;:29;:31::i;:::-;17033:6;17040:1;17033:9;;;;;;;;:::i;:::-;;;;;;:43;;;;17014:3;;;;:::i;:::-;;;16967:120;;;;16808:285;;;:::o;7594:807:55:-;7659:7;7678:21;7702:23;:8;:21;:23::i;:::-;7678:47;;7735:23;7775:13;7761:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7761:28:55;;7735:54;;7804:9;7799:298;7823:13;7819:1;:17;7799:298;;;8062:24;:17;:8;8077:1;8062:14;:17::i;:::-;:22;:24::i;:::-;8050:6;8057:1;8050:9;;;;;;;;:::i;:::-;;;;;;;;;;:36;7838:3;;;:::i;:::-;;;7799:298;;;-1:-1:-1;8236:58:55;8261:6;8269:24;8292:1;645::45;8269:24:55;:::i;:::-;8236;:58::i;:::-;8385:6;8392:1;8385:9;;;;;;;;:::i;:::-;;;;;;;8378:16;;;;7594:807;;;:::o;4377:185:67:-;4464:1;4459;:6;4455:101;;4486:31;4513:3;4486:31;;;;;;:::i;:::-;;;;;;;;4531:14;4540:1;4543;4531:8;:14::i;:::-;4377:185;;;:::o;6256:393:56:-;6310:17;;6377:5;6452:45;:36;6377:5;2354:2;6452:14;:36::i;:::-;:43;:45::i;:::-;6440:57;-1:-1:-1;6592:50:56;:41;:7;2354:2;6592:17;:41::i;:50::-;6579:63;;6349:300;6256:393;;;:::o;843:900:57:-;1083:12;;978:13;;1109:17;;;1105:48;;;1135:18;;-1:-1:-1;;;1135:18:57;;;;;;;;;;;1105:48;1171:4;1163:12;;1340:9;1335:189;1359:8;1355:1;:12;1335:189;;;1473:36;1483:5;1490;1496:1;1490:8;;;;;;;;:::i;:::-;;;;;;;1500:5;1507:1;1473:9;:36::i;:::-;1465:44;-1:-1:-1;1369:3:57;;1335:189;;;-1:-1:-1;1621:8:57;1604:123;1635:6;1631:1;:10;1604:123;;;1674:38;1684:5;1699:1;1703:5;1710:1;1674:9;:38::i;:::-;1666:46;-1:-1:-1;1643:3:57;;1604:123;;;;997:746;843:900;;;;;;:::o;373:611:187:-;425:21;;:::i;:::-;454:31;;;491:32;;;:12;;;;:32;;;529:11;;;;:31;;;;566:37;;;:17;;;;:37;;;609:15;;;;:35;;;;650:13;;;;;;:22;:49;;;;;;;;705:13;;:23;;;;:50;;;761:13;;:24;;;;:51;;;818:13;;:26;;:53;;;877:13;;:24;;:51;;;934:13;:20;;:47;;;;454:5;373:611::o;17646:357:189:-;17721:21;17754;17790:7;:14;;;:21;17778:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17778:34:189;;17754:58;;17827:9;17822:120;17846:14;;:21;17842:25;;17822:120;;;17900:31;:7;:14;;;17915:1;17900:17;;;;;;;;:::i;:::-;;;;;;;:29;:31::i;:::-;17888:6;17895:1;17888:9;;;;;;;;:::i;:::-;;;;;;;;;;:43;17869:3;;;:::i;:::-;;;17822:120;;;;17962:34;17989:6;17962:26;:34::i;:::-;17951:45;17646:357;-1:-1:-1;;;17646:357:189:o;4187:132:55:-;4256:8;4283:29;4298:13;:7;:11;:13::i;:::-;4283:14;:29::i;14654:361:189:-;14718:18;14756:252;14798:2;:7;;;14828:2;:9;;;14859:2;:8;;;14895:2;:14;;;14935:2;:12;;;14971:26;:2;:10;;;:24;:26::i;:::-;3551:76:56;;;;;;14446:19:199;;;;14488:3;14538:16;;;-1:-1:-1;;;;;;14534:25:199;;;14520:12;;;14513:47;14594:16;;;;14590:25;;;14576:12;;;14569:47;14639:3;14691:16;;;-1:-1:-1;;;;;;14687:25:199;;;14673:12;;;14666:47;14747:16;;14743:25;14729:12;;;14722:47;14825:3;14803:16;-1:-1:-1;;;;;;14799:59:199;14785:12;;;14778:81;3551:76:56;;;;;;;;;14875:12:199;;;;3551:76:56;;;3318:316;3771:123;3837:5;3861:26;3873:13;:7;:11;:13::i;:::-;3861:11;:26::i;6514:195:55:-;6578:7;1387:20:45;1107:2;1387;:20;:::i;:::-;6664:38:55;;-1:-1:-1;;;;;7239:43:52;;6664:38:55;:::i;6104:342::-;6181:5;6216:8;6181:5;1387:20:45;1107:2;1387;:20;:::i;:::-;6263:25:55;;:10;:25;:::i;:::-;6243:45;-1:-1:-1;;;;;;7239:43:52;;6302:9:55;:26;6298:56;;6337:17;;-1:-1:-1;;;6337:17:55;;;;;;;;;;;6298:56;6371:68;:54;6394:9;1387:20:45;1107:2;1387;:20;:::i;:::-;6371:7:55;;:54;:13;:54::i;:68::-;6364:75;6104:342;-1:-1:-1;;;;;6104:342:55:o;5663:248:56:-;5713:7;5733:17;5752:18;5774:16;:5;:14;:16::i;:::-;5868:35;;;;;;;12830:19:199;;;;12865:12;;;12858:28;;;;5868:35:56;;;;;;;;;12902:12:199;;;;5868:35:56;;5858:46;;;;;;5663:248;-1:-1:-1;;;;5663:248:56:o;4547:1885:57:-;4657:13;;4790:1;:11;;4775:27;;4771:58;;;4811:18;;-1:-1:-1;;;4811:18:57;;;;;;;;;;;4771:58;5099:9;5094:1322;5118:6;5114:1;:10;5094:1322;;;5632:17;5627:618;5667:11;5655:9;:23;5627:618;;;5718:18;5739:9;5751:1;5739:13;5718:34;;5774:17;5794:6;5801:9;5794:17;;;;;;;;:::i;:::-;;;;;;;5774:37;;5887:18;5921:11;5908:10;:24;:58;;5964:1;5908:58;;;5935:6;5942:10;5935:18;;;;;;;;:::i;:::-;;;;;;;5908:58;5887:79;;6194:32;6204:9;6215:10;6194:9;:32::i;:::-;6169:6;6189:1;6176:9;:14;;6169:22;;;;;;;;:::i;:::-;;;;;;;;;;:57;-1:-1:-1;;;5693:1:57;5680:14;5627:618;;;-1:-1:-1;6400:1:57;6380:15;;;6379:22;;;5126:3;5094:1322;;;;4625:1807;4547:1885;;:::o;4095:277:67:-;4163:1;4158;:6;4154:212;;4185:44;;;;;13127:2:199;13109:21;;;13166:2;13146:18;;;13139:30;13205:34;13200:2;13185:18;;13178:62;-1:-1:-1;;;13271:2:199;13256:18;;13249:35;13316:3;13301:19;;12925:401;4185:44:67;;;;;;;;4248:34;;;13543:21:199;;;13600:2;13580:18;;;13573:30;-1:-1:-1;;;13634:2:199;13619:18;;13612:40;13719:4;13704:20;;13697:36;;;4248:34:67;;;;;;;13684:3:199;4248:34:67;;;4301;;;13956:21:199;;;14013:2;13993:18;;;13986:30;-1:-1:-1;;;14047:2:199;14032:18;;14025:40;14132:4;14117:20;;14110:36;;;4301:34:67;;;;;;;14097:3:199;4301:34:67;;;4349:6;:4;:6::i;:::-;4095:277;;:::o;11947:141:52:-;12017:7;12043:38;:7;12017;12075:4;12043:13;:38::i;9003:292::-;9059:14;9085:12;9100:13;:7;6898:3;6871:30;;6712:196;9100:13;-1:-1:-1;;;;;7239:43:52;;;;9258:21;;;;;-1:-1:-1;;9003:292:52:o;11126:529::-;11201:7;-1:-1:-1;;;;;7239:43:52;;11308:13;;;11304:64;;;11344:13;;-1:-1:-1;;;11344:13:52;;;;;;;;;;;11304:64;11580:58;11609:6;11593:13;:7;6898:3;6871:30;;6712:196;11593:13;:22;11630:6;11623:4;:13;11580:5;:58::i;:::-;11573:65;11126:529;-1:-1:-1;;;;11126:529:52:o;2125:526:57:-;2261:14;2466:1;2439:23;;;2438:29;:34;;2434:211;;2521:24;2531:4;2537:7;2521:9;:24::i;:::-;2514:31;;;;2434:211;2610:24;2620:7;2629:4;2610:9;:24::i;3452:580:55:-;3522:12;3551:29;3566:6;:13;3551:14;:29::i;:::-;3546:66;;3589:23;;-1:-1:-1;;;3589:23:55;;;;;;;;;;;3546:66;3710:13;;3693:14;3710:13;3758:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3758:21:55;;3733:46;;3794:9;3789:91;3813:6;3809:1;:10;3789:91;;;3851:18;:6;3858:1;3851:9;;;;;;;;:::i;:::-;;;;;;;4917:5:56;4813:118;3851:18:55;3840:5;3846:1;3840:8;;;;;;;;:::i;:::-;;;;;;;;;;:29;3821:3;;;:::i;:::-;;;3789:91;;;;4003:22;4019:5;4003:15;:22::i;2972:569:52:-;3060:10;;3026:7;;3486:4;3477:14;;3517:17;3477:14;3060:10;3517:5;:17::i;4471:200:55:-;4535:8;4560:19;4571:7;4560:10;:19::i;:::-;4555:54;;4588:21;;-1:-1:-1;;;4588:21:55;;;;;;;;;;;4555:54;-1:-1:-1;4655:7:55;4471:200::o;13489:464:189:-;13634:12;;11617:9;13558:7;;13584:362;;13687:13;;;;11617:9;13742:14;;;;11617:9;13800:16;;;;11617:9;13858:14;;;;11617:9;13910:10;;;;11617:9;-1:-1:-1;;;2608:6:59;4376:51;;;;4442:53;2719:5;4442:53;;;;4376:119;4510:55;2831:5;4510:55;;;;4376:189;4580:60;2948:5;4580:60;;;;4376:264;4655:55;3060:5;4655:55;;;;4376:334;4725:30;;;4376:379;4070:702;;;;;;;;;4032:185:56;4093:5;4115:16;4123:7;4115;:16::i;:::-;4110:48;;4140:18;;-1:-1:-1;;;4140:18:56;;;;;;;;;;;10331:484:52;10416:7;10435:12;10450:13;:7;6898:3;6871:30;;6712:196;10450:13;10435:28;;10546:13;:7;:11;:13::i;:::-;10539:4;10523:13;10530:6;10523:4;:13;:::i;:::-;:20;;;;:::i;:::-;:36;10519:87;;;10582:13;;-1:-1:-1;;;10582:13:52;;;;;;;;;;;10519:87;10758:40;10778:6;10771:4;:13;10792:4;10758:5;:40::i;3115:287:57:-;3196:14;3226:23;;:51;;;;-1:-1:-1;3253:24:57;;3226:51;3222:174;;;-1:-1:-1;3300:1:57;3293:8;;3222:174;3349:35;;;;;;12830:19:199;;;12865:12;;;12858:28;;;12902:12;;3349:35:57;;;;;;;;;;;;3339:46;;;;;;3332:53;;;;2409:432:67;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;15100:51:199;;;-1:-1:-1;;;15167:18:199;;;15160:34;;;;2712:4:67;15210:18:199;;;15203:34;2489:11:67;;1671:64;2586:43;;15073:18:199;;2652:67:67;;;-1:-1:-1;;2652:67:67;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:67;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:67;2820:7;:14;;-1:-1:-1;;2820:14:67;;;;;2409:432::o;2092:540:52:-;2158:7;;2192:11;2199:4;2192;:11;:::i;:::-;2177:26;;2471:4;2465:11;2459:4;2456:21;2453:38;;;-1:-1:-1;2488:1:52;2453:38;2514:4;2522:1;2514:9;2510:66;;2546:19;;-1:-1:-1;;;2546:19:52;;;;;;;;;;;2510:66;17362:3;17354:11;;;17353:20;;2592:33;17029:352;10245:302:55;10315:4;10482:18;;;;;:58;;-1:-1:-1;1552:24:45;1575:1;645;1552:24;:::i;:::-;1546:1;:31;;10504:13:55;:36;;10475:65;10245:302;-1:-1:-1;;10245:302:55:o;5340:892:52:-;5595:4;5589:11;;5432;5760:33;5772:8;5788:4;5782:10;;5760:11;:33::i;:::-;-1:-1:-1;;;;;7239:43:52;8097:2;8081:18;;-1:-1:-1;;8465:20:52;6109;;6131:4;6105:31;6099:4;6092:45;6199:17;;;-1:-1:-1;5340:892:52;;-1:-1:-1;5340:892:52:o;4755:389:55:-;4815:4;-1:-1:-1;;;;;7239:43:52;;4815:4:55;1387:20:45;1107:2;1387;:20;:::i;:::-;5028:21:55;;:6;:21;:::i;:::-;5004:45;-1:-1:-1;5098:6:55;1387:20:45;1107:2;1387;:20;:::i;:::-;5066:28:55;;:13;:28;:::i;:::-;:38;:71;;;;;5108:29;5123:13;5108:14;:29::i;4283:116:56:-;4340:4;1387:20:45;1107:2;1387;:20;:::i;:::-;-1:-1:-1;;;;;7239:43:52;;4363:29:56;;4283:116;-1:-1:-1;;4283:116:56:o;7459:258:52:-;7512:12;-1:-1:-1;;;;;7239:43:52;;7671:13;:7;6898:3;6871:30;;6712:196;7671:13;:29;;7459:258;-1:-1:-1;;7459:258:52:o;19390:1003::-;19660:4;19654:11;19478:7;;19742:14;;;19738:68;;;19779:16;;-1:-1:-1;;;19779:16:52;;;;;;;;;;;19738:68;19925:14;19958:9;19953:364;19977:8;:15;19973:1;:19;19953:364;;;20009:15;20027:8;20036:1;20027:11;;;;;;;;:::i;:::-;;;;;;;20009:29;;20189:41;20203:7;20223:6;20212:8;:17;20189:13;:41::i;:::-;-1:-1:-1;;;;;;7239:43:52;20248:23;;;;;20289:3;;19953:364;;;-1:-1:-1;17362:3:52;17354:11;;;17353:20;;20333:53;17029:352;18013:842;18352:4;18346:11;18091:7;;-1:-1:-1;;;;;7239:43:52;;;6898:3;6871:30;;;;18434:12;;;18430:66;;;18469:16;;-1:-1:-1;;;18469:16:52;;;;;;;;;;;18430:66;18505:8;18721:4;18713:6;18707:4;18699:6;18693:4;18686:5;18675:51;18668:58;;18750:3;18745:37;;18762:20;;-1:-1:-1;;;18762:20:52;;;;;;;;;;;18745:37;17362:3;17354:11;;;17353:20;;18792:56;18013:842;-1:-1:-1;;;;;;;18013:842:52:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:658:199:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:199;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:199;;14:658;-1:-1:-1;;;;;;14:658:199:o;677:1569::-;881:4;910:2;950;939:9;935:18;980:2;969:9;962:21;1003:6;1038;1032:13;1069:6;1061;1054:22;1095:2;1085:12;;1128:2;1117:9;1113:18;1106:25;;1190:2;1180:6;1177:1;1173:14;1162:9;1158:30;1154:39;1228:2;1220:6;1216:15;1249:1;1270;1280:937;1296:6;1291:3;1288:15;1280:937;;;1365:22;;;-1:-1:-1;;1361:36:199;1349:49;;1421:13;;1508:9;;-1:-1:-1;;;;;1504:35:199;1489:51;;1579:11;;1573:18;1611:15;;;1604:27;;;1692:19;;1461:15;;;1724:24;;;1814:21;;;;1859:1;;1782:2;1770:15;;;1873:236;1889:8;1884:3;1881:17;1873:236;;;1970:15;;-1:-1:-1;;;;;;1966:42:199;1952:57;;2078:17;;;;1917:1;1908:11;;;;;2035:14;;;;1873:236;;;-1:-1:-1;2195:12:199;;;;2132:5;-1:-1:-1;;;2160:15:199;;;;1322:1;1313:11;1280:937;;;-1:-1:-1;2234:6:199;;677:1569;-1:-1:-1;;;;;;;;;677:1569:199:o;2251:250::-;2336:1;2346:113;2360:6;2357:1;2354:13;2346:113;;;2436:11;;;2430:18;2417:11;;;2410:39;2382:2;2375:10;2346:113;;;-1:-1:-1;;2493:1:199;2475:16;;2468:27;2251:250::o;2506:271::-;2548:3;2586:5;2580:12;2613:6;2608:3;2601:19;2629:76;2698:6;2691:4;2686:3;2682:14;2675:4;2668:5;2664:16;2629:76;:::i;:::-;2759:2;2738:15;-1:-1:-1;;2734:29:199;2725:39;;;;2766:4;2721:50;;2506:271;-1:-1:-1;;2506:271:199:o;2782:803::-;2944:4;2973:2;3013;3002:9;2998:18;3043:2;3032:9;3025:21;3066:6;3101;3095:13;3132:6;3124;3117:22;3170:2;3159:9;3155:18;3148:25;;3232:2;3222:6;3219:1;3215:14;3204:9;3200:30;3196:39;3182:53;;3270:2;3262:6;3258:15;3291:1;3301:255;3315:6;3312:1;3309:13;3301:255;;;3408:2;3404:7;3392:9;3384:6;3380:22;3376:36;3371:3;3364:49;3436:40;3469:6;3460;3454:13;3436:40;:::i;:::-;3426:50;-1:-1:-1;3534:12:199;;;;3499:15;;;;3337:1;3330:9;3301:255;;;-1:-1:-1;3573:6:199;;2782:803;-1:-1:-1;;;;;;;2782:803:199:o;3782:127::-;3843:10;3838:3;3834:20;3831:1;3824:31;3874:4;3871:1;3864:15;3898:4;3895:1;3888:15;3914:253;3986:2;3980:9;4028:4;4016:17;;4063:18;4048:34;;4084:22;;;4045:62;4042:88;;;4110:18;;:::i;:::-;4146:2;4139:22;3914:253;:::o;4172:275::-;4243:2;4237:9;4308:2;4289:13;;-1:-1:-1;;4285:27:199;4273:40;;4343:18;4328:34;;4364:22;;;4325:62;4322:88;;;4390:18;;:::i;:::-;4426:2;4419:22;4172:275;;-1:-1:-1;4172:275:199:o;4452:163::-;4519:20;;4579:10;4568:22;;4558:33;;4548:61;;4605:1;4602;4595:12;4620:165;4687:20;;4747:12;4736:24;;4726:35;;4716:63;;4775:1;4772;4765:12;4790:509;4846:5;4894:4;4882:9;4877:3;4873:19;4869:30;4866:50;;;4912:1;4909;4902:12;4866:50;4945:2;4939:9;4987:4;4979:6;4975:17;5058:6;5046:10;5043:22;5022:18;5010:10;5007:34;5004:62;5001:88;;;5069:18;;:::i;:::-;5105:2;5098:22;5138:6;-1:-1:-1;5138:6:199;5168:23;;5235:6;5222:20;;5210:33;;5200:61;;5257:1;5254;5247:12;5200:61;5270:23;;4790:509;;-1:-1:-1;;4790:509:199:o;5304:482::-;5364:5;5412:4;5400:9;5395:3;5391:19;5387:30;5384:50;;;5430:1;5427;5420:12;5384:50;5463:4;5457:11;5507:4;5499:6;5495:17;5578:6;5566:10;5563:22;5542:18;5530:10;5527:34;5524:62;5521:88;;;5589:18;;:::i;:::-;5625:4;5618:24;5690:23;;5675:39;;5775:2;5760:18;;;5747:32;5730:15;;;5723:57;;;;-1:-1:-1;5660:6:199;5304:482;-1:-1:-1;5304:482:199:o;5791:1467::-;5918:6;5926;5970:9;5961:7;5957:23;6000:3;5996:2;5992:12;5989:32;;;6017:1;6014;6007:12;5989:32;6040:6;6066:2;6062;6058:11;6055:31;;;6082:1;6079;6072:12;6055:31;6108:22;;:::i;:::-;6166:9;6153:23;6146:5;6139:38;6209:37;6242:2;6231:9;6227:18;6209:37;:::i;:::-;6204:2;6197:5;6193:14;6186:61;6279:37;6312:2;6301:9;6297:18;6279:37;:::i;:::-;6274:2;6267:5;6263:14;6256:61;6349:37;6382:2;6371:9;6367:18;6349:37;:::i;:::-;6344:2;6337:5;6333:14;6326:61;6420:38;6453:3;6442:9;6438:19;6420:38;:::i;:::-;6414:3;6403:15;;6396:63;6494:4;-1:-1:-1;;6475:17:199;;6471:28;6468:48;;;6512:1;6509;6502:12;6468:48;6540:22;;:::i;:::-;6525:37;;6587:57;6636:7;6630:3;6619:9;6615:19;6587:57;:::i;:::-;6578:7;6571:74;6679:58;6729:7;6722:4;6711:9;6707:20;6679:58;:::i;:::-;6674:2;6665:7;6661:16;6654:84;6772:57;6821:7;6815:3;6804:9;6800:19;6772:57;:::i;:::-;6767:2;6758:7;6754:16;6747:83;6864:57;6913:7;6907:3;6896:9;6892:19;6864:57;:::i;:::-;6859:2;6850:7;6846:16;6839:83;6957:57;7006:7;7000:3;6989:9;6985:19;6957:57;:::i;:::-;6951:3;6942:7;6938:17;6931:84;7050:57;7099:7;7093:3;7082:9;7078:19;7050:57;:::i;:::-;7044:3;7035:7;7031:17;7024:84;7141:7;7135:3;7128:5;7124:15;7117:32;7168:5;7158:15;;;7192:60;7244:7;7239:2;7228:9;7224:18;7192:60;:::i;:::-;7182:70;;;;5791:1467;;;;;:::o;7263:380::-;7342:1;7338:12;;;;7385;;;7406:61;;7460:4;7452:6;7448:17;7438:27;;7406:61;7513:2;7505:6;7502:14;7482:18;7479:38;7476:161;;7559:10;7554:3;7550:20;7547:1;7540:31;7594:4;7591:1;7584:15;7622:4;7619:1;7612:15;7927:384;-1:-1:-1;;;;;;8112:33:199;;8100:46;;8169:13;;8082:3;;8191:74;8169:13;8254:1;8245:11;;8238:4;8226:17;;8191:74;:::i;:::-;8285:16;;;;8303:1;8281:24;;7927:384;-1:-1:-1;;;7927:384:199:o;8316:287::-;8445:3;8483:6;8477:13;8499:66;8558:6;8553:3;8546:4;8538:6;8534:17;8499:66;:::i;:::-;8581:16;;;;;8316:287;-1:-1:-1;;8316:287:199:o;8608:277::-;8675:6;8728:2;8716:9;8707:7;8703:23;8699:32;8696:52;;;8744:1;8741;8734:12;8696:52;8776:9;8770:16;8829:5;8822:13;8815:21;8808:5;8805:32;8795:60;;8851:1;8848;8841:12;8890:801;9050:4;9079:2;9119;9108:9;9104:18;9149:2;9138:9;9131:21;9172:6;9207;9201:13;9238:6;9230;9223:22;9276:2;9265:9;9261:18;9254:25;;9338:2;9328:6;9325:1;9321:14;9310:9;9306:30;9302:39;9288:53;;9376:2;9368:6;9364:15;9397:1;9407:255;9421:6;9418:1;9415:13;9407:255;;;9514:2;9510:7;9498:9;9490:6;9486:22;9482:36;9477:3;9470:49;9542:40;9575:6;9566;9560:13;9542:40;:::i;:::-;9532:50;-1:-1:-1;9640:12:199;;;;9605:15;;;;9443:1;9436:9;9407:255;;9696:184;9766:6;9819:2;9807:9;9798:7;9794:23;9790:32;9787:52;;;9835:1;9832;9825:12;9787:52;-1:-1:-1;9858:16:199;;9696:184;-1:-1:-1;9696:184:199:o;10067:936::-;10162:6;10193:2;10236;10224:9;10215:7;10211:23;10207:32;10204:52;;;10252:1;10249;10242:12;10204:52;10285:9;10279:16;10314:18;10355:2;10347:6;10344:14;10341:34;;;10371:1;10368;10361:12;10341:34;10409:6;10398:9;10394:22;10384:32;;10454:7;10447:4;10443:2;10439:13;10435:27;10425:55;;10476:1;10473;10466:12;10425:55;10505:2;10499:9;10527:2;10523;10520:10;10517:36;;;10533:18;;:::i;:::-;10579:2;10576:1;10572:10;10562:20;;10602:28;10626:2;10622;10618:11;10602:28;:::i;:::-;10664:15;;;10734:11;;;10730:20;;;10695:12;;;;10762:19;;;10759:39;;;10794:1;10791;10784:12;10759:39;10818:11;;;;10838:135;10854:6;10849:3;10846:15;10838:135;;;10920:10;;10908:23;;10871:12;;;;10951;;;;10838:135;;;10992:5;10067:936;-1:-1:-1;;;;;;;;10067:936:199:o;11008:127::-;11069:10;11064:3;11060:20;11057:1;11050:31;11100:4;11097:1;11090:15;11124:4;11121:1;11114:15;11140:128;11207:9;;;11228:11;;;11225:37;;;11242:18;;:::i;11273:127::-;11334:10;11329:3;11325:20;11322:1;11315:31;11365:4;11362:1;11355:15;11389:4;11386:1;11379:15;11405:112;11437:1;11463;11453:35;;11468:18;;:::i;:::-;-1:-1:-1;11502:9:199;;11405:112::o;11522:125::-;11587:9;;;11608:10;;;11605:36;;;11621:18;;:::i;11652:127::-;11713:10;11708:3;11704:20;11701:1;11694:31;11744:4;11741:1;11734:15;11768:4;11765:1;11758:15;11784:135;11823:3;11844:17;;;11841:43;;11864:18;;:::i;:::-;-1:-1:-1;11911:1:199;11900:13;;11784:135::o;11924:446::-;12174:2;12163:9;12156:21;12213:1;12208:2;12197:9;12193:18;12186:29;-1:-1:-1;;;12246:2:199;12235:9;12231:18;12224:35;12297:3;12290:4;12279:9;12275:20;12268:33;12137:4;12318:46;12359:3;12348:9;12344:19;12336:6;12318:46;:::i;12375:120::-;12415:1;12441;12431:35;;12446:18;;:::i;:::-;-1:-1:-1;12480:9:199;;12375:120::o;12500:168::-;12573:9;;;12604;;12621:15;;;12615:22;;12601:37;12591:71;;12642:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_attestationProof((bytes32,uint32,uint32,uint40,uint40,((uint16),(uint16),(uint16),(uint16),(uint16),(uint16))),(uint256,uint256))": "f86e9b43"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IncorrectStatesAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OccupiedMemory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PrecompileOutOfGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TreeHeightTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnallocatedMemory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnformattedSnapshot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnformattedState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ViewOverrun\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"blockNumber\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"components\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"gasPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"dataPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"execBuffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"amortAttCost\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"etherPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"internalType\":\"struct RawNumber\",\"name\":\"markup\",\"type\":\"tuple\"}],\"internalType\":\"struct RawGasData\",\"name\":\"gasData\",\"type\":\"tuple\"}],\"internalType\":\"struct RawState\",\"name\":\"rawState\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"statesAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct RawStateIndex\",\"name\":\"rsi\",\"type\":\"tuple\"}],\"name\":\"test_attestationProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/utils/proof/AttestationProofGeneratorTest.t.sol\":\"AttestationProofGeneratorTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/libs/Constants.sol\":{\"keccak256\":\"0x9ead9581411ac7f702ccba26e3f478610f8c9c785ec3f96f3d9324d162177c2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cba4a834737651bee39e2abca02d59e676cd149439d21182ab6e4320d5e61279\",\"dweb:/ipfs/QmS2K5LKspFZPKuedWoaqywUw6v1nH9xdHa35dN8J9jDEi\"]},\"contracts/libs/Errors.sol\":{\"keccak256\":\"0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b\",\"dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB\"]},\"contracts/libs/memory/Attestation.sol\":{\"keccak256\":\"0x83b58e2d80cc7139b8996c51c5e9015f34e833e73b92036b53a1af6641e2b699\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a097c82542ba977de931c6331a9b01a39ef2e46b8916414a6f4f550bc59c113\",\"dweb:/ipfs/QmYRHMoPXzrnx86rZnHAEiFxqM5poEs6wyZinLLTEfwZH3\"]},\"contracts/libs/memory/BaseMessage.sol\":{\"keccak256\":\"0x6f625ee64c2abb64fe5e7645eb4ac449e4a743cf5c434de70b24b47522a2c579\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a29cb57889c10b4cc601abe0f65529f1829354a276437ecb7ce387a654fb671\",\"dweb:/ipfs/QmRYA9HJAdKaVhrvDdaCwdR5DvCYy7yPQGVJ4a9kUCAxaA\"]},\"contracts/libs/memory/ByteString.sol\":{\"keccak256\":\"0x99a2d8a7d93c1ce5063da6631347189cffb95d977cc1683c8bc2d9529b501d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c627819681a668117cbf3633700ed36b63942a3ea8d96db65211febe048bb8bb\",\"dweb:/ipfs/QmSdhu6BDD6Tk17zD2JcmYwYVEnnoeuh9UFWfUkVW5KKvL\"]},\"contracts/libs/memory/MemView.sol\":{\"keccak256\":\"0x95dd48e50e353b59fadce29f22f02629c91bd3b5e07c0efa588bd7c808536587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4347457c5338192aca52c237c7f588d15a4f541482cd44b0632c59f36f9558eb\",\"dweb:/ipfs/QmXn1sKY7nVNrgKtbtE9PaMHFKBadyg73fs2jhw4Navyb1\"]},\"contracts/libs/memory/Message.sol\":{\"keccak256\":\"0x206a96eb35a7015116bfc585b30d34bd5cf151761ded37b8a2a36dd74a9ba99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12ebb3152e1c1dc2aed3c88cb17f54d9abc2a157215c2628fa3c4ac161686cf\",\"dweb:/ipfs/QmbU6h7KEanE7Pt5UXN2WV5SQwWjziCwqBL5RLKAUJHKci\"]},\"contracts/libs/memory/Receipt.sol\":{\"keccak256\":\"0x009e8cfffa4806d1a0a326a31350ead092c9cd22105d4890c86bf93d20c7824d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa9905170f86e4e2d9b62e9fabaab36381398da14f001e0b9bb98c31c174a48e\",\"dweb:/ipfs/QmYpHjdY2yf3w6kFi9urUTyrMyVZBBsCGGEkE1kyTnXqVn\"]},\"contracts/libs/memory/Snapshot.sol\":{\"keccak256\":\"0x5df6aa04b1cbb65e410c7f1a02787e0e11dbcdb5cde18ae50d435029c27c1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2e19b5c6778338b7e8e9c8ef82738797d8955d37884c7db70d7cdea43329910\",\"dweb:/ipfs/Qma1cRGHqRM3tkh5JyzR2Td6iKKST2HapTygBwVNTRJJZD\"]},\"contracts/libs/memory/State.sol\":{\"keccak256\":\"0x3997f3a820110b3bce6f87ea8df3e1f8b006d1ac45efff1dc2f8873f8bbfa5af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf973a3633546dfff75b550673b4a680b7fab48d7fc8923157983a4fde3d5da4\",\"dweb:/ipfs/QmZ8NNwcYaqVxtar8g5MH5mqDXXuMTQLe6vi7zYGswFA3N\"]},\"contracts/libs/merkle/MerkleMath.sol\":{\"keccak256\":\"0xbd13c07bdc40b80f56c7d75e3f31b6c4a85a78d444b760604a5b71083d14925c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3162b491e4e216c0f2d143ce3baab4cf9e2a8b1b42466256a5d5b1f8b0385507\",\"dweb:/ipfs/QmYnDSZyxiGHfmB8Fx46zh1LZe3aCdVaKzpaQuD9piTc7u\"]},\"contracts/libs/stack/GasData.sol\":{\"keccak256\":\"0x2007fd4b97cf33bfe4aa7dc6ac887af87b4010ec9834636b4dd5685582ac26cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b54ca8b659d63ef7138c5b3b243190ca19b1e893b7b49dee1f8790d55b9e691\",\"dweb:/ipfs/Qmc2FGb16uosZ5kvyEK2onpWVPvWeE9X72xNWeJw8CbweD\"]},\"contracts/libs/stack/Header.sol\":{\"keccak256\":\"0x6a2030f6d08075f91336466c3fe4bd63f2760dcd42554856357af8024fd55344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1a1c8f6240f897c62cdc09fab57fc9eeea8072efbc8d101bd7e40b8eea272c9\",\"dweb:/ipfs/QmYrFA3fupKhW71k6yLkQsojPJt4Fcv4uH46hNvYYHcDsy\"]},\"contracts/libs/stack/Number.sol\":{\"keccak256\":\"0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd\",\"dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5\"]},\"contracts/libs/stack/Request.sol\":{\"keccak256\":\"0xecd4427fe7285d1d5663ea019a66ebb04d3f495c0be28a14043c99a0d9a90689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55e800c307070d6497031b90157d917dcabd5f93d342081be8d20ad3c80df429\",\"dweb:/ipfs/QmU8oza8MeWDbG9xfPaPVoj4Z1rKtvQ7pA3Z7CuYyGSuY6\"]},\"contracts/libs/stack/Tips.sol\":{\"keccak256\":\"0x2186d854149349ff689a8356c7f387d134f59fa4a97aed7b43c9e25f46661b0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff15d61f2c9b26e6ef33457aed4a2d9ed61726e2a746d3e0a7e68eb6cd3d63a1\",\"dweb:/ipfs/QmUeiiTAjPmuFhLfzDMqZ6DyvQmEYhsKo9XArHSrMvjYKL\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x027d1aa07f6a45546d6990186ee6ab2ccd1b654fbbef326145e9b6e125feaabc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c57fcb94bf64d583115157e4c89cc4ad58ff1102677613d7ef70263d98d270\",\"dweb:/ipfs/QmbASKUPs9pRck3j4soibhgGJ2ghr38vzdaSrF5Ae2xyqQ\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"test/utils/libs/FakeIt.t.sol\":{\"keccak256\":\"0xfcb5b38ca3d693609ef261aea084bad8dae3ade0ea969939699e073ceb0125ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f17b2734c388ec61f5b855f32f8c650724a8cafc74dec451a1edfe633380a6ad\",\"dweb:/ipfs/QmNgFGrSywpPxXMnMP5NNAxBj6jPu9f29X8zv3XjpTvpVU\"]},\"test/utils/libs/SynapseStructs.t.sol\":{\"keccak256\":\"0x664ba9f04e889501196308480444a90657872af51267cbe7e6d9de5308edab13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b85dd129998afd92047c883b6712d815ae2930171eaa33eb30fdceb5dddca0ea\",\"dweb:/ipfs/QmRKcKo86FaRVEydU1yETN6jaSKbomdFFcrswzZeL3WnAh\"]},\"test/utils/proof/AttestationProofGenerator.t.sol\":{\"keccak256\":\"0x55e60fa4860d20c1acef70992c161544943499d919debf1233f5896006444d7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a2043fac652c02e9624200b2cbd12bb984097f394504e1aa58c898cce605656\",\"dweb:/ipfs/QmRf4GrVREY5YhmqZXPUKhTYFKp966vCxa9RwAnJq6Ni5d\"]},\"test/utils/proof/AttestationProofGeneratorTest.t.sol\":{\"keccak256\":\"0x6b0081b9410ca891d9f9402e26ba37e07aef518eed8430c47c8ed11e35dc5bed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0218a8ba8c3e507880c38a1e4de56824a81495eedd4ab4f13c281e5c8fb168cc\",\"dweb:/ipfs/QmS4znHiJdHhQR6bVZNkCc6sgYQYn2CnBQ4CXSfPMjkozp\"]},\"test/utils/proof/ProofCutter.t.sol\":{\"keccak256\":\"0x0b2f00c46d7967ff6058691cc7fac1bdef3eebfcabd395b92ad90d4a8da675d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7cb0b41fcad5497e2b852ac0bfae328ecb0633bd7ccf28cb1a4518715dc8645\",\"dweb:/ipfs/QmZu3eQbEeM6AvVJ5qNjd1oq1a1bnEtffDDt3h2Pan8GqP\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectStatesAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IndexOutOfRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OccupiedMemory"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PrecompileOutOfGas"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TreeHeightTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnallocatedMemory"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnformattedSnapshot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnformattedState"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ViewOverrun"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct RawState",
              "name": "rawState",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "origin",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint40",
                  "name": "blockNumber",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "timestamp",
                  "type": "uint40"
                },
                {
                  "internalType": "struct RawGasData",
                  "name": "gasData",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct RawNumber",
                      "name": "gasPrice",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "dataPrice",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "execBuffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "amortAttCost",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "etherPrice",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    },
                    {
                      "internalType": "struct RawNumber",
                      "name": "markup",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint16",
                          "name": "number",
                          "type": "uint16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct RawStateIndex",
              "name": "rsi",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "stateIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "statesAmount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_attestationProof"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/utils/proof/AttestationProofGeneratorTest.t.sol": "AttestationProofGeneratorTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/libs/Constants.sol": {
        "keccak256": "0x9ead9581411ac7f702ccba26e3f478610f8c9c785ec3f96f3d9324d162177c2c",
        "urls": [
          "bzz-raw://cba4a834737651bee39e2abca02d59e676cd149439d21182ab6e4320d5e61279",
          "dweb:/ipfs/QmS2K5LKspFZPKuedWoaqywUw6v1nH9xdHa35dN8J9jDEi"
        ],
        "license": "MIT"
      },
      "contracts/libs/Errors.sol": {
        "keccak256": "0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011",
        "urls": [
          "bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b",
          "dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Attestation.sol": {
        "keccak256": "0x83b58e2d80cc7139b8996c51c5e9015f34e833e73b92036b53a1af6641e2b699",
        "urls": [
          "bzz-raw://1a097c82542ba977de931c6331a9b01a39ef2e46b8916414a6f4f550bc59c113",
          "dweb:/ipfs/QmYRHMoPXzrnx86rZnHAEiFxqM5poEs6wyZinLLTEfwZH3"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/BaseMessage.sol": {
        "keccak256": "0x6f625ee64c2abb64fe5e7645eb4ac449e4a743cf5c434de70b24b47522a2c579",
        "urls": [
          "bzz-raw://0a29cb57889c10b4cc601abe0f65529f1829354a276437ecb7ce387a654fb671",
          "dweb:/ipfs/QmRYA9HJAdKaVhrvDdaCwdR5DvCYy7yPQGVJ4a9kUCAxaA"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/ByteString.sol": {
        "keccak256": "0x99a2d8a7d93c1ce5063da6631347189cffb95d977cc1683c8bc2d9529b501d66",
        "urls": [
          "bzz-raw://c627819681a668117cbf3633700ed36b63942a3ea8d96db65211febe048bb8bb",
          "dweb:/ipfs/QmSdhu6BDD6Tk17zD2JcmYwYVEnnoeuh9UFWfUkVW5KKvL"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/MemView.sol": {
        "keccak256": "0x95dd48e50e353b59fadce29f22f02629c91bd3b5e07c0efa588bd7c808536587",
        "urls": [
          "bzz-raw://4347457c5338192aca52c237c7f588d15a4f541482cd44b0632c59f36f9558eb",
          "dweb:/ipfs/QmXn1sKY7nVNrgKtbtE9PaMHFKBadyg73fs2jhw4Navyb1"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Message.sol": {
        "keccak256": "0x206a96eb35a7015116bfc585b30d34bd5cf151761ded37b8a2a36dd74a9ba99c",
        "urls": [
          "bzz-raw://e12ebb3152e1c1dc2aed3c88cb17f54d9abc2a157215c2628fa3c4ac161686cf",
          "dweb:/ipfs/QmbU6h7KEanE7Pt5UXN2WV5SQwWjziCwqBL5RLKAUJHKci"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Receipt.sol": {
        "keccak256": "0x009e8cfffa4806d1a0a326a31350ead092c9cd22105d4890c86bf93d20c7824d",
        "urls": [
          "bzz-raw://aa9905170f86e4e2d9b62e9fabaab36381398da14f001e0b9bb98c31c174a48e",
          "dweb:/ipfs/QmYpHjdY2yf3w6kFi9urUTyrMyVZBBsCGGEkE1kyTnXqVn"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Snapshot.sol": {
        "keccak256": "0x5df6aa04b1cbb65e410c7f1a02787e0e11dbcdb5cde18ae50d435029c27c1ce5",
        "urls": [
          "bzz-raw://d2e19b5c6778338b7e8e9c8ef82738797d8955d37884c7db70d7cdea43329910",
          "dweb:/ipfs/Qma1cRGHqRM3tkh5JyzR2Td6iKKST2HapTygBwVNTRJJZD"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/State.sol": {
        "keccak256": "0x3997f3a820110b3bce6f87ea8df3e1f8b006d1ac45efff1dc2f8873f8bbfa5af",
        "urls": [
          "bzz-raw://bf973a3633546dfff75b550673b4a680b7fab48d7fc8923157983a4fde3d5da4",
          "dweb:/ipfs/QmZ8NNwcYaqVxtar8g5MH5mqDXXuMTQLe6vi7zYGswFA3N"
        ],
        "license": "MIT"
      },
      "contracts/libs/merkle/MerkleMath.sol": {
        "keccak256": "0xbd13c07bdc40b80f56c7d75e3f31b6c4a85a78d444b760604a5b71083d14925c",
        "urls": [
          "bzz-raw://3162b491e4e216c0f2d143ce3baab4cf9e2a8b1b42466256a5d5b1f8b0385507",
          "dweb:/ipfs/QmYnDSZyxiGHfmB8Fx46zh1LZe3aCdVaKzpaQuD9piTc7u"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/GasData.sol": {
        "keccak256": "0x2007fd4b97cf33bfe4aa7dc6ac887af87b4010ec9834636b4dd5685582ac26cb",
        "urls": [
          "bzz-raw://8b54ca8b659d63ef7138c5b3b243190ca19b1e893b7b49dee1f8790d55b9e691",
          "dweb:/ipfs/Qmc2FGb16uosZ5kvyEK2onpWVPvWeE9X72xNWeJw8CbweD"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Header.sol": {
        "keccak256": "0x6a2030f6d08075f91336466c3fe4bd63f2760dcd42554856357af8024fd55344",
        "urls": [
          "bzz-raw://e1a1c8f6240f897c62cdc09fab57fc9eeea8072efbc8d101bd7e40b8eea272c9",
          "dweb:/ipfs/QmYrFA3fupKhW71k6yLkQsojPJt4Fcv4uH46hNvYYHcDsy"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Number.sol": {
        "keccak256": "0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96",
        "urls": [
          "bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd",
          "dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Request.sol": {
        "keccak256": "0xecd4427fe7285d1d5663ea019a66ebb04d3f495c0be28a14043c99a0d9a90689",
        "urls": [
          "bzz-raw://55e800c307070d6497031b90157d917dcabd5f93d342081be8d20ad3c80df429",
          "dweb:/ipfs/QmU8oza8MeWDbG9xfPaPVoj4Z1rKtvQ7pA3Z7CuYyGSuY6"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Tips.sol": {
        "keccak256": "0x2186d854149349ff689a8356c7f387d134f59fa4a97aed7b43c9e25f46661b0d",
        "urls": [
          "bzz-raw://ff15d61f2c9b26e6ef33457aed4a2d9ed61726e2a746d3e0a7e68eb6cd3d63a1",
          "dweb:/ipfs/QmUeiiTAjPmuFhLfzDMqZ6DyvQmEYhsKo9XArHSrMvjYKL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x027d1aa07f6a45546d6990186ee6ab2ccd1b654fbbef326145e9b6e125feaabc",
        "urls": [
          "bzz-raw://85c57fcb94bf64d583115157e4c89cc4ad58ff1102677613d7ef70263d98d270",
          "dweb:/ipfs/QmbASKUPs9pRck3j4soibhgGJ2ghr38vzdaSrF5Ae2xyqQ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "test/utils/libs/FakeIt.t.sol": {
        "keccak256": "0xfcb5b38ca3d693609ef261aea084bad8dae3ade0ea969939699e073ceb0125ef",
        "urls": [
          "bzz-raw://f17b2734c388ec61f5b855f32f8c650724a8cafc74dec451a1edfe633380a6ad",
          "dweb:/ipfs/QmNgFGrSywpPxXMnMP5NNAxBj6jPu9f29X8zv3XjpTvpVU"
        ],
        "license": "MIT"
      },
      "test/utils/libs/SynapseStructs.t.sol": {
        "keccak256": "0x664ba9f04e889501196308480444a90657872af51267cbe7e6d9de5308edab13",
        "urls": [
          "bzz-raw://b85dd129998afd92047c883b6712d815ae2930171eaa33eb30fdceb5dddca0ea",
          "dweb:/ipfs/QmRKcKo86FaRVEydU1yETN6jaSKbomdFFcrswzZeL3WnAh"
        ],
        "license": "MIT"
      },
      "test/utils/proof/AttestationProofGenerator.t.sol": {
        "keccak256": "0x55e60fa4860d20c1acef70992c161544943499d919debf1233f5896006444d7d",
        "urls": [
          "bzz-raw://5a2043fac652c02e9624200b2cbd12bb984097f394504e1aa58c898cce605656",
          "dweb:/ipfs/QmRf4GrVREY5YhmqZXPUKhTYFKp966vCxa9RwAnJq6Ni5d"
        ],
        "license": "MIT"
      },
      "test/utils/proof/AttestationProofGeneratorTest.t.sol": {
        "keccak256": "0x6b0081b9410ca891d9f9402e26ba37e07aef518eed8430c47c8ed11e35dc5bed",
        "urls": [
          "bzz-raw://0218a8ba8c3e507880c38a1e4de56824a81495eedd4ab4f13c281e5c8fb168cc",
          "dweb:/ipfs/QmS4znHiJdHhQR6bVZNkCc6sgYQYn2CnBQ4CXSfPMjkozp"
        ],
        "license": "MIT"
      },
      "test/utils/proof/ProofCutter.t.sol": {
        "keccak256": "0x0b2f00c46d7967ff6058691cc7fac1bdef3eebfcabd395b92ad90d4a8da675d5",
        "urls": [
          "bzz-raw://f7cb0b41fcad5497e2b852ac0bfae328ecb0633bd7ccf28cb1a4518715dc8645",
          "dweb:/ipfs/QmZu3eQbEeM6AvVJ5qNjd1oq1a1bnEtffDDt3h2Pan8GqP"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/utils/proof/AttestationProofGeneratorTest.t.sol",
    "id": 96700,
    "exportedSymbols": {
      "AttestationProofGenerator": [
        96562
      ],
      "AttestationProofGeneratorTest": [
        96699
      ],
      "MerkleMath": [
        14266
      ],
      "RawSnapshot": [
        94445
      ],
      "RawState": [
        94427
      ],
      "RawStateIndex": [
        94436
      ],
      "SNAPSHOT_MAX_STATES": [
        10094
      ],
      "SNAPSHOT_TREE_HEIGHT": [
        10067
      ],
      "Snapshot": [
        12980
      ],
      "State": [
        13434
      ],
      "Test": [
        28782
      ],
      "fakeSnapshot": [
        93385,
        93407
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1453:191",
    "nodes": [
      {
        "id": 96564,
        "nodeType": "PragmaDirective",
        "src": "32:23:191",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 96566,
        "nodeType": "ImportDirective",
        "src": "57:73:191",
        "nodes": [],
        "absolutePath": "contracts/libs/merkle/MerkleMath.sol",
        "file": "../../../contracts/libs/merkle/MerkleMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 96700,
        "sourceUnit": 14267,
        "symbolAliases": [
          {
            "foreign": {
              "id": 96565,
              "name": "MerkleMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14266,
              "src": "65:10:191",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 96571,
        "nodeType": "ImportDirective",
        "src": "131:119:191",
        "nodes": [],
        "absolutePath": "contracts/libs/memory/Snapshot.sol",
        "file": "../../../contracts/libs/memory/Snapshot.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 96700,
        "sourceUnit": 13419,
        "symbolAliases": [
          {
            "foreign": {
              "id": 96567,
              "name": "Snapshot",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12980,
              "src": "139:8:191",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 96568,
              "name": "SNAPSHOT_MAX_STATES",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10094,
              "src": "149:19:191",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 96569,
              "name": "SNAPSHOT_TREE_HEIGHT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10067,
              "src": "170:20:191",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 96570,
              "name": "State",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13434,
              "src": "192:5:191",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 96576,
        "nodeType": "ImportDirective",
        "src": "251:88:191",
        "nodes": [],
        "absolutePath": "test/utils/libs/FakeIt.t.sol",
        "file": "../libs/FakeIt.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 96700,
        "sourceUnit": 93408,
        "symbolAliases": [
          {
            "foreign": {
              "id": 96572,
              "name": "fakeSnapshot",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "259:12:191",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 96573,
              "name": "RawState",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 94427,
              "src": "273:8:191",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 96574,
              "name": "RawStateIndex",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 94436,
              "src": "283:13:191",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 96575,
              "name": "RawSnapshot",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 94445,
              "src": "298:11:191",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 96578,
        "nodeType": "ImportDirective",
        "src": "340:76:191",
        "nodes": [],
        "absolutePath": "test/utils/proof/AttestationProofGenerator.t.sol",
        "file": "./AttestationProofGenerator.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 96700,
        "sourceUnit": 96563,
        "symbolAliases": [
          {
            "foreign": {
              "id": 96577,
              "name": "AttestationProofGenerator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 96562,
              "src": "348:25:191",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 96580,
        "nodeType": "ImportDirective",
        "src": "418:40:191",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 96700,
        "sourceUnit": 28783,
        "symbolAliases": [
          {
            "foreign": {
              "id": 96579,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28782,
              "src": "426:4:191",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 96699,
        "nodeType": "ContractDefinition",
        "src": "499:985:191",
        "nodes": [
          {
            "id": 96585,
            "nodeType": "VariableDeclaration",
            "src": "552:43:191",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "proofGen",
            "nameLocation": "587:8:191",
            "scope": 96699,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AttestationProofGenerator_$96562",
              "typeString": "contract AttestationProofGenerator"
            },
            "typeName": {
              "id": 96584,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 96583,
                "name": "AttestationProofGenerator",
                "nameLocations": [
                  "552:25:191"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 96562,
                "src": "552:25:191"
              },
              "referencedDeclaration": 96562,
              "src": "552:25:191",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AttestationProofGenerator_$96562",
                "typeString": "contract AttestationProofGenerator"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 96596,
            "nodeType": "FunctionDefinition",
            "src": "602:83:191",
            "nodes": [],
            "body": {
              "id": 96595,
              "nodeType": "Block",
              "src": "626:59:191",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 96593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 96588,
                      "name": "proofGen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96585,
                      "src": "636:8:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AttestationProofGenerator_$96562",
                        "typeString": "contract AttestationProofGenerator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 96591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "647:29:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_AttestationProofGenerator_$96562_$",
                          "typeString": "function () returns (contract AttestationProofGenerator)"
                        },
                        "typeName": {
                          "id": 96590,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 96589,
                            "name": "AttestationProofGenerator",
                            "nameLocations": [
                              "651:25:191"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 96562,
                            "src": "651:25:191"
                          },
                          "referencedDeclaration": 96562,
                          "src": "651:25:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AttestationProofGenerator_$96562",
                            "typeString": "contract AttestationProofGenerator"
                          }
                        }
                      },
                      "id": 96592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "647:31:191",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AttestationProofGenerator_$96562",
                        "typeString": "contract AttestationProofGenerator"
                      }
                    },
                    "src": "636:42:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AttestationProofGenerator_$96562",
                      "typeString": "contract AttestationProofGenerator"
                    }
                  },
                  "id": 96594,
                  "nodeType": "ExpressionStatement",
                  "src": "636:42:191"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "611:5:191",
            "parameters": {
              "id": 96586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "616:2:191"
            },
            "returnParameters": {
              "id": 96587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "626:0:191"
            },
            "scope": 96699,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 96698,
            "nodeType": "FunctionDefinition",
            "src": "691:791:191",
            "nodes": [],
            "body": {
              "id": 96697,
              "nodeType": "Block",
              "src": "781:701:191",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 96605,
                        "name": "rsi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96602,
                        "src": "791:3:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawStateIndex_$94436_memory_ptr",
                          "typeString": "struct RawStateIndex memory"
                        }
                      },
                      "id": 96607,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "795:15:191",
                      "memberName": "boundStateIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 95896,
                      "src": "791:19:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_RawStateIndex_$94436_memory_ptr_$returns$__$bound_to$_t_struct$_RawStateIndex_$94436_memory_ptr_$",
                        "typeString": "function (struct RawStateIndex memory) pure"
                      }
                    },
                    "id": 96608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "791:21:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96609,
                  "nodeType": "ExpressionStatement",
                  "src": "791:21:191"
                },
                {
                  "assignments": [
                    96612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 96612,
                      "mutability": "mutable",
                      "name": "rawSnap",
                      "nameLocation": "841:7:191",
                      "nodeType": "VariableDeclaration",
                      "scope": 96697,
                      "src": "822:26:191",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RawSnapshot_$94445_memory_ptr",
                        "typeString": "struct RawSnapshot"
                      },
                      "typeName": {
                        "id": 96611,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 96610,
                          "name": "RawSnapshot",
                          "nameLocations": [
                            "822:11:191"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 94445,
                          "src": "822:11:191"
                        },
                        "referencedDeclaration": 94445,
                        "src": "822:11:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawSnapshot_$94445_storage_ptr",
                          "typeString": "struct RawSnapshot"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 96617,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 96614,
                        "name": "rawState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96599,
                        "src": "864:8:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                          "typeString": "struct RawState memory"
                        }
                      },
                      {
                        "id": 96615,
                        "name": "rsi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96602,
                        "src": "874:3:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawStateIndex_$94436_memory_ptr",
                          "typeString": "struct RawStateIndex memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                          "typeString": "struct RawState memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_RawStateIndex_$94436_memory_ptr",
                          "typeString": "struct RawStateIndex memory"
                        }
                      ],
                      "id": 96613,
                      "name": "fakeSnapshot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        93385,
                        93407
                      ],
                      "referencedDeclaration": 93385,
                      "src": "851:12:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_RawState_$94427_memory_ptr_$_t_struct$_RawStateIndex_$94436_memory_ptr_$returns$_t_struct$_RawSnapshot_$94445_memory_ptr_$",
                        "typeString": "function (struct RawState memory,struct RawStateIndex memory) pure returns (struct RawSnapshot memory)"
                      }
                    },
                    "id": 96616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "851:27:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RawSnapshot_$94445_memory_ptr",
                      "typeString": "struct RawSnapshot memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "822:56:191"
                },
                {
                  "assignments": [
                    96620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 96620,
                      "mutability": "mutable",
                      "name": "snapshot",
                      "nameLocation": "897:8:191",
                      "nodeType": "VariableDeclaration",
                      "scope": 96697,
                      "src": "888:17:191",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Snapshot_$12980",
                        "typeString": "Snapshot"
                      },
                      "typeName": {
                        "id": 96619,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 96618,
                          "name": "Snapshot",
                          "nameLocations": [
                            "888:8:191"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12980,
                          "src": "888:8:191"
                        },
                        "referencedDeclaration": 12980,
                        "src": "888:8:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Snapshot_$12980",
                          "typeString": "Snapshot"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 96624,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 96621,
                        "name": "rawSnap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96612,
                        "src": "908:7:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawSnapshot_$94445_memory_ptr",
                          "typeString": "struct RawSnapshot memory"
                        }
                      },
                      "id": 96622,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "916:14:191",
                      "memberName": "castToSnapshot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 96084,
                      "src": "908:22:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_RawSnapshot_$94445_memory_ptr_$returns$_t_userDefinedValueType$_Snapshot_$12980_$bound_to$_t_struct$_RawSnapshot_$94445_memory_ptr_$",
                        "typeString": "function (struct RawSnapshot memory) view returns (Snapshot)"
                      }
                    },
                    "id": 96623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "908:24:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Snapshot_$12980",
                      "typeString": "Snapshot"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "888:44:191"
                },
                {
                  "assignments": [
                    96627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 96627,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "948:5:191",
                      "nodeType": "VariableDeclaration",
                      "scope": 96697,
                      "src": "942:11:191",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_State_$13434",
                        "typeString": "State"
                      },
                      "typeName": {
                        "id": 96626,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 96625,
                          "name": "State",
                          "nameLocations": [
                            "942:5:191"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13434,
                          "src": "942:5:191"
                        },
                        "referencedDeclaration": 13434,
                        "src": "942:5:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_State_$13434",
                          "typeString": "State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 96631,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 96628,
                        "name": "rawState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96599,
                        "src": "956:8:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                          "typeString": "struct RawState memory"
                        }
                      },
                      "id": 96629,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "965:11:191",
                      "memberName": "castToState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 95657,
                      "src": "956:20:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_RawState_$94427_memory_ptr_$returns$_t_userDefinedValueType$_State_$13434_$bound_to$_t_struct$_RawState_$94427_memory_ptr_$",
                        "typeString": "function (struct RawState memory) pure returns (State)"
                      }
                    },
                    "id": 96630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "956:22:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_State_$13434",
                      "typeString": "State"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "942:36:191"
                },
                {
                  "assignments": [
                    96636
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 96636,
                      "mutability": "mutable",
                      "name": "states",
                      "nameLocation": "1003:6:191",
                      "nodeType": "VariableDeclaration",
                      "scope": 96697,
                      "src": "988:21:191",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 96634,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "988:5:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 96635,
                        "nodeType": "ArrayTypeName",
                        "src": "988:7:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 96640,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 96637,
                        "name": "rawSnap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96612,
                        "src": "1012:7:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawSnapshot_$94445_memory_ptr",
                          "typeString": "struct RawSnapshot memory"
                        }
                      },
                      "id": 96638,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1020:12:191",
                      "memberName": "formatStates",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 95941,
                      "src": "1012:20:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_RawSnapshot_$94445_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$bound_to$_t_struct$_RawSnapshot_$94445_memory_ptr_$",
                        "typeString": "function (struct RawSnapshot memory) pure returns (bytes memory[] memory)"
                      }
                    },
                    "id": 96639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1012:22:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "988:46:191"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 96644,
                        "name": "states",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96636,
                        "src": "1068:6:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 96641,
                        "name": "proofGen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96585,
                        "src": "1044:8:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationProofGenerator_$96562",
                          "typeString": "contract AttestationProofGenerator"
                        }
                      },
                      "id": 96643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1053:14:191",
                      "memberName": "acceptSnapshot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 96493,
                      "src": "1044:23:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory[] memory) external"
                      }
                    },
                    "id": 96645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1044:31:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96646,
                  "nodeType": "ExpressionStatement",
                  "src": "1044:31:191"
                },
                {
                  "assignments": [
                    96648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 96648,
                      "mutability": "mutable",
                      "name": "snapshotRoot",
                      "nameLocation": "1093:12:191",
                      "nodeType": "VariableDeclaration",
                      "scope": 96697,
                      "src": "1085:20:191",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 96647,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1085:7:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 96652,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 96649,
                        "name": "proofGen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96585,
                        "src": "1108:8:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationProofGenerator_$96562",
                          "typeString": "contract AttestationProofGenerator"
                        }
                      },
                      "id": 96650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1117:4:191",
                      "memberName": "root",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 96343,
                      "src": "1108:13:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view external returns (bytes32)"
                      }
                    },
                    "id": 96651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1108:15:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1085:38:191"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 96654,
                        "name": "snapshotRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96648,
                        "src": "1142:12:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 96655,
                            "name": "snapshot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96620,
                            "src": "1156:8:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Snapshot_$12980",
                              "typeString": "Snapshot"
                            }
                          },
                          "id": 96656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1165:13:191",
                          "memberName": "calculateRoot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13352,
                          "src": "1156:22:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Snapshot_$12980_$returns$_t_bytes32_$bound_to$_t_userDefinedValueType$_Snapshot_$12980_$",
                            "typeString": "function (Snapshot) pure returns (bytes32)"
                          }
                        },
                        "id": 96657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1156:24:191",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "21736e617073686f74526f6f74",
                        "id": 96658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1182:15:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bb71ca00a2548332e253ed7fbf78a7cc65c5c8abecb913e3eacbd80164b08cc",
                          "typeString": "literal_string \"!snapshotRoot\""
                        },
                        "value": "!snapshotRoot"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bb71ca00a2548332e253ed7fbf78a7cc65c5c8abecb913e3eacbd80164b08cc",
                          "typeString": "literal_string \"!snapshotRoot\""
                        }
                      ],
                      "id": 96653,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18382,
                      "src": "1133:8:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory)"
                      }
                    },
                    "id": 96659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1133:65:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96660,
                  "nodeType": "ExpressionStatement",
                  "src": "1133:65:191"
                },
                {
                  "assignments": [
                    96662,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 96662,
                      "mutability": "mutable",
                      "name": "item",
                      "nameLocation": "1218:4:191",
                      "nodeType": "VariableDeclaration",
                      "scope": 96697,
                      "src": "1210:12:191",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 96661,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1210:7:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 96666,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 96663,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96627,
                        "src": "1227:5:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_State_$13434",
                          "typeString": "State"
                        }
                      },
                      "id": 96664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1233:8:191",
                      "memberName": "subLeafs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13675,
                      "src": "1227:14:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_State_$13434_$returns$_t_bytes32_$_t_bytes32_$bound_to$_t_userDefinedValueType$_State_$13434_$",
                        "typeString": "function (State) pure returns (bytes32,bytes32)"
                      }
                    },
                    "id": 96665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1227:16:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1209:34:191"
                },
                {
                  "assignments": [
                    96668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 96668,
                      "mutability": "mutable",
                      "name": "itemIndex",
                      "nameLocation": "1261:9:191",
                      "nodeType": "VariableDeclaration",
                      "scope": 96697,
                      "src": "1253:17:191",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 96667,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1253:7:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 96673,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 96672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 96669,
                        "name": "rsi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96602,
                        "src": "1273:3:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawStateIndex_$94436_memory_ptr",
                          "typeString": "struct RawStateIndex memory"
                        }
                      },
                      "id": 96670,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1277:10:191",
                      "memberName": "stateIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 94433,
                      "src": "1273:14:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 96671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1291:1:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1273:19:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1253:39:191"
                },
                {
                  "assignments": [
                    96678
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 96678,
                      "mutability": "mutable",
                      "name": "proof",
                      "nameLocation": "1319:5:191",
                      "nodeType": "VariableDeclaration",
                      "scope": 96697,
                      "src": "1302:22:191",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 96676,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1302:7:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 96677,
                        "nodeType": "ArrayTypeName",
                        "src": "1302:9:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 96684,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 96681,
                          "name": "rsi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96602,
                          "src": "1350:3:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawStateIndex_$94436_memory_ptr",
                            "typeString": "struct RawStateIndex memory"
                          }
                        },
                        "id": 96682,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1354:10:191",
                        "memberName": "stateIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94433,
                        "src": "1350:14:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 96679,
                        "name": "proofGen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96585,
                        "src": "1327:8:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationProofGenerator_$96562",
                          "typeString": "contract AttestationProofGenerator"
                        }
                      },
                      "id": 96680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1336:13:191",
                      "memberName": "generateProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 96561,
                      "src": "1327:22:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (bytes32[] memory)"
                      }
                    },
                    "id": 96683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1327:38:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1302:63:191"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 96688,
                            "name": "itemIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96668,
                            "src": "1405:9:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 96689,
                            "name": "item",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96662,
                            "src": "1416:4:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 96690,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96678,
                            "src": "1422:5:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "id": 96691,
                            "name": "SNAPSHOT_TREE_HEIGHT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10067,
                            "src": "1429:20:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 96686,
                            "name": "MerkleMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14266,
                            "src": "1384:10:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleMath_$14266_$",
                              "typeString": "type(library MerkleMath)"
                            }
                          },
                          "id": 96687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1395:9:191",
                          "memberName": "proofRoot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13929,
                          "src": "1384:20:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                            "typeString": "function (uint256,bytes32,bytes32[] memory,uint256) pure returns (bytes32)"
                          }
                        },
                        "id": 96692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1384:66:191",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 96693,
                        "name": "snapshotRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96648,
                        "src": "1452:12:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "2170726f6f66",
                        "id": 96694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1466:8:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec",
                          "typeString": "literal_string \"!proof\""
                        },
                        "value": "!proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec",
                          "typeString": "literal_string \"!proof\""
                        }
                      ],
                      "id": 96685,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18382,
                      "src": "1375:8:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory)"
                      }
                    },
                    "id": 96695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1375:100:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96696,
                  "nodeType": "ExpressionStatement",
                  "src": "1375:100:191"
                }
              ]
            },
            "functionSelector": "f86e9b43",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_attestationProof",
            "nameLocation": "700:21:191",
            "parameters": {
              "id": 96603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96599,
                  "mutability": "mutable",
                  "name": "rawState",
                  "nameLocation": "738:8:191",
                  "nodeType": "VariableDeclaration",
                  "scope": 96698,
                  "src": "722:24:191",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RawState_$94427_memory_ptr",
                    "typeString": "struct RawState"
                  },
                  "typeName": {
                    "id": 96598,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 96597,
                      "name": "RawState",
                      "nameLocations": [
                        "722:8:191"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 94427,
                      "src": "722:8:191"
                    },
                    "referencedDeclaration": 94427,
                    "src": "722:8:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RawState_$94427_storage_ptr",
                      "typeString": "struct RawState"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96602,
                  "mutability": "mutable",
                  "name": "rsi",
                  "nameLocation": "769:3:191",
                  "nodeType": "VariableDeclaration",
                  "scope": 96698,
                  "src": "748:24:191",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RawStateIndex_$94436_memory_ptr",
                    "typeString": "struct RawStateIndex"
                  },
                  "typeName": {
                    "id": 96601,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 96600,
                      "name": "RawStateIndex",
                      "nameLocations": [
                        "748:13:191"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 94436,
                      "src": "748:13:191"
                    },
                    "referencedDeclaration": 94436,
                    "src": "748:13:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RawStateIndex_$94436_storage_ptr",
                      "typeString": "struct RawStateIndex"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "721:52:191"
            },
            "returnParameters": {
              "id": 96604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "781:0:191"
            },
            "scope": 96699,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 96581,
              "name": "Test",
              "nameLocations": [
                "541:4:191"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28782,
              "src": "541:4:191"
            },
            "id": 96582,
            "nodeType": "InheritanceSpecifier",
            "src": "541:4:191"
          }
        ],
        "canonicalName": "AttestationProofGeneratorTest",
        "contractDependencies": [
          96562
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          96699,
          28782,
          19828,
          19825,
          28733,
          24532,
          24242,
          23563,
          21991,
          21279,
          19768
        ],
        "name": "AttestationProofGeneratorTest",
        "nameLocation": "508:29:191",
        "scope": 96700,
        "usedErrors": [
          10202,
          10216,
          10240,
          10242,
          10252,
          10326,
          10328,
          10330,
          10332
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 191
}