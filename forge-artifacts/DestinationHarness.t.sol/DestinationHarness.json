{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "agentManager_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "inbox_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyExecuted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CallerNotAgentManager",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CallerNotInbox",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DuplicatedSnapshotRoot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FlagOutOfRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GasLimitTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GasSuppliedTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectDestinationDomain",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectMagicValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectSnapshotRoot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectVersionLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IndexOutOfRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IndexedTooMuch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MessageOptimisticPeriod",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotaryInDispute",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OccupiedMemory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PrecompileOutOfGas",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TreeHeightTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnallocatedMemory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnformattedAttestation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnformattedBaseMessage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnformattedCallData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnformattedCallDataPrefix",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnformattedMessage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnformattedReceipt",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ViewOverrun",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "agentRoot",
          "type": "bytes32"
        }
      ],
      "name": "AgentRootAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "remoteDomain",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "name": "Executed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "paddedTips",
          "type": "uint256"
        }
      ],
      "name": "TipsRecorded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "notaryIndex",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "sigIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "agentRoot",
          "type": "bytes32"
        },
        {
          "internalType": "ChainGas[]",
          "name": "snapGas",
          "type": "uint128[]"
        }
      ],
      "name": "acceptAttestation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "wasAccepted",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "agentManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "agentStatus",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum AgentFlag",
              "name": "flag",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "internalType": "struct AgentStatus",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "attestationsAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "destStatus",
      "outputs": [
        {
          "internalType": "uint40",
          "name": "snapRootTime",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "agentRootTime",
          "type": "uint40"
        },
        {
          "internalType": "uint32",
          "name": "notaryIndex",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "msgPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes32[]",
          "name": "originProof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "snapProof",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "gasLimit",
          "type": "uint64"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getAgent",
      "outputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum AgentFlag",
              "name": "flag",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "internalType": "struct AgentStatus",
          "name": "status",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getAttestation",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "snapRoot",
          "type": "bytes32"
        }
      ],
      "name": "getAttestationNonce",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "attNonce",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        }
      ],
      "name": "getGasData",
      "outputs": [
        {
          "internalType": "GasData",
          "name": "gasData",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "dataMaturity",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "inbox",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "agentRoot",
          "type": "bytes32"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "rcptPayload",
          "type": "bytes"
        }
      ],
      "name": "isValidReceipt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "localDomain",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        }
      ],
      "name": "messageReceipt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "rcptPayload",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        }
      ],
      "name": "messageStatus",
      "outputs": [
        {
          "internalType": "enum MessageStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "allowFailure",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct MultiCallable.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "returnData",
              "type": "bytes"
            }
          ],
          "internalType": "struct MultiCallable.Result[]",
          "name": "callResults",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextAgentRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "guardIndex",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "notaryIndex",
          "type": "uint32"
        }
      ],
      "name": "openDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "passAgentRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "rootPassed",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "rootPending",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "slashedIndex",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "honestIndex",
          "type": "uint32"
        }
      ],
      "name": "resolveDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "versionString",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101206040523480156200001257600080fd5b5060405162003e7d38038062003e7d8339810160408190526200003591620000b9565b60408051808201909152600580825264302e302e3360d81b60208301526080528390839083908383838383816200006c816200010d565b60a0525063ffffffff1660c052506001600160a01b0391821660e052166101005250620001359650505050505050565b80516001600160a01b0381168114620000b457600080fd5b919050565b600080600060608486031215620000cf57600080fd5b835163ffffffff81168114620000e457600080fd5b9250620000f4602085016200009c565b915062000104604085016200009c565b90509250925092565b805160208083015191908110156200012f576000198160200360031b1b821691505b50919050565b60805160a05160c05160e05161010051613c6962000214600039600081816104b6015281816106d501528181610c060152611d9601526000818161038f01528181610e420152818161102301528181611186015281816112620152818161131a015281816114510152818161170b015281816117a80152611ccd0152600081816103ce0152818161068c0152818161080f01528181610e0b0152818161113d015281816112e301528181611d4f015281816120bc015281816121a20152818161247b015261252401526000610315015260006102f20152613c696000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806361169218116100de578063a2155c3411610097578063daa74a9e11610071578063daa74a9e14610478578063e2f006f71461048b578063f2fde38b1461049e578063fb0e722b146104b157600080fd5b8063a2155c3414610414578063a554d1e314610427578063d0dd06751461044657600080fd5b8063611692181461036f578063715018a6146103825780637622f78d1461038a5780638d3638f4146103c95780638da5cb5b146103f05780639498bd711461040157600080fd5b80633cf7b120116101305780633cf7b1201461023b578063409891521461024d5780634f127567146102a457806354fd4d50146102e657806355252dd11461034757806360fc84661461034f57600080fd5b806328f3fac91461017857806329be4db2146101a15780632de5aaf7146101c257806332ff14d2146101e357806339fe2736146101f85780633c6cf4731461021b575b600080fd5b61018b6101863660046132ef565b6104d8565b6040516101989190613357565b60405180910390f35b6101b46101af366004613365565b610504565b6040516101989291906133ce565b6101d56101d0366004613365565b610757565b6040516101989291906133f3565b6101f66101f136600461351e565b610785565b005b61020b6102063660046135e7565b610bf9565b6040519015158152602001610198565b61022e610229366004613365565b610d67565b60405161019891906136f2565b60fd545b604051908152602001610198565b61012e5461027a9064ffffffffff80821691600160281b810490911690600160501b900463ffffffff1683565b6040805164ffffffffff948516815293909216602084015263ffffffff1690820152606001610198565b6102d16102b2366004613365565b600090815260fe6020526040902054600160201b900463ffffffff1690565b60405163ffffffff9091168152602001610198565b604080518082019091527f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201525b604051610198919061370c565b61023f610e07565b61036261035d36600461371f565b610ec7565b6040516101989190613760565b6101f661037d3660046137d6565b611018565b6101f66110ab565b6103b17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610198565b6102d17f000000000000000000000000000000000000000000000000000000000000000081565b6033546001600160a01b03166103b1565b6101f661040f366004613365565b611107565b6101f66104223660046137d6565b611257565b61042f6112da565b604080519215158352901515602083015201610198565b61045961045436600461380f565b6114c3565b604080516001600160601b039093168352602083019190915201610198565b61033a610486366004613365565b61155f565b61020b61049936600461382c565b6115f1565b6101f66104ac3660046132ef565b611604565b6103b17f000000000000000000000000000000000000000000000000000000000000000081565b60408051606081018252600080825260208201819052918101919091526104fe826116cf565b92915050565b60fd546060908190831061052b57604051631390f2a160e01b815260040160405180910390fd5b600060fd848154811061054057610540613860565b600091825260208083209091015480835260fe82526040808420815160e081018352815463ffffffff8082168352600160201b820481169683019690965264ffffffffff600160401b8204811694830194909452600160681b810484166060830152600160901b81049095166080820152600160b01b90940490911660a08401526001015460c083015261012f805491945091929190879081106105e6576105e6613860565b90600052602060002090600202016040518060400160405290816000820154815260200160018201548152505090506106888382602001518460200151856040015186606001516040805160208101969096528581019490945260e09290921b6001600160e01b031916606085015260d890811b6001600160d81b0319908116606486015291901b1660698301528051604e818403018152606e909201905290565b94507f000000000000000000000000000000000000000000000000000000000000000063ffffffff166103851461074f5760c0820151604051636ef7fd3360e11b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ddeffa6690602401600060405180830381865afa158015610724573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261074c9190810190613876565b93505b505050915091565b6040805160608101825260008082526020820181905291810182905261077c83611776565b91509150915091565b600260c954036107dc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260c95560006107ec8861181b565b905060006107f98261182e565b9050600061080683611847565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016602083901c6cffffffffffffffffffffffffff1663ffffffff1614610867576040516353a9611960e11b815260040160405180910390fd5b600081815260fb60209081526040918290208251608081018452905463ffffffff8082168352600160201b82041692820192909252600160401b820460ff1692810192909252600160481b90046001600160a01b031660608201819052156108e257604051630dc1019760e01b815260040160405180910390fd5b60006108f384848d8d8d8d8d6118e9565b905060008160a0015164ffffffffff164261090e91906138f9565b905063ffffffff851681101561093757604051630bcae51d60e31b815260040160405180910390fd5b6000808061094d886001600160881b0316611ab4565b600181111561095e5761095e61330c565b036109975760006109766109718a611add565b611ae9565b905061098488858c84611b15565b915061098f81611c5c565b9250506109ad565b6109aa87846109a58b611add565b611c6d565b90505b845163ffffffff16600003610a9b5763ffffffff606088901c81168652608085015116602086015260ff8a16604086015280156109ef57336060860152610a0e565b600086815260fc6020526040902080546001600160a01b031916331790555b600086815260fb602090815260409182902087518154928901519389015160608a01516001600160a01b0316600160481b02600160481b600160e81b031960ff909216600160401b0291909116600160401b600160e81b031963ffffffff968716600160201b0267ffffffffffffffff199096169690931695909517939093171692909217179055610b4d565b80610ab95760405163589a41b760e01b815260040160405180910390fd5b3360608601908152600087815260fb602090815260409182902088518154928a0151938a015194516001600160a01b0316600160481b02600160481b600160e81b031960ff909616600160401b0295909516600160401b600160e81b031963ffffffff958616600160201b0267ffffffffffffffff1990951695909216949094179290921791909116919091179190911790555b6040518115158152869063ffffffff60608a901c16907f39c48fd1b2185b07007abc7904a8cdf782cfe449fd0e9bba1c2223a691e15f0b9060200160405180910390a3610ba584600001518560200151888589611d4b565b610be35760408051878152602081018490527f22bd0cccf7173839e6f30c797b419921d48a23b0732d0b120c600a49247d3016910160405180910390a15b5050600160c95550505050505050505050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c445760405163dbc2fa8560e01b815260040160405180910390fd5b610c4d86611e3c565b15610c6b57604051636893014360e01b815260040160405180910390fd5b600080610c766112da565b915091508115610c8b57600092505050610d5e565b6000610c9687611e71565b9050610ca3818a8a611e84565b61012f6040518060400160405280888152602001610cc08461204b565b9052815460018181018455600093845260209384902083516002909302019182559290910151910155610cf482878b61205c565b805161012e8054602084015160409094015163ffffffff16600160501b0263ffffffff60501b1964ffffffffff958616600160281b0269ffffffffffffffffffff1990931695909416949094171791909116919091179055610d56858a612161565b600193505050505b95945050505050565b600081815260fb602090815260408083208151608081018352905463ffffffff8082168352600160201b82041693820193909352600160401b830460ff1691810191909152600160481b9091046001600160a01b03166060820181905215610dd25750600292915050565b600083815260fc60205260409020546001600160a01b031615610df85750600192915050565b50600092915050565b50919050565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661038514610e40575061012d5490565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166336cba43c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec2919061390c565b905090565b606081806001600160401b03811115610ee257610ee2613410565b604051908082528060200260200182016040528015610f2857816020015b604080518082019091526000815260606020820152815260200190600190039081610f005790505b5091503660005b8281101561100f57858582818110610f4957610f49613860565b9050602002810190610f5b9190613925565b91506000848281518110610f7157610f71613860565b60200260200101519050306001600160a01b0316838060200190610f959190613945565b604051610fa392919061398b565b600060405180830381855af49150503d8060008114610fde576040519150601f19603f3d011682016040523d82523d6000602084013e610fe3565b606091505b5060208301521515808252833517611006576309ad446560e31b60005260046000fd5b50600101610f2f565b50505092915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461106157604051637bcb136360e11b815260040160405180910390fd5b63ffffffff8281166000908152609760205260409020805460ff191660021790558116156110a75763ffffffff81166000908152609760205260409020805460ff191690555b5050565b6033546001600160a01b031633146111055760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107d3565b565b600061111360016122f9565b9050801561112b576000805461ff0019166101001790555b611133612381565b61113b6123b0565b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff166103851461120e5761012d829055604051632c3340bb60e11b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635866817690602401600060405180830381600087803b1580156111d257600080fd5b505af11580156111e6573d6000803e3d6000fd5b505061012e805469ffffffffff00000000001916600160281b4264ffffffffff160217905550505b80156110a7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146112a057604051637bcb136360e11b815260040160405180910390fd5b63ffffffff9182166000908152609760205260408082208054600160ff199182168117909255939094168252902080549091169091179055565b600080610384197f000000000000000000000000000000000000000000000000000000000000000063ffffffff16016113165750600091829150565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166336cba43c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611376573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139a919061390c565b61012d549091508082036113b45750600093849350915050565b6040805160608101825261012e5464ffffffffff8082168352600160281b8204166020830152600160501b900463ffffffff16918101829052906113f790611e3c565b1561140b57505061012d5550600091829150565b6020810151429061142090620151809061399b565b64ffffffffff16111561143b57506000946001945092505050565b604051632c3340bb60e11b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635866817690602401600060405180830381600087803b15801561149d57600080fd5b505af11580156114b1573d6000803e3d6000fd5b50600198600098509650505050505050565b63ffffffff818116600090815261013060209081526040808320815160608101835290546001600160601b0381168252600160601b810490951692810192909252600160801b90930464ffffffffff1692810183905290918291901580159061153657506115348160200151611e3c565b155b1561155957805160408201519093506115569064ffffffffff16426138f9565b91505b50915091565b600081815260fb602090815260408083208151608081018352905463ffffffff808216808452600160201b830490911694830194909452600160401b810460ff1692820192909252600160481b9091046001600160a01b031660608083019190915292909190036115e0575050604080516020810190915260008152919050565b6115ea83826123df565b9392505050565b60006104fe6115ff8361250d565b612520565b6033546001600160a01b0316331461165e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107d3565b6001600160a01b0381166116c35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107d3565b6116cc816127a2565b50565b60408051606081018252600080825260208201819052918101919091526040516328f3fac960e01b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000016906328f3fac990602401606060405180830381865afa158015611752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fe9190613a3b565b60408051606081018252600080825260208201819052918101829052604051632de5aaf760e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632de5aaf790602401608060405180830381865afa1580156117f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077c9190613a57565b60006104fe611829836127f4565b612807565b60006104fe611842826011855b919061282f565b612850565b6000806118538361182e565b90506000611869826001600160881b0316611ab4565b600181111561187a5761187a61330c565b036118b4576115ea61189b826001600160881b031660009081526020902090565b6118af6118aa61097187611add565b61287b565b6128a1565b6115ea6118d0826001600160881b031660009081526020902090565b6118af6118e46118df87611add565b6128ed565b612915565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091526000611986600160408b901c68ffffffffffffffffff166119439190613a8d565b63ffffffff168989898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525060209250612925915050565b905060006119d58260608c901c64ffffffffff168888808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508a92506129aa915050565b600081815260fe60209081526040808320815160e081018352815463ffffffff8082168352600160201b820481169583019590955264ffffffffff600160401b8204811694830194909452600160681b810484166060830152600160901b81049094166080820152600160b01b90930490911660a0830181905260019091015460c083015290955091925003611a7e576040516312a37cf560e11b815260040160405180910390fd5b8251611a8990611e3c565b15611aa757604051636893014360e01b815260040160405180910390fd5b5050979650505050505050565b6000611ac9826001600160881b031660801c90565b60ff1660018111156104fe576104fe61330c565b6000816115ea816129ed565b6000611af482612a04565b611b11576040516335c196ef60e01b815260040160405180910390fd5b5090565b600080611b2183612a30565b90506001600160401b03602082901c81169085161015611b54576040516376a1e1d360e11b815260040160405180910390fd5b6000611b65611b6285612a4c565b90565b9050846001600160401b03165a11611b905760405163aa6c898560e01b815260040160405180910390fd5b6001600160a01b03811663032f287e6001600160401b03871660608a901c64ffffffffff1660408b901c68ffffffffffffffffff16611bce8961204b565b8b6001600160c01b038916611bea611be58d612a5b565b612a7e565b6040518863ffffffff1660e01b8152600401611c0b96959493929190613aaa565b600060405180830381600088803b158015611c2557600080fd5b5087f193505050508015611c37575060015b611c4657600092505050611c54565b600192505050611c54565b50505b949350505050565b60006104fe611b628260208561183b565b600080611c79836128ed565b90506000611cbc606087901c64ffffffffff166040805163ffffffff9092166020830152810187905260600160408051601f198184030181529190528390612ab4565b90506000611cf36001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683612bb1565b905080516020141580611d205750611d0a83612bf3565b6001600160e01b031916611d1d82613ae7565b14155b15611d3e57604051631f16844360e31b815260040160405180910390fd5b5060019695505050505050565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661038514611d8457506000610d5e565b82600003611d9457506000610d5e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636b47b3bc878786611dd089886123df565b6040518563ffffffff1660e01b8152600401611def9493929190613b0b565b6020604051808303816000875af1158015611e0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e329190613b3a565b9695505050505050565b60008063ffffffff831660009081526097602052604090205460ff166002811115611e6957611e6961330c565b141592915050565b60006104fe611e7f836127f4565b612c02565b6000611e8f84612c2a565b600081815260fe6020526040902054909150600160b01b900464ffffffffff1615611ecd5760405163a789712960e01b815260040160405180910390fd5b6040518060e001604052808463ffffffff168152602001611eed86612c38565b63ffffffff168152602001611f0186612c47565b64ffffffffff168152602001611f1686612c56565b64ffffffffff908116825260fd805463ffffffff908116602080860191909152428416604080870191909152606095860198909852600087815260fe825288812087518154938901519a8901519789015160808a015160a08b01518916600160b01b0264ffffffffff60b01b19918816600160901b029190911668ffffffffffffffffff60901b19928a16600160681b0264ffffffffff60681b199b909a16600160401b029a909a1671ffffffffffffffffffff0000000000000000199d8816600160201b0267ffffffffffffffff199097169390971692909217949094179a909a169390931794909417169390931795909517825560c090920151600191820155835490810184559290527f9346ac6dd7de6b96975fec380d4d994c4c12e6a8897544f22915316cc6cca280909101555050565b60006104fe602080845b9190612c65565b6040805160608101825260008082526020820181905291810191909152506040805160608101825261012e54600160281b810464ffffffffff908116602084015263ffffffff600160501b909204821693830193909352429092168152907f000000000000000000000000000000000000000000000000000000000000000016610385148015906120eb575083155b80156120fa57508261012d5414155b156115ea5764ffffffffff4216602082015263ffffffff821660408083019190915261012d849055517fc8ba82607c756c8ae67c7e47c27ade0b0718d492495044a1f8619663f26ebaa3906121529085815260200190565b60405180910390a19392505050565b815160005b818110156122f357600084828151811061218257612182613860565b60200260200101519050600061219e826001600160801b031690565b90507f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff16036121da5750506122e1565b63ffffffff81811660009081526101306020908152604091829020825160608101845290546001600160601b03808216808452600160601b830490961683850152600160801b90910464ffffffffff1693820193909352929085901c90911690810361224957505050506122e1565b604080516060810182526001600160601b03928316815263ffffffff89811660208084019182524264ffffffffff9081168587019081529884166000908152610130909252949020925183549151975195166fffffffffffffffffffffffffffffffff1990911617600160601b96909116959095029490941764ffffffffff60801b1916600160801b92909116919091021790915550505b806122eb81613b5c565b915050612166565b50505050565b60008054610100900460ff1615612340578160ff16600114801561231c5750303b155b6123385760405162461bcd60e51b81526004016107d390613b75565b506000919050565b60005460ff8084169116106123675760405162461bcd60e51b81526004016107d390613b75565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff166123a85760405162461bcd60e51b81526004016107d390613bc3565b611105612cfa565b600054610100900460ff166123d75760405162461bcd60e51b81526004016107d390613bc3565b611105612d2a565b600082815260fc60205260409020546060906001600160a01b031680612406575060608201515b600060fd846020015163ffffffff168154811061242557612425613860565b600091825260208083209091015480835260fe90915260408220549092506124529063ffffffff16611776565b5085516040808801516060808a0151835160e095861b6001600160e01b031990811660208301527f000000000000000000000000000000000000000000000000000000000000000090961b9095166024860152602885018c90526048850188905260f89290921b6001600160f81b031916606885015284811b6bffffffffffffffffffffffff19908116606986015288821b8116607d86015291901b1660918301528051608581840301815260a59092019052909150611e32565b60006104fe61251b836127f4565b612d58565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661255283612d80565b63ffffffff1614612576576040516353a9611960e11b815260040160405180910390fd5b600061258183612d8e565b600081815260fb602090815260408083208151608081018352905463ffffffff808216808452600160201b830490911694830194909452600160401b810460ff1692820192909252600160481b9091046001600160a01b0316606082015292935090036125f2575060009392505050565b805163ffffffff1661260385612d9d565b63ffffffff161415806126285750806040015160ff1661262285612dab565b60ff1614155b15612637575060009392505050565b600061264285612dba565b600081815260fe6020526040812054919250906126649063ffffffff16611776565b50905060fd836020015163ffffffff168154811061268457612684613860565b9060005260206000200154821415806126b75750806001600160a01b03166126ab87612dc9565b6001600160a01b031614155b156126c85750600095945050505050565b600084815260fc60205260409020546001600160a01b03168061273a5783606001516001600160a01b03166126fc88612dd8565b6001600160a01b031614801561272f575083606001516001600160a01b031661272488612de5565b6001600160a01b0316145b979650505050505050565b600061274588612de5565b9050816001600160a01b031661275a89612dd8565b6001600160a01b031614801561279657506001600160a01b0381161580612796575084606001516001600160a01b0316816001600160a01b0316145b98975050505050505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b805160009060208301611c548183612df2565b600061281282612e3c565b611b115760405163d082b2a960e01b815260040160405180910390fd5b60008061283d858585612c65565b602084900360031b1c9150509392505050565b6000600160ff608084901c161115611b1157604051632c75dfdf60e11b815260040160405180910390fd5b60006104fe61289861288c84611c5c565b60009081526020902090565b6118af84612ede565b6000821580156128af575081155b156128bc575060006104fe565b60408051602081018590529081018390526060016040516020818303038152906040528051906020012090506104fe565b60006128f882612eee565b611b11576040516313a8c6c560e31b815260040160405180910390fd5b60006104fe82612f21565b612f21565b81516000908281111561294b5760405163c5360feb60e01b815260040160405180910390fd5b84915060005b818110156129885761297e8386838151811061296f5761296f613860565b60200260200101518984612f43565b9250600101612951565b50805b83811015611c51576129a08360008984612f43565b925060010161298b565b6000600182901b604081106129d257604051631390f2a160e01b815260040160405180910390fd5b60006129de8787612f6c565b905061272f8282876006612925565b60006104fe6129fd601183613c0e565b8390612fb5565b60006018612a1460206040613c0e565b612a1e9190613c0e565b6001600160801b038316101592915050565b60006104fe611b62612a4460206040613c0e565b60188561183b565b60006104fe6040602084612055565b60006104fe6018612a6e60206040613c0e565b6129fd9190613c0e565b90612fb5565b60405180612a8f8360208301612ff9565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b6060612ac28251601f161590565b612adf57604051631a93d3a360e31b815260040160405180910390fd5b6040805160038082526080820190925260009160208201606080368337019050509050612b39612b0e85612bf3565b6040516001600160e01b031990911660208201526024016040516020818303038152906040526127f4565b81600081518110612b4c57612b4c613860565b602002602001018181525050612b61836127f4565b81600181518110612b7457612b74613860565b602002602001018181525050612b8984613067565b81600281518110612b9c57612b9c613860565b602002602001018181525050611c5481613075565b60606115ea83836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c656400008152506130aa565b6000816115ea81836004612c65565b6000612c0d826130b9565b611b1157604051633ae4998b60e21b815260040160405180910390fd5b60006104fe81602084612055565b60006104fe604060048461183b565b60006104fe604460058461183b565b60006104fe604960058461183b565b600081600003612c77575060006115ea565b6020821115612c995760405163063af09560e31b815260040160405180910390fd5b6001600160801b038416612cad8385613c0e565b1115612ccc5760405163a3b99ded60e01b815260040160405180910390fd5b600382901b6000612cdd8660801c90565b90940151600160ff1b600019929092019190911d16949350505050565b600054610100900460ff16612d215760405162461bcd60e51b81526004016107d390613bc3565b611105336127a2565b600054610100900460ff16612d515760405162461bcd60e51b81526004016107d390613bc3565b600160c955565b6000612d63826130cf565b611b1157604051631dad384f60e21b815260040160405180910390fd5b60006104fe6004808461183b565b60006104fe6008602084612055565b60006104fe8160048461183b565b60006104fe604860018461183b565b60006104fe6028602084612055565b60006104fe6049835b906130e2565b60006104fe605d83612dd2565b60006104fe607183612dd2565b600080612dff8385613c0e565b9050604051811115612e0f575060005b80600003612e305760405163085f79c360e11b815260040160405180910390fd5b608084901b8317611c54565b60006001600160801b038216612e53601183613c0e565b811015612e635750600092915050565b6000612e6e846130f0565b9050600160ff608083901c161115612e8a575060009392505050565b6000612ea6612e9883612850565b6001600160881b0316611ab4565b6001811115612eb757612eb761330c565b03612ecd57611c54612ec8856129ed565b612a04565b611c54612ed9856129ed565b612eee565b60006104fe612920602084612a78565b60006001600160801b0382166004811015612f0c5750600092915050565b6115ea612f1a6004836138f9565b601f161590565b600080612f2e8360801c90565b6001600160801b039390931690922092915050565b6000600183831c168103612f6257612f5b85856128a1565b9050611c54565b612f5b84866128a1565b60008282604051602001612f9792919091825260e01b6001600160e01b031916602082015260240190565b60405160208183030381529060405280519060200120905092915050565b60006001600160801b03831680831115612fe25760405163a3b99ded60e01b815260040160405180910390fd5b611c5483612ff08660801c90565b01848303612df2565b6040516000906001600160801b03841690608085901c9080851015613031576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa90508061305b57604051637c7d772f60e01b815260040160405180910390fd5b608086901b841761272f565b6000816115ea816004612fb5565b60405180600061308884602084016130fe565b6001600160801b0316601f8101601f1916830160200160405290915250919050565b6060611c548484600085613180565b6000604e6001600160801b0383165b1492915050565b600060856001600160801b0383166130c8565b60006115ea8383601461282f565b60006104fe8282601161282f565b60405160009080831015613125576040516312ca856360e21b815260040160405180910390fd5b6000805b855181101561317357600086828151811061314657613146613860565b6020026020010151905061315c81848801612ff9565b506001600160801b03169190910190600101613129565b50608084901b8117610d5e565b6060824710156131e15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016107d3565b6001600160a01b0385163b6132385760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107d3565b600080866001600160a01b031685876040516132549190613c21565b60006040518083038185875af1925050503d8060008114613291576040519150601f19603f3d011682016040523d82523d6000602084013e613296565b606091505b509150915061272f828286606083156132b05750816115ea565b8251156132c05782518084602001fd5b8160405162461bcd60e51b81526004016107d3919061370c565b6001600160a01b03811681146116cc57600080fd5b60006020828403121561330157600080fd5b81356115ea816132da565b634e487b7160e01b600052602160045260246000fd5b8051600681106133345761333461330c565b825260208181015163ffffffff9081169184019190915260409182015116910152565b606081016104fe8284613322565b60006020828403121561337757600080fd5b5035919050565b60005b83811015613399578181015183820152602001613381565b50506000910152565b600081518084526133ba81602086016020860161337e565b601f01601f19169290920160200192915050565b6040815260006133e160408301856133a2565b8281036020840152610d5e81856133a2565b6001600160a01b0383168152608081016115ea6020830184613322565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561344e5761344e613410565b604052919050565b60006001600160401b0382111561346f5761346f613410565b50601f01601f191660200190565b600082601f83011261348e57600080fd5b81356134a161349c82613456565b613426565b8181528460208386010111156134b657600080fd5b816020850160208301376000918101602001919091529392505050565b60008083601f8401126134e557600080fd5b5081356001600160401b038111156134fc57600080fd5b6020830191508360208260051b850101111561351757600080fd5b9250929050565b600080600080600080600060a0888a03121561353957600080fd5b87356001600160401b038082111561355057600080fd5b61355c8b838c0161347d565b985060208a013591508082111561357257600080fd5b61357e8b838c016134d3565b909850965060408a013591508082111561359757600080fd5b6135a38b838c016134d3565b909650945060608a0135935060808a0135915080821682146135c457600080fd5b508091505092959891949750929550565b63ffffffff811681146116cc57600080fd5b600080600080600060a086880312156135ff57600080fd5b853561360a816135d5565b9450602086810135945060408701356001600160401b038082111561362e57600080fd5b61363a8a838b0161347d565b955060608901359450608089013591508082111561365757600080fd5b818901915089601f83011261366b57600080fd5b81358181111561367d5761367d613410565b8060051b915061368e848301613426565b818152918301840191848101908c8411156136a857600080fd5b938501935b838510156136df57843592506001600160801b03831683146136cf5760008081fd5b82825293850193908501906136ad565b8096505050505050509295509295909350565b60208101600383106137065761370661330c565b91905290565b6020815260006115ea60208301846133a2565b6000806020838503121561373257600080fd5b82356001600160401b0381111561374857600080fd5b613754858286016134d3565b90969095509350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156137c857888303603f1901855281518051151584528701518784018790526137b5878501826133a2565b9588019593505090860190600101613787565b509098975050505050505050565b600080604083850312156137e957600080fd5b82356137f4816135d5565b91506020830135613804816135d5565b809150509250929050565b60006020828403121561382157600080fd5b81356115ea816135d5565b60006020828403121561383e57600080fd5b81356001600160401b0381111561385457600080fd5b611c548482850161347d565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561388857600080fd5b81516001600160401b0381111561389e57600080fd5b8201601f810184136138af57600080fd5b80516138bd61349c82613456565b8181528560208385010111156138d257600080fd5b610d5e82602083016020860161337e565b634e487b7160e01b600052601160045260246000fd5b818103818111156104fe576104fe6138e3565b60006020828403121561391e57600080fd5b5051919050565b60008235603e1983360301811261393b57600080fd5b9190910192915050565b6000808335601e1984360301811261395c57600080fd5b8301803591506001600160401b0382111561397657600080fd5b60200191503681900382131561351757600080fd5b8183823760009101908152919050565b64ffffffffff8181168382160190808211156139b9576139b96138e3565b5092915050565b6000606082840312156139d257600080fd5b604051606081018181106001600160401b03821117156139f4576139f4613410565b8060405250809150825160068110613a0b57600080fd5b81526020830151613a1b816135d5565b60208201526040830151613a2e816135d5565b6040919091015292915050565b600060608284031215613a4d57600080fd5b6115ea83836139c0565b60008060808385031215613a6a57600080fd5b8251613a75816132da565b9150613a8484602085016139c0565b90509250929050565b63ffffffff8281168282160390808211156139b9576139b96138e3565b600063ffffffff8089168352808816602084015286604084015285606084015280851660808401525060c060a083015261279660c08301846133a2565b80516020808301519190811015610e015760001960209190910360031b1b16919050565b600063ffffffff808716835280861660208401525083604083015260806060830152611e3260808301846133a2565b600060208284031215613b4c57600080fd5b815180151581146115ea57600080fd5b600060018201613b6e57613b6e6138e3565b5060010190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b808201808211156104fe576104fe6138e3565b6000825161393b81846020870161337e56fea26469706673582212201dcfa1132d42a292c61e7d4589e0a3c347dff69844c2459ec42310d751f3b49064736f6c63430008110033",
    "sourceMap": "241:268:106:-:0;;;339:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2651:215:4;;;;;;;;;;;;;-1:-1:-1;;;2651:215:4;;;;1080:32:7;;417:6:106;;425:13;;440:6;;417;425:13;440:6;2651:215:4;417:6:106;2651:215:4;1346:24:7;1360:8;1346:24;:::i;:::-;1338:32;;-1:-1:-1;1926:26:5::1;;;::::0;-1:-1:-1;;;;;;2807:28:4;;::::1;;::::0;2845:14:::1;;::::0;-1:-1:-1;241:268:106;;-1:-1:-1;;;;;;;241:268:106;14:177:201;93:13;;-1:-1:-1;;;;;135:31:201;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:450::-;283:6;291;299;352:2;340:9;331:7;327:23;323:32;320:52;;;368:1;365;358:12;320:52;400:9;394:16;450:10;443:5;439:22;432:5;429:33;419:61;;476:1;473;466:12;419:61;499:5;-1:-1:-1;523:49:201;568:2;553:18;;523:49;:::i;:::-;513:59;;591:49;636:2;625:9;621:18;591:49;:::i;:::-;581:59;;196:450;;;;;:::o;651:297::-;769:12;;816:4;805:16;;;799:23;;769:12;834:16;;831:111;;;928:1;924:6;914;908:4;904:17;901:1;897:25;893:38;886:5;882:50;873:59;;831:111;;651:297;;;:::o;:::-;241:268:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c806361169218116100de578063a2155c3411610097578063daa74a9e11610071578063daa74a9e14610478578063e2f006f71461048b578063f2fde38b1461049e578063fb0e722b146104b157600080fd5b8063a2155c3414610414578063a554d1e314610427578063d0dd06751461044657600080fd5b8063611692181461036f578063715018a6146103825780637622f78d1461038a5780638d3638f4146103c95780638da5cb5b146103f05780639498bd711461040157600080fd5b80633cf7b120116101305780633cf7b1201461023b578063409891521461024d5780634f127567146102a457806354fd4d50146102e657806355252dd11461034757806360fc84661461034f57600080fd5b806328f3fac91461017857806329be4db2146101a15780632de5aaf7146101c257806332ff14d2146101e357806339fe2736146101f85780633c6cf4731461021b575b600080fd5b61018b6101863660046132ef565b6104d8565b6040516101989190613357565b60405180910390f35b6101b46101af366004613365565b610504565b6040516101989291906133ce565b6101d56101d0366004613365565b610757565b6040516101989291906133f3565b6101f66101f136600461351e565b610785565b005b61020b6102063660046135e7565b610bf9565b6040519015158152602001610198565b61022e610229366004613365565b610d67565b60405161019891906136f2565b60fd545b604051908152602001610198565b61012e5461027a9064ffffffffff80821691600160281b810490911690600160501b900463ffffffff1683565b6040805164ffffffffff948516815293909216602084015263ffffffff1690820152606001610198565b6102d16102b2366004613365565b600090815260fe6020526040902054600160201b900463ffffffff1690565b60405163ffffffff9091168152602001610198565b604080518082019091527f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201525b604051610198919061370c565b61023f610e07565b61036261035d36600461371f565b610ec7565b6040516101989190613760565b6101f661037d3660046137d6565b611018565b6101f66110ab565b6103b17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610198565b6102d17f000000000000000000000000000000000000000000000000000000000000000081565b6033546001600160a01b03166103b1565b6101f661040f366004613365565b611107565b6101f66104223660046137d6565b611257565b61042f6112da565b604080519215158352901515602083015201610198565b61045961045436600461380f565b6114c3565b604080516001600160601b039093168352602083019190915201610198565b61033a610486366004613365565b61155f565b61020b61049936600461382c565b6115f1565b6101f66104ac3660046132ef565b611604565b6103b17f000000000000000000000000000000000000000000000000000000000000000081565b60408051606081018252600080825260208201819052918101919091526104fe826116cf565b92915050565b60fd546060908190831061052b57604051631390f2a160e01b815260040160405180910390fd5b600060fd848154811061054057610540613860565b600091825260208083209091015480835260fe82526040808420815160e081018352815463ffffffff8082168352600160201b820481169683019690965264ffffffffff600160401b8204811694830194909452600160681b810484166060830152600160901b81049095166080820152600160b01b90940490911660a08401526001015460c083015261012f805491945091929190879081106105e6576105e6613860565b90600052602060002090600202016040518060400160405290816000820154815260200160018201548152505090506106888382602001518460200151856040015186606001516040805160208101969096528581019490945260e09290921b6001600160e01b031916606085015260d890811b6001600160d81b0319908116606486015291901b1660698301528051604e818403018152606e909201905290565b94507f000000000000000000000000000000000000000000000000000000000000000063ffffffff166103851461074f5760c0820151604051636ef7fd3360e11b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ddeffa6690602401600060405180830381865afa158015610724573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261074c9190810190613876565b93505b505050915091565b6040805160608101825260008082526020820181905291810182905261077c83611776565b91509150915091565b600260c954036107dc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260c95560006107ec8861181b565b905060006107f98261182e565b9050600061080683611847565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016602083901c6cffffffffffffffffffffffffff1663ffffffff1614610867576040516353a9611960e11b815260040160405180910390fd5b600081815260fb60209081526040918290208251608081018452905463ffffffff8082168352600160201b82041692820192909252600160401b820460ff1692810192909252600160481b90046001600160a01b031660608201819052156108e257604051630dc1019760e01b815260040160405180910390fd5b60006108f384848d8d8d8d8d6118e9565b905060008160a0015164ffffffffff164261090e91906138f9565b905063ffffffff851681101561093757604051630bcae51d60e31b815260040160405180910390fd5b6000808061094d886001600160881b0316611ab4565b600181111561095e5761095e61330c565b036109975760006109766109718a611add565b611ae9565b905061098488858c84611b15565b915061098f81611c5c565b9250506109ad565b6109aa87846109a58b611add565b611c6d565b90505b845163ffffffff16600003610a9b5763ffffffff606088901c81168652608085015116602086015260ff8a16604086015280156109ef57336060860152610a0e565b600086815260fc6020526040902080546001600160a01b031916331790555b600086815260fb602090815260409182902087518154928901519389015160608a01516001600160a01b0316600160481b02600160481b600160e81b031960ff909216600160401b0291909116600160401b600160e81b031963ffffffff968716600160201b0267ffffffffffffffff199096169690931695909517939093171692909217179055610b4d565b80610ab95760405163589a41b760e01b815260040160405180910390fd5b3360608601908152600087815260fb602090815260409182902088518154928a0151938a015194516001600160a01b0316600160481b02600160481b600160e81b031960ff909616600160401b0295909516600160401b600160e81b031963ffffffff958616600160201b0267ffffffffffffffff1990951695909216949094179290921791909116919091179190911790555b6040518115158152869063ffffffff60608a901c16907f39c48fd1b2185b07007abc7904a8cdf782cfe449fd0e9bba1c2223a691e15f0b9060200160405180910390a3610ba584600001518560200151888589611d4b565b610be35760408051878152602081018490527f22bd0cccf7173839e6f30c797b419921d48a23b0732d0b120c600a49247d3016910160405180910390a15b5050600160c95550505050505050505050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c445760405163dbc2fa8560e01b815260040160405180910390fd5b610c4d86611e3c565b15610c6b57604051636893014360e01b815260040160405180910390fd5b600080610c766112da565b915091508115610c8b57600092505050610d5e565b6000610c9687611e71565b9050610ca3818a8a611e84565b61012f6040518060400160405280888152602001610cc08461204b565b9052815460018181018455600093845260209384902083516002909302019182559290910151910155610cf482878b61205c565b805161012e8054602084015160409094015163ffffffff16600160501b0263ffffffff60501b1964ffffffffff958616600160281b0269ffffffffffffffffffff1990931695909416949094171791909116919091179055610d56858a612161565b600193505050505b95945050505050565b600081815260fb602090815260408083208151608081018352905463ffffffff8082168352600160201b82041693820193909352600160401b830460ff1691810191909152600160481b9091046001600160a01b03166060820181905215610dd25750600292915050565b600083815260fc60205260409020546001600160a01b031615610df85750600192915050565b50600092915050565b50919050565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661038514610e40575061012d5490565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166336cba43c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec2919061390c565b905090565b606081806001600160401b03811115610ee257610ee2613410565b604051908082528060200260200182016040528015610f2857816020015b604080518082019091526000815260606020820152815260200190600190039081610f005790505b5091503660005b8281101561100f57858582818110610f4957610f49613860565b9050602002810190610f5b9190613925565b91506000848281518110610f7157610f71613860565b60200260200101519050306001600160a01b0316838060200190610f959190613945565b604051610fa392919061398b565b600060405180830381855af49150503d8060008114610fde576040519150601f19603f3d011682016040523d82523d6000602084013e610fe3565b606091505b5060208301521515808252833517611006576309ad446560e31b60005260046000fd5b50600101610f2f565b50505092915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461106157604051637bcb136360e11b815260040160405180910390fd5b63ffffffff8281166000908152609760205260409020805460ff191660021790558116156110a75763ffffffff81166000908152609760205260409020805460ff191690555b5050565b6033546001600160a01b031633146111055760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107d3565b565b600061111360016122f9565b9050801561112b576000805461ff0019166101001790555b611133612381565b61113b6123b0565b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff166103851461120e5761012d829055604051632c3340bb60e11b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635866817690602401600060405180830381600087803b1580156111d257600080fd5b505af11580156111e6573d6000803e3d6000fd5b505061012e805469ffffffffff00000000001916600160281b4264ffffffffff160217905550505b80156110a7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146112a057604051637bcb136360e11b815260040160405180910390fd5b63ffffffff9182166000908152609760205260408082208054600160ff199182168117909255939094168252902080549091169091179055565b600080610384197f000000000000000000000000000000000000000000000000000000000000000063ffffffff16016113165750600091829150565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166336cba43c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611376573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139a919061390c565b61012d549091508082036113b45750600093849350915050565b6040805160608101825261012e5464ffffffffff8082168352600160281b8204166020830152600160501b900463ffffffff16918101829052906113f790611e3c565b1561140b57505061012d5550600091829150565b6020810151429061142090620151809061399b565b64ffffffffff16111561143b57506000946001945092505050565b604051632c3340bb60e11b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635866817690602401600060405180830381600087803b15801561149d57600080fd5b505af11580156114b1573d6000803e3d6000fd5b50600198600098509650505050505050565b63ffffffff818116600090815261013060209081526040808320815160608101835290546001600160601b0381168252600160601b810490951692810192909252600160801b90930464ffffffffff1692810183905290918291901580159061153657506115348160200151611e3c565b155b1561155957805160408201519093506115569064ffffffffff16426138f9565b91505b50915091565b600081815260fb602090815260408083208151608081018352905463ffffffff808216808452600160201b830490911694830194909452600160401b810460ff1692820192909252600160481b9091046001600160a01b031660608083019190915292909190036115e0575050604080516020810190915260008152919050565b6115ea83826123df565b9392505050565b60006104fe6115ff8361250d565b612520565b6033546001600160a01b0316331461165e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107d3565b6001600160a01b0381166116c35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107d3565b6116cc816127a2565b50565b60408051606081018252600080825260208201819052918101919091526040516328f3fac960e01b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000016906328f3fac990602401606060405180830381865afa158015611752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fe9190613a3b565b60408051606081018252600080825260208201819052918101829052604051632de5aaf760e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632de5aaf790602401608060405180830381865afa1580156117f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077c9190613a57565b60006104fe611829836127f4565b612807565b60006104fe611842826011855b919061282f565b612850565b6000806118538361182e565b90506000611869826001600160881b0316611ab4565b600181111561187a5761187a61330c565b036118b4576115ea61189b826001600160881b031660009081526020902090565b6118af6118aa61097187611add565b61287b565b6128a1565b6115ea6118d0826001600160881b031660009081526020902090565b6118af6118e46118df87611add565b6128ed565b612915565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091526000611986600160408b901c68ffffffffffffffffff166119439190613a8d565b63ffffffff168989898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525060209250612925915050565b905060006119d58260608c901c64ffffffffff168888808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508a92506129aa915050565b600081815260fe60209081526040808320815160e081018352815463ffffffff8082168352600160201b820481169583019590955264ffffffffff600160401b8204811694830194909452600160681b810484166060830152600160901b81049094166080820152600160b01b90930490911660a0830181905260019091015460c083015290955091925003611a7e576040516312a37cf560e11b815260040160405180910390fd5b8251611a8990611e3c565b15611aa757604051636893014360e01b815260040160405180910390fd5b5050979650505050505050565b6000611ac9826001600160881b031660801c90565b60ff1660018111156104fe576104fe61330c565b6000816115ea816129ed565b6000611af482612a04565b611b11576040516335c196ef60e01b815260040160405180910390fd5b5090565b600080611b2183612a30565b90506001600160401b03602082901c81169085161015611b54576040516376a1e1d360e11b815260040160405180910390fd5b6000611b65611b6285612a4c565b90565b9050846001600160401b03165a11611b905760405163aa6c898560e01b815260040160405180910390fd5b6001600160a01b03811663032f287e6001600160401b03871660608a901c64ffffffffff1660408b901c68ffffffffffffffffff16611bce8961204b565b8b6001600160c01b038916611bea611be58d612a5b565b612a7e565b6040518863ffffffff1660e01b8152600401611c0b96959493929190613aaa565b600060405180830381600088803b158015611c2557600080fd5b5087f193505050508015611c37575060015b611c4657600092505050611c54565b600192505050611c54565b50505b949350505050565b60006104fe611b628260208561183b565b600080611c79836128ed565b90506000611cbc606087901c64ffffffffff166040805163ffffffff9092166020830152810187905260600160408051601f198184030181529190528390612ab4565b90506000611cf36001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683612bb1565b905080516020141580611d205750611d0a83612bf3565b6001600160e01b031916611d1d82613ae7565b14155b15611d3e57604051631f16844360e31b815260040160405180910390fd5b5060019695505050505050565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661038514611d8457506000610d5e565b82600003611d9457506000610d5e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636b47b3bc878786611dd089886123df565b6040518563ffffffff1660e01b8152600401611def9493929190613b0b565b6020604051808303816000875af1158015611e0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e329190613b3a565b9695505050505050565b60008063ffffffff831660009081526097602052604090205460ff166002811115611e6957611e6961330c565b141592915050565b60006104fe611e7f836127f4565b612c02565b6000611e8f84612c2a565b600081815260fe6020526040902054909150600160b01b900464ffffffffff1615611ecd5760405163a789712960e01b815260040160405180910390fd5b6040518060e001604052808463ffffffff168152602001611eed86612c38565b63ffffffff168152602001611f0186612c47565b64ffffffffff168152602001611f1686612c56565b64ffffffffff908116825260fd805463ffffffff908116602080860191909152428416604080870191909152606095860198909852600087815260fe825288812087518154938901519a8901519789015160808a015160a08b01518916600160b01b0264ffffffffff60b01b19918816600160901b029190911668ffffffffffffffffff60901b19928a16600160681b0264ffffffffff60681b199b909a16600160401b029a909a1671ffffffffffffffffffff0000000000000000199d8816600160201b0267ffffffffffffffff199097169390971692909217949094179a909a169390931794909417169390931795909517825560c090920151600191820155835490810184559290527f9346ac6dd7de6b96975fec380d4d994c4c12e6a8897544f22915316cc6cca280909101555050565b60006104fe602080845b9190612c65565b6040805160608101825260008082526020820181905291810191909152506040805160608101825261012e54600160281b810464ffffffffff908116602084015263ffffffff600160501b909204821693830193909352429092168152907f000000000000000000000000000000000000000000000000000000000000000016610385148015906120eb575083155b80156120fa57508261012d5414155b156115ea5764ffffffffff4216602082015263ffffffff821660408083019190915261012d849055517fc8ba82607c756c8ae67c7e47c27ade0b0718d492495044a1f8619663f26ebaa3906121529085815260200190565b60405180910390a19392505050565b815160005b818110156122f357600084828151811061218257612182613860565b60200260200101519050600061219e826001600160801b031690565b90507f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff16036121da5750506122e1565b63ffffffff81811660009081526101306020908152604091829020825160608101845290546001600160601b03808216808452600160601b830490961683850152600160801b90910464ffffffffff1693820193909352929085901c90911690810361224957505050506122e1565b604080516060810182526001600160601b03928316815263ffffffff89811660208084019182524264ffffffffff9081168587019081529884166000908152610130909252949020925183549151975195166fffffffffffffffffffffffffffffffff1990911617600160601b96909116959095029490941764ffffffffff60801b1916600160801b92909116919091021790915550505b806122eb81613b5c565b915050612166565b50505050565b60008054610100900460ff1615612340578160ff16600114801561231c5750303b155b6123385760405162461bcd60e51b81526004016107d390613b75565b506000919050565b60005460ff8084169116106123675760405162461bcd60e51b81526004016107d390613b75565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff166123a85760405162461bcd60e51b81526004016107d390613bc3565b611105612cfa565b600054610100900460ff166123d75760405162461bcd60e51b81526004016107d390613bc3565b611105612d2a565b600082815260fc60205260409020546060906001600160a01b031680612406575060608201515b600060fd846020015163ffffffff168154811061242557612425613860565b600091825260208083209091015480835260fe90915260408220549092506124529063ffffffff16611776565b5085516040808801516060808a0151835160e095861b6001600160e01b031990811660208301527f000000000000000000000000000000000000000000000000000000000000000090961b9095166024860152602885018c90526048850188905260f89290921b6001600160f81b031916606885015284811b6bffffffffffffffffffffffff19908116606986015288821b8116607d86015291901b1660918301528051608581840301815260a59092019052909150611e32565b60006104fe61251b836127f4565b612d58565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661255283612d80565b63ffffffff1614612576576040516353a9611960e11b815260040160405180910390fd5b600061258183612d8e565b600081815260fb602090815260408083208151608081018352905463ffffffff808216808452600160201b830490911694830194909452600160401b810460ff1692820192909252600160481b9091046001600160a01b0316606082015292935090036125f2575060009392505050565b805163ffffffff1661260385612d9d565b63ffffffff161415806126285750806040015160ff1661262285612dab565b60ff1614155b15612637575060009392505050565b600061264285612dba565b600081815260fe6020526040812054919250906126649063ffffffff16611776565b50905060fd836020015163ffffffff168154811061268457612684613860565b9060005260206000200154821415806126b75750806001600160a01b03166126ab87612dc9565b6001600160a01b031614155b156126c85750600095945050505050565b600084815260fc60205260409020546001600160a01b03168061273a5783606001516001600160a01b03166126fc88612dd8565b6001600160a01b031614801561272f575083606001516001600160a01b031661272488612de5565b6001600160a01b0316145b979650505050505050565b600061274588612de5565b9050816001600160a01b031661275a89612dd8565b6001600160a01b031614801561279657506001600160a01b0381161580612796575084606001516001600160a01b0316816001600160a01b0316145b98975050505050505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b805160009060208301611c548183612df2565b600061281282612e3c565b611b115760405163d082b2a960e01b815260040160405180910390fd5b60008061283d858585612c65565b602084900360031b1c9150509392505050565b6000600160ff608084901c161115611b1157604051632c75dfdf60e11b815260040160405180910390fd5b60006104fe61289861288c84611c5c565b60009081526020902090565b6118af84612ede565b6000821580156128af575081155b156128bc575060006104fe565b60408051602081018590529081018390526060016040516020818303038152906040528051906020012090506104fe565b60006128f882612eee565b611b11576040516313a8c6c560e31b815260040160405180910390fd5b60006104fe82612f21565b612f21565b81516000908281111561294b5760405163c5360feb60e01b815260040160405180910390fd5b84915060005b818110156129885761297e8386838151811061296f5761296f613860565b60200260200101518984612f43565b9250600101612951565b50805b83811015611c51576129a08360008984612f43565b925060010161298b565b6000600182901b604081106129d257604051631390f2a160e01b815260040160405180910390fd5b60006129de8787612f6c565b905061272f8282876006612925565b60006104fe6129fd601183613c0e565b8390612fb5565b60006018612a1460206040613c0e565b612a1e9190613c0e565b6001600160801b038316101592915050565b60006104fe611b62612a4460206040613c0e565b60188561183b565b60006104fe6040602084612055565b60006104fe6018612a6e60206040613c0e565b6129fd9190613c0e565b90612fb5565b60405180612a8f8360208301612ff9565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b6060612ac28251601f161590565b612adf57604051631a93d3a360e31b815260040160405180910390fd5b6040805160038082526080820190925260009160208201606080368337019050509050612b39612b0e85612bf3565b6040516001600160e01b031990911660208201526024016040516020818303038152906040526127f4565b81600081518110612b4c57612b4c613860565b602002602001018181525050612b61836127f4565b81600181518110612b7457612b74613860565b602002602001018181525050612b8984613067565b81600281518110612b9c57612b9c613860565b602002602001018181525050611c5481613075565b60606115ea83836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c656400008152506130aa565b6000816115ea81836004612c65565b6000612c0d826130b9565b611b1157604051633ae4998b60e21b815260040160405180910390fd5b60006104fe81602084612055565b60006104fe604060048461183b565b60006104fe604460058461183b565b60006104fe604960058461183b565b600081600003612c77575060006115ea565b6020821115612c995760405163063af09560e31b815260040160405180910390fd5b6001600160801b038416612cad8385613c0e565b1115612ccc5760405163a3b99ded60e01b815260040160405180910390fd5b600382901b6000612cdd8660801c90565b90940151600160ff1b600019929092019190911d16949350505050565b600054610100900460ff16612d215760405162461bcd60e51b81526004016107d390613bc3565b611105336127a2565b600054610100900460ff16612d515760405162461bcd60e51b81526004016107d390613bc3565b600160c955565b6000612d63826130cf565b611b1157604051631dad384f60e21b815260040160405180910390fd5b60006104fe6004808461183b565b60006104fe6008602084612055565b60006104fe8160048461183b565b60006104fe604860018461183b565b60006104fe6028602084612055565b60006104fe6049835b906130e2565b60006104fe605d83612dd2565b60006104fe607183612dd2565b600080612dff8385613c0e565b9050604051811115612e0f575060005b80600003612e305760405163085f79c360e11b815260040160405180910390fd5b608084901b8317611c54565b60006001600160801b038216612e53601183613c0e565b811015612e635750600092915050565b6000612e6e846130f0565b9050600160ff608083901c161115612e8a575060009392505050565b6000612ea6612e9883612850565b6001600160881b0316611ab4565b6001811115612eb757612eb761330c565b03612ecd57611c54612ec8856129ed565b612a04565b611c54612ed9856129ed565b612eee565b60006104fe612920602084612a78565b60006001600160801b0382166004811015612f0c5750600092915050565b6115ea612f1a6004836138f9565b601f161590565b600080612f2e8360801c90565b6001600160801b039390931690922092915050565b6000600183831c168103612f6257612f5b85856128a1565b9050611c54565b612f5b84866128a1565b60008282604051602001612f9792919091825260e01b6001600160e01b031916602082015260240190565b60405160208183030381529060405280519060200120905092915050565b60006001600160801b03831680831115612fe25760405163a3b99ded60e01b815260040160405180910390fd5b611c5483612ff08660801c90565b01848303612df2565b6040516000906001600160801b03841690608085901c9080851015613031576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa90508061305b57604051637c7d772f60e01b815260040160405180910390fd5b608086901b841761272f565b6000816115ea816004612fb5565b60405180600061308884602084016130fe565b6001600160801b0316601f8101601f1916830160200160405290915250919050565b6060611c548484600085613180565b6000604e6001600160801b0383165b1492915050565b600060856001600160801b0383166130c8565b60006115ea8383601461282f565b60006104fe8282601161282f565b60405160009080831015613125576040516312ca856360e21b815260040160405180910390fd5b6000805b855181101561317357600086828151811061314657613146613860565b6020026020010151905061315c81848801612ff9565b506001600160801b03169190910190600101613129565b50608084901b8117610d5e565b6060824710156131e15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016107d3565b6001600160a01b0385163b6132385760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107d3565b600080866001600160a01b031685876040516132549190613c21565b60006040518083038185875af1925050503d8060008114613291576040519150601f19603f3d011682016040523d82523d6000602084013e613296565b606091505b509150915061272f828286606083156132b05750816115ea565b8251156132c05782518084602001fd5b8160405162461bcd60e51b81526004016107d3919061370c565b6001600160a01b03811681146116cc57600080fd5b60006020828403121561330157600080fd5b81356115ea816132da565b634e487b7160e01b600052602160045260246000fd5b8051600681106133345761333461330c565b825260208181015163ffffffff9081169184019190915260409182015116910152565b606081016104fe8284613322565b60006020828403121561337757600080fd5b5035919050565b60005b83811015613399578181015183820152602001613381565b50506000910152565b600081518084526133ba81602086016020860161337e565b601f01601f19169290920160200192915050565b6040815260006133e160408301856133a2565b8281036020840152610d5e81856133a2565b6001600160a01b0383168152608081016115ea6020830184613322565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561344e5761344e613410565b604052919050565b60006001600160401b0382111561346f5761346f613410565b50601f01601f191660200190565b600082601f83011261348e57600080fd5b81356134a161349c82613456565b613426565b8181528460208386010111156134b657600080fd5b816020850160208301376000918101602001919091529392505050565b60008083601f8401126134e557600080fd5b5081356001600160401b038111156134fc57600080fd5b6020830191508360208260051b850101111561351757600080fd5b9250929050565b600080600080600080600060a0888a03121561353957600080fd5b87356001600160401b038082111561355057600080fd5b61355c8b838c0161347d565b985060208a013591508082111561357257600080fd5b61357e8b838c016134d3565b909850965060408a013591508082111561359757600080fd5b6135a38b838c016134d3565b909650945060608a0135935060808a0135915080821682146135c457600080fd5b508091505092959891949750929550565b63ffffffff811681146116cc57600080fd5b600080600080600060a086880312156135ff57600080fd5b853561360a816135d5565b9450602086810135945060408701356001600160401b038082111561362e57600080fd5b61363a8a838b0161347d565b955060608901359450608089013591508082111561365757600080fd5b818901915089601f83011261366b57600080fd5b81358181111561367d5761367d613410565b8060051b915061368e848301613426565b818152918301840191848101908c8411156136a857600080fd5b938501935b838510156136df57843592506001600160801b03831683146136cf5760008081fd5b82825293850193908501906136ad565b8096505050505050509295509295909350565b60208101600383106137065761370661330c565b91905290565b6020815260006115ea60208301846133a2565b6000806020838503121561373257600080fd5b82356001600160401b0381111561374857600080fd5b613754858286016134d3565b90969095509350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156137c857888303603f1901855281518051151584528701518784018790526137b5878501826133a2565b9588019593505090860190600101613787565b509098975050505050505050565b600080604083850312156137e957600080fd5b82356137f4816135d5565b91506020830135613804816135d5565b809150509250929050565b60006020828403121561382157600080fd5b81356115ea816135d5565b60006020828403121561383e57600080fd5b81356001600160401b0381111561385457600080fd5b611c548482850161347d565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561388857600080fd5b81516001600160401b0381111561389e57600080fd5b8201601f810184136138af57600080fd5b80516138bd61349c82613456565b8181528560208385010111156138d257600080fd5b610d5e82602083016020860161337e565b634e487b7160e01b600052601160045260246000fd5b818103818111156104fe576104fe6138e3565b60006020828403121561391e57600080fd5b5051919050565b60008235603e1983360301811261393b57600080fd5b9190910192915050565b6000808335601e1984360301811261395c57600080fd5b8301803591506001600160401b0382111561397657600080fd5b60200191503681900382131561351757600080fd5b8183823760009101908152919050565b64ffffffffff8181168382160190808211156139b9576139b96138e3565b5092915050565b6000606082840312156139d257600080fd5b604051606081018181106001600160401b03821117156139f4576139f4613410565b8060405250809150825160068110613a0b57600080fd5b81526020830151613a1b816135d5565b60208201526040830151613a2e816135d5565b6040919091015292915050565b600060608284031215613a4d57600080fd5b6115ea83836139c0565b60008060808385031215613a6a57600080fd5b8251613a75816132da565b9150613a8484602085016139c0565b90509250929050565b63ffffffff8281168282160390808211156139b9576139b96138e3565b600063ffffffff8089168352808816602084015286604084015285606084015280851660808401525060c060a083015261279660c08301846133a2565b80516020808301519190811015610e015760001960209190910360031b1b16919050565b600063ffffffff808716835280861660208401525083604083015260806060830152611e3260808301846133a2565b600060208284031215613b4c57600080fd5b815180151581146115ea57600080fd5b600060018201613b6e57613b6e6138e3565b5060010190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b808201808211156104fe576104fe6138e3565b6000825161393b81846020870161337e56fea26469706673582212201dcfa1132d42a292c61e7d4589e0a3c347dff69844c2459ec42310d751f3b49064736f6c63430008110033",
    "sourceMap": "241:268:106:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4042:122:4;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8388:881:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;4204:138:4:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;6134:3110:24:-;;;;;;:::i;:::-;;:::i;:::-;;4891:1154:0;;;;;;:::i;:::-;;:::i;:::-;;;7225:14:201;;7218:22;7200:41;;7188:2;7173:18;4891:1154:0;7060:187:201;10112:421:24;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8242:99:0:-;8321:6;:13;8242:99;;;7838:25:201;;;7826:2;7811:18;8242:99:0;7692:177:201;3070:35:0;;;;;;;;;;-1:-1:-1;;;3070:35:0;;;;;;-1:-1:-1;;;3070:35:0;;;;;;;;;;8080:12:201;8119:15;;;8101:34;;8171:15;;;;8166:2;8151:18;;8144:43;8235:10;8223:23;8203:18;;;8196:51;8058:2;8043:18;3070:35:0;7874:379:201;9618:139:24;;;;;;:::i;:::-;9688:15;9722:19;;;:9;:19;;;;;:28;-1:-1:-1;;;9722:28:24;;;;;9618:139;;;;8432:10:201;8420:23;;;8402:42;;8390:2;8375:18;9618:139:24;8258:192:201;1383:401:7;1554:28;;;;;;;;;1567:7;1554:28;;1576:5;1554:28;;;;1383:401;;;;;;;:::i;9994:239:0:-;;;:::i;542:1352:6:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3454:214:4:-;;;;;;:::i;:::-;;:::i;2184:57:5:-;;;:::i;1747:37:4:-;;;;;;;;-1:-1:-1;;;;;10925:32:201;;;10907:51;;10895:2;10880:18;1747:37:4;10761:203:201;1356:35:5;;;;;1276:85:87;1348:6;;-1:-1:-1;;;;;1348:6:87;1276:85;;3922:612:0;;;;;;:::i;:::-;;:::i;3214:200:4:-;;;;;;:::i;:::-;;:::i;6394:1425:0:-;;;:::i;:::-;;;;11156:14:201;;11149:22;11131:41;;11215:14;;11208:22;11203:2;11188:18;;11181:50;11104:18;6394:1425:0;10969:268:201;9316:631:0;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;11712:39:201;;;11694:58;;11783:2;11768:18;;11761:34;;;;11667:18;9316:631:0;11492:309:201;10573:350:24;;;;;;:::i;:::-;;:::i;9797:275::-;;;;;;:::i;:::-;;:::i;2158:198:87:-;;;;;;:::i;:::-;;:::i;1825:30:4:-;;;;;4042:122;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;4138:19:4;4151:5;4138:12;:19::i;:::-;4131:26;4042:122;-1:-1:-1;;4042:122:4:o;8388:881:0:-;8525:6;:13;8450:23;;;;8516:22;;8512:52;;8547:17;;-1:-1:-1;;;8547:17:0;;;;;;;;;;;8512:52;8574:16;8593:6;8600:5;8593:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;8647:19;;;:9;:19;;;;;;8616:50;;;;;;;;;;;;;;;-1:-1:-1;;;8616:50:0;;;;;;;;;;;;-1:-1:-1;;;8616:50:0;;;;;;;;;;;-1:-1:-1;;;8616:50:0;;;;;;;;-1:-1:-1;;;8616:50:0;;;;;;;;;-1:-1:-1;;;8616:50:0;;;;;;;;;;;;;;;;;8709:19;:26;;8593:13;;-1:-1:-1;8616:50:0;;8593:13;8709:19;8729:5;;8709:26;;;;;;:::i;:::-;;;;;;;;;;;8676:59;;;;;;;;;;;;;;;;;;;;;;;;;;;8758:241;8816:8;8849:9;:18;;;8889:8;:17;;;8934:8;:14;;;8974:8;:14;;;5058:72:49;;;;;;17739:19:201;;;;17774:12;;;17767:28;;;;17851:3;17829:16;;;;-1:-1:-1;;;;;;17825:43:201;5027:12:49;17811::201;;17804:65;17892:3;17944:16;;;-1:-1:-1;;;;;;17940:25:201;;;17926:12;;;17919:47;18000:16;;;17996:25;17982:12;;;17975:47;5058:72:49;;;;;;;;;18038:12:201;;;;5058:72:49;;;4838:299;8758:241:0;8745:254;-1:-1:-1;9132:11:0;:29;;3861:3:45;9132:29:0;9128:135;;9234:17;;;;9192:60;;-1:-1:-1;;;9192:60:0;;;;;7838:25:201;;;;9208:5:0;-1:-1:-1;;;;;9192:41:0;;;;7811:18:201;;9192:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9192:60:0;;;;;;;;;;;;:::i;:::-;9177:75;;9128:135;8502:767;;;8388:881;;;:::o;4204:138:4:-;-1:-1:-1;;;;;;;;4260:13:4;-1:-1:-1;;;;;;;;;;;;;;;4319:16:4;4329:5;4319:9;:16::i;:::-;4312:23;;;;4204:138;;;:::o;6134:3110:24:-;1815:1:89;2569:7;;:19;2561:63;;;;-1:-1:-1;;;2561:63:89;;13339:2:201;2561:63:89;;;13321:21:201;13378:2;13358:18;;;13351:30;13417:33;13397:18;;;13390:61;13468:18;;2561:63:89;;;;;;;;;1815:1;2699:7;:18;6427:15:24::1;6445:26;:10:::0;:24:::1;:26::i;:::-;6427:44;;6481:13;6497:16;:7;:14;:16::i;:::-;6481:32;;6523:15;6541:14;:7;:12;:14::i;:::-;6523:32:::0;-1:-1:-1;6621:35:24::1;6645:11;6621:35;1995:5:60::0;5619:42;;;;;6621:35:24::1;;;6617:76;;6665:28;;-1:-1:-1::0;;;6665:28:24::1;;;;;;;;;;;6617:76;6762:27;6792:21:::0;;;:12:::1;:21;::::0;;;;;;;;6762:51;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;6762:51:24;::::1;;::::0;;::::1;::::0;;;;-1:-1:-1;;;6762:51:24;::::1;;;::::0;;;;;;;-1:-1:-1;;;6762:51:24;::::1;-1:-1:-1::0;;;;;6762:51:24::1;::::0;;;;;;6827:31;6823:61:::1;;6867:17;;-1:-1:-1::0;;;6867:17:24::1;;;;;;;;;;;6823:61;6927:28;6958:70;6976:6;6984:7;6993:11;;7006:9;;7017:10;6958:17;:70::i;:::-;6927:101;;7087:21;7129:8;:20;;;7111:38;;:15;:38;;;;:::i;:::-;7087:62:::0;-1:-1:-1;7163:41:24::1;::::0;;;::::1;7159:79;;;7213:25;;-1:-1:-1::0;;;7213:25:24::1;;;;;;;;;;;7159:79;7248:18;::::0;;7351:13:::1;:6;-1:-1:-1::0;;;;;7351:11:24::1;;:13::i;:::-;:33;;;;;;;;:::i;:::-;::::0;7347:527:::1;;7487:23;7513:34;:14;:7;:12;:14::i;:::-;:32;:34::i;:::-;7487:60;;7571:65;7591:6;7599:13;7614:8;7624:11;7571:19;:65::i;:::-;7561:75;;7675:18;:11;:16;:18::i;:::-;7650:44;;7386:319;7347:527;;;7802:61;7825:6;7833:13;7848:14;:7;:12;:14::i;:::-;7802:22;:61::i;:::-;7792:71;;7347:527;7887:15:::0;;:20:::1;;:15;:20:::0;7883:1027:::1;;8027:33;1778:6:60::0;5064:37;;;8027:33:24;;;;8095:14:::1;::::0;::::1;::::0;8074:35:::1;:18;::::0;::::1;:35:::0;8123:39:::1;::::0;::::1;:19;::::0;::::1;:39:::0;8176:314;::::1;;;8321:10;8301:17;::::0;::::1;:30:::0;8176:314:::1;;;8439:23;::::0;;;:14:::1;:23;::::0;;;;:36;;-1:-1:-1;;;;;;8439:36:24::1;8465:10;8439:36;::::0;;8176:314:::1;8503:21;::::0;;;:12:::1;:21;::::0;;;;;;;;:32;;;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;8503:32:24::1;-1:-1:-1::0;;;8503:32:24::1;-1:-1:-1::0;;;;;;;;8503:32:24::1;::::0;;::::1;-1:-1:-1::0;;;8503:32:24::1;::::0;;;;-1:-1:-1;;;;;;;;8503:32:24::1;::::0;;::::1;-1:-1:-1::0;;;8503:32:24::1;-1:-1:-1::0;;8503:32:24;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;;;::::1;::::0;;7883:1027:::1;;;8571:7;8566:36;;8587:15;;-1:-1:-1::0;;;8587:15:24::1;;;;;;;;;;;8566:36;8843:10;8823:17;::::0;::::1;:30:::0;;;8867:21:::1;::::0;;;:12:::1;:21;::::0;;;;;;;;:32;;;;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;8867:32:24::1;-1:-1:-1::0;;;8867:32:24::1;-1:-1:-1::0;;;;;;;;8867:32:24::1;::::0;;::::1;-1:-1:-1::0;;;8867:32:24::1;::::0;;;;-1:-1:-1;;;;;;;;8867:32:24::1;::::0;;::::1;-1:-1:-1::0;;;8867:32:24::1;-1:-1:-1::0;;8867:32:24;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;::::1;::::0;;7883:1027:::1;8924:43;::::0;7225:14:201;;7218:22;7200:41;;8950:7:24;;8924:43:::1;1778:6:60::0;5064:37;;;8924:43:24;;::::1;::::0;7188:2:201;7173:18;8924:43:24::1;;;;;;;8982:84;8995:8;:20;;;9017:8;:17;;;9036:7;9045:10;9057:8;8982:12;:84::i;:::-;8977:261;;9194:33;::::0;;13936:25:201;;;13992:2;13977:18;;13970:34;;;9194:33:24::1;::::0;13909:18:201;9194:33:24::1;;;;;;;8977:261;-1:-1:-1::0;;1772:1:89;2872:7;:22;-1:-1:-1;;;;;;;;;;;;;6134:3110:24:o;4891:1154:0:-;5101:16;2583:10:4;-1:-1:-1;;;;;2597:5:4;2583:19;;2579:48;;2611:16;;-1:-1:-1;;;2611:16:4;;;;;;;;;;;2579:48;5133:25:0::1;5146:11;5133:12;:25::i;:::-;5129:55;;;5167:17;;-1:-1:-1::0;;;5167:17:0::1;;;;;;;;;;;5129:55;5251:15;5268:16:::0;5288:15:::1;:13;:15::i;:::-;5250:53;;;;5452:10;5448:28;;;5471:5;5464:12;;;;;;5448:28;5547:15;5565:30;:10;:28;:30::i;:::-;5547:48;;5680:44;5697:3;5702:11;5715:8;5680:16;:44::i;:::-;5734:19;5759:63;;;;;;;;5785:9;5759:63;;;;5806:14;:3;:12;:14::i;:::-;5759:63:::0;;5734:89;;::::1;::::0;;::::1;::::0;;-1:-1:-1;5734:89:0;;;::::1;::::0;;;;;;::::1;::::0;;::::1;;::::0;;;;;;::::1;::::0;;::::1;::::0;5922:51:::1;5937:11:::0;5950:9;5961:11;5922:14:::1;:51::i;:::-;5909:64:::0;;:10:::1;:64:::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;;-1:-1:-1::0;;;5909:64:0::1;-1:-1:-1::0;;;;5909:64:0::1;::::0;;::::1;-1:-1:-1::0;;;5909:64:0::1;-1:-1:-1::0;;5909:64:0;;;;;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;5983:34:::1;5996:7:::0;6005:11;5983:12:::1;:34::i;:::-;6034:4;6027:11;;;;;2637:1:4;4891:1154:0::0;;;;;;;:::o;10112:421:24:-;10179:20;10241:25;;;:12;:25;;;;;;;;10211:55;;;;;;;;;;;;;;;-1:-1:-1;;;10211:55:24;;;;;;;;;;-1:-1:-1;;;10211:55:24;;;;;;;;;;;-1:-1:-1;;;10211:55:24;;;-1:-1:-1;;;;;10211:55:24;;;;;;;10280:31;10276:251;;-1:-1:-1;10334:21:24;;10112:421;-1:-1:-1;;10112:421:24:o;10276:251::-;10415:1;10376:27;;;:14;:27;;;;;;-1:-1:-1;;;;;10376:27:24;:41;10372:155;;-1:-1:-1;10440:20:24;;10112:421;-1:-1:-1;;10112:421:24:o;10372:155::-;-1:-1:-1;10498:18:24;;10112:421;-1:-1:-1;;10112:421:24:o;10372:155::-;10201:332;10112:421;;;:::o;9994:239:0:-;10042:7;10138:11;:29;;3861:3:45;10138:29:0;:88;;-1:-1:-1;10212:14:0;;;9994:239::o;10138:88::-;10184:12;-1:-1:-1;;;;;10170:37:0;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10131:95;;9994:239;:::o;542:1352:6:-;602:27;658:5;;-1:-1:-1;;;;;694:20:6;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;694:20:6;;;;;;;;;;;;;;;;680:34;;724:19;758:9;753:1135;777:6;773:1;:10;753:1135;;;808:5;;814:1;808:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;800:16;;830:20;853:11;865:1;853:14;;;;;;;;:::i;:::-;;;;;;;830:37;;1210:4;-1:-1:-1;;;;;1202:26:6;1229:5;:14;;;;;;;;:::i;:::-;1202:42;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1181:17:6;;;1164:80;;;;;;1517:19;;1514:38;1504:301;;-1:-1:-1;;;1675:4:6;1668:80;1782:4;1776;1769:18;1504:301;-1:-1:-1;1860:3:6;;753:1135;;;;631:1263;;542:1352;;;;:::o;3454:214:4:-;2466:10;-1:-1:-1;;;;;2480:12:4;2466:26;;2462:62;;2501:23;;-1:-1:-1;;;2501:23:4;;;;;;;;;;;2462:62;3555:23:::1;::::0;;::::1;;::::0;;;:9:::1;:23;::::0;;;;:45;;-1:-1:-1;;3555:45:4::1;3581:19;3555:45;::::0;;3614:16;::::1;::::0;3610:51:::1;;3639:22;::::0;::::1;;::::0;;;:9:::1;:22;::::0;;;;3632:29;;-1:-1:-1;;3632:29:4::1;::::0;;3610:51:::1;3454:214:::0;;:::o;2184:57:5:-;1348:6:87;;-1:-1:-1;;;;;1348:6:87;929:10:91;1488:23:87;1480:68;;;;-1:-1:-1;;;1480:68:87;;15534:2:201;1480:68:87;;;15516:21:201;;;15553:18;;;15546:30;15612:34;15592:18;;;15585:62;15664:18;;1480:68:87;15332:356:201;1480:68:87;2184:57:5:o;3922:612:0:-;3111:19:88;3133:25;3156:1;3133:22;:25::i;:::-;3111:47;;3172:14;3168:65;;;3202:13;:20;;-1:-1:-1;;3202:20:88;;;;;3168:65;4052:16:0::1;:14;:16::i;:::-;4117:24;:22;:24::i;:::-;4205:11;:29;;3861:3:45;4205:29:0;4201:232;;4250:14;:26:::0;;;4290:68:::1;::::0;-1:-1:-1;;;4290:68:0;;::::1;::::0;::::1;7838:25:201::0;;;4320:12:0::1;-1:-1:-1::0;;;;;4290:57:0::1;::::0;::::1;::::0;7811:18:201;;4290:68:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4372:10:0::1;:50:::0;;-1:-1:-1;;4372:50:0::1;-1:-1:-1::0;;;4406:15:0::1;4372:50;;;;::::0;;-1:-1:-1;;4201:232:0::1;3257:14:88::0;3253:99;;;3303:5;3287:21;;-1:-1:-1;;3287:21:88;;;3327:14;;-1:-1:-1;15845:36:201;;3327:14:88;;15833:2:201;15818:18;3327:14:88;;;;;;;3101:257;3922:612:0;:::o;3214:200:4:-;2466:10;-1:-1:-1;;;;;2480:12:4;2466:26;;2462:62;;2501:23;;-1:-1:-1;;;2501:23:4;;;;;;;;;;;2462:62;3310:21:::1;::::0;;::::1;;::::0;;;:9:::1;:21;::::0;;;;;:43;;3334:19:::1;-1:-1:-1::0;;3310:43:4;;::::1;::::0;::::1;::::0;;;3363:22;;;::::1;::::0;;;;:44;;;;::::1;::::0;;::::1;::::0;;3214:200::o;6394:1425:0:-;6435:15;;-1:-1:-1;;6581:11:0;:29;;;6577:56;;-1:-1:-1;6620:5:0;;;;-1:-1:-1;6394:1425:0:o;6577:56::-;6643:15;6675:12;-1:-1:-1;;;;;6661:37:0;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6728:14;;6643:57;;-1:-1:-1;6832:18:0;;;6828:45;;-1:-1:-1;6860:5:0;;;;-1:-1:-1;6394:1425:0;-1:-1:-1;;6394:1425:0:o;6828:45::-;6883:44;;;;;;;;6917:10;6883:44;;;;;;;-1:-1:-1;;;6883:44:0;;;;;;;-1:-1:-1;;;6883:44:0;;;;;;;;;;;7105:32;;:12;:32::i;:::-;7101:203;;;-1:-1:-1;;7234:14:0;:24;-1:-1:-1;7280:5:0;;;;-1:-1:-1;6394:1425:0:o;7101:203::-;7374:20;;;;7428:15;;7374:51;;3354:6:45;;7374:51:0;:::i;:::-;:69;;;7370:188;;;-1:-1:-1;7535:5:0;;7542:4;;-1:-1:-1;6394:1425:0;-1:-1:-1;;;6394:1425:0:o;7370:188::-;7716:66;;-1:-1:-1;;;7716:66:0;;;;;7838:25:201;;;7746:12:0;-1:-1:-1;;;;;7716:57:0;;;;7811:18:201;;7716:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7800:4:0;;7806:5;;-1:-1:-1;6394:1425:0;-1:-1:-1;;;;;;;6394:1425:0:o;9316:631::-;9460:22;;;;9374:15;9460:22;;;:14;:22;;;;;;;;9423:59;;;;;;;;;-1:-1:-1;;;;;9423:59:0;;;;-1:-1:-1;;;9423:59:0;;;;;;;;;;;;-1:-1:-1;;;9423:59:0;;;;;;;;;;;9374:15;;;;9423:59;9617:30;;;;:74;;;9652:39;9665:13;:25;;;9652:12;:39::i;:::-;9651:40;9617:74;9613:208;;;9717:21;;9785:25;;;;9717:21;;-1:-1:-1;9767:43:0;;;;:15;:43;:::i;:::-;9752:58;;9613:208;9413:534;9316:631;;;:::o;10573:350:24:-;10677:27;10707:25;;;:12;:25;;;;;;;;10677:55;;;;;;;;;;;;;;;;-1:-1:-1;;;10677:55:24;;;;;;;;;;;;-1:-1:-1;;;10677:55:24;;;;;;;;;;;-1:-1:-1;;;10677:55:24;;;-1:-1:-1;;;;;10677:55:24;10641:24;10677:55;;;;;;;10641:24;10677:55;;10830:20;;10826:35;;-1:-1:-1;;10852:9:24;;;;;;;;;-1:-1:-1;10852:9:24;;;10573:350;-1:-1:-1;10573:350:24:o;10826:35::-;10878:38;10894:11;10907:8;10878:15;:38::i;:::-;10871:45;10573:350;-1:-1:-1;;;10573:350:24:o;9797:275::-;9870:12;10021:44;10037:27;:11;:25;:27::i;:::-;10021:15;:44::i;2158:198:87:-;1348:6;;-1:-1:-1;;;;;1348:6:87;929:10:91;1488:23:87;1480:68;;;;-1:-1:-1;;;1480:68:87;;15534:2:201;1480:68:87;;;15516:21:201;;;15553:18;;;15546:30;15612:34;15592:18;;;15585:62;15664:18;;1480:68:87;15332:356:201;1480:68:87;-1:-1:-1;;;;;2246:22:87;::::1;2238:73;;;::::0;-1:-1:-1;;;2238:73:87;;16273:2:201;2238:73:87::1;::::0;::::1;16255:21:201::0;16312:2;16292:18;;;16285:30;16351:34;16331:18;;;16324:62;-1:-1:-1;;;16402:18:201;;;16395:36;16448:19;;2238:73:87::1;16071:402:201::0;2238:73:87::1;2321:28;2340:8;2321:18;:28::i;:::-;2158:198:::0;:::o;4735:150:4:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;4832:46:4;;-1:-1:-1;;;4832:46:4;;-1:-1:-1;;;;;10925:32:201;;;4832:46:4;;;10907:51:201;4846:12:4;4832:39;;;;10880:18:201;;4832:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5006:166::-;-1:-1:-1;;;;;;;;5063:13:4;-1:-1:-1;;;;;;;;;;;;;;;5122:43:4;;-1:-1:-1;;;5122:43:4;;;;;7838:25:201;;;5136:12:4;-1:-1:-1;;;;;5122:36:4;;;;7811:18:201;;5122:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2370:129:53:-;2438:7;2464:28;2478:13;:7;:11;:13::i;:::-;2464;:28::i;4908:186::-;4964:6;4989:98;5011:74;4964:6;1901:2:45;5011:7:53;:16;:26;:74;:26;:74::i;:::-;4989:20;:98::i;4010:522::-;4064:7;4169:14;4186:16;:7;:14;:16::i;:::-;4169:33;-1:-1:-1;4283:16:53;4265:14;:7;-1:-1:-1;;;;;4265:12:53;;:14::i;:::-;:34;;;;;;;;:::i;:::-;;4261:265;;4322:79;4343:14;:7;-1:-1:-1;;;;;4343:12:53;3955:20:60;4111:17;;;4227:2;4214:16;;;3903:343;4343:14:53;4359:41;:34;:14;:7;:12;:14::i;:34::-;:39;:41::i;:::-;4322:20;:79::i;4261:265::-;4439:76;4460:14;:7;-1:-1:-1;;;;;4460:12:53;3955:20:60;4111:17;;;4227:2;4214:16;;;3903:343;4460:14:53;4476:38;:31;:14;:7;:12;:14::i;:::-;:29;:31::i;:::-;:36;:38::i;18812:1278:24:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19281:18:24;19302:82;19340:1;1881:5:60;5336:36;;;;;19323:18:24;;;;:::i;:::-;19302:82;;19343:7;19352:11;;19302:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;512:2:45;;-1:-1:-1;19302:20:24;;-1:-1:-1;;19302:82:24:i;:::-;19281:103;-1:-1:-1;19604:20:24;19627:77;19281:103;1778:6:60;5064:37;;;;;19682:9:24;;19627:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19693:10:24;;-1:-1:-1;19627:25:24;;-1:-1:-1;;19627:77:24:i;:::-;19785:23;;;;:9;:23;;;;;;;;19774:34;;;;;;;;;;;;;;;-1:-1:-1;;;19774:34:24;;;;;;;;;;;;-1:-1:-1;;;19774:34:24;;;;;;;;;;;-1:-1:-1;;;19774:34:24;;;;;;;;-1:-1:-1;;;19774:34:24;;;;;;;;;-1:-1:-1;;;19774:34:24;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19604:100:24;;-1:-1:-1;19875:25:24;19871:61;;19909:23;;-1:-1:-1;;;19909:23:24;;;;;;;;;;;19871:61;20036:20;;20023:34;;:12;:34::i;:::-;20019:64;;;20066:17;;-1:-1:-1;;;20066:17:24;;;;;;;;;;;20019:64;19052:1038;;18812:1278;;;;;;;;;:::o;4612:223:60:-;4664:11;4799:28;4819:6;-1:-1:-1;;;;;4799:28:60;1673:6;6520:26;;6341:213;4799:28;4787:41;;;;;;;;;;:::i;5172:145:53:-;5226:7;5263;5296:14;5263:7;5296:5;:14::i;3719:215:50:-;3786:11;3814:22;3828:7;3814:13;:22::i;:::-;3809:60;;3845:24;;-1:-1:-1;;;3845:24:50;;;;;;;;;;;3809:60;-1:-1:-1;3918:7:50;3719:215::o;11340:1197:24:-;11483:4;11724:15;11742:21;:11;:19;:21::i;:::-;11724:39;-1:-1:-1;;;;;;1363:5:62;3111:42;;;11777:29:24;;;;;;11773:58;;;11815:16;;-1:-1:-1;;;11815:16:24;;;;;;;;;;;11773:58;11898:17;11918:42;:23;:11;:21;:23::i;:::-;392:3:48;280:125;11918:42:24;11898:62;;12078:8;-1:-1:-1;;;;;12065:21:24;:9;:21;12061:53;;12095:19;;-1:-1:-1;;;12095:19:24;;;;;;;;;;;12061:53;-1:-1:-1;;;;;12128:47:24;;;-1:-1:-1;;;;;12128:322:24;;1778:6:60;5064:37;;;;;1881:5;5336:36;;;;;12285:20:24;:11;:18;:20::i;:::-;12334:13;-1:-1:-1;;;;;12370:15:24;;12410:29;:21;:11;:19;:21::i;:::-;:27;:29::i;:::-;12128:322;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12124:407;;12515:5;12508:12;;;;;;12124:407;12472:4;12465:11;;;;;;12124:407;11493:1044;;11340:1197;;;;;;;:::o;5440:188:50:-;5502:4;5525:96;5545:74;5502:4;2093:2:45;5545:11:50;:20;5733:216:60;12712:1258:24;12814:4;12900:17;12920:21;:4;:19;:21::i;:::-;12900:41;-1:-1:-1;13017:20:24;13040:62;1778:6:60;5064:37;;;;;13059:42:24;;;19466:10:201;19454:23;;;13059:42:24;;;19436::201;19494:18;;19487:34;;;19409:18;;13059:42:24;;;-1:-1:-1;;13059:42:24;;;;;;;;;13040:8;;:18;:62::i;:::-;13017:85;-1:-1:-1;13203:23:24;13229:43;-1:-1:-1;;;;;13237:12:24;13229:34;13017:85;13229:34;:43::i;:::-;13203:69;;13839:10;:17;13860:2;13839:23;;:73;;;;13889:23;:8;:21;:23::i;:::-;-1:-1:-1;;;;;;13866:46:24;:19;13874:10;13866:19;:::i;:::-;:46;;13839:73;13835:107;;;13921:21;;-1:-1:-1;;;13921:21:24;;;;;;;;;;;13835:107;-1:-1:-1;13959:4:24;;12712:1258;-1:-1:-1;;;;;;12712:1258:24:o;14232:714::-;14428:4;14515:11;:29;;3861:3:45;14515:29:24;14511:47;;-1:-1:-1;14553:5:24;14546:12;;14511:47;14671:10;14685:1;14671:15;14667:33;;-1:-1:-1;14695:5:24;14688:12;;14667:33;14732:5;-1:-1:-1;;;;;14717:33:24;;14781:14;14819:8;14853:10;14890:38;14906:11;14919:8;14890:15;:38::i;:::-;14717:222;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14710:229;14232:714;-1:-1:-1;;;;;;14232:714:24:o;5249:135:4:-;5313:4;;5336:21;;;;;;;:9;:21;;;;;;;;:41;;;;;;;;:::i;:::-;;;;5249:135;-1:-1:-1;;5249:135:4:o;5288:141:49:-;5360:11;5390:32;5408:13;:7;:11;:13::i;:::-;5390:17;:32::i;15126:565:24:-;15226:12;15241:14;:3;:12;:14::i;:::-;15269:15;;;;:9;:15;;;;;:27;:15;;-1:-1:-1;;;;15269:27:24;;;;:32;15265:69;;15310:24;;-1:-1:-1;;;15310:24:24;;;;;;;;;;;15265:69;15362:295;;;;;;;;15402:11;15362:295;;;;;;15437:11;:3;:9;:11::i;:::-;15362:295;;;;;;15469:17;:3;:15;:17::i;:::-;15362:295;;;;;;15507:15;:3;:13;:15::i;:::-;15362:295;;;;;;15550:6;:13;;15362:295;;;;;;;;;;;;15598:15;15362:295;;;;;;;;;;;;;;;;;;-1:-1:-1;15344:15:24;;;:9;:15;;;;;:313;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15344:313:24;-1:-1:-1;;;;15344:313:24;;;-1:-1:-1;;;15344:313:24;;;;;-1:-1:-1;;;;15344:313:24;;;-1:-1:-1;;;15344:313:24;-1:-1:-1;;;;15344:313:24;;;;-1:-1:-1;;;15344:313:24;;;;;-1:-1:-1;;15344:313:24;;;-1:-1:-1;;;15344:313:24;-1:-1:-1;;15344:313:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15667:17;;;;;;;;;;;;;;;-1:-1:-1;;15126:565:24:o;7586:149:49:-;7644:7;7670:58;3874:2;;7670:3;:12;:18;:58;:18;:58::i;10771:858:0:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;10933:19:0;;;;;;;;10942:10;10933:19;-1:-1:-1;;;10933:19:0;;;;;;;;;;;-1:-1:-1;;;10933:19:0;;;;;;;;;;;;11052:15;11023:45;;;;;10933:19;11341:11;:29;3861:3:45;11341:29:0;;;;:45;;;11375:11;11374:12;11341:45;:76;;;;;11408:9;11390:14;;:27;;11341:76;11337:286;;;11433:46;11463:15;11433:46;:20;;;:46;11493:32;;;:18;;;;:32;;;;11539:14;:26;;;11584:28;;;;;11556:9;7838:25:201;;7826:2;7811:18;;7692:177;11584:28:0;;;;;;;;10771:858;;;;;:::o;11704:851::-;11815:14;;11792:20;11839:710;11863:12;11859:1;:16;11839:710;;;11896:17;11916:7;11924:1;11916:10;;;;;;;;:::i;:::-;;;;;;;11896:30;;11940:13;11956:17;:8;-1:-1:-1;;;;;11956:15:0;5934:6:60;5733:216;11956:17:0;11940:33;;12057:11;12047:21;;:6;:21;;;12043:35;;12070:8;;;;12043:35;12129:22;;;;12092:34;12129:22;;;:14;:22;;;;;;;;;12092:59;;;;;;;;;-1:-1:-1;;;;;12092:59:0;;;;;;-1:-1:-1;;;12092:59:0;;;;;;;;;-1:-1:-1;;;12092:59:0;;;;;;;;;;;;;8040:39:59;;;;;;;;12279:64:0;;12275:78;;12345:8;;;;;;12275:78;12441:97;;;;;;;;-1:-1:-1;;;;;12441:97:0;;;;;;;;;;;;;;;;12520:15;12441:97;;;;;;;;;;12400:22;;;-1:-1:-1;12400:22:0;;;:14;:22;;;;;;:138;;;;;;;;;;-1:-1:-1;;12400:138:0;;;;-1:-1:-1;;;12400:138:0;;;;;;;;;;;;-1:-1:-1;;;;12400:138:0;-1:-1:-1;;;12400:138:0;;;;;;;;;;;;-1:-1:-1;;11839:710:0;11877:3;;;;:::i;:::-;;;;11839:710;;;;11782:773;11704:851;;:::o;5287:808:88:-;5351:4;5684:13;;;;;;;5680:409;;;5738:7;:12;;5749:1;5738:12;:61;;;;-1:-1:-1;5793:4:88;1476:19:90;:23;5738:61:88;5713:166;;;;-1:-1:-1;;;5713:166:88;;;;;;;:::i;:::-;-1:-1:-1;5900:5:88;;5287:808;-1:-1:-1;5287:808:88:o;5680:409::-;5944:12;;:22;;;;:12;;:22;5936:81;;;;-1:-1:-1;;;5936:81:88;;;;;;;:::i;:::-;-1:-1:-1;6031:12:88;:22;;-1:-1:-1;;6031:22:88;;;;;;;;;;;;-1:-1:-1;;5287:808:88:o;988:95:87:-;4698:13:88;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:88;;;;;;;:::i;:::-;1050:26:87::1;:24;:26::i;1853:111:89:-:0;4698:13:88;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:88;;;;;;;:::i;:::-;1923:34:89::1;:32;:34::i;20192:1088:24:-:0;20427:21;20451:27;;;:14;:27;;;;;;20314:24;;-1:-1:-1;;;;;20451:27:24;;20488:66;;-1:-1:-1;20537:17:24;;;;20488:66;20641:16;20660:6;20667:8;:18;;;20660:26;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20729:19;;;:9;:19;;;;;;:31;20660:26;;-1:-1:-1;20719:42:24;;20729:31;;20719:9;:42::i;:::-;-1:-1:-1;20961:15:24;;21118:19;;;;;21245:17;;;;;4049:147:54;;22487:3:201;22528:16;;;-1:-1:-1;;;;;;22524:25:201;;;4049:147:54;;;22512:38:201;21004:11:24;22583:16:201;;;22579:25;;;22566:11;;;22559:46;22621:11;;;22614:27;;;22657:12;;;22650:28;;;22734:3;22712:16;;;;-1:-1:-1;;;;;;22708:36:201;22694:12;;;22687:58;22829:15;;;-1:-1:-1;;22825:24:201;;;22811:12;;;22804:46;22884:15;;;22880:24;;22866:12;;;22859:46;22940:15;;;22936:24;22921:13;;;22914:47;4049:147:54;;;;;;;;;22977:13:201;;;;4049:147:54;;22829:15:201;;-1:-1:-1;20913:360:24;3733:470:54;4344:129;4412:7;4438:28;4452:13;:7;:11;:13::i;:::-;4438;:28::i;16170:1705:24:-;16232:4;16323:11;16301:33;;:18;:4;:16;:18::i;:::-;:33;;;16297:74;;16343:28;;-1:-1:-1;;;16343:28:24;;;;;;;;;;;16297:74;16381:19;16403:18;:4;:16;:18::i;:::-;16431:27;16461:25;;;:12;:25;;;;;;;;16431:55;;;;;;;;;;;;;;;;-1:-1:-1;;;16431:55:24;;;;;;;;;;;;-1:-1:-1;;;16431:55:24;;;;;;;;;;;-1:-1:-1;;;16431:55:24;;;-1:-1:-1;;;;;16431:55:24;;;;;16461:25;;-1:-1:-1;16575:20:24;;16571:38;;-1:-1:-1;16604:5:24;;16170:1705;-1:-1:-1;;;16170:1705:24:o;16571:38::-;16698:15;;16681:32;;:13;:4;:11;:13::i;:::-;:32;;;;:76;;;;16738:8;:19;;;16717:40;;:17;:4;:15;:17::i;:::-;:40;;;;16681:76;16677:94;;;-1:-1:-1;16766:5:24;;16170:1705;-1:-1:-1;;;16170:1705:24:o;16677:94::-;16866:16;16885:19;:4;:17;:19::i;:::-;16915:17;16947:19;;;:9;:19;;;;;:31;16866:38;;-1:-1:-1;16915:17:24;16937:42;;16947:31;;16937:9;:42::i;:::-;16914:65;;;17005:6;17012:8;:18;;;17005:26;;;;;;;;;;:::i;:::-;;;;;;;;;16993:8;:38;;:71;;;;17055:9;-1:-1:-1;;;;;17035:29:24;:16;:4;:14;:16::i;:::-;-1:-1:-1;;;;;17035:29:24;;;16993:71;16989:89;;;-1:-1:-1;17073:5:24;;16170:1705;-1:-1:-1;;;;;16170:1705:24:o;16989:89::-;17152:21;17176:27;;;:14;:27;;;;;;-1:-1:-1;;;;;17176:27:24;;17213:656;;17363:8;:17;;;-1:-1:-1;;;;;17339:41:24;:20;:4;:18;:20::i;:::-;-1:-1:-1;;;;;17339:41:24;;:86;;;;;17408:8;:17;;;-1:-1:-1;;;;;17384:41:24;:20;:4;:18;:20::i;:::-;-1:-1:-1;;;;;17384:41:24;;17339:86;17332:93;16170:1705;-1:-1:-1;;;;;;;16170:1705:24:o;17213:656::-;17669:21;17693:20;:4;:18;:20::i;:::-;17669:44;;17758:13;-1:-1:-1;;;;;17734:37:24;:20;:4;:18;:20::i;:::-;-1:-1:-1;;;;;17734:37:24;;:124;;;;-1:-1:-1;;;;;;17792:27:24;;;;:65;;;17840:8;:17;;;-1:-1:-1;;;;;17823:34:24;:13;-1:-1:-1;;;;;17823:34:24;;17792:65;17727:131;16170:1705;-1:-1:-1;;;;;;;;16170:1705:24:o;2510:187:87:-;2602:6;;;-1:-1:-1;;;;;2618:17:87;;;-1:-1:-1;;;;;;2618:17:87;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;2972:569:52:-;3060:10;;3026:7;;3486:4;3477:14;;3517:17;3477:14;3060:10;3517:5;:17::i;2649:195:53:-;2712:7;2736:18;2746:7;2736:9;:18::i;:::-;2731:52;;2763:20;;-1:-1:-1;;;2763:20:53;;;;;;;;;;;15552:538:52;15643:7;;15685:29;:7;15699:6;15707;15685:13;:29::i;:::-;16055:2;:11;;;16071:1;16054:18;16028:45;;-1:-1:-1;;15552:538:52;;;;;:::o;3565:236:60:-;3630:6;3084:21;3055:51;1673:6;6520:26;;;3055:51;;;3691:52;;3727:16;;-1:-1:-1;;;3727:16:60;;;;;;;;;;;4562:255:50;4624:7;4739:71;4760:25;:18;:11;:16;:18::i;:::-;3955:20:60;4111:17;;;4227:2;4214:16;;;3903:343;4760:25:50;4787:22;:11;:20;:22::i;3115:287:57:-;3196:14;3226:23;;:51;;;;-1:-1:-1;3253:24:57;;3226:51;3222:174;;;-1:-1:-1;3300:1:57;3293:8;;3222:174;3349:35;;;;;;21720:19:201;;;21755:12;;;21748:28;;;21792:12;;3349:35:57;;;;;;;;;;;;3339:46;;;;;;3332:53;;;;6640:200:51;6704:8;6729:19;6740:7;6729:10;:19::i;:::-;6724:54;;6757:21;;-1:-1:-1;;;6757:21:51;;;;;;;;;;;7662:115;7718:7;7744:26;:8;:24;:26::i;:17::-;:24;:26::i;843:900:57:-;1083:12;;978:13;;1109:17;;;1105:48;;;1135:18;;-1:-1:-1;;;1135:18:57;;;;;;;;;;;1105:48;1171:4;1163:12;;1340:9;1335:189;1359:8;1355:1;:12;1335:189;;;1473:36;1483:5;1490;1496:1;1490:8;;;;;;;;:::i;:::-;;;;;;;1500:5;1507:1;1473:9;:36::i;:::-;1465:44;-1:-1:-1;1369:3:57;;1335:189;;;-1:-1:-1;1621:8:57;1604:123;1635:6;1631:1;:10;1604:123;;;1674:38;1684:5;1699:1;1703:5;1710:1;1674:9;:38::i;:::-;1666:46;-1:-1:-1;1643:3:57;;1604:123;;9026:841:55;9179:7;9315:1;9301:15;;;9418:25;9400:44;;9396:74;;9453:17;;-1:-1:-1;;;9453:17:55;;;;;;;;;;;9396:74;9565:16;9584:37;9602:10;9614:6;9584:17;:37::i;:::-;9565:56;;9782:78;9803:13;9818:8;9828:9;645:1:45;9782:20:55;:78::i;6032:127:53:-;6086:7;6112:40;1431:29;1901:2:45;6086:7:53;1431:29;:::i;:::-;6112:7;;:17;:40::i;4006:241:50:-;4069:4;1996:2:45;2100:30:50;2093:2:45;2050::50;2100:30;:::i;:::-;2178:31;;;;:::i;:::-;-1:-1:-1;;;;;7239:43:52;;4150:31:50;;;4006:241;-1:-1:-1;;4006:241:50:o;6179:203::-;6244:7;6270:105;6293:80;2100:30;2093:2:45;2050::50;2100:30;:::i;:::-;1996:2:45;6293:11:50;:20;5733:216:60;5920:166:50;5987:7;6013:66;2050:2;6075;6013:11;:20;5733:216:60;6479:154:50;6544:7;6570:56;1996:2:45;2100:30:50;2093:2:45;2050::50;2100:30;:::i;:::-;2178:31;;;;:::i;6570:20::-;:30;;:56::i;4079:1041:52:-;4325:4;4319:11;;4455:34;4469:7;4484:4;4478:10;;4455:13;:34::i;:::-;-1:-1:-1;;;;;;7239:43:52;;4701:12;8097:2;8081:18;;-1:-1:-1;;8465:20:52;4997;;5019:4;4993:31;4987:4;4980:45;-1:-1:-1;5087:17:52;;4079:1041;;-1:-1:-1;4079:1041:52:o;5598:610:51:-;5680:12;5775:25;5786:6;:13;9918:2;9909:11;:16;;9781:151;5775:25;5770:66;;5809:27;;-1:-1:-1;;;5809:27:51;;;;;;;;;;;5770:66;5871:16;;;5885:1;5871:16;;;;;;;;;5846:22;;5871:16;;;;;;;;;;-1:-1:-1;5871:16:51;5846:41;;5951:47;5968:23;:8;:21;:23::i;:::-;5951:41;;-1:-1:-1;;;;;;22084:33:201;;;5951:41:51;;;22072:46:201;22134:11;;5951:41:51;;;;;;;;;;;;:45;:47::i;:::-;5940:5;5946:1;5940:8;;;;;;;;:::i;:::-;;;;;;:58;;;;;6064:12;:6;:10;:12::i;:::-;6053:5;6059:1;6053:8;;;;;;;;:::i;:::-;;;;;;:23;;;;;6142:20;:8;:18;:20::i;:::-;6131:5;6137:1;6131:8;;;;;;;;:::i;:::-;;;;;;:31;;;;;6179:22;6195:5;6179:15;:22::i;3466:173:93:-;3541:12;3572:60;3585:6;3593:4;3572:60;;;;;;;;;;;;;;;;;:12;:60::i;8829:255:51:-;8893:6;8978:8;9011:65;8978:8;8893:6;1611:1;9011:13;:65::i;5581:215:49:-;5648:11;5676:22;5690:7;5676:13;:22::i;:::-;5671:60;;5707:24;;-1:-1:-1;;;5707:24:49;;;;;;;;;;;7339:149;7397:7;7423:58;7397:7;7477:2;7423:3;:12;5733:216:60;8096:152:49;8151:6;8183:57;3922:2;8237:1;8183:3;:12;5733:216:60;8333:165:49;8394:6;8426:64;3977:2;8487:1;8426:3;:12;5733:216:60;8653:160:49;8712:6;8744:61;4029:2;8802:1;8744:3;:12;5733:216:60;13860:1334:52;13947:14;13977:6;13987:1;13977:11;13973:59;;-1:-1:-1;14019:1:52;14004:17;;13973:59;14118:2;14109:6;:11;14105:65;;;14143:16;;-1:-1:-1;;;14143:16:52;;;;;;;;;;;14105:65;-1:-1:-1;;;;;7239:43:52;;14249:15;14258:6;14249;:15;:::i;:::-;:31;14245:82;;;14303:13;;-1:-1:-1;;;14303:13:52;;;;;;;;;;;14245:82;14366:1;14356:11;;;14336:17;14406:13;:7;6898:3;6871:30;;6712:196;14406:13;15153:17;;;15147:24;-1:-1:-1;;;;;14845:17:52;;;;14841:90;;;;15143:35;;13860:1334;-1:-1:-1;;;;13860:1334:52:o;1089:111:87:-;4698:13:88;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:88;;;;;;;:::i;:::-;1161:32:87::1;929:10:91::0;1161:18:87::1;:32::i;1970:109:89:-:0;4698:13:88;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:88;;;;;;;:::i;:::-;1772:1:89::1;2050:7;:22:::0;1970:109::o;4615:195:54:-;4678:7;4702:18;4712:7;4702:9;:18::i;:::-;4697:52;;4729:20;;-1:-1:-1;;;4729:20:54;;;;;;;;;;;6795:168;6856:6;6888:67;2370:1;;6888:7;:16;5733:216:60;7024:159:54;7085:7;7111:65;2424:1;7172:2;7111:7;:16;5733:216:60;6579:158:54;6635:6;6667:62;6635:6;6726:1;6667:7;:16;5733:216:60;7466:165:54;7526:5;7556:67;2533:2;7620:1;7556:7;:16;5733:216:60;7245:161:54;7307:7;7333:66;2479:2;7395;7333:7;:16;5733:216:60;7698:150:54;7757:7;7783:58;2586:2;7783:7;:16;:29;;:58::i;7911:158::-;7974:7;8000:62;2643:2;8000:7;:16;5733:216:60;8132:158:54;8195:7;8221:62;2700:3;8221:7;:16;5733:216:60;2092:540:52;2158:7;;2192:11;2199:4;2192;:11;:::i;:::-;2177:26;;2471:4;2465:11;2459:4;2456:21;2453:38;;;-1:-1:-1;2488:1:52;2453:38;2514:4;2522:1;2514:9;2510:66;;2546:19;;-1:-1:-1;;;2546:19:52;;;;;;;;;;;2510:66;17362:3;17354:11;;;17353:20;;2592:33;17029:352;2927:803:53;2986:4;-1:-1:-1;;;;;7239:43:52;;1431:29:53;1901:2:45;2986:4:53;1431:29;:::i;:::-;3095:6;:20;3091:38;;;-1:-1:-1;3124:5:53;;2927:803;-1:-1:-1;;2927:803:53:o;3091:38::-;3177:20;3200:16;3208:7;3200;:16::i;:::-;3177:39;-1:-1:-1;3084:21:60;3055:51;1673:6;6520:26;;;3055:51;;;3226::53;;-1:-1:-1;3272:5:53;;2927:803;-1:-1:-1;;;2927:803:53:o;3226:51::-;3447:16;3402:41;:34;3423:12;3402:20;:34::i;:::-;-1:-1:-1;;;;;3402:39:53;;:41::i;:::-;:61;;;;;;;;:::i;:::-;;3398:326;;3543:30;:14;3549:7;3543:5;:14::i;:::-;:28;:30::i;3398:326::-;3686:27;:14;3692:7;3686:5;:14::i;:::-;:25;:27::i;4908:163:50:-;4974:7;5000:64;:55;1998:2;5000:11;:20;5733:216:60;7000:362:51;7060:4;-1:-1:-1;;;;;7239:43:52;;1611:1:51;7181:24;;7177:42;;;-1:-1:-1;7214:5:51;;7000:362;-1:-1:-1;;7000:362:51:o;7177:42::-;7319:36;7330:24;1611:1;7330:6;:24;:::i;:::-;9918:2;9909:11;:16;;9781:151;9003:292:52;9059:14;9085:12;9100:13;:7;6898:3;6871:30;;6712:196;9100:13;-1:-1:-1;;;;;7239:43:52;;;;9258:21;;;;;-1:-1:-1;;9003:292:52:o;2125:526:57:-;2261:14;2466:1;2439:23;;;2438:29;:34;;2434:211;;2521:24;2531:4;2537:7;2521:9;:24::i;:::-;2514:31;;;;2434:211;2610:24;2620:7;2629:4;2610:9;:24::i;6713:220:56:-;6785:7;6910:5;6917:7;6893:32;;;;;;;;23156:19:201;;;23231:3;23209:16;-1:-1:-1;;;;;;23205:43:201;23200:2;23191:12;;23184:65;23274:2;23265:12;;23001:282;6893:32:56;;;;;;;;;;;;;6883:43;;;;;;6876:50;;6713:220;;;;:::o;11126:529:52:-;11201:7;-1:-1:-1;;;;;7239:43:52;;11308:13;;;11304:64;;;11344:13;;-1:-1:-1;;;11344:13:52;;;;;;;;;;;11304:64;11580:58;11609:6;11593:13;:7;6898:3;6871:30;;6712:196;11593:13;:22;11630:6;11623:4;:13;11580:5;:58::i;18013:842::-;18352:4;18346:11;18091:7;;-1:-1:-1;;;;;7239:43:52;;;6898:3;6871:30;;;;18434:12;;;18430:66;;;18469:16;;-1:-1:-1;;;18469:16:52;;;;;;;;;;;18430:66;18505:8;18721:4;18713:6;18707:4;18699:6;18693:4;18686:5;18675:51;18668:58;;18750:3;18745:37;;18762:20;;-1:-1:-1;;;18762:20:52;;;;;;;;;;;18745:37;17362:3;17354:11;;;17353:20;;18799:49;17029:352;9163:225:51;9224:7;9310:8;9336:45;9310:8;1611:1;9336:17;:45::i;5340:892:52:-;5595:4;5589:11;;5432;5760:33;5772:8;5788:4;5782:10;;5760:11;:33::i;:::-;-1:-1:-1;;;;;7239:43:52;8097:2;8081:18;;-1:-1:-1;;8465:20:52;6109;;6131:4;6105:31;6099:4;6092:45;6199:17;;;-1:-1:-1;5340:892:52;;-1:-1:-1;5340:892:52:o;3861:223:93:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;5868:128:49:-;5931:4;985:2:45;-1:-1:-1;;;;;7239:43:52;;5954:13:49;:35;;5868:128;-1:-1:-1;;5868:128:49:o;4878:152:54:-;4937:4;1255:3:45;-1:-1:-1;;;;;7239:43:52;;4992:13:54;7081:208:52;16353:225;16431:7;16540:29;:7;16558:6;16566:2;16540:17;:29::i;5726:154:53:-;5782:7;5808:65;:7;5782;1901:2:45;5808:17:53;:65::i;19390:1003:52:-;19660:4;19654:11;19478:7;;19742:14;;;19738:68;;;19779:16;;-1:-1:-1;;;19779:16:52;;;;;;;;;;;19738:68;19925:14;19958:9;19953:364;19977:8;:15;19973:1;:19;19953:364;;;20009:15;20027:8;20036:1;20027:11;;;;;;;;:::i;:::-;;;;;;;20009:29;;20189:41;20203:7;20223:6;20212:8;:17;20189:13;:41::i;:::-;-1:-1:-1;;;;;;7239:43:52;20248:23;;;;;20289:3;;19953:364;;;-1:-1:-1;17362:3:52;17354:11;;;17353:20;;20333:53;17029:352;4948:499:93;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:93;;23490:2:201;5137:81:93;;;23472:21:201;23529:2;23509:18;;;23502:30;23568:34;23548:18;;;23541:62;-1:-1:-1;;;23619:18:201;;;23612:36;23665:19;;5137:81:93;23288:402:201;5137:81:93;-1:-1:-1;;;;;1476:19:90;;;5228:60:93;;;;-1:-1:-1;;;5228:60:93;;23897:2:201;5228:60:93;;;23879:21:201;23936:2;23916:18;;;23909:30;23975:31;23955:18;;;23948:59;24024:18;;5228:60:93;23695:353:201;5228:60:93;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:93;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;7707;7735:7;7731:566;;;-1:-1:-1;7765:10:93;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;-1:-1:-1;;;8252:20:93;;;;;;;;:::i;14:131:201:-;-1:-1:-1;;;;;89:31:201;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;402:127::-;463:10;458:3;454:20;451:1;444:31;494:4;491:1;484:15;518:4;515:1;508:15;534:369;615:5;609:12;647:1;643:2;640:9;630:43;;653:18;;:::i;:::-;682:15;;743:4;732:16;;;726:23;768:10;810:21;;;794:14;;;787:45;;;;885:4;874:16;;;868:23;864:32;848:14;;841:56;534:369::o;908:260::-;1102:2;1087:18;;1114:48;1091:9;1144:6;1114:48;:::i;1173:180::-;1232:6;1285:2;1273:9;1264:7;1260:23;1256:32;1253:52;;;1301:1;1298;1291:12;1253:52;-1:-1:-1;1324:23:201;;1173:180;-1:-1:-1;1173:180:201:o;1358:250::-;1443:1;1453:113;1467:6;1464:1;1461:13;1453:113;;;1543:11;;;1537:18;1524:11;;;1517:39;1489:2;1482:10;1453:113;;;-1:-1:-1;;1600:1:201;1582:16;;1575:27;1358:250::o;1613:270::-;1654:3;1692:5;1686:12;1719:6;1714:3;1707:19;1735:76;1804:6;1797:4;1792:3;1788:14;1781:4;1774:5;1770:16;1735:76;:::i;:::-;1865:2;1844:15;-1:-1:-1;;1840:29:201;1831:39;;;;1872:4;1827:50;;1613:270;-1:-1:-1;;1613:270:201:o;1888:377::-;2081:2;2070:9;2063:21;2044:4;2107:44;2147:2;2136:9;2132:18;2124:6;2107:44;:::i;:::-;2199:9;2191:6;2187:22;2182:2;2171:9;2167:18;2160:50;2227:32;2252:6;2244;2227:32;:::i;2270:358::-;-1:-1:-1;;;;;2523:32:201;;2505:51;;2492:3;2477:19;;2565:57;2618:2;2603:18;;2595:6;2565:57;:::i;2633:127::-;2694:10;2689:3;2685:20;2682:1;2675:31;2725:4;2722:1;2715:15;2749:4;2746:1;2739:15;2765:275;2836:2;2830:9;2901:2;2882:13;;-1:-1:-1;;2878:27:201;2866:40;;-1:-1:-1;;;;;2921:34:201;;2957:22;;;2918:62;2915:88;;;2983:18;;:::i;:::-;3019:2;3012:22;2765:275;;-1:-1:-1;2765:275:201:o;3045:186::-;3093:4;-1:-1:-1;;;;;3118:6:201;3115:30;3112:56;;;3148:18;;:::i;:::-;-1:-1:-1;3214:2:201;3193:15;-1:-1:-1;;3189:29:201;3220:4;3185:40;;3045:186::o;3236:462::-;3278:5;3331:3;3324:4;3316:6;3312:17;3308:27;3298:55;;3349:1;3346;3339:12;3298:55;3385:6;3372:20;3416:48;3432:31;3460:2;3432:31;:::i;:::-;3416:48;:::i;:::-;3489:2;3480:7;3473:19;3535:3;3528:4;3523:2;3515:6;3511:15;3507:26;3504:35;3501:55;;;3552:1;3549;3542:12;3501:55;3617:2;3610:4;3602:6;3598:17;3591:4;3582:7;3578:18;3565:55;3665:1;3640:16;;;3658:4;3636:27;3629:38;;;;3644:7;3236:462;-1:-1:-1;;;3236:462:201:o;3703:367::-;3766:8;3776:6;3830:3;3823:4;3815:6;3811:17;3807:27;3797:55;;3848:1;3845;3838:12;3797:55;-1:-1:-1;3871:20:201;;-1:-1:-1;;;;;3903:30:201;;3900:50;;;3946:1;3943;3936:12;3900:50;3983:4;3975:6;3971:17;3959:29;;4043:3;4036:4;4026:6;4023:1;4019:14;4011:6;4007:27;4003:38;4000:47;3997:67;;;4060:1;4057;4050:12;3997:67;3703:367;;;;;:::o;4075:1197::-;4232:6;4240;4248;4256;4264;4272;4280;4333:3;4321:9;4312:7;4308:23;4304:33;4301:53;;;4350:1;4347;4340:12;4301:53;4390:9;4377:23;-1:-1:-1;;;;;4460:2:201;4452:6;4449:14;4446:34;;;4476:1;4473;4466:12;4446:34;4499:49;4540:7;4531:6;4520:9;4516:22;4499:49;:::i;:::-;4489:59;;4601:2;4590:9;4586:18;4573:32;4557:48;;4630:2;4620:8;4617:16;4614:36;;;4646:1;4643;4636:12;4614:36;4685:72;4749:7;4738:8;4727:9;4723:24;4685:72;:::i;:::-;4776:8;;-1:-1:-1;4659:98:201;-1:-1:-1;4864:2:201;4849:18;;4836:32;;-1:-1:-1;4880:16:201;;;4877:36;;;4909:1;4906;4899:12;4877:36;4948:72;5012:7;5001:8;4990:9;4986:24;4948:72;:::i;:::-;5039:8;;-1:-1:-1;4922:98:201;-1:-1:-1;5121:2:201;5106:18;;5093:32;;-1:-1:-1;5175:3:201;5160:19;;5147:33;;-1:-1:-1;5209:14:201;;;5199:25;;5189:53;;5238:1;5235;5228:12;5189:53;;5261:5;5251:15;;;4075:1197;;;;;;;;;;:::o;5277:121::-;5362:10;5355:5;5351:22;5344:5;5341:33;5331:61;;5388:1;5385;5378:12;5403:1652;5561:6;5569;5577;5585;5593;5646:3;5634:9;5625:7;5621:23;5617:33;5614:53;;;5663:1;5660;5653:12;5614:53;5702:9;5689:23;5721:30;5745:5;5721:30;:::i;:::-;5770:5;-1:-1:-1;5794:2:201;5828:18;;;5815:32;;-1:-1:-1;5898:2:201;5883:18;;5870:32;-1:-1:-1;;;;;5951:14:201;;;5948:34;;;5978:1;5975;5968:12;5948:34;6001:49;6042:7;6033:6;6022:9;6018:22;6001:49;:::i;:::-;5991:59;;6097:2;6086:9;6082:18;6069:32;6059:42;;6154:3;6143:9;6139:19;6126:33;6110:49;;6184:2;6174:8;6171:16;6168:36;;;6200:1;6197;6190:12;6168:36;6238:8;6227:9;6223:24;6213:34;;6285:7;6278:4;6274:2;6270:13;6266:27;6256:55;;6307:1;6304;6297:12;6256:55;6343:2;6330:16;6365:2;6361;6358:10;6355:36;;;6371:18;;:::i;:::-;6417:2;6414:1;6410:10;6400:20;;6440:28;6464:2;6460;6456:11;6440:28;:::i;:::-;6502:15;;;6572:11;;;6568:20;;;6533:12;;;;6600:19;;;6597:39;;;6632:1;6629;6622:12;6597:39;6656:11;;;;6676:349;6692:6;6687:3;6684:15;6676:349;;;6774:3;6761:17;6746:32;;-1:-1:-1;;;;;6817:7:201;6813:48;6804:7;6801:61;6791:159;;6904:1;6933:2;6929;6922:14;6791:159;6963:20;;;6709:12;;;;7003;;;;6676:349;;;7044:5;7034:15;;;;;;;;5403:1652;;;;;;;;:::o;7437:250::-;7588:2;7573:18;;7621:1;7610:13;;7600:47;;7627:18;;:::i;:::-;7656:25;;;7437:250;:::o;8455:219::-;8604:2;8593:9;8586:21;8567:4;8624:44;8664:2;8653:9;8649:18;8641:6;8624:44;:::i;8861:461::-;8971:6;8979;9032:2;9020:9;9011:7;9007:23;9003:32;9000:52;;;9048:1;9045;9038:12;9000:52;9088:9;9075:23;-1:-1:-1;;;;;9113:6:201;9110:30;9107:50;;;9153:1;9150;9143:12;9107:50;9192:70;9254:7;9245:6;9234:9;9230:22;9192:70;:::i;:::-;9281:8;;9166:96;;-1:-1:-1;8861:461:201;-1:-1:-1;;;;8861:461:201:o;9327:1040::-;9517:4;9546:2;9586;9575:9;9571:18;9616:2;9605:9;9598:21;9639:6;9674;9668:13;9705:6;9697;9690:22;9731:2;9721:12;;9764:2;9753:9;9749:18;9742:25;;9826:2;9816:6;9813:1;9809:14;9798:9;9794:30;9790:39;9864:2;9856:6;9852:15;9885:1;9895:443;9909:6;9906:1;9903:13;9895:443;;;9974:22;;;-1:-1:-1;;9970:36:201;9958:49;;10030:13;;10085:9;;10078:17;10071:25;10056:41;;10136:11;;10130:18;10168:15;;;10161:27;;;10211:47;10242:15;;;10130:18;10211:47;:::i;:::-;10316:12;;;;10201:57;-1:-1:-1;;10281:15:201;;;;9931:1;9924:9;9895:443;;;-1:-1:-1;10355:6:201;;9327:1040;-1:-1:-1;;;;;;;;9327:1040:201:o;10372:384::-;10438:6;10446;10499:2;10487:9;10478:7;10474:23;10470:32;10467:52;;;10515:1;10512;10505:12;10467:52;10554:9;10541:23;10573:30;10597:5;10573:30;:::i;:::-;10622:5;-1:-1:-1;10679:2:201;10664:18;;10651:32;10692;10651;10692;:::i;:::-;10743:7;10733:17;;;10372:384;;;;;:::o;11242:245::-;11300:6;11353:2;11341:9;11332:7;11328:23;11324:32;11321:52;;;11369:1;11366;11359:12;11321:52;11408:9;11395:23;11427:30;11451:5;11427:30;:::i;12028:320::-;12096:6;12149:2;12137:9;12128:7;12124:23;12120:32;12117:52;;;12165:1;12162;12155:12;12117:52;12205:9;12192:23;-1:-1:-1;;;;;12230:6:201;12227:30;12224:50;;;12270:1;12267;12260:12;12224:50;12293:49;12334:7;12325:6;12314:9;12310:22;12293:49;:::i;12353:127::-;12414:10;12409:3;12405:20;12402:1;12395:31;12445:4;12442:1;12435:15;12469:4;12466:1;12459:15;12485:647;12564:6;12617:2;12605:9;12596:7;12592:23;12588:32;12585:52;;;12633:1;12630;12623:12;12585:52;12666:9;12660:16;-1:-1:-1;;;;;12691:6:201;12688:30;12685:50;;;12731:1;12728;12721:12;12685:50;12754:22;;12807:4;12799:13;;12795:27;-1:-1:-1;12785:55:201;;12836:1;12833;12826:12;12785:55;12865:2;12859:9;12890:48;12906:31;12934:2;12906:31;:::i;12890:48::-;12961:2;12954:5;12947:17;13001:7;12996:2;12991;12987;12983:11;12979:20;12976:33;12973:53;;;13022:1;13019;13012:12;12973:53;13035:67;13099:2;13094;13087:5;13083:14;13078:2;13074;13070:11;13035:67;:::i;13497:127::-;13558:10;13553:3;13549:20;13546:1;13539:31;13589:4;13586:1;13579:15;13613:4;13610:1;13603:15;13629:128;13696:9;;;13717:11;;;13714:37;;;13731:18;;:::i;14015:184::-;14085:6;14138:2;14126:9;14117:7;14113:23;14109:32;14106:52;;;14154:1;14151;14144:12;14106:52;-1:-1:-1;14177:16:201;;14015:184;-1:-1:-1;14015:184:201:o;14204:321::-;14294:4;14352:11;14339:25;14446:2;14442:7;14431:8;14415:14;14411:29;14407:43;14387:18;14383:68;14373:96;;14465:1;14462;14455:12;14373:96;14486:33;;;;;14204:321;-1:-1:-1;;14204:321:201:o;14530:521::-;14607:4;14613:6;14673:11;14660:25;14767:2;14763:7;14752:8;14736:14;14732:29;14728:43;14708:18;14704:68;14694:96;;14786:1;14783;14776:12;14694:96;14813:33;;14865:20;;;-1:-1:-1;;;;;;14897:30:201;;14894:50;;;14940:1;14937;14930:12;14894:50;14973:4;14961:17;;-1:-1:-1;15004:14:201;15000:27;;;14990:38;;14987:58;;;15041:1;15038;15031:12;15056:271;15239:6;15231;15226:3;15213:33;15195:3;15265:16;;15290:13;;;15265:16;15056:271;-1:-1:-1;15056:271:201:o;15892:174::-;15959:12;15991:10;;;16003;;;15987:27;;16026:11;;;16023:37;;;16040:18;;:::i;:::-;16023:37;15892:174;;;;:::o;16478:758::-;16547:5;16595:4;16583:9;16578:3;16574:19;16570:30;16567:50;;;16613:1;16610;16603:12;16567:50;16646:2;16640:9;16688:4;16680:6;16676:17;16759:6;16747:10;16744:22;-1:-1:-1;;;;;16711:10:201;16708:34;16705:62;16702:88;;;16770:18;;:::i;:::-;16810:10;16806:2;16799:22;;16839:6;16830:15;;16875:9;16869:16;16916:1;16907:7;16904:14;16894:42;;16932:1;16929;16922:12;16894:42;16945:23;;17013:2;16998:18;;16992:25;17026:32;16992:25;17026:32;:::i;:::-;17086:2;17074:15;;17067:32;17144:2;17129:18;;17123:25;17157:32;17123:25;17157:32;:::i;:::-;17217:2;17205:15;;;;17198:32;16478:758;;-1:-1:-1;;16478:758:201:o;17241:258::-;17341:6;17394:2;17382:9;17373:7;17369:23;17365:32;17362:52;;;17410:1;17407;17400:12;17362:52;17433:60;17485:7;17474:9;17433:60;:::i;18061:387::-;18170:6;18178;18231:3;18219:9;18210:7;18206:23;18202:33;18199:53;;;18248:1;18245;18238:12;18199:53;18280:9;18274:16;18299:31;18324:5;18299:31;:::i;:::-;18349:5;-1:-1:-1;18373:69:201;18434:7;18429:2;18414:18;;18373:69;:::i;:::-;18363:79;;18061:387;;;;;:::o;18453:175::-;18521:10;18564;;;18552;;;18548:27;;18587:12;;;18584:38;;;18602:18;;:::i;18633:626::-;18877:4;18906:10;18955:2;18947:6;18943:15;18932:9;18925:34;19007:2;18999:6;18995:15;18990:2;18979:9;18975:18;18968:43;19047:6;19042:2;19031:9;19027:18;19020:34;19090:6;19085:2;19074:9;19070:18;19063:34;19146:2;19138:6;19134:15;19128:3;19117:9;19113:19;19106:44;;19187:3;19181;19170:9;19166:19;19159:32;19208:45;19248:3;19237:9;19233:19;19225:6;19208:45;:::i;19532:297::-;19650:12;;19697:4;19686:16;;;19680:23;;19650:12;19715:16;;19712:111;;;-1:-1:-1;;19789:4:201;19785:17;;;;19782:1;19778:25;19774:38;19763:50;;19532:297;-1:-1:-1;19532:297:201:o;19834:475::-;20024:4;20053:10;20102:2;20094:6;20090:15;20079:9;20072:34;20154:2;20146:6;20142:15;20137:2;20126:9;20122:18;20115:43;;20194:6;20189:2;20178:9;20174:18;20167:34;20237:3;20232:2;20221:9;20217:18;20210:31;20258:45;20298:3;20287:9;20283:19;20275:6;20258:45;:::i;20314:277::-;20381:6;20434:2;20422:9;20413:7;20409:23;20405:32;20402:52;;;20450:1;20447;20440:12;20402:52;20482:9;20476:16;20535:5;20528:13;20521:21;20514:5;20511:32;20501:60;;20557:1;20554;20547:12;20596:135;20635:3;20656:17;;;20653:43;;20676:18;;:::i;:::-;-1:-1:-1;20723:1:201;20712:13;;20596:135::o;20736:410::-;20938:2;20920:21;;;20977:2;20957:18;;;20950:30;21016:34;21011:2;20996:18;;20989:62;-1:-1:-1;;;21082:2:201;21067:18;;21060:44;21136:3;21121:19;;20736:410::o;21151:407::-;21353:2;21335:21;;;21392:2;21372:18;;;21365:30;21431:34;21426:2;21411:18;;21404:62;-1:-1:-1;;;21497:2:201;21482:18;;21475:41;21548:3;21533:19;;21151:407::o;21815:125::-;21880:9;;;21901:10;;;21898:36;;;21914:18;;:::i;24053:287::-;24182:3;24220:6;24214:13;24236:66;24295:6;24290:3;24283:4;24275:6;24271:17;24236:66;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "2608": [
        {
          "start": 911,
          "length": 32
        },
        {
          "start": 3650,
          "length": 32
        },
        {
          "start": 4131,
          "length": 32
        },
        {
          "start": 4486,
          "length": 32
        },
        {
          "start": 4706,
          "length": 32
        },
        {
          "start": 4890,
          "length": 32
        },
        {
          "start": 5201,
          "length": 32
        },
        {
          "start": 5899,
          "length": 32
        },
        {
          "start": 6056,
          "length": 32
        },
        {
          "start": 7373,
          "length": 32
        }
      ],
      "2611": [
        {
          "start": 1206,
          "length": 32
        },
        {
          "start": 1749,
          "length": 32
        },
        {
          "start": 3078,
          "length": 32
        },
        {
          "start": 7574,
          "length": 32
        }
      ],
      "2822": [
        {
          "start": 974,
          "length": 32
        },
        {
          "start": 1676,
          "length": 32
        },
        {
          "start": 2063,
          "length": 32
        },
        {
          "start": 3595,
          "length": 32
        },
        {
          "start": 4413,
          "length": 32
        },
        {
          "start": 4835,
          "length": 32
        },
        {
          "start": 7503,
          "length": 32
        },
        {
          "start": 8380,
          "length": 32
        },
        {
          "start": 8610,
          "length": 32
        },
        {
          "start": 9339,
          "length": 32
        },
        {
          "start": 9508,
          "length": 32
        }
      ],
      "2954": [
        {
          "start": 754,
          "length": 32
        }
      ],
      "2957": [
        {
          "start": 789,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "acceptAttestation(uint32,uint256,bytes,bytes32,uint128[])": "39fe2736",
    "agentManager()": "7622f78d",
    "agentStatus(address)": "28f3fac9",
    "attestationsAmount()": "3cf7b120",
    "destStatus()": "40989152",
    "execute(bytes,bytes32[],bytes32[],uint256,uint64)": "32ff14d2",
    "getAgent(uint256)": "2de5aaf7",
    "getAttestation(uint256)": "29be4db2",
    "getAttestationNonce(bytes32)": "4f127567",
    "getGasData(uint32)": "d0dd0675",
    "inbox()": "fb0e722b",
    "initialize(bytes32)": "9498bd71",
    "isValidReceipt(bytes)": "e2f006f7",
    "localDomain()": "8d3638f4",
    "messageReceipt(bytes32)": "daa74a9e",
    "messageStatus(bytes32)": "3c6cf473",
    "multicall((bool,bytes)[])": "60fc8466",
    "nextAgentRoot()": "55252dd1",
    "openDispute(uint32,uint32)": "a2155c34",
    "owner()": "8da5cb5b",
    "passAgentRoot()": "a554d1e3",
    "renounceOwnership()": "715018a6",
    "resolveDispute(uint32,uint32)": "61169218",
    "transferOwnership(address)": "f2fde38b",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"agentManager_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbox_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyExecuted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallerNotAgentManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallerNotInbox\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DuplicatedSnapshotRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FlagOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GasLimitTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GasSuppliedTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectDestinationDomain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectMagicValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectSnapshotRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectVersionLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexedTooMuch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageOptimisticPeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotaryInDispute\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OccupiedMemory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PrecompileOutOfGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TreeHeightTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnallocatedMemory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnformattedAttestation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnformattedBaseMessage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnformattedCallData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnformattedCallDataPrefix\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnformattedMessage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnformattedReceipt\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ViewOverrun\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"agentRoot\",\"type\":\"bytes32\"}],\"name\":\"AgentRootAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"remoteDomain\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paddedTips\",\"type\":\"uint256\"}],\"name\":\"TipsRecorded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"notaryIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"sigIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"agentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"ChainGas[]\",\"name\":\"snapGas\",\"type\":\"uint128[]\"}],\"name\":\"acceptAttestation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"wasAccepted\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agentManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"agentStatus\",\"outputs\":[{\"components\":[{\"internalType\":\"enum AgentFlag\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"internalType\":\"struct AgentStatus\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"attestationsAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destStatus\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"snapRootTime\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"agentRootTime\",\"type\":\"uint40\"},{\"internalType\":\"uint32\",\"name\":\"notaryIndex\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"msgPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"originProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"snapProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum AgentFlag\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"internalType\":\"struct AgentStatus\",\"name\":\"status\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getAttestation\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"snapRoot\",\"type\":\"bytes32\"}],\"name\":\"getAttestationNonce\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"attNonce\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"}],\"name\":\"getGasData\",\"outputs\":[{\"internalType\":\"GasData\",\"name\":\"gasData\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"dataMaturity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inbox\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"agentRoot\",\"type\":\"bytes32\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"rcptPayload\",\"type\":\"bytes\"}],\"name\":\"isValidReceipt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localDomain\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"name\":\"messageReceipt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"rcptPayload\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"name\":\"messageStatus\",\"outputs\":[{\"internalType\":\"enum MessageStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct MultiCallable.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"multicall\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct MultiCallable.Result[]\",\"name\":\"callResults\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextAgentRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"guardIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"notaryIndex\",\"type\":\"uint32\"}],\"name\":\"openDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"passAgentRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"rootPassed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"rootPending\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"slashedIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"honestIndex\",\"type\":\"uint32\"}],\"name\":\"resolveDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"versionString\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptAttestation(uint32,uint256,bytes,bytes32,uint128[])\":{\"params\":{\"agentRoot\":\"Agent Merkle Root from the Attestation\",\"attPayload\":\"Raw payload with Attestation data\",\"notaryIndex\":\"Index of Attestation Notary in Agent Merkle Tree\",\"sigIndex\":\"Index of stored Notary signature\",\"snapGas\":\"Gas data for each chain in the Attestation's snapshot\"},\"returns\":{\"wasAccepted\":\"     Whether the Attestation was accepted\"}},\"agentStatus(address)\":{\"details\":\"Will return AgentFlag.Fraudulent for agents that have been proven to commit fraud, but their status is not updated to Slashed yet.\",\"params\":{\"agent\":\"Agent address\"},\"returns\":{\"_0\":\"Status for the given agent: (flag, domain, index).\"}},\"execute(bytes,bytes32[],bytes32[],uint256,uint64)\":{\"details\":\"Will revert if any of these is true:  - Message payload is not properly formatted.  - Snapshot root (reconstructed from message hash and proofs) is unknown  - Snapshot root is known, but was submitted by an inactive Notary  - Snapshot root is known, but optimistic period for a message hasn't passed  - Provided gas limit is lower than the one requested in the message  - Recipient doesn't implement a `handle` method (refer to IMessageRecipient.sol)  - Recipient reverted upon receiving a message Note: refer to libs/memory/State.sol for details about Origin State's sub-leafs.\",\"params\":{\"gasLimit\":\"Gas limit for message execution\",\"msgPayload\":\"Raw payload with a formatted message to execute\",\"originProof\":\"Proof of inclusion of message in the Origin Merkle Tree\",\"snapProof\":\"Proof of inclusion of Origin State's Left Leaf into Snapshot Merkle Tree\",\"stateIndex\":\"Index of Origin State in the Snapshot\"}},\"getAgent(uint256)\":{\"details\":\"Will return empty values if agent with given index doesn't exist.\",\"params\":{\"index\":\"Agent index in the Agent Merkle Tree\"},\"returns\":{\"agent\":\"   Agent address\",\"status\":\"  Status for the given agent: (flag, domain, index)\"}},\"getAttestation(uint256)\":{\"details\":\"Attestations are created on Synapse Chain whenever a Notary-signed snapshot is accepted by Summit. Will return an empty signature if this contract is deployed on Synapse Chain.\",\"params\":{\"index\":\"Attestation index\"},\"returns\":{\"attPayload\":\"      Raw payload with Attestation data\",\"attSignature\":\"    Notary signature for the reported attestation\"}},\"getAttestationNonce(bytes32)\":{\"details\":\"Will return 0 if the root is unknown.\"},\"getGasData(uint32)\":{\"details\":\"Will return empty values if there is no data for the domain, or if the notary who provided the data is in dispute.\",\"params\":{\"domain\":\"Domain for the chain\"},\"returns\":{\"dataMaturity\":\"    Gas data age in seconds\",\"gasData\":\"         Gas data for the chain\"}},\"isValidReceipt(bytes)\":{\"details\":\"Will revert if any of these is true:  - Receipt payload is not properly formatted.  - Receipt signer is not an active Notary.  - Receipt destination chain does not refer to this chain.\",\"params\":{\"rcptPayload\":\"Raw payload with Receipt data\"},\"returns\":{\"isValid\":\"         Whether the requested receipt is valid.\"}},\"messageReceipt(bytes32)\":{\"details\":\"Notaries could derive the tips, and the tips proof using the message payload, and submit the signed receipt with the proof of tips to `Summit` in order to initiate tips distribution.\",\"params\":{\"messageHash\":\"Hash of the message payload\"},\"returns\":{\"rcptPayload\":\"            Formatted payload with the message execution receipt\"}},\"messageStatus(bytes32)\":{\"params\":{\"messageHash\":\"Hash of the message payload\"},\"returns\":{\"status\":\"          Message execution status\"}},\"openDispute(uint32,uint32)\":{\"params\":{\"guardIndex\":\"Index of the Guard in the Agent Merkle Tree\",\"notaryIndex\":\"Index of the Notary in the Agent Merkle Tree\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"passAgentRoot()\":{\"details\":\"Will do nothing, if root optimistic period is not over. Note: both returned values can not be true.\",\"returns\":{\"rootPassed\":\"  Whether the agent merkle root was passed to LightManager\",\"rootPending\":\" Whether there is a pending agent merkle root left\"}},\"renounceOwnership()\":{\"details\":\"Should be impossible to renounce ownership; we override OpenZeppelin OwnableUpgradeable's implementation of renounceOwnership to make it a no-op\"},\"resolveDispute(uint32,uint32)\":{\"params\":{\"rivalIndex\":\"Index of the their Dispute Rival in the Agent Merkle Tree\",\"slashedIndex\":\"Index of the slashed agent in the Agent Merkle Tree\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Executed(uint32,bytes32,bool)\":{\"notice\":\"Emitted when message is executed.\"},\"TipsRecorded(bytes32,uint256)\":{\"notice\":\"Emitted when message tips are recorded.\"}},\"kind\":\"user\",\"methods\":{\"acceptAttestation(uint32,uint256,bytes,bytes32,uint128[])\":{\"notice\":\"Accepts an attestation, which local `AgentManager` verified to have been signed by an active Notary for this chain. > Attestation is created whenever a Notary-signed snapshot is saved in Summit on Synapse Chain. - Saved Attestation could be later used to prove the inclusion of message in the Origin Merkle Tree. - Messages coming from chains included in the Attestation's snapshot could be proven. - Proof only exists for messages that were sent prior to when the Attestation's snapshot was taken. > Will revert if any of these is true: > - Called by anyone other than local `AgentManager`. > - Attestation payload is not properly formatted. > - Attestation signer is in Dispute. > - Attestation's snapshot root has been previously submitted. Note: agentRoot and snapGas have been verified by the local `AgentManager`.\"},\"agentManager()\":{\"notice\":\"Returns the address of the local AgentManager contract, which is treated as the \\\"source of truth\\\" for agent statuses.\"},\"agentStatus(address)\":{\"notice\":\"Returns (flag, domain, index) for a given agent. See Structures.sol for details.\"},\"attestationsAmount()\":{\"notice\":\"Returns the total amount of Notaries attestations that have been accepted.\"},\"destStatus()\":{\"notice\":\"Returns status of Destination contract as far as snapshot/agent roots are concerned\"},\"execute(bytes,bytes32[],bytes32[],uint256,uint64)\":{\"notice\":\"Attempts to prove inclusion of message into one of Snapshot Merkle Trees, previously submitted to this contract in a form of a signed Attestation. Proven message is immediately executed by passing its contents to the specified recipient.\"},\"getAgent(uint256)\":{\"notice\":\"Returns agent address and their current status for a given agent index.\"},\"getAttestation(uint256)\":{\"notice\":\"Returns a Notary-signed attestation with a given index. > Index refers to the list of all attestations accepted by this contract.\"},\"getAttestationNonce(bytes32)\":{\"notice\":\"Returns attestation nonce for a given snapshot root.\"},\"getGasData(uint32)\":{\"notice\":\"Returns the gas data for a given chain from the latest accepted attestation with that chain.\"},\"inbox()\":{\"notice\":\"Returns the address of the local Inbox contract, which is treated as the \\\"source of truth\\\" for agent-signed statements.\"},\"initialize(bytes32)\":{\"notice\":\"Initializes Destination contract: - msg.sender is set as contract owner\"},\"isValidReceipt(bytes)\":{\"notice\":\"Checks the validity of the unsigned message receipt.\"},\"localDomain()\":{\"notice\":\"Domain of the local chain, set once upon contract creation\"},\"messageReceipt(bytes32)\":{\"notice\":\"Returns a formatted payload with the message receipt.\"},\"messageStatus(bytes32)\":{\"notice\":\"Returns message execution status: None/Failed/Success.\"},\"multicall((bool,bytes)[])\":{\"notice\":\"Aggregates a few calls to this contract into one multicall without modifying `msg.sender`.\"},\"nextAgentRoot()\":{\"notice\":\"Returns Agent Merkle Root to be passed to LightManager once its optimistic period is over.\"},\"openDispute(uint32,uint32)\":{\"notice\":\"Local AgentManager should call this function to indicate that a dispute between a Guard and a Notary has been opened.\"},\"passAgentRoot()\":{\"notice\":\"Attempts to pass a quarantined Agent Merkle Root to a local Light Manager.\"},\"resolveDispute(uint32,uint32)\":{\"notice\":\"Local AgentManager should call this function to indicate that a dispute has been resolved due to one of the agents being slashed. > `rivalIndex` will be ZERO, if the slashed agent was not in the Dispute.\"}},\"notice\":\"Harness for standalone Go tests. Do not use for tests requiring interactions between messaging contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/harnesses/DestinationHarness.t.sol\":\"DestinationHarness\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/Destination.sol\":{\"keccak256\":\"0x3c1bf4cec7cf984a7dab0a551f05b90a53f0749dfbb42b5ef813896f92cabe1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5d6401bef79ea149704f178149b3ac7afce2985b3e61035cfc2ed57675a800e\",\"dweb:/ipfs/QmPyXmQDW5aGUdcgiso39DHrX1jrRGvVM7rezzvUdAuXGZ\"]},\"contracts/base/AgentSecured.sol\":{\"keccak256\":\"0x93c65ab6126b6595c10f6c0ec8f647ec7d79e69383d31d2701cac4549e5f80ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf22c7957416a633d725b5286ee760ae67b219f36ca16ad5d031cdd0f382de5\",\"dweb:/ipfs/QmXQTNUfBoKicvS6thm6eBWEUe2k2bv1TaXHaPg51FM1h5\"]},\"contracts/base/MessagingBase.sol\":{\"keccak256\":\"0x01a7e9d9a5547e90d2efc4478485c7fc308a870d596a47d2b59383eaf2a02dd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a5ab808e51515e2a8d2efccb3f9d89054c2fc7e9cb5f44514b734a097d8c114\",\"dweb:/ipfs/QmUJ1E1MXy1H2Nb8xCGA7hpsTMNF3CXNoU11qGyd5M8498\"]},\"contracts/base/MultiCallable.sol\":{\"keccak256\":\"0x9645f1629cdf8db803c40725f6b0ee165df64bfc142db4613efd385a88f13699\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc99799fdd946c11c893b89dad922822c866d14bdecded86913948a146f71053\",\"dweb:/ipfs/QmZGRZuhU2w6pAStcaQ5NyzyeUn69nJCJd9a9NnjuBVLsn\"]},\"contracts/base/Version.sol\":{\"keccak256\":\"0x63131bbdb149a0c83685da246afc0faa71d1009a20154b1f39650cef4369fe84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21f001efca9d0550162dd1154f5b1d977c85a703e6df883103638ae0fe65af9b\",\"dweb:/ipfs/QmX3BfuJ3yKxWFXphq6RcKcGrja1v5xJQ1fFCwRQvGV8u8\"]},\"contracts/events/DestinationEvents.sol\":{\"keccak256\":\"0xf6f88d5a7da3fee51ecb0727a738e77f760c3f99d23e714286080eeb97e31132\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fe5c98c93ea072acd1f5412542236e5e4e6101382f452bbff9b8d8a213a56b4\",\"dweb:/ipfs/Qmc1PthuPTZyL1FWXtL9TvXNWiSLcWzim317AUucnCeqoe\"]},\"contracts/events/ExecutionHubEvents.sol\":{\"keccak256\":\"0x17d62c5bc175a1bd90a12d78c25a28ef196f79f4c22ecd16822ee3bf347263d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://664fe255227dbc3958404e4019559038281f8bebdb7c0ee3f36abeb82ffbfbf0\",\"dweb:/ipfs/QmbvQ4ms13D8xHSamrnhtJ1qZtRuEjwLT2kcNf34vA1h9L\"]},\"contracts/hubs/ExecutionHub.sol\":{\"keccak256\":\"0xada1930cd93a0725e8216e63c0938057ed915d4ae6695b4855b0ffdc639eed08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8453b4e9972404e71bab8ea98405fb169415067d96df2de2a4cb19227ad635\",\"dweb:/ipfs/QmXco9EWusCGeYCCipdoopaFZRxyL8QkPHiWVmoL3VCCUd\"]},\"contracts/interfaces/IAgentManager.sol\":{\"keccak256\":\"0xc6fded8bc39cdb24e2bc038ba9b0ae168ad42fb15ed9d5883b89940b4e970a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://898f25a9d1f375ab7e5dc7cd791263934b50d3b0a44dc29a4c914578a1b06339\",\"dweb:/ipfs/QmXi3CVhvWpGxVvmw4n7UvEoX2bD2ZD2rg4oZhYETYWJ3a\"]},\"contracts/interfaces/IAgentSecured.sol\":{\"keccak256\":\"0x9a7efecf8fe37cc8245e3b0e3f5d6d6ee056cdd97ccb5631ff6347bdfc9fc889\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7877d223162a76d3fe75490069719b3a4f14cd66fc42bfa915f2813390b7d2aa\",\"dweb:/ipfs/QmZhE1rnffA9bbtkNAwVk6iitMPk14gHbK56mdeHQEPhxj\"]},\"contracts/interfaces/IExecutionHub.sol\":{\"keccak256\":\"0x98f6ff39ecb926b480474d122350d753ca18358ca4d18d36d1850ec7af7ae6f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36485341a0ed70b0f151b258124f6a0db003f5d37af22b8bea65b8d5249a252d\",\"dweb:/ipfs/QmfBEDFSGwnSjTyv2AZuuUDjrqWRvacyCx46dXegioWMDL\"]},\"contracts/interfaces/IMessageRecipient.sol\":{\"keccak256\":\"0x342bc1cf70e5a37e6a14d871297e845120608412d1be5dcd2657fc0dae5ebbde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8b93ab4b2d4e85b0dcb62cf0beeaa0289aebc7b3dbc3fb9cad9e82639cbc5e\",\"dweb:/ipfs/QmRHr2Dqr6tcFWZ7osKisaGg6QZtvwGrncchYjJ1UYWWVx\"]},\"contracts/interfaces/IStatementInbox.sol\":{\"keccak256\":\"0x99c93edd056d33d33ce57ae7d6d17328b88e94fe971c4e9d23d2fceaa9f1e41c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76a2cf74f7a24ab3c669efab5372dff18a29463504b09a0d3dde4b4184a2eff3\",\"dweb:/ipfs/Qmb1sy2izNESmgS8FVkFHMXpWc2UM3unQeKMghFYCHNfn4\"]},\"contracts/interfaces/InterfaceDestination.sol\":{\"keccak256\":\"0x708371d239580f8e6dc44e790fd32f47e074cbfb8ae9e75609adbc0de303678c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5061c85c3779304f5c3919d2b1bc6620d1029a4ead7186c3f3f5b409a9bd855\",\"dweb:/ipfs/QmW4Hrz2NGMCRV2Rqv22G4xArsR4jUZtNr1garSR8AZud6\"]},\"contracts/interfaces/InterfaceInbox.sol\":{\"keccak256\":\"0x86dbe24a32f5d09a9620f37f9af69710ba54703edd66ace3ba90e8335ef77246\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb9d7a21b3108cc86013aef80ba9a7e4a91aa8af6dd71aca5d47d26e85d213b0\",\"dweb:/ipfs/QmS2om4PmNgHJkVP92hwoHvBngH9HwmwZJnVMHhqeVj5ZY\"]},\"contracts/interfaces/InterfaceLightManager.sol\":{\"keccak256\":\"0xfd56fe81fd6776faae469d615e66d71387512fac1997157a1dd3f80ada8e7dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1ef5b8bbdc189ce2148cc74f61f6eb9ca8bdcbf53ac84948ec72953ed4433d2\",\"dweb:/ipfs/Qmbe1Qm94avKV2mw1Yj33SZ698ykCA8vEpZhqjL9o4oqev\"]},\"contracts/libs/Constants.sol\":{\"keccak256\":\"0x9ead9581411ac7f702ccba26e3f478610f8c9c785ec3f96f3d9324d162177c2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cba4a834737651bee39e2abca02d59e676cd149439d21182ab6e4320d5e61279\",\"dweb:/ipfs/QmS2K5LKspFZPKuedWoaqywUw6v1nH9xdHa35dN8J9jDEi\"]},\"contracts/libs/Errors.sol\":{\"keccak256\":\"0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b\",\"dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB\"]},\"contracts/libs/Structures.sol\":{\"keccak256\":\"0x3eaa63f5d9aac514328111e8fdd037dc6fdb18af7541a8287deeacd2e44f7137\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://633619910c74a0685ef2993a2e7cc44088929121a15c8a9fc26c9bbadffbda71\",\"dweb:/ipfs/QmZceJv6UntiMWW4JZHbmytLsqXshbuav8yoiritksvqqy\"]},\"contracts/libs/TypeCasts.sol\":{\"keccak256\":\"0x328bf53c2642c51261d7320647d7603bcf17e67eb8828cb7991964c384ec7bb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb40201b32d1bc37873d57bd1e18984e44506b74272b204531d0aaa36ed19c10\",\"dweb:/ipfs/QmPySs43CVm1Vb9UzytQ4R9t4QkbqPCv8TNpZnD5MRwCXm\"]},\"contracts/libs/memory/Attestation.sol\":{\"keccak256\":\"0x83b58e2d80cc7139b8996c51c5e9015f34e833e73b92036b53a1af6641e2b699\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a097c82542ba977de931c6331a9b01a39ef2e46b8916414a6f4f550bc59c113\",\"dweb:/ipfs/QmYRHMoPXzrnx86rZnHAEiFxqM5poEs6wyZinLLTEfwZH3\"]},\"contracts/libs/memory/BaseMessage.sol\":{\"keccak256\":\"0x6f625ee64c2abb64fe5e7645eb4ac449e4a743cf5c434de70b24b47522a2c579\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a29cb57889c10b4cc601abe0f65529f1829354a276437ecb7ce387a654fb671\",\"dweb:/ipfs/QmRYA9HJAdKaVhrvDdaCwdR5DvCYy7yPQGVJ4a9kUCAxaA\"]},\"contracts/libs/memory/ByteString.sol\":{\"keccak256\":\"0x99a2d8a7d93c1ce5063da6631347189cffb95d977cc1683c8bc2d9529b501d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c627819681a668117cbf3633700ed36b63942a3ea8d96db65211febe048bb8bb\",\"dweb:/ipfs/QmSdhu6BDD6Tk17zD2JcmYwYVEnnoeuh9UFWfUkVW5KKvL\"]},\"contracts/libs/memory/MemView.sol\":{\"keccak256\":\"0x95dd48e50e353b59fadce29f22f02629c91bd3b5e07c0efa588bd7c808536587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4347457c5338192aca52c237c7f588d15a4f541482cd44b0632c59f36f9558eb\",\"dweb:/ipfs/QmXn1sKY7nVNrgKtbtE9PaMHFKBadyg73fs2jhw4Navyb1\"]},\"contracts/libs/memory/Message.sol\":{\"keccak256\":\"0x206a96eb35a7015116bfc585b30d34bd5cf151761ded37b8a2a36dd74a9ba99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12ebb3152e1c1dc2aed3c88cb17f54d9abc2a157215c2628fa3c4ac161686cf\",\"dweb:/ipfs/QmbU6h7KEanE7Pt5UXN2WV5SQwWjziCwqBL5RLKAUJHKci\"]},\"contracts/libs/memory/Receipt.sol\":{\"keccak256\":\"0x009e8cfffa4806d1a0a326a31350ead092c9cd22105d4890c86bf93d20c7824d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa9905170f86e4e2d9b62e9fabaab36381398da14f001e0b9bb98c31c174a48e\",\"dweb:/ipfs/QmYpHjdY2yf3w6kFi9urUTyrMyVZBBsCGGEkE1kyTnXqVn\"]},\"contracts/libs/memory/Snapshot.sol\":{\"keccak256\":\"0x5df6aa04b1cbb65e410c7f1a02787e0e11dbcdb5cde18ae50d435029c27c1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2e19b5c6778338b7e8e9c8ef82738797d8955d37884c7db70d7cdea43329910\",\"dweb:/ipfs/Qma1cRGHqRM3tkh5JyzR2Td6iKKST2HapTygBwVNTRJJZD\"]},\"contracts/libs/memory/State.sol\":{\"keccak256\":\"0x3997f3a820110b3bce6f87ea8df3e1f8b006d1ac45efff1dc2f8873f8bbfa5af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf973a3633546dfff75b550673b4a680b7fab48d7fc8923157983a4fde3d5da4\",\"dweb:/ipfs/QmZ8NNwcYaqVxtar8g5MH5mqDXXuMTQLe6vi7zYGswFA3N\"]},\"contracts/libs/merkle/MerkleMath.sol\":{\"keccak256\":\"0xbd13c07bdc40b80f56c7d75e3f31b6c4a85a78d444b760604a5b71083d14925c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3162b491e4e216c0f2d143ce3baab4cf9e2a8b1b42466256a5d5b1f8b0385507\",\"dweb:/ipfs/QmYnDSZyxiGHfmB8Fx46zh1LZe3aCdVaKzpaQuD9piTc7u\"]},\"contracts/libs/stack/GasData.sol\":{\"keccak256\":\"0x2007fd4b97cf33bfe4aa7dc6ac887af87b4010ec9834636b4dd5685582ac26cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b54ca8b659d63ef7138c5b3b243190ca19b1e893b7b49dee1f8790d55b9e691\",\"dweb:/ipfs/Qmc2FGb16uosZ5kvyEK2onpWVPvWeE9X72xNWeJw8CbweD\"]},\"contracts/libs/stack/Header.sol\":{\"keccak256\":\"0x6a2030f6d08075f91336466c3fe4bd63f2760dcd42554856357af8024fd55344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1a1c8f6240f897c62cdc09fab57fc9eeea8072efbc8d101bd7e40b8eea272c9\",\"dweb:/ipfs/QmYrFA3fupKhW71k6yLkQsojPJt4Fcv4uH46hNvYYHcDsy\"]},\"contracts/libs/stack/Number.sol\":{\"keccak256\":\"0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd\",\"dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5\"]},\"contracts/libs/stack/Request.sol\":{\"keccak256\":\"0xecd4427fe7285d1d5663ea019a66ebb04d3f495c0be28a14043c99a0d9a90689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55e800c307070d6497031b90157d917dcabd5f93d342081be8d20ad3c80df429\",\"dweb:/ipfs/QmU8oza8MeWDbG9xfPaPVoj4Z1rKtvQ7pA3Z7CuYyGSuY6\"]},\"contracts/libs/stack/Tips.sol\":{\"keccak256\":\"0x2186d854149349ff689a8356c7f387d134f59fa4a97aed7b43c9e25f46661b0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff15d61f2c9b26e6ef33457aed4a2d9ed61726e2a746d3e0a7e68eb6cd3d63a1\",\"dweb:/ipfs/QmUeiiTAjPmuFhLfzDMqZ6DyvQmEYhsKo9XArHSrMvjYKL\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"test/harnesses/DestinationHarness.t.sol\":{\"keccak256\":\"0xbe66795625c4b9a6dba85dc12c9b5a4adc333814f3b32f96974e824a8e87de57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://031ca06da0fc443e481a310f638c5e13a35a526bf97883f7ed400aa84753bb25\",\"dweb:/ipfs/QmXFw15FXfDejhC5TNNsYpxjXerTxQgRTBSXiKqbnuNW1a\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "agentManager_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbox_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyExecuted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerNotAgentManager"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerNotInbox"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DuplicatedSnapshotRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FlagOutOfRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "GasLimitTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "GasSuppliedTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectDestinationDomain"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectMagicValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectSnapshotRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectVersionLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IndexOutOfRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IndexedTooMuch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MessageOptimisticPeriod"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotaryInDispute"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OccupiedMemory"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PrecompileOutOfGas"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TreeHeightTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnallocatedMemory"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnformattedAttestation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnformattedBaseMessage"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnformattedCallData"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnformattedCallDataPrefix"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnformattedMessage"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnformattedReceipt"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ViewOverrun"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "agentRoot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgentRootAccepted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "remoteDomain",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "messageHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Executed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageHash",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "paddedTips",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TipsRecorded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "notaryIndex",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "sigIndex",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "agentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "ChainGas[]",
              "name": "snapGas",
              "type": "uint128[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptAttestation",
          "outputs": [
            {
              "internalType": "bool",
              "name": "wasAccepted",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "agentManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "agentStatus",
          "outputs": [
            {
              "internalType": "struct AgentStatus",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum AgentFlag",
                  "name": "flag",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "domain",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "index",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "attestationsAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "destStatus",
          "outputs": [
            {
              "internalType": "uint40",
              "name": "snapRootTime",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "agentRootTime",
              "type": "uint40"
            },
            {
              "internalType": "uint32",
              "name": "notaryIndex",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "msgPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes32[]",
              "name": "originProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "snapProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "gasLimit",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgent",
          "outputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "struct AgentStatus",
              "name": "status",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum AgentFlag",
                  "name": "flag",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "domain",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "index",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAttestation",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "snapRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAttestationNonce",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "attNonce",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getGasData",
          "outputs": [
            {
              "internalType": "GasData",
              "name": "gasData",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "dataMaturity",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "inbox",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "agentRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "rcptPayload",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidReceipt",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValid",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "localDomain",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "messageReceipt",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "rcptPayload",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "messageStatus",
          "outputs": [
            {
              "internalType": "enum MessageStatus",
              "name": "status",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MultiCallable.Call[]",
              "name": "calls",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bool",
                  "name": "allowFailure",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "struct MultiCallable.Result[]",
              "name": "callResults",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "returnData",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextAgentRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "guardIndex",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "notaryIndex",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "openDispute"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "passAgentRoot",
          "outputs": [
            {
              "internalType": "bool",
              "name": "rootPassed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "rootPending",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "slashedIndex",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "honestIndex",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resolveDispute"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "versionString",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptAttestation(uint32,uint256,bytes,bytes32,uint128[])": {
            "params": {
              "agentRoot": "Agent Merkle Root from the Attestation",
              "attPayload": "Raw payload with Attestation data",
              "notaryIndex": "Index of Attestation Notary in Agent Merkle Tree",
              "sigIndex": "Index of stored Notary signature",
              "snapGas": "Gas data for each chain in the Attestation's snapshot"
            },
            "returns": {
              "wasAccepted": "     Whether the Attestation was accepted"
            }
          },
          "agentStatus(address)": {
            "details": "Will return AgentFlag.Fraudulent for agents that have been proven to commit fraud, but their status is not updated to Slashed yet.",
            "params": {
              "agent": "Agent address"
            },
            "returns": {
              "_0": "Status for the given agent: (flag, domain, index)."
            }
          },
          "execute(bytes,bytes32[],bytes32[],uint256,uint64)": {
            "details": "Will revert if any of these is true:  - Message payload is not properly formatted.  - Snapshot root (reconstructed from message hash and proofs) is unknown  - Snapshot root is known, but was submitted by an inactive Notary  - Snapshot root is known, but optimistic period for a message hasn't passed  - Provided gas limit is lower than the one requested in the message  - Recipient doesn't implement a `handle` method (refer to IMessageRecipient.sol)  - Recipient reverted upon receiving a message Note: refer to libs/memory/State.sol for details about Origin State's sub-leafs.",
            "params": {
              "gasLimit": "Gas limit for message execution",
              "msgPayload": "Raw payload with a formatted message to execute",
              "originProof": "Proof of inclusion of message in the Origin Merkle Tree",
              "snapProof": "Proof of inclusion of Origin State's Left Leaf into Snapshot Merkle Tree",
              "stateIndex": "Index of Origin State in the Snapshot"
            }
          },
          "getAgent(uint256)": {
            "details": "Will return empty values if agent with given index doesn't exist.",
            "params": {
              "index": "Agent index in the Agent Merkle Tree"
            },
            "returns": {
              "agent": "   Agent address",
              "status": "  Status for the given agent: (flag, domain, index)"
            }
          },
          "getAttestation(uint256)": {
            "details": "Attestations are created on Synapse Chain whenever a Notary-signed snapshot is accepted by Summit. Will return an empty signature if this contract is deployed on Synapse Chain.",
            "params": {
              "index": "Attestation index"
            },
            "returns": {
              "attPayload": "      Raw payload with Attestation data",
              "attSignature": "    Notary signature for the reported attestation"
            }
          },
          "getAttestationNonce(bytes32)": {
            "details": "Will return 0 if the root is unknown."
          },
          "getGasData(uint32)": {
            "details": "Will return empty values if there is no data for the domain, or if the notary who provided the data is in dispute.",
            "params": {
              "domain": "Domain for the chain"
            },
            "returns": {
              "dataMaturity": "    Gas data age in seconds",
              "gasData": "         Gas data for the chain"
            }
          },
          "isValidReceipt(bytes)": {
            "details": "Will revert if any of these is true:  - Receipt payload is not properly formatted.  - Receipt signer is not an active Notary.  - Receipt destination chain does not refer to this chain.",
            "params": {
              "rcptPayload": "Raw payload with Receipt data"
            },
            "returns": {
              "isValid": "         Whether the requested receipt is valid."
            }
          },
          "messageReceipt(bytes32)": {
            "details": "Notaries could derive the tips, and the tips proof using the message payload, and submit the signed receipt with the proof of tips to `Summit` in order to initiate tips distribution.",
            "params": {
              "messageHash": "Hash of the message payload"
            },
            "returns": {
              "rcptPayload": "            Formatted payload with the message execution receipt"
            }
          },
          "messageStatus(bytes32)": {
            "params": {
              "messageHash": "Hash of the message payload"
            },
            "returns": {
              "status": "          Message execution status"
            }
          },
          "openDispute(uint32,uint32)": {
            "params": {
              "guardIndex": "Index of the Guard in the Agent Merkle Tree",
              "notaryIndex": "Index of the Notary in the Agent Merkle Tree"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "passAgentRoot()": {
            "details": "Will do nothing, if root optimistic period is not over. Note: both returned values can not be true.",
            "returns": {
              "rootPassed": "  Whether the agent merkle root was passed to LightManager",
              "rootPending": " Whether there is a pending agent merkle root left"
            }
          },
          "renounceOwnership()": {
            "details": "Should be impossible to renounce ownership; we override OpenZeppelin OwnableUpgradeable's implementation of renounceOwnership to make it a no-op"
          },
          "resolveDispute(uint32,uint32)": {
            "params": {
              "rivalIndex": "Index of the their Dispute Rival in the Agent Merkle Tree",
              "slashedIndex": "Index of the slashed agent in the Agent Merkle Tree"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptAttestation(uint32,uint256,bytes,bytes32,uint128[])": {
            "notice": "Accepts an attestation, which local `AgentManager` verified to have been signed by an active Notary for this chain. > Attestation is created whenever a Notary-signed snapshot is saved in Summit on Synapse Chain. - Saved Attestation could be later used to prove the inclusion of message in the Origin Merkle Tree. - Messages coming from chains included in the Attestation's snapshot could be proven. - Proof only exists for messages that were sent prior to when the Attestation's snapshot was taken. > Will revert if any of these is true: > - Called by anyone other than local `AgentManager`. > - Attestation payload is not properly formatted. > - Attestation signer is in Dispute. > - Attestation's snapshot root has been previously submitted. Note: agentRoot and snapGas have been verified by the local `AgentManager`."
          },
          "agentManager()": {
            "notice": "Returns the address of the local AgentManager contract, which is treated as the \"source of truth\" for agent statuses."
          },
          "agentStatus(address)": {
            "notice": "Returns (flag, domain, index) for a given agent. See Structures.sol for details."
          },
          "attestationsAmount()": {
            "notice": "Returns the total amount of Notaries attestations that have been accepted."
          },
          "destStatus()": {
            "notice": "Returns status of Destination contract as far as snapshot/agent roots are concerned"
          },
          "execute(bytes,bytes32[],bytes32[],uint256,uint64)": {
            "notice": "Attempts to prove inclusion of message into one of Snapshot Merkle Trees, previously submitted to this contract in a form of a signed Attestation. Proven message is immediately executed by passing its contents to the specified recipient."
          },
          "getAgent(uint256)": {
            "notice": "Returns agent address and their current status for a given agent index."
          },
          "getAttestation(uint256)": {
            "notice": "Returns a Notary-signed attestation with a given index. > Index refers to the list of all attestations accepted by this contract."
          },
          "getAttestationNonce(bytes32)": {
            "notice": "Returns attestation nonce for a given snapshot root."
          },
          "getGasData(uint32)": {
            "notice": "Returns the gas data for a given chain from the latest accepted attestation with that chain."
          },
          "inbox()": {
            "notice": "Returns the address of the local Inbox contract, which is treated as the \"source of truth\" for agent-signed statements."
          },
          "initialize(bytes32)": {
            "notice": "Initializes Destination contract: - msg.sender is set as contract owner"
          },
          "isValidReceipt(bytes)": {
            "notice": "Checks the validity of the unsigned message receipt."
          },
          "localDomain()": {
            "notice": "Domain of the local chain, set once upon contract creation"
          },
          "messageReceipt(bytes32)": {
            "notice": "Returns a formatted payload with the message receipt."
          },
          "messageStatus(bytes32)": {
            "notice": "Returns message execution status: None/Failed/Success."
          },
          "multicall((bool,bytes)[])": {
            "notice": "Aggregates a few calls to this contract into one multicall without modifying `msg.sender`."
          },
          "nextAgentRoot()": {
            "notice": "Returns Agent Merkle Root to be passed to LightManager once its optimistic period is over."
          },
          "openDispute(uint32,uint32)": {
            "notice": "Local AgentManager should call this function to indicate that a dispute between a Guard and a Notary has been opened."
          },
          "passAgentRoot()": {
            "notice": "Attempts to pass a quarantined Agent Merkle Root to a local Light Manager."
          },
          "resolveDispute(uint32,uint32)": {
            "notice": "Local AgentManager should call this function to indicate that a dispute has been resolved due to one of the agents being slashed. > `rivalIndex` will be ZERO, if the slashed agent was not in the Dispute."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/harnesses/DestinationHarness.t.sol": "DestinationHarness"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Destination.sol": {
        "keccak256": "0x3c1bf4cec7cf984a7dab0a551f05b90a53f0749dfbb42b5ef813896f92cabe1d",
        "urls": [
          "bzz-raw://c5d6401bef79ea149704f178149b3ac7afce2985b3e61035cfc2ed57675a800e",
          "dweb:/ipfs/QmPyXmQDW5aGUdcgiso39DHrX1jrRGvVM7rezzvUdAuXGZ"
        ],
        "license": "MIT"
      },
      "contracts/base/AgentSecured.sol": {
        "keccak256": "0x93c65ab6126b6595c10f6c0ec8f647ec7d79e69383d31d2701cac4549e5f80ac",
        "urls": [
          "bzz-raw://6cf22c7957416a633d725b5286ee760ae67b219f36ca16ad5d031cdd0f382de5",
          "dweb:/ipfs/QmXQTNUfBoKicvS6thm6eBWEUe2k2bv1TaXHaPg51FM1h5"
        ],
        "license": "MIT"
      },
      "contracts/base/MessagingBase.sol": {
        "keccak256": "0x01a7e9d9a5547e90d2efc4478485c7fc308a870d596a47d2b59383eaf2a02dd1",
        "urls": [
          "bzz-raw://2a5ab808e51515e2a8d2efccb3f9d89054c2fc7e9cb5f44514b734a097d8c114",
          "dweb:/ipfs/QmUJ1E1MXy1H2Nb8xCGA7hpsTMNF3CXNoU11qGyd5M8498"
        ],
        "license": "MIT"
      },
      "contracts/base/MultiCallable.sol": {
        "keccak256": "0x9645f1629cdf8db803c40725f6b0ee165df64bfc142db4613efd385a88f13699",
        "urls": [
          "bzz-raw://cc99799fdd946c11c893b89dad922822c866d14bdecded86913948a146f71053",
          "dweb:/ipfs/QmZGRZuhU2w6pAStcaQ5NyzyeUn69nJCJd9a9NnjuBVLsn"
        ],
        "license": "MIT"
      },
      "contracts/base/Version.sol": {
        "keccak256": "0x63131bbdb149a0c83685da246afc0faa71d1009a20154b1f39650cef4369fe84",
        "urls": [
          "bzz-raw://21f001efca9d0550162dd1154f5b1d977c85a703e6df883103638ae0fe65af9b",
          "dweb:/ipfs/QmX3BfuJ3yKxWFXphq6RcKcGrja1v5xJQ1fFCwRQvGV8u8"
        ],
        "license": "MIT"
      },
      "contracts/events/DestinationEvents.sol": {
        "keccak256": "0xf6f88d5a7da3fee51ecb0727a738e77f760c3f99d23e714286080eeb97e31132",
        "urls": [
          "bzz-raw://3fe5c98c93ea072acd1f5412542236e5e4e6101382f452bbff9b8d8a213a56b4",
          "dweb:/ipfs/Qmc1PthuPTZyL1FWXtL9TvXNWiSLcWzim317AUucnCeqoe"
        ],
        "license": "MIT"
      },
      "contracts/events/ExecutionHubEvents.sol": {
        "keccak256": "0x17d62c5bc175a1bd90a12d78c25a28ef196f79f4c22ecd16822ee3bf347263d9",
        "urls": [
          "bzz-raw://664fe255227dbc3958404e4019559038281f8bebdb7c0ee3f36abeb82ffbfbf0",
          "dweb:/ipfs/QmbvQ4ms13D8xHSamrnhtJ1qZtRuEjwLT2kcNf34vA1h9L"
        ],
        "license": "MIT"
      },
      "contracts/hubs/ExecutionHub.sol": {
        "keccak256": "0xada1930cd93a0725e8216e63c0938057ed915d4ae6695b4855b0ffdc639eed08",
        "urls": [
          "bzz-raw://bb8453b4e9972404e71bab8ea98405fb169415067d96df2de2a4cb19227ad635",
          "dweb:/ipfs/QmXco9EWusCGeYCCipdoopaFZRxyL8QkPHiWVmoL3VCCUd"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IAgentManager.sol": {
        "keccak256": "0xc6fded8bc39cdb24e2bc038ba9b0ae168ad42fb15ed9d5883b89940b4e970a10",
        "urls": [
          "bzz-raw://898f25a9d1f375ab7e5dc7cd791263934b50d3b0a44dc29a4c914578a1b06339",
          "dweb:/ipfs/QmXi3CVhvWpGxVvmw4n7UvEoX2bD2ZD2rg4oZhYETYWJ3a"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IAgentSecured.sol": {
        "keccak256": "0x9a7efecf8fe37cc8245e3b0e3f5d6d6ee056cdd97ccb5631ff6347bdfc9fc889",
        "urls": [
          "bzz-raw://7877d223162a76d3fe75490069719b3a4f14cd66fc42bfa915f2813390b7d2aa",
          "dweb:/ipfs/QmZhE1rnffA9bbtkNAwVk6iitMPk14gHbK56mdeHQEPhxj"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IExecutionHub.sol": {
        "keccak256": "0x98f6ff39ecb926b480474d122350d753ca18358ca4d18d36d1850ec7af7ae6f0",
        "urls": [
          "bzz-raw://36485341a0ed70b0f151b258124f6a0db003f5d37af22b8bea65b8d5249a252d",
          "dweb:/ipfs/QmfBEDFSGwnSjTyv2AZuuUDjrqWRvacyCx46dXegioWMDL"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IMessageRecipient.sol": {
        "keccak256": "0x342bc1cf70e5a37e6a14d871297e845120608412d1be5dcd2657fc0dae5ebbde",
        "urls": [
          "bzz-raw://6d8b93ab4b2d4e85b0dcb62cf0beeaa0289aebc7b3dbc3fb9cad9e82639cbc5e",
          "dweb:/ipfs/QmRHr2Dqr6tcFWZ7osKisaGg6QZtvwGrncchYjJ1UYWWVx"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStatementInbox.sol": {
        "keccak256": "0x99c93edd056d33d33ce57ae7d6d17328b88e94fe971c4e9d23d2fceaa9f1e41c",
        "urls": [
          "bzz-raw://76a2cf74f7a24ab3c669efab5372dff18a29463504b09a0d3dde4b4184a2eff3",
          "dweb:/ipfs/Qmb1sy2izNESmgS8FVkFHMXpWc2UM3unQeKMghFYCHNfn4"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceDestination.sol": {
        "keccak256": "0x708371d239580f8e6dc44e790fd32f47e074cbfb8ae9e75609adbc0de303678c",
        "urls": [
          "bzz-raw://e5061c85c3779304f5c3919d2b1bc6620d1029a4ead7186c3f3f5b409a9bd855",
          "dweb:/ipfs/QmW4Hrz2NGMCRV2Rqv22G4xArsR4jUZtNr1garSR8AZud6"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceInbox.sol": {
        "keccak256": "0x86dbe24a32f5d09a9620f37f9af69710ba54703edd66ace3ba90e8335ef77246",
        "urls": [
          "bzz-raw://fb9d7a21b3108cc86013aef80ba9a7e4a91aa8af6dd71aca5d47d26e85d213b0",
          "dweb:/ipfs/QmS2om4PmNgHJkVP92hwoHvBngH9HwmwZJnVMHhqeVj5ZY"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceLightManager.sol": {
        "keccak256": "0xfd56fe81fd6776faae469d615e66d71387512fac1997157a1dd3f80ada8e7dac",
        "urls": [
          "bzz-raw://e1ef5b8bbdc189ce2148cc74f61f6eb9ca8bdcbf53ac84948ec72953ed4433d2",
          "dweb:/ipfs/Qmbe1Qm94avKV2mw1Yj33SZ698ykCA8vEpZhqjL9o4oqev"
        ],
        "license": "MIT"
      },
      "contracts/libs/Constants.sol": {
        "keccak256": "0x9ead9581411ac7f702ccba26e3f478610f8c9c785ec3f96f3d9324d162177c2c",
        "urls": [
          "bzz-raw://cba4a834737651bee39e2abca02d59e676cd149439d21182ab6e4320d5e61279",
          "dweb:/ipfs/QmS2K5LKspFZPKuedWoaqywUw6v1nH9xdHa35dN8J9jDEi"
        ],
        "license": "MIT"
      },
      "contracts/libs/Errors.sol": {
        "keccak256": "0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011",
        "urls": [
          "bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b",
          "dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB"
        ],
        "license": "MIT"
      },
      "contracts/libs/Structures.sol": {
        "keccak256": "0x3eaa63f5d9aac514328111e8fdd037dc6fdb18af7541a8287deeacd2e44f7137",
        "urls": [
          "bzz-raw://633619910c74a0685ef2993a2e7cc44088929121a15c8a9fc26c9bbadffbda71",
          "dweb:/ipfs/QmZceJv6UntiMWW4JZHbmytLsqXshbuav8yoiritksvqqy"
        ],
        "license": "MIT"
      },
      "contracts/libs/TypeCasts.sol": {
        "keccak256": "0x328bf53c2642c51261d7320647d7603bcf17e67eb8828cb7991964c384ec7bb9",
        "urls": [
          "bzz-raw://bb40201b32d1bc37873d57bd1e18984e44506b74272b204531d0aaa36ed19c10",
          "dweb:/ipfs/QmPySs43CVm1Vb9UzytQ4R9t4QkbqPCv8TNpZnD5MRwCXm"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Attestation.sol": {
        "keccak256": "0x83b58e2d80cc7139b8996c51c5e9015f34e833e73b92036b53a1af6641e2b699",
        "urls": [
          "bzz-raw://1a097c82542ba977de931c6331a9b01a39ef2e46b8916414a6f4f550bc59c113",
          "dweb:/ipfs/QmYRHMoPXzrnx86rZnHAEiFxqM5poEs6wyZinLLTEfwZH3"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/BaseMessage.sol": {
        "keccak256": "0x6f625ee64c2abb64fe5e7645eb4ac449e4a743cf5c434de70b24b47522a2c579",
        "urls": [
          "bzz-raw://0a29cb57889c10b4cc601abe0f65529f1829354a276437ecb7ce387a654fb671",
          "dweb:/ipfs/QmRYA9HJAdKaVhrvDdaCwdR5DvCYy7yPQGVJ4a9kUCAxaA"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/ByteString.sol": {
        "keccak256": "0x99a2d8a7d93c1ce5063da6631347189cffb95d977cc1683c8bc2d9529b501d66",
        "urls": [
          "bzz-raw://c627819681a668117cbf3633700ed36b63942a3ea8d96db65211febe048bb8bb",
          "dweb:/ipfs/QmSdhu6BDD6Tk17zD2JcmYwYVEnnoeuh9UFWfUkVW5KKvL"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/MemView.sol": {
        "keccak256": "0x95dd48e50e353b59fadce29f22f02629c91bd3b5e07c0efa588bd7c808536587",
        "urls": [
          "bzz-raw://4347457c5338192aca52c237c7f588d15a4f541482cd44b0632c59f36f9558eb",
          "dweb:/ipfs/QmXn1sKY7nVNrgKtbtE9PaMHFKBadyg73fs2jhw4Navyb1"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Message.sol": {
        "keccak256": "0x206a96eb35a7015116bfc585b30d34bd5cf151761ded37b8a2a36dd74a9ba99c",
        "urls": [
          "bzz-raw://e12ebb3152e1c1dc2aed3c88cb17f54d9abc2a157215c2628fa3c4ac161686cf",
          "dweb:/ipfs/QmbU6h7KEanE7Pt5UXN2WV5SQwWjziCwqBL5RLKAUJHKci"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Receipt.sol": {
        "keccak256": "0x009e8cfffa4806d1a0a326a31350ead092c9cd22105d4890c86bf93d20c7824d",
        "urls": [
          "bzz-raw://aa9905170f86e4e2d9b62e9fabaab36381398da14f001e0b9bb98c31c174a48e",
          "dweb:/ipfs/QmYpHjdY2yf3w6kFi9urUTyrMyVZBBsCGGEkE1kyTnXqVn"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Snapshot.sol": {
        "keccak256": "0x5df6aa04b1cbb65e410c7f1a02787e0e11dbcdb5cde18ae50d435029c27c1ce5",
        "urls": [
          "bzz-raw://d2e19b5c6778338b7e8e9c8ef82738797d8955d37884c7db70d7cdea43329910",
          "dweb:/ipfs/Qma1cRGHqRM3tkh5JyzR2Td6iKKST2HapTygBwVNTRJJZD"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/State.sol": {
        "keccak256": "0x3997f3a820110b3bce6f87ea8df3e1f8b006d1ac45efff1dc2f8873f8bbfa5af",
        "urls": [
          "bzz-raw://bf973a3633546dfff75b550673b4a680b7fab48d7fc8923157983a4fde3d5da4",
          "dweb:/ipfs/QmZ8NNwcYaqVxtar8g5MH5mqDXXuMTQLe6vi7zYGswFA3N"
        ],
        "license": "MIT"
      },
      "contracts/libs/merkle/MerkleMath.sol": {
        "keccak256": "0xbd13c07bdc40b80f56c7d75e3f31b6c4a85a78d444b760604a5b71083d14925c",
        "urls": [
          "bzz-raw://3162b491e4e216c0f2d143ce3baab4cf9e2a8b1b42466256a5d5b1f8b0385507",
          "dweb:/ipfs/QmYnDSZyxiGHfmB8Fx46zh1LZe3aCdVaKzpaQuD9piTc7u"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/GasData.sol": {
        "keccak256": "0x2007fd4b97cf33bfe4aa7dc6ac887af87b4010ec9834636b4dd5685582ac26cb",
        "urls": [
          "bzz-raw://8b54ca8b659d63ef7138c5b3b243190ca19b1e893b7b49dee1f8790d55b9e691",
          "dweb:/ipfs/Qmc2FGb16uosZ5kvyEK2onpWVPvWeE9X72xNWeJw8CbweD"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Header.sol": {
        "keccak256": "0x6a2030f6d08075f91336466c3fe4bd63f2760dcd42554856357af8024fd55344",
        "urls": [
          "bzz-raw://e1a1c8f6240f897c62cdc09fab57fc9eeea8072efbc8d101bd7e40b8eea272c9",
          "dweb:/ipfs/QmYrFA3fupKhW71k6yLkQsojPJt4Fcv4uH46hNvYYHcDsy"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Number.sol": {
        "keccak256": "0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96",
        "urls": [
          "bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd",
          "dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Request.sol": {
        "keccak256": "0xecd4427fe7285d1d5663ea019a66ebb04d3f495c0be28a14043c99a0d9a90689",
        "urls": [
          "bzz-raw://55e800c307070d6497031b90157d917dcabd5f93d342081be8d20ad3c80df429",
          "dweb:/ipfs/QmU8oza8MeWDbG9xfPaPVoj4Z1rKtvQ7pA3Z7CuYyGSuY6"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Tips.sol": {
        "keccak256": "0x2186d854149349ff689a8356c7f387d134f59fa4a97aed7b43c9e25f46661b0d",
        "urls": [
          "bzz-raw://ff15d61f2c9b26e6ef33457aed4a2d9ed61726e2a746d3e0a7e68eb6cd3d63a1",
          "dweb:/ipfs/QmUeiiTAjPmuFhLfzDMqZ6DyvQmEYhsKo9XArHSrMvjYKL"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34",
        "urls": [
          "bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7",
          "dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba",
        "urls": [
          "bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8",
          "dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d",
        "urls": [
          "bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f",
          "dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "test/harnesses/DestinationHarness.t.sol": {
        "keccak256": "0xbe66795625c4b9a6dba85dc12c9b5a4adc333814f3b32f96974e824a8e87de57",
        "urls": [
          "bzz-raw://031ca06da0fc443e481a310f638c5e13a35a526bf97883f7ed400aa84753bb25",
          "dweb:/ipfs/QmXFw15FXfDejhC5TNNsYpxjXerTxQgRTBSXiKqbnuNW1a"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/harnesses/DestinationHarness.t.sol",
    "id": 54576,
    "exportedSymbols": {
      "Destination": [
        589
      ],
      "DestinationHarness": [
        54575
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:478:106",
    "nodes": [
      {
        "id": 54554,
        "nodeType": "PragmaDirective",
        "src": "32:23:106",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 54556,
        "nodeType": "ImportDirective",
        "src": "57:60:106",
        "nodes": [],
        "absolutePath": "contracts/Destination.sol",
        "file": "../../contracts/Destination.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54576,
        "sourceUnit": 590,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54555,
              "name": "Destination",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 589,
              "src": "65:11:106",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54575,
        "nodeType": "ContractDefinition",
        "src": "241:268:106",
        "nodes": [
          {
            "id": 54574,
            "nodeType": "FunctionDefinition",
            "src": "339:111:106",
            "nodes": [],
            "body": {
              "id": 54573,
              "nodeType": "Block",
              "src": "448:2:106",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 54568,
                    "name": "domain",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54561,
                    "src": "417:6:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  {
                    "id": 54569,
                    "name": "agentManager_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54563,
                    "src": "425:13:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 54570,
                    "name": "inbox_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54565,
                    "src": "440:6:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 54571,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 54567,
                  "name": "Destination",
                  "nameLocations": [
                    "405:11:106"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 589,
                  "src": "405:11:106"
                },
                "nodeType": "ModifierInvocation",
                "src": "405:42:106"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 54566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54561,
                  "mutability": "mutable",
                  "name": "domain",
                  "nameLocation": "358:6:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 54574,
                  "src": "351:13:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 54560,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:6:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54563,
                  "mutability": "mutable",
                  "name": "agentManager_",
                  "nameLocation": "374:13:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 54574,
                  "src": "366:21:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:106",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54565,
                  "mutability": "mutable",
                  "name": "inbox_",
                  "nameLocation": "397:6:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 54574,
                  "src": "389:14:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:7:106",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "350:54:106"
            },
            "returnParameters": {
              "id": 54572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "448:0:106"
            },
            "scope": 54575,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 54558,
              "name": "Destination",
              "nameLocations": [
                "272:11:106"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 589,
              "src": "272:11:106"
            },
            "id": 54559,
            "nodeType": "InheritanceSpecifier",
            "src": "272:11:106"
          }
        ],
        "canonicalName": "DestinationHarness",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 54557,
          "nodeType": "StructuredDocumentation",
          "src": "119:122:106",
          "text": "@notice Harness for standalone Go tests.\n Do not use for tests requiring interactions between messaging contracts."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54575,
          589,
          9719,
          3930,
          5127,
          9234,
          3950,
          46892,
          2804,
          9180,
          2851,
          46691,
          47177,
          46833,
          3004,
          2941
        ],
        "name": "DestinationHarness",
        "nameLocation": "250:18:106",
        "scope": 54576,
        "usedErrors": [
          10174,
          10178,
          10192,
          10198,
          10206,
          10214,
          10216,
          10222,
          10226,
          10228,
          10230,
          10232,
          10234,
          10252,
          10256,
          10288,
          10294,
          10296,
          10298,
          10300,
          10302,
          10304,
          10324,
          10326,
          10328,
          10330,
          10332
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 106
}