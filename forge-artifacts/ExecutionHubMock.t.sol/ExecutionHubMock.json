{
  "abi": [
    {
      "inputs": [],
      "name": "deleteMockReturnValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "msgPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes32[]",
          "name": "originProof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "snapProof",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "gasLimit",
          "type": "uint64"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "getAttestationNonce",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "attNonce",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReturnValueAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReturnValueBool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReturnValueBytes",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReturnValueUint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReturnValueUint32",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "isValidReceipt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        }
      ],
      "name": "messageReceipt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        }
      ],
      "name": "messageStatus",
      "outputs": [
        {
          "internalType": "enum MessageStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setMockReturnValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "setMockReturnValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "setMockReturnValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBaseMock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testExecutionHubMock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610b1f806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806376fae19811610097578063daa74a9e11610066578063daa74a9e146101f6578063e2f006f71461020a578063e60f5f6a1461021d578063f05b33511461023057600080fd5b806376fae198146101ce578063b26406a014610105578063b78973d4146101e6578063b81442e0146101ee57600080fd5b80634f127567116100d35780634f12756714610168578063504730ab146101905780635980330d146101a6578063714141de146101bb57600080fd5b806306454f741461010557806332ff14d2146101075780633c6cf4731461011e5780634289cf7514610148575b600080fd5b005b610105610115366004610765565b50505050505050565b61013261012c36600461081d565b50600090565b60405161013f9190610836565b60405180910390f35b610150610245565b6040516001600160a01b03909116815260200161013f565b61017b61017636600461081d565b6102fd565b60405163ffffffff909116815260200161013f565b61019861030d565b60405190815260200161013f565b6101ae6103c0565b60405161013f919061085e565b6101056101c936600461081d565b610452565b6101d6610480565b604051901515815260200161013f565b61017b610533565b6101056105e6565b6101ae61020436600461081d565b50606090565b6101d66102183660046108ac565b6105f1565b61010561022b3660046108fe565b6105fb565b61010561023e3660046108ac565b610614565b565b600080805461025390610922565b15905061012c576000805461026790610922565b80601f016020809104026020016040519081016040528092919081815260200182805461029390610922565b80156102e05780601f106102b5576101008083540402835291602001916102e0565b820191906000526020600020905b8154815290600101906020018083116102c357829003601f168201915b50505050508060200190518101906102f8919061095c565b905090565b6000610307610533565b92915050565b600080805461031b90610922565b15905061012c576000805461032f90610922565b80601f016020809104026020016040519081016040528092919081815260200182805461035b90610922565b80156103a85780601f1061037d576101008083540402835291602001916103a8565b820191906000526020600020905b81548152906001019060200180831161038b57829003601f168201915b50505050508060200190518101906102f89190610979565b6060600080546103cf90610922565b80601f01602080910402602001604051908101604052809291908181526020018280546103fb90610922565b80156104485780601f1061041d57610100808354040283529160200191610448565b820191906000526020600020905b81548152906001019060200180831161042b57829003601f168201915b5050505050905090565b6040805160208101839052015b6040516020818303038152906040526000908161047c91906109e1565b5050565b600080805461048e90610922565b15905061012c57600080546104a290610922565b80601f01602080910402602001604051908101604052809291908181526020018280546104ce90610922565b801561051b5780601f106104f05761010080835404028352916020019161051b565b820191906000526020600020905b8154815290600101906020018083116104fe57829003601f168201915b50505050508060200190518101906102f89190610aa1565b600080805461054190610922565b15905061012c576000805461055590610922565b80601f016020809104026020016040519081016040528092919081815260200182805461058190610922565b80156105ce5780601f106105a3576101008083540402835291602001916105ce565b820191906000526020600020905b8154815290600101906020018083116105b157829003601f168201915b50505050508060200190518101906102f89190610ac3565b610243600080610620565b6000610307610480565b604080516001600160a01b03831660208201520161045f565b600061047c82826109e1565b50805461062c90610922565b6000825580601f1061063c575050565b601f01602090049060005260206000209081019061065a919061065d565b50565b5b80821115610672576000815560010161065e565b5090565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261069d57600080fd5b813567ffffffffffffffff808211156106b8576106b8610676565b604051601f8301601f19908116603f011681019082821181831017156106e0576106e0610676565b816040528381528660208588010111156106f957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008083601f84011261072b57600080fd5b50813567ffffffffffffffff81111561074357600080fd5b6020830191508360208260051b850101111561075e57600080fd5b9250929050565b600080600080600080600060a0888a03121561078057600080fd5b873567ffffffffffffffff8082111561079857600080fd5b6107a48b838c0161068c565b985060208a01359150808211156107ba57600080fd5b6107c68b838c01610719565b909850965060408a01359150808211156107df57600080fd5b6107eb8b838c01610719565b909650945060608a0135935060808a01359150808216821461080c57600080fd5b508091505092959891949750929550565b60006020828403121561082f57600080fd5b5035919050565b602081016003831061085857634e487b7160e01b600052602160045260246000fd5b91905290565b600060208083528351808285015260005b8181101561088b5785810183015185820160400152820161086f565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156108be57600080fd5b813567ffffffffffffffff8111156108d557600080fd5b6108e18482850161068c565b949350505050565b6001600160a01b038116811461065a57600080fd5b60006020828403121561091057600080fd5b813561091b816108e9565b9392505050565b600181811c9082168061093657607f821691505b60208210810361095657634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561096e57600080fd5b815161091b816108e9565b60006020828403121561098b57600080fd5b5051919050565b601f8211156109dc57600081815260208120601f850160051c810160208610156109b95750805b601f850160051c820191505b818110156109d8578281556001016109c5565b5050505b505050565b815167ffffffffffffffff8111156109fb576109fb610676565b610a0f81610a098454610922565b84610992565b602080601f831160018114610a445760008415610a2c5750858301515b600019600386901b1c1916600185901b1785556109d8565b600085815260208120601f198616915b82811015610a7357888601518255948401946001909101908401610a54565b5085821015610a915787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610ab357600080fd5b8151801515811461091b57600080fd5b600060208284031215610ad557600080fd5b815163ffffffff8116811461091b57600080fdfea26469706673582212206a7384527d02d30cce382884d01a21dd4696cbdb94cf55f30b3205fed1bef4ed64736f6c63430008110033",
    "sourceMap": "236:837:140:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806376fae19811610097578063daa74a9e11610066578063daa74a9e146101f6578063e2f006f71461020a578063e60f5f6a1461021d578063f05b33511461023057600080fd5b806376fae198146101ce578063b26406a014610105578063b78973d4146101e6578063b81442e0146101ee57600080fd5b80634f127567116100d35780634f12756714610168578063504730ab146101905780635980330d146101a6578063714141de146101bb57600080fd5b806306454f741461010557806332ff14d2146101075780633c6cf4731461011e5780634289cf7514610148575b600080fd5b005b610105610115366004610765565b50505050505050565b61013261012c36600461081d565b50600090565b60405161013f9190610836565b60405180910390f35b610150610245565b6040516001600160a01b03909116815260200161013f565b61017b61017636600461081d565b6102fd565b60405163ffffffff909116815260200161013f565b61019861030d565b60405190815260200161013f565b6101ae6103c0565b60405161013f919061085e565b6101056101c936600461081d565b610452565b6101d6610480565b604051901515815260200161013f565b61017b610533565b6101056105e6565b6101ae61020436600461081d565b50606090565b6101d66102183660046108ac565b6105f1565b61010561022b3660046108fe565b6105fb565b61010561023e3660046108ac565b610614565b565b600080805461025390610922565b15905061012c576000805461026790610922565b80601f016020809104026020016040519081016040528092919081815260200182805461029390610922565b80156102e05780601f106102b5576101008083540402835291602001916102e0565b820191906000526020600020905b8154815290600101906020018083116102c357829003601f168201915b50505050508060200190518101906102f8919061095c565b905090565b6000610307610533565b92915050565b600080805461031b90610922565b15905061012c576000805461032f90610922565b80601f016020809104026020016040519081016040528092919081815260200182805461035b90610922565b80156103a85780601f1061037d576101008083540402835291602001916103a8565b820191906000526020600020905b81548152906001019060200180831161038b57829003601f168201915b50505050508060200190518101906102f89190610979565b6060600080546103cf90610922565b80601f01602080910402602001604051908101604052809291908181526020018280546103fb90610922565b80156104485780601f1061041d57610100808354040283529160200191610448565b820191906000526020600020905b81548152906001019060200180831161042b57829003601f168201915b5050505050905090565b6040805160208101839052015b6040516020818303038152906040526000908161047c91906109e1565b5050565b600080805461048e90610922565b15905061012c57600080546104a290610922565b80601f01602080910402602001604051908101604052809291908181526020018280546104ce90610922565b801561051b5780601f106104f05761010080835404028352916020019161051b565b820191906000526020600020905b8154815290600101906020018083116104fe57829003601f168201915b50505050508060200190518101906102f89190610aa1565b600080805461054190610922565b15905061012c576000805461055590610922565b80601f016020809104026020016040519081016040528092919081815260200182805461058190610922565b80156105ce5780601f106105a3576101008083540402835291602001916105ce565b820191906000526020600020905b8154815290600101906020018083116105b157829003601f168201915b50505050508060200190518101906102f89190610ac3565b610243600080610620565b6000610307610480565b604080516001600160a01b03831660208201520161045f565b600061047c82826109e1565b50805461062c90610922565b6000825580601f1061063c575050565b601f01602090049060005260206000209081019061065a919061065d565b50565b5b80821115610672576000815560010161065e565b5090565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261069d57600080fd5b813567ffffffffffffffff808211156106b8576106b8610676565b604051601f8301601f19908116603f011681019082821181831017156106e0576106e0610676565b816040528381528660208588010111156106f957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008083601f84011261072b57600080fd5b50813567ffffffffffffffff81111561074357600080fd5b6020830191508360208260051b850101111561075e57600080fd5b9250929050565b600080600080600080600060a0888a03121561078057600080fd5b873567ffffffffffffffff8082111561079857600080fd5b6107a48b838c0161068c565b985060208a01359150808211156107ba57600080fd5b6107c68b838c01610719565b909850965060408a01359150808211156107df57600080fd5b6107eb8b838c01610719565b909650945060608a0135935060808a01359150808216821461080c57600080fd5b508091505092959891949750929550565b60006020828403121561082f57600080fd5b5035919050565b602081016003831061085857634e487b7160e01b600052602160045260246000fd5b91905290565b600060208083528351808285015260005b8181101561088b5785810183015185820160400152820161086f565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156108be57600080fd5b813567ffffffffffffffff8111156108d557600080fd5b6108e18482850161068c565b949350505050565b6001600160a01b038116811461065a57600080fd5b60006020828403121561091057600080fd5b813561091b816108e9565b9392505050565b600181811c9082168061093657607f821691505b60208210810361095657634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561096e57600080fd5b815161091b816108e9565b60006020828403121561098b57600080fd5b5051919050565b601f8211156109dc57600081815260208120601f850160051c810160208610156109b95750805b601f850160051c820191505b818110156109d8578281556001016109c5565b5050505b505050565b815167ffffffffffffffff8111156109fb576109fb610676565b610a0f81610a098454610922565b84610992565b602080601f831160018114610a445760008415610a2c5750858301515b600019600386901b1c1916600185901b1785556109d8565b600085815260208120601f198616915b82811015610a7357888601518255948401946001909101908401610a54565b5085821015610a915787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610ab357600080fd5b8151801515811461091b57600080fd5b600060208284031215610ad557600080fd5b815163ffffffff8116811461091b57600080fdfea26469706673582212206a7384527d02d30cce382884d01a21dd4696cbdb94cf55f30b3205fed1bef4ed64736f6c63430008110033",
    "sourceMap": "236:837:140:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;377:43;;426:198;;;;;;:::i;:::-;;;;;;;;;885:91;;;;;;:::i;:::-;-1:-1:-1;952:20:140;;885:91;;;;;;;;:::i;:::-;;;;;;;;776:170:138;;;:::i;:::-;;;-1:-1:-1;;;;;3144:32:201;;;3126:51;;3114:2;3099:18;776:170:138;2980:203:201;630:124:140;;;;;;:::i;:::-;;:::i;:::-;;;3362:10:201;3350:23;;;3332:42;;3320:2;3305:18;630:124:140;3188:192:201;1114:158:138;;;:::i;:::-;;;3531:25:201;;;3519:2;3504:18;1114:158:138;3385:177:201;664:106:138;;;:::i;:::-;;;;;;;:::i;338:105::-;;;;;;:::i;:::-;;:::i;952:156::-;;;:::i;:::-;;;4468:14:201;;4461:22;4443:41;;4431:2;4416:18;952:156:138;4303:187:201;1278:158:138;;;:::i;250:82::-;;;:::i;982:89:140:-;;;;;;:::i;:::-;-1:-1:-1;1050:17:140;;982:89;760:119;;;;;;:::i;:::-;;:::i;449:105:138:-;;;;;;:::i;:::-;;:::i;560:98::-;;;;;;:::i;:::-;;:::i;377:43:140:-;:::o;776:170:138:-;830:7;856:16;:23;;;;;:::i;:::-;:28;;-1:-1:-1;856:83:138;;911:16;900:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;849:90;;776:170;:::o;630:124:140:-;691:15;725:22;:20;:22::i;:::-;718:29;630:124;-1:-1:-1;;630:124:140:o;1114:158:138:-;1165:7;1191:16;:23;;;;;:::i;:::-;:28;;-1:-1:-1;1191:74:138;;1237:16;1226:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;664:106::-;716:12;747:16;740:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;664:106;:::o;338:105::-;419:17;;;;;;3531:25:201;;;3504:18;419:17:138;;;;;;;;;;;;;400:16;:36;;;;;;:::i;:::-;;338:105;:::o;952:156::-;1003:4;1026:16;:23;;;;;:::i;:::-;:28;;-1:-1:-1;1026:75:138;;1076:16;1065:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1278:158::-;1331:6;1356:16;:23;;;;;:::i;:::-;:28;;-1:-1:-1;1356:73:138;;1402:16;1391:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;250:82::-;302:23;309:16;;302:23;:::i;760:119:140:-;821:12;852:20;:18;:20::i;449:105:138:-;530:17;;;-1:-1:-1;;;;;3144:32:201;;530:17:138;;;3126:51:201;3099:18;530:17:138;2980:203:201;560:98:138;627:16;:24;646:5;627:16;:24;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;14:127:201:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:718;188:5;241:3;234:4;226:6;222:17;218:27;208:55;;259:1;256;249:12;208:55;295:6;282:20;321:18;358:2;354;351:10;348:36;;;364:18;;:::i;:::-;439:2;433:9;407:2;493:13;;-1:-1:-1;;489:22:201;;;513:2;485:31;481:40;469:53;;;537:18;;;557:22;;;534:46;531:72;;;583:18;;:::i;:::-;623:10;619:2;612:22;658:2;650:6;643:18;704:3;697:4;692:2;684:6;680:15;676:26;673:35;670:55;;;721:1;718;711:12;670:55;785:2;778:4;770:6;766:17;759:4;751:6;747:17;734:54;832:1;825:4;820:2;812:6;808:15;804:26;797:37;852:6;843:15;;;;;;146:718;;;;:::o;869:367::-;932:8;942:6;996:3;989:4;981:6;977:17;973:27;963:55;;1014:1;1011;1004:12;963:55;-1:-1:-1;1037:20:201;;1080:18;1069:30;;1066:50;;;1112:1;1109;1102:12;1066:50;1149:4;1141:6;1137:17;1125:29;;1209:3;1202:4;1192:6;1189:1;1185:14;1177:6;1173:27;1169:38;1166:47;1163:67;;;1226:1;1223;1216:12;1163:67;869:367;;;;;:::o;1241:1197::-;1398:6;1406;1414;1422;1430;1438;1446;1499:3;1487:9;1478:7;1474:23;1470:33;1467:53;;;1516:1;1513;1506:12;1467:53;1556:9;1543:23;1585:18;1626:2;1618:6;1615:14;1612:34;;;1642:1;1639;1632:12;1612:34;1665:49;1706:7;1697:6;1686:9;1682:22;1665:49;:::i;:::-;1655:59;;1767:2;1756:9;1752:18;1739:32;1723:48;;1796:2;1786:8;1783:16;1780:36;;;1812:1;1809;1802:12;1780:36;1851:72;1915:7;1904:8;1893:9;1889:24;1851:72;:::i;:::-;1942:8;;-1:-1:-1;1825:98:201;-1:-1:-1;2030:2:201;2015:18;;2002:32;;-1:-1:-1;2046:16:201;;;2043:36;;;2075:1;2072;2065:12;2043:36;2114:72;2178:7;2167:8;2156:9;2152:24;2114:72;:::i;:::-;2205:8;;-1:-1:-1;2088:98:201;-1:-1:-1;2287:2:201;2272:18;;2259:32;;-1:-1:-1;2341:3:201;2326:19;;2313:33;;-1:-1:-1;2375:14:201;;;2365:25;;2355:53;;2404:1;2401;2394:12;2355:53;;2427:5;2417:15;;;1241:1197;;;;;;;;;;:::o;2443:180::-;2502:6;2555:2;2543:9;2534:7;2530:23;2526:32;2523:52;;;2571:1;2568;2561:12;2523:52;-1:-1:-1;2594:23:201;;2443:180;-1:-1:-1;2443:180:201:o;2628:347::-;2779:2;2764:18;;2812:1;2801:13;;2791:144;;2857:10;2852:3;2848:20;2845:1;2838:31;2892:4;2889:1;2882:15;2920:4;2917:1;2910:15;2791:144;2944:25;;;2628:347;:::o;3567:546::-;3677:4;3706:2;3735;3724:9;3717:21;3767:6;3761:13;3810:6;3805:2;3794:9;3790:18;3783:34;3835:1;3845:140;3859:6;3856:1;3853:13;3845:140;;;3954:14;;;3950:23;;3944:30;3920:17;;;3939:2;3916:26;3909:66;3874:10;;3845:140;;;3849:3;4034:1;4029:2;4020:6;4009:9;4005:22;4001:31;3994:42;4104:2;4097;4093:7;4088:2;4080:6;4076:15;4072:29;4061:9;4057:45;4053:54;4045:62;;;;3567:546;;;;:::o;4495:320::-;4563:6;4616:2;4604:9;4595:7;4591:23;4587:32;4584:52;;;4632:1;4629;4622:12;4584:52;4672:9;4659:23;4705:18;4697:6;4694:30;4691:50;;;4737:1;4734;4727:12;4691:50;4760:49;4801:7;4792:6;4781:9;4777:22;4760:49;:::i;:::-;4750:59;4495:320;-1:-1:-1;;;;4495:320:201:o;4820:131::-;-1:-1:-1;;;;;4895:31:201;;4885:42;;4875:70;;4941:1;4938;4931:12;4956:247;5015:6;5068:2;5056:9;5047:7;5043:23;5039:32;5036:52;;;5084:1;5081;5074:12;5036:52;5123:9;5110:23;5142:31;5167:5;5142:31;:::i;:::-;5192:5;4956:247;-1:-1:-1;;;4956:247:201:o;5208:380::-;5287:1;5283:12;;;;5330;;;5351:61;;5405:4;5397:6;5393:17;5383:27;;5351:61;5458:2;5450:6;5447:14;5427:18;5424:38;5421:161;;5504:10;5499:3;5495:20;5492:1;5485:31;5539:4;5536:1;5529:15;5567:4;5564:1;5557:15;5421:161;;5208:380;;;:::o;5593:259::-;5671:6;5724:2;5712:9;5703:7;5699:23;5695:32;5692:52;;;5740:1;5737;5730:12;5692:52;5772:9;5766:16;5791:31;5816:5;5791:31;:::i;5857:184::-;5927:6;5980:2;5968:9;5959:7;5955:23;5951:32;5948:52;;;5996:1;5993;5986:12;5948:52;-1:-1:-1;6019:16:201;;5857:184;-1:-1:-1;5857:184:201:o;6171:544::-;6272:2;6267:3;6264:11;6261:448;;;6308:1;6333:5;6329:2;6322:17;6378:4;6374:2;6364:19;6448:2;6436:10;6432:19;6429:1;6425:27;6419:4;6415:38;6484:4;6472:10;6469:20;6466:47;;;-1:-1:-1;6507:4:201;6466:47;6562:2;6557:3;6553:12;6550:1;6546:20;6540:4;6536:31;6526:41;;6617:82;6635:2;6628:5;6625:13;6617:82;;;6680:17;;;6661:1;6650:13;6617:82;;;6621:3;;;6261:448;6171:544;;;:::o;6891:1348::-;7015:3;7009:10;7042:18;7034:6;7031:30;7028:56;;;7064:18;;:::i;:::-;7093:96;7182:6;7142:38;7174:4;7168:11;7142:38;:::i;:::-;7136:4;7093:96;:::i;:::-;7244:4;;7308:2;7297:14;;7325:1;7320:662;;;;8026:1;8043:6;8040:89;;;-1:-1:-1;8095:19:201;;;8089:26;8040:89;-1:-1:-1;;6848:1:201;6844:11;;;6840:24;6836:29;6826:40;6872:1;6868:11;;;6823:57;8142:81;;7290:943;;7320:662;6118:1;6111:14;;;6155:4;6142:18;;-1:-1:-1;;7356:20:201;;;7473:236;7487:7;7484:1;7481:14;7473:236;;;7576:19;;;7570:26;7555:42;;7668:27;;;;7636:1;7624:14;;;;7503:19;;7473:236;;;7477:3;7737:6;7728:7;7725:19;7722:201;;;7798:19;;;7792:26;-1:-1:-1;;7881:1:201;7877:14;;;7893:3;7873:24;7869:37;7865:42;7850:58;7835:74;;7722:201;-1:-1:-1;;;;;7969:1:201;7953:14;;;7949:22;7936:36;;-1:-1:-1;6891:1348:201:o;8244:277::-;8311:6;8364:2;8352:9;8343:7;8339:23;8335:32;8332:52;;;8380:1;8377;8370:12;8332:52;8412:9;8406:16;8465:5;8458:13;8451:21;8444:5;8441:32;8431:60;;8487:1;8484;8477:12;8526:280;8595:6;8648:2;8636:9;8627:7;8623:23;8619:32;8616:52;;;8664:1;8661;8654:12;8616:52;8696:9;8690:16;8746:10;8739:5;8735:22;8728:5;8725:33;8715:61;;8772:1;8769;8762:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "deleteMockReturnValue()": "b81442e0",
    "execute(bytes,bytes32[],bytes32[],uint256,uint64)": "32ff14d2",
    "getAttestationNonce(bytes32)": "4f127567",
    "getReturnValueAddress()": "4289cf75",
    "getReturnValueBool()": "76fae198",
    "getReturnValueBytes()": "5980330d",
    "getReturnValueUint()": "504730ab",
    "getReturnValueUint32()": "b78973d4",
    "isValidReceipt(bytes)": "e2f006f7",
    "messageReceipt(bytes32)": "daa74a9e",
    "messageStatus(bytes32)": "3c6cf473",
    "setMockReturnValue(address)": "e60f5f6a",
    "setMockReturnValue(bytes)": "f05b3351",
    "setMockReturnValue(uint256)": "714141de",
    "testBaseMock()": "b26406a0",
    "testExecutionHubMock()": "06454f74"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deleteMockReturnValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"msgPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"originProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"snapProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"getAttestationNonce\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"attNonce\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReturnValueAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReturnValueBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReturnValueBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReturnValueUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReturnValueUint32\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"isValidReceipt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"name\":\"messageReceipt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"name\":\"messageStatus\",\"outputs\":[{\"internalType\":\"enum MessageStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setMockReturnValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"setMockReturnValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"setMockReturnValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBaseMock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testExecutionHubMock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execute(bytes,bytes32[],bytes32[],uint256,uint64)\":{\"details\":\"Will revert if any of these is true:  - Message payload is not properly formatted.  - Snapshot root (reconstructed from message hash and proofs) is unknown  - Snapshot root is known, but was submitted by an inactive Notary  - Snapshot root is known, but optimistic period for a message hasn't passed  - Provided gas limit is lower than the one requested in the message  - Recipient doesn't implement a `handle` method (refer to IMessageRecipient.sol)  - Recipient reverted upon receiving a message Note: refer to libs/memory/State.sol for details about Origin State's sub-leafs.\",\"params\":{\"gasLimit\":\"Gas limit for message execution\",\"msgPayload\":\"Raw payload with a formatted message to execute\",\"originProof\":\"Proof of inclusion of message in the Origin Merkle Tree\",\"snapProof\":\"Proof of inclusion of Origin State's Left Leaf into Snapshot Merkle Tree\",\"stateIndex\":\"Index of Origin State in the Snapshot\"}},\"messageReceipt(bytes32)\":{\"details\":\"Notaries could derive the tips, and the tips proof using the message payload, and submit the signed receipt with the proof of tips to `Summit` in order to initiate tips distribution.\",\"params\":{\"messageHash\":\"Hash of the message payload\"},\"returns\":{\"data\":\"            Formatted payload with the message execution receipt\"}},\"messageStatus(bytes32)\":{\"params\":{\"messageHash\":\"Hash of the message payload\"},\"returns\":{\"status\":\"          Message execution status\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute(bytes,bytes32[],bytes32[],uint256,uint64)\":{\"notice\":\"Attempts to prove inclusion of message into one of Snapshot Merkle Trees, previously submitted to this contract in a form of a signed Attestation. Proven message is immediately executed by passing its contents to the specified recipient.\"},\"messageReceipt(bytes32)\":{\"notice\":\"Returns a formatted payload with the message receipt.\"},\"messageStatus(bytes32)\":{\"notice\":\"Returns message execution status: None/Failed/Success.\"},\"testBaseMock()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"},\"testExecutionHubMock()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/hubs/ExecutionHubMock.t.sol\":\"ExecutionHubMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/interfaces/IExecutionHub.sol\":{\"keccak256\":\"0x98f6ff39ecb926b480474d122350d753ca18358ca4d18d36d1850ec7af7ae6f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36485341a0ed70b0f151b258124f6a0db003f5d37af22b8bea65b8d5249a252d\",\"dweb:/ipfs/QmfBEDFSGwnSjTyv2AZuuUDjrqWRvacyCx46dXegioWMDL\"]},\"contracts/libs/Errors.sol\":{\"keccak256\":\"0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b\",\"dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB\"]},\"contracts/libs/Structures.sol\":{\"keccak256\":\"0x3eaa63f5d9aac514328111e8fdd037dc6fdb18af7541a8287deeacd2e44f7137\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://633619910c74a0685ef2993a2e7cc44088929121a15c8a9fc26c9bbadffbda71\",\"dweb:/ipfs/QmZceJv6UntiMWW4JZHbmytLsqXshbuav8yoiritksvqqy\"]},\"test/mocks/base/BaseMock.t.sol\":{\"keccak256\":\"0x5d0ddef55a6d63ce25175fd2cefc00b9030e8f7247600220e67a33c3982b9697\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96928ffa43cb650c3c594fa2d1459f2f44eea1f52fb988011a638e80b255d986\",\"dweb:/ipfs/QmXpFxAzvt9jaD4BsKGLJnBdHF1m4uvfB1iKt94mr3ryCJ\"]},\"test/mocks/hubs/ExecutionHubMock.t.sol\":{\"keccak256\":\"0x176e769388b8a77fd8db5dada6ba3814970b7800d3d52fd981b5cf3d8e308e88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04be69b573c225a37a734464e8bab6524fb2bd80c120268288706655ca0bf339\",\"dweb:/ipfs/Qmaa36Cg2R4CZweAoNyrpzQT1RukXZi9zS4Jgx9MRH8dK3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteMockReturnValue"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "msgPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes32[]",
              "name": "originProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "snapProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "gasLimit",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAttestationNonce",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "attNonce",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReturnValueAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReturnValueBool",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReturnValueBytes",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReturnValueUint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReturnValueUint32",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidReceipt",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValid",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "messageReceipt",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "messageStatus",
          "outputs": [
            {
              "internalType": "enum MessageStatus",
              "name": "status",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMockReturnValue"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "value",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMockReturnValue"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMockReturnValue"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBaseMock"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testExecutionHubMock"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "execute(bytes,bytes32[],bytes32[],uint256,uint64)": {
            "details": "Will revert if any of these is true:  - Message payload is not properly formatted.  - Snapshot root (reconstructed from message hash and proofs) is unknown  - Snapshot root is known, but was submitted by an inactive Notary  - Snapshot root is known, but optimistic period for a message hasn't passed  - Provided gas limit is lower than the one requested in the message  - Recipient doesn't implement a `handle` method (refer to IMessageRecipient.sol)  - Recipient reverted upon receiving a message Note: refer to libs/memory/State.sol for details about Origin State's sub-leafs.",
            "params": {
              "gasLimit": "Gas limit for message execution",
              "msgPayload": "Raw payload with a formatted message to execute",
              "originProof": "Proof of inclusion of message in the Origin Merkle Tree",
              "snapProof": "Proof of inclusion of Origin State's Left Leaf into Snapshot Merkle Tree",
              "stateIndex": "Index of Origin State in the Snapshot"
            }
          },
          "messageReceipt(bytes32)": {
            "details": "Notaries could derive the tips, and the tips proof using the message payload, and submit the signed receipt with the proof of tips to `Summit` in order to initiate tips distribution.",
            "params": {
              "messageHash": "Hash of the message payload"
            },
            "returns": {
              "data": "            Formatted payload with the message execution receipt"
            }
          },
          "messageStatus(bytes32)": {
            "params": {
              "messageHash": "Hash of the message payload"
            },
            "returns": {
              "status": "          Message execution status"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "execute(bytes,bytes32[],bytes32[],uint256,uint64)": {
            "notice": "Attempts to prove inclusion of message into one of Snapshot Merkle Trees, previously submitted to this contract in a form of a signed Attestation. Proven message is immediately executed by passing its contents to the specified recipient."
          },
          "messageReceipt(bytes32)": {
            "notice": "Returns a formatted payload with the message receipt."
          },
          "messageStatus(bytes32)": {
            "notice": "Returns message execution status: None/Failed/Success."
          },
          "testBaseMock()": {
            "notice": "Prevents this contract from being included in the coverage report"
          },
          "testExecutionHubMock()": {
            "notice": "Prevents this contract from being included in the coverage report"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/mocks/hubs/ExecutionHubMock.t.sol": "ExecutionHubMock"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/IExecutionHub.sol": {
        "keccak256": "0x98f6ff39ecb926b480474d122350d753ca18358ca4d18d36d1850ec7af7ae6f0",
        "urls": [
          "bzz-raw://36485341a0ed70b0f151b258124f6a0db003f5d37af22b8bea65b8d5249a252d",
          "dweb:/ipfs/QmfBEDFSGwnSjTyv2AZuuUDjrqWRvacyCx46dXegioWMDL"
        ],
        "license": "MIT"
      },
      "contracts/libs/Errors.sol": {
        "keccak256": "0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011",
        "urls": [
          "bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b",
          "dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB"
        ],
        "license": "MIT"
      },
      "contracts/libs/Structures.sol": {
        "keccak256": "0x3eaa63f5d9aac514328111e8fdd037dc6fdb18af7541a8287deeacd2e44f7137",
        "urls": [
          "bzz-raw://633619910c74a0685ef2993a2e7cc44088929121a15c8a9fc26c9bbadffbda71",
          "dweb:/ipfs/QmZceJv6UntiMWW4JZHbmytLsqXshbuav8yoiritksvqqy"
        ],
        "license": "MIT"
      },
      "test/mocks/base/BaseMock.t.sol": {
        "keccak256": "0x5d0ddef55a6d63ce25175fd2cefc00b9030e8f7247600220e67a33c3982b9697",
        "urls": [
          "bzz-raw://96928ffa43cb650c3c594fa2d1459f2f44eea1f52fb988011a638e80b255d986",
          "dweb:/ipfs/QmXpFxAzvt9jaD4BsKGLJnBdHF1m4uvfB1iKt94mr3ryCJ"
        ],
        "license": "MIT"
      },
      "test/mocks/hubs/ExecutionHubMock.t.sol": {
        "keccak256": "0x176e769388b8a77fd8db5dada6ba3814970b7800d3d52fd981b5cf3d8e308e88",
        "urls": [
          "bzz-raw://04be69b573c225a37a734464e8bab6524fb2bd80c120268288706655ca0bf339",
          "dweb:/ipfs/Qmaa36Cg2R4CZweAoNyrpzQT1RukXZi9zS4Jgx9MRH8dK3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/mocks/hubs/ExecutionHubMock.t.sol",
    "id": 59110,
    "exportedSymbols": {
      "BaseMock": [
        59009
      ],
      "ExecutionHubMock": [
        59109
      ],
      "IExecutionHub": [
        9234
      ],
      "MessageStatus": [
        10376
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1042:140",
    "nodes": [
      {
        "id": 59039,
        "nodeType": "PragmaDirective",
        "src": "32:23:140",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 59042,
        "nodeType": "ImportDirective",
        "src": "57:93:140",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IExecutionHub.sol",
        "file": "../../../contracts/interfaces/IExecutionHub.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59110,
        "sourceUnit": 9235,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59040,
              "name": "IExecutionHub",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9234,
              "src": "65:13:140",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 59041,
              "name": "MessageStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10376,
              "src": "80:13:140",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59044,
        "nodeType": "ImportDirective",
        "src": "151:48:140",
        "nodes": [],
        "absolutePath": "test/mocks/base/BaseMock.t.sol",
        "file": "../base/BaseMock.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59110,
        "sourceUnit": 59010,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59043,
              "name": "BaseMock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59009,
              "src": "159:8:140",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59109,
        "nodeType": "ContractDefinition",
        "src": "236:837:140",
        "nodes": [
          {
            "id": 59053,
            "nodeType": "FunctionDefinition",
            "src": "377:43:140",
            "nodes": [],
            "body": {
              "id": 59052,
              "nodeType": "Block",
              "src": "418:2:140",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 59049,
              "nodeType": "StructuredDocumentation",
              "src": "295:77:140",
              "text": "@notice Prevents this contract from being included in the coverage report"
            },
            "functionSelector": "06454f74",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExecutionHubMock",
            "nameLocation": "386:20:140",
            "parameters": {
              "id": 59050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "406:2:140"
            },
            "returnParameters": {
              "id": 59051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "418:0:140"
            },
            "scope": 59109,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59069,
            "nodeType": "FunctionDefinition",
            "src": "426:198:140",
            "nodes": [],
            "body": {
              "id": 59068,
              "nodeType": "Block",
              "src": "622:2:140",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              9200
            ],
            "functionSelector": "32ff14d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "435:7:140",
            "parameters": {
              "id": 59066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59055,
                  "mutability": "mutable",
                  "name": "msgPayload",
                  "nameLocation": "465:10:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 59069,
                  "src": "452:23:140",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 59054,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "452:5:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59058,
                  "mutability": "mutable",
                  "name": "originProof",
                  "nameLocation": "504:11:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 59069,
                  "src": "485:30:140",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59056,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "485:7:140",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 59057,
                    "nodeType": "ArrayTypeName",
                    "src": "485:9:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59061,
                  "mutability": "mutable",
                  "name": "snapProof",
                  "nameLocation": "544:9:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 59069,
                  "src": "525:28:140",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59059,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "525:7:140",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 59060,
                    "nodeType": "ArrayTypeName",
                    "src": "525:9:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59063,
                  "mutability": "mutable",
                  "name": "stateIndex",
                  "nameLocation": "571:10:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 59069,
                  "src": "563:18:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "563:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59065,
                  "mutability": "mutable",
                  "name": "gasLimit",
                  "nameLocation": "598:8:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 59069,
                  "src": "591:15:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 59064,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "591:6:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "442:170:140"
            },
            "returnParameters": {
              "id": 59067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "622:0:140"
            },
            "scope": 59109,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59080,
            "nodeType": "FunctionDefinition",
            "src": "630:124:140",
            "nodes": [],
            "body": {
              "id": 59079,
              "nodeType": "Block",
              "src": "708:46:140",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 59076,
                      "name": "getReturnValueUint32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59008,
                      "src": "725:20:140",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint32_$",
                        "typeString": "function () view returns (uint32)"
                      }
                    },
                    "id": 59077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "725:22:140",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 59075,
                  "id": 59078,
                  "nodeType": "Return",
                  "src": "718:29:140"
                }
              ]
            },
            "baseFunctions": [
              9208
            ],
            "functionSelector": "4f127567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAttestationNonce",
            "nameLocation": "639:19:140",
            "parameters": {
              "id": 59072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59071,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59080,
                  "src": "659:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 59070,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "658:9:140"
            },
            "returnParameters": {
              "id": 59075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59074,
                  "mutability": "mutable",
                  "name": "attNonce",
                  "nameLocation": "698:8:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 59080,
                  "src": "691:15:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 59073,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:6:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "690:17:140"
            },
            "scope": 59109,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59091,
            "nodeType": "FunctionDefinition",
            "src": "760:119:140",
            "nodes": [],
            "body": {
              "id": 59090,
              "nodeType": "Block",
              "src": "835:44:140",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 59087,
                      "name": "getReturnValueBool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58968,
                      "src": "852:18:140",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 59088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "852:20:140",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 59086,
                  "id": 59089,
                  "nodeType": "Return",
                  "src": "845:27:140"
                }
              ]
            },
            "baseFunctions": [
              9216
            ],
            "functionSelector": "e2f006f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidReceipt",
            "nameLocation": "769:14:140",
            "parameters": {
              "id": 59083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59082,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59091,
                  "src": "784:12:140",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 59081,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:5:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "783:14:140"
            },
            "returnParameters": {
              "id": 59086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59085,
                  "mutability": "mutable",
                  "name": "isValid",
                  "nameLocation": "826:7:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 59091,
                  "src": "821:12:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 59084,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:4:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "820:14:140"
            },
            "scope": 59109,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59100,
            "nodeType": "FunctionDefinition",
            "src": "885:91:140",
            "nodes": [],
            "body": {
              "id": 59099,
              "nodeType": "Block",
              "src": "974:2:140",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              9225
            ],
            "functionSelector": "3c6cf473",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "messageStatus",
            "nameLocation": "894:13:140",
            "parameters": {
              "id": 59094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59093,
                  "mutability": "mutable",
                  "name": "messageHash",
                  "nameLocation": "916:11:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 59100,
                  "src": "908:19:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 59092,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "907:21:140"
            },
            "returnParameters": {
              "id": 59098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59097,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "966:6:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 59100,
                  "src": "952:20:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_MessageStatus_$10376",
                    "typeString": "enum MessageStatus"
                  },
                  "typeName": {
                    "id": 59096,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59095,
                      "name": "MessageStatus",
                      "nameLocations": [
                        "952:13:140"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10376,
                      "src": "952:13:140"
                    },
                    "referencedDeclaration": 10376,
                    "src": "952:13:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MessageStatus_$10376",
                      "typeString": "enum MessageStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "951:22:140"
            },
            "scope": 59109,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59108,
            "nodeType": "FunctionDefinition",
            "src": "982:89:140",
            "nodes": [],
            "body": {
              "id": 59107,
              "nodeType": "Block",
              "src": "1069:2:140",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              9233
            ],
            "functionSelector": "daa74a9e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "messageReceipt",
            "nameLocation": "991:14:140",
            "parameters": {
              "id": 59103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59102,
                  "mutability": "mutable",
                  "name": "messageHash",
                  "nameLocation": "1014:11:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 59108,
                  "src": "1006:19:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 59101,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1005:21:140"
            },
            "returnParameters": {
              "id": 59106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59105,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1063:4:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 59108,
                  "src": "1050:17:140",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 59104,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1050:5:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1049:19:140"
            },
            "scope": 59109,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 59045,
              "name": "BaseMock",
              "nameLocations": [
                "265:8:140"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 59009,
              "src": "265:8:140"
            },
            "id": 59046,
            "nodeType": "InheritanceSpecifier",
            "src": "265:8:140"
          },
          {
            "baseName": {
              "id": 59047,
              "name": "IExecutionHub",
              "nameLocations": [
                "275:13:140"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9234,
              "src": "275:13:140"
            },
            "id": 59048,
            "nodeType": "InheritanceSpecifier",
            "src": "275:13:140"
          }
        ],
        "canonicalName": "ExecutionHubMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          59109,
          9234,
          59009
        ],
        "name": "ExecutionHubMock",
        "nameLocation": "245:16:140",
        "scope": 59110,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 140
}