{
  "abi": [
    {
      "inputs": [],
      "name": "agentManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "agentStatus",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum AgentFlag",
              "name": "flag",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "internalType": "struct AgentStatus",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deleteMockReturnValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getAgent",
      "outputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum AgentFlag",
              "name": "flag",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "internalType": "struct AgentStatus",
          "name": "status",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "destination",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "paddedRequest",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "contentLength",
          "type": "uint256"
        }
      ],
      "name": "getMinimumTipsValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tipsValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReturnValueAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReturnValueBool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReturnValueBytes",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReturnValueUint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReturnValueUint32",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "inbox",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "isValidState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "guardIndex",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "notaryIndex",
          "type": "uint32"
        }
      ],
      "name": "openDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "slashedIndex",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "rivalIndex",
          "type": "uint32"
        }
      ],
      "name": "resolveDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "destination",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "recipient",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "optimisticPeriod",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "paddedRequest",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "content",
          "type": "bytes"
        }
      ],
      "name": "sendBaseMessage",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "messageNonce",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "destination",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "optimisticPeriod",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "sendManagerMessage",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "messageNonce",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setMockReturnValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "setMockReturnValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "setMockReturnValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "statesAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "suggestLatestState",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "statePayload",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "nonce",
          "type": "uint32"
        }
      ],
      "name": "suggestState",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "statePayload",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAgentSecuredMock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBaseMock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOriginMock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStateHubMock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTips",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610e69806100206000396000f3fe60806040526004361061019c5760003560e01c8063873661bd116100ec578063b81442e01161008a578063e60f5f6a11610064578063e60f5f6a14610467578063f05b335114610487578063f2437942146104a7578063fb0e722b1461033d57600080fd5b8063b81442e01461043e578063c0b56f7c14610453578063d0d0cef7146101a157600080fd5b8063a9dcf22d116100c6578063a9dcf22d146103d3578063b26406a0146101a1578063b4596b4b146103f3578063b78973d41461041457600080fd5b8063873661bd14610376578063a1c702a7146103ad578063a2155c341461030257600080fd5b80634fc6ad851161015957806361169218116101335780636116921814610302578063714141de1461031d5780637622f78d1461033d57806376fae1981461035157600080fd5b80634fc6ad8514610299578063504730ab146102cb5780635980330d146102e057600080fd5b806320b0f9b2146101a157806328f3fac9146101b15780632de5aaf7146102035780634289cf751461024d5780634a4a26a2146101a15780634e04e7a71461027a575b600080fd5b3480156101ad57600080fd5b505b005b3480156101bd57600080fd5b506101ed6101cc3660046108fb565b50604080516060810182526000808252602082018190529181019190915290565b6040516101fa9190610962565b60405180910390f35b34801561020f57600080fd5b5061023f61021e366004610970565b60408051606081018252600080825260208201819052918101829052915091565b6040516101fa929190610989565b34801561025957600080fd5b506102626104bd565b6040516001600160a01b0390911681526020016101fa565b34801561028657600080fd5b506101af6102953660046109a6565b5050565b3480156102a557600080fd5b506102bd6102b43660046109e4565b60009392505050565b6040519081526020016101fa565b3480156102d757600080fd5b506102bd61057b565b3480156102ec57600080fd5b506102f561062e565b6040516101fa9190610a19565b34801561030e57600080fd5b506101af610295366004610a67565b34801561032957600080fd5b506101af610338366004610970565b6106c0565b34801561034957600080fd5b506000610262565b34801561035d57600080fd5b506103666106ea565b60405190151581526020016101fa565b610391610384366004610b43565b6000809550959350505050565b6040805163ffffffff90931683526020830191909152016101fa565b3480156103b957600080fd5b506103916103c8366004610bb9565b600080935093915050565b3480156103df57600080fd5b506103666103ee366004610c1b565b61079d565b3480156103ff57600080fd5b506102f561040e366004610c58565b50606090565b34801561042057600080fd5b506104296107ad565b60405163ffffffff90911681526020016101fa565b34801561044a57600080fd5b506101af610860565b34801561045f57600080fd5b5060606102f5565b34801561047357600080fd5b506101af6104823660046108fb565b61086b565b34801561049357600080fd5b506101af6104a2366004610c1b565b610884565b3480156104b357600080fd5b5060006102bd565b565b60008080546104cb90610c75565b15905061057557600080546104df90610c75565b80601f016020809104026020016040519081016040528092919081815260200182805461050b90610c75565b80156105585780601f1061052d57610100808354040283529160200191610558565b820191906000526020600020905b81548152906001019060200180831161053b57829003601f168201915b50505050508060200190518101906105709190610caf565b905090565b50600090565b600080805461058990610c75565b159050610575576000805461059d90610c75565b80601f01602080910402602001604051908101604052809291908181526020018280546105c990610c75565b80156106165780601f106105eb57610100808354040283529160200191610616565b820191906000526020600020905b8154815290600101906020018083116105f957829003601f168201915b50505050508060200190518101906105709190610ccc565b60606000805461063d90610c75565b80601f016020809104026020016040519081016040528092919081815260200182805461066990610c75565b80156106b65780601f1061068b576101008083540402835291602001916106b6565b820191906000526020600020905b81548152906001019060200180831161069957829003601f168201915b5050505050905090565b6040805160208101839052015b604051602081830303815290604052600090816102959190610d34565b60008080546106f890610c75565b159050610575576000805461070c90610c75565b80601f016020809104026020016040519081016040528092919081815260200182805461073890610c75565b80156107855780601f1061075a57610100808354040283529160200191610785565b820191906000526020600020905b81548152906001019060200180831161076857829003601f168201915b50505050508060200190518101906105709190610df4565b60006107a76106ea565b92915050565b60008080546107bb90610c75565b15905061057557600080546107cf90610c75565b80601f01602080910402602001604051908101604052809291908181526020018280546107fb90610c75565b80156108485780601f1061081d57610100808354040283529160200191610848565b820191906000526020600020905b81548152906001019060200180831161082b57829003601f168201915b50505050508060200190518101906105709190610e16565b6104bb600080610890565b604080516001600160a01b0383166020820152016106cd565b60006102958282610d34565b50805461089c90610c75565b6000825580601f106108ac575050565b601f0160209004906000526020600020908101906108ca91906108cd565b50565b5b808211156108e257600081556001016108ce565b5090565b6001600160a01b03811681146108ca57600080fd5b60006020828403121561090d57600080fd5b8135610918816108e6565b9392505050565b80516006811061093f57634e487b7160e01b600052602160045260246000fd5b825260208181015163ffffffff9081169184019190915260409182015116910152565b606081016107a7828461091f565b60006020828403121561098257600080fd5b5035919050565b6001600160a01b038316815260808101610918602083018461091f565b600080604083850312156109b957600080fd5b82356109c4816108e6565b946020939093013593505050565b63ffffffff811681146108ca57600080fd5b6000806000606084860312156109f957600080fd5b8335610a04816109d2565b95602085013595506040909401359392505050565b600060208083528351808285015260005b81811015610a4657858101830151858201604001528201610a2a565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060408385031215610a7a57600080fd5b8235610a85816109d2565b91506020830135610a95816109d2565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610ac757600080fd5b813567ffffffffffffffff80821115610ae257610ae2610aa0565b604051601f8301601f19908116603f01168101908282118183101715610b0a57610b0a610aa0565b81604052838152866020858801011115610b2357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a08688031215610b5b57600080fd5b8535610b66816109d2565b9450602086013593506040860135610b7d816109d2565b925060608601359150608086013567ffffffffffffffff811115610ba057600080fd5b610bac88828901610ab6565b9150509295509295909350565b600080600060608486031215610bce57600080fd5b8335610bd9816109d2565b92506020840135610be9816109d2565b9150604084013567ffffffffffffffff811115610c0557600080fd5b610c1186828701610ab6565b9150509250925092565b600060208284031215610c2d57600080fd5b813567ffffffffffffffff811115610c4457600080fd5b610c5084828501610ab6565b949350505050565b600060208284031215610c6a57600080fd5b8135610918816109d2565b600181811c90821680610c8957607f821691505b602082108103610ca957634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610cc157600080fd5b8151610918816108e6565b600060208284031215610cde57600080fd5b5051919050565b601f821115610d2f57600081815260208120601f850160051c81016020861015610d0c5750805b601f850160051c820191505b81811015610d2b57828155600101610d18565b5050505b505050565b815167ffffffffffffffff811115610d4e57610d4e610aa0565b610d6281610d5c8454610c75565b84610ce5565b602080601f831160018114610d975760008415610d7f5750858301515b600019600386901b1c1916600185901b178555610d2b565b600085815260208120601f198616915b82811015610dc657888601518255948401946001909101908401610da7565b5085821015610de45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610e0657600080fd5b8151801515811461091857600080fd5b600060208284031215610e2857600080fd5b8151610918816109d256fea264697066735822122069da08c1914eddbdaf0ea96343f0c3c21a47b7eeb7833c84e1353ef718057ea164736f6c63430008110033",
    "sourceMap": "293:884:134:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061019c5760003560e01c8063873661bd116100ec578063b81442e01161008a578063e60f5f6a11610064578063e60f5f6a14610467578063f05b335114610487578063f2437942146104a7578063fb0e722b1461033d57600080fd5b8063b81442e01461043e578063c0b56f7c14610453578063d0d0cef7146101a157600080fd5b8063a9dcf22d116100c6578063a9dcf22d146103d3578063b26406a0146101a1578063b4596b4b146103f3578063b78973d41461041457600080fd5b8063873661bd14610376578063a1c702a7146103ad578063a2155c341461030257600080fd5b80634fc6ad851161015957806361169218116101335780636116921814610302578063714141de1461031d5780637622f78d1461033d57806376fae1981461035157600080fd5b80634fc6ad8514610299578063504730ab146102cb5780635980330d146102e057600080fd5b806320b0f9b2146101a157806328f3fac9146101b15780632de5aaf7146102035780634289cf751461024d5780634a4a26a2146101a15780634e04e7a71461027a575b600080fd5b3480156101ad57600080fd5b505b005b3480156101bd57600080fd5b506101ed6101cc3660046108fb565b50604080516060810182526000808252602082018190529181019190915290565b6040516101fa9190610962565b60405180910390f35b34801561020f57600080fd5b5061023f61021e366004610970565b60408051606081018252600080825260208201819052918101829052915091565b6040516101fa929190610989565b34801561025957600080fd5b506102626104bd565b6040516001600160a01b0390911681526020016101fa565b34801561028657600080fd5b506101af6102953660046109a6565b5050565b3480156102a557600080fd5b506102bd6102b43660046109e4565b60009392505050565b6040519081526020016101fa565b3480156102d757600080fd5b506102bd61057b565b3480156102ec57600080fd5b506102f561062e565b6040516101fa9190610a19565b34801561030e57600080fd5b506101af610295366004610a67565b34801561032957600080fd5b506101af610338366004610970565b6106c0565b34801561034957600080fd5b506000610262565b34801561035d57600080fd5b506103666106ea565b60405190151581526020016101fa565b610391610384366004610b43565b6000809550959350505050565b6040805163ffffffff90931683526020830191909152016101fa565b3480156103b957600080fd5b506103916103c8366004610bb9565b600080935093915050565b3480156103df57600080fd5b506103666103ee366004610c1b565b61079d565b3480156103ff57600080fd5b506102f561040e366004610c58565b50606090565b34801561042057600080fd5b506104296107ad565b60405163ffffffff90911681526020016101fa565b34801561044a57600080fd5b506101af610860565b34801561045f57600080fd5b5060606102f5565b34801561047357600080fd5b506101af6104823660046108fb565b61086b565b34801561049357600080fd5b506101af6104a2366004610c1b565b610884565b3480156104b357600080fd5b5060006102bd565b565b60008080546104cb90610c75565b15905061057557600080546104df90610c75565b80601f016020809104026020016040519081016040528092919081815260200182805461050b90610c75565b80156105585780601f1061052d57610100808354040283529160200191610558565b820191906000526020600020905b81548152906001019060200180831161053b57829003601f168201915b50505050508060200190518101906105709190610caf565b905090565b50600090565b600080805461058990610c75565b159050610575576000805461059d90610c75565b80601f01602080910402602001604051908101604052809291908181526020018280546105c990610c75565b80156106165780601f106105eb57610100808354040283529160200191610616565b820191906000526020600020905b8154815290600101906020018083116105f957829003601f168201915b50505050508060200190518101906105709190610ccc565b60606000805461063d90610c75565b80601f016020809104026020016040519081016040528092919081815260200182805461066990610c75565b80156106b65780601f1061068b576101008083540402835291602001916106b6565b820191906000526020600020905b81548152906001019060200180831161069957829003601f168201915b5050505050905090565b6040805160208101839052015b604051602081830303815290604052600090816102959190610d34565b60008080546106f890610c75565b159050610575576000805461070c90610c75565b80601f016020809104026020016040519081016040528092919081815260200182805461073890610c75565b80156107855780601f1061075a57610100808354040283529160200191610785565b820191906000526020600020905b81548152906001019060200180831161076857829003601f168201915b50505050508060200190518101906105709190610df4565b60006107a76106ea565b92915050565b60008080546107bb90610c75565b15905061057557600080546107cf90610c75565b80601f01602080910402602001604051908101604052809291908181526020018280546107fb90610c75565b80156108485780601f1061081d57610100808354040283529160200191610848565b820191906000526020600020905b81548152906001019060200180831161082b57829003601f168201915b50505050508060200190518101906105709190610e16565b6104bb600080610890565b604080516001600160a01b0383166020820152016106cd565b60006102958282610d34565b50805461089c90610c75565b6000825580601f106108ac575050565b601f0160209004906000526020600020908101906108ca91906108cd565b50565b5b808211156108e257600081556001016108ce565b5090565b6001600160a01b03811681146108ca57600080fd5b60006020828403121561090d57600080fd5b8135610918816108e6565b9392505050565b80516006811061093f57634e487b7160e01b600052602160045260246000fd5b825260208181015163ffffffff9081169184019190915260409182015116910152565b606081016107a7828461091f565b60006020828403121561098257600080fd5b5035919050565b6001600160a01b038316815260808101610918602083018461091f565b600080604083850312156109b957600080fd5b82356109c4816108e6565b946020939093013593505050565b63ffffffff811681146108ca57600080fd5b6000806000606084860312156109f957600080fd5b8335610a04816109d2565b95602085013595506040909401359392505050565b600060208083528351808285015260005b81811015610a4657858101830151858201604001528201610a2a565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060408385031215610a7a57600080fd5b8235610a85816109d2565b91506020830135610a95816109d2565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610ac757600080fd5b813567ffffffffffffffff80821115610ae257610ae2610aa0565b604051601f8301601f19908116603f01168101908282118183101715610b0a57610b0a610aa0565b81604052838152866020858801011115610b2357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a08688031215610b5b57600080fd5b8535610b66816109d2565b9450602086013593506040860135610b7d816109d2565b925060608601359150608086013567ffffffffffffffff811115610ba057600080fd5b610bac88828901610ab6565b9150509295509295909350565b600080600060608486031215610bce57600080fd5b8335610bd9816109d2565b92506020840135610be9816109d2565b9150604084013567ffffffffffffffff811115610c0557600080fd5b610c1186828701610ab6565b9150509250925092565b600060208284031215610c2d57600080fd5b813567ffffffffffffffff811115610c4457600080fd5b610c5084828501610ab6565b949350505050565b600060208284031215610c6a57600080fd5b8135610918816109d2565b600181811c90821680610c8957607f821691505b602082108103610ca957634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610cc157600080fd5b8151610918816108e6565b600060208284031215610cde57600080fd5b5051919050565b601f821115610d2f57600081815260208120601f850160051c81016020861015610d0c5750805b601f850160051c820191505b81811015610d2b57828155600101610d18565b5050505b505050565b815167ffffffffffffffff811115610d4e57610d4e610aa0565b610d6281610d5c8454610c75565b84610ce5565b602080601f831160018114610d975760008415610d7f5750858301515b600019600386901b1c1916600185901b178555610d2b565b600085815260208120601f198616915b82811015610dc657888601518255948401946001909101908401610da7565b5085821015610de45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610e0657600080fd5b8151801515811461091857600080fd5b600060208284031215610e2857600080fd5b8151610918816109d256fea264697066735822122069da08c1914eddbdaf0ea96343f0c3c21a47b7eeb7833c84e1353ef718057ea164736f6c63430008110033",
    "sourceMap": "293:884:134:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;346:39:141;;;;;;;;;;;;;609:81:136;;;;;;;;;;-1:-1:-1;609:81:136;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;609:81:136;;;;;;;;:::i;:::-;;;;;;;;696:100;;;;;;;;;;-1:-1:-1;696:100:136;;;;;:::i;:::-;-1:-1:-1;;;;;;;;752:13:136;-1:-1:-1;;;;;;;;;;;;;;;696:100:136;;;;;;;;;;;;:::i;776:170:137:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1982:32:200;;;1964:51;;1952:2;1937:18;776:170:137;1818:203:200;934:68:134;;;;;;;;;;-1:-1:-1;934:68:134;;;;;:::i;:::-;;;;1008:167;;;;;;;;;;-1:-1:-1;1008:167:134;;;;;:::i;:::-;1150:17;1008:167;;;;;;;;;3004:25:200;;;2992:2;2977:18;1008:167:134;2858:177:200;1114:158:137;;;;;;;;;;;;;:::i;664:106::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;407:75:136:-;;;;;;;;;;-1:-1:-1;407:75:136;;;;;:::i;338:105:137:-;;;;;;;;;;-1:-1:-1;338:105:137;;;;;:::i;:::-;;:::i;488:58:136:-;;;;;;;;;;-1:-1:-1;535:7:136;488:58;;952:156:137;;;;;;;;;;;;;:::i;:::-;;;4145:14:200;;4138:22;4120:41;;4108:2;4093:18;952:156:137;3980:187:200;495:250:134;;;;;;:::i;:::-;701:19;722;495:250;;;;;;;;;;;;;5964:10:200;5952:23;;;5934:42;;6007:2;5992:18;;5985:34;;;;5907:18;495:250:134;5762:263:200;751:177:134;;;;;;;;;;-1:-1:-1;751:177:134;;;;;:::i;:::-;880:19;901;751:177;;;;;;;391:117:141;;;;;;;;;;-1:-1:-1;391:117:141;;;;;:::i;:::-;;:::i;666:88::-;;;;;;;;;;-1:-1:-1;666:88:141;;;;;:::i;:::-;-1:-1:-1;725:25:141;;666:88;1278:158:137;;;;;;;;;;;;;:::i;:::-;;;7376:10:200;7364:23;;;7346:42;;7334:2;7319:18;1278:158:137;7202:192:200;250:82:137;;;;;;;;;;;;;:::i;578::141:-;;;;;;;;;;-1:-1:-1;631:25:141;578:82;;449:105:137;;;;;;;;;;-1:-1:-1;449:105:137;;;;;:::i;:::-;;:::i;560:98::-;;;;;;;;;;-1:-1:-1;560:98:137;;;;;:::i;:::-;;:::i;514:58:141:-;;;;;;;;;;-1:-1:-1;535:7:136;514:58:141;488::136;346:39:141;:::o;776:170:137:-;830:7;856:16;:23;;;;;:::i;:::-;:28;;-1:-1:-1;856:83:137;;911:16;900:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;849:90;;776:170;:::o;856:83::-;-1:-1:-1;895:1:137;;776:170::o;1114:158::-;1165:7;1191:16;:23;;;;;:::i;:::-;:28;;-1:-1:-1;1191:74:137;;1237:16;1226:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;664:106::-;716:12;747:16;740:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;664:106;:::o;338:105::-;419:17;;;;;;3004:25:200;;;2977:18;419:17:137;;;;;;;;;;;;;400:16;:36;;;;;;:::i;952:156::-;1003:4;1026:16;:23;;;;;:::i;:::-;:28;;-1:-1:-1;1026:75:137;;1076:16;1065:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;391:117:141:-;450:12;481:20;:18;:20::i;:::-;474:27;391:117;-1:-1:-1;;391:117:141:o;1278:158:137:-;1331:6;1356:16;:23;;;;;:::i;:::-;:28;;-1:-1:-1;1356:73:137;;1402:16;1391:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;250:82::-;302:23;309:16;;302:23;:::i;449:105::-;530:17;;;-1:-1:-1;;;;;1982:32:200;;530:17:137;;;1964:51:200;1937:18;530:17:137;1818:203:200;560:98:137;627:16;:24;646:5;627:16;:24;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;14:131:200:-;-1:-1:-1;;;;;89:31:200;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:200:o;534:466::-;615:5;609:12;647:1;643:2;640:9;630:140;;692:10;687:3;683:20;680:1;673:31;727:4;724:1;717:15;755:4;752:1;745:15;630:140;779:15;;840:4;829:16;;;823:23;865:10;907:21;;;891:14;;;884:45;;;;982:4;971:16;;;965:23;961:32;945:14;;938:56;534:466::o;1005:260::-;1199:2;1184:18;;1211:48;1188:9;1241:6;1211:48;:::i;1270:180::-;1329:6;1382:2;1370:9;1361:7;1357:23;1353:32;1350:52;;;1398:1;1395;1388:12;1350:52;-1:-1:-1;1421:23:200;;1270:180;-1:-1:-1;1270:180:200:o;1455:358::-;-1:-1:-1;;;;;1708:32:200;;1690:51;;1677:3;1662:19;;1750:57;1803:2;1788:18;;1780:6;1750:57;:::i;2026:315::-;2094:6;2102;2155:2;2143:9;2134:7;2130:23;2126:32;2123:52;;;2171:1;2168;2161:12;2123:52;2210:9;2197:23;2229:31;2254:5;2229:31;:::i;:::-;2279:5;2331:2;2316:18;;;;2303:32;;-1:-1:-1;;;2026:315:200:o;2346:121::-;2431:10;2424:5;2420:22;2413:5;2410:33;2400:61;;2457:1;2454;2447:12;2472:381;2548:6;2556;2564;2617:2;2605:9;2596:7;2592:23;2588:32;2585:52;;;2633:1;2630;2623:12;2585:52;2672:9;2659:23;2691:30;2715:5;2691:30;:::i;:::-;2740:5;2792:2;2777:18;;2764:32;;-1:-1:-1;2843:2:200;2828:18;;;2815:32;;2472:381;-1:-1:-1;;;2472:381:200:o;3040:546::-;3150:4;3179:2;3208;3197:9;3190:21;3240:6;3234:13;3283:6;3278:2;3267:9;3263:18;3256:34;3308:1;3318:140;3332:6;3329:1;3326:13;3318:140;;;3427:14;;;3423:23;;3417:30;3393:17;;;3412:2;3389:26;3382:66;3347:10;;3318:140;;;3322:3;3507:1;3502:2;3493:6;3482:9;3478:22;3474:31;3467:42;3577:2;3570;3566:7;3561:2;3553:6;3549:15;3545:29;3534:9;3530:45;3526:54;3518:62;;;;3040:546;;;;:::o;3591:384::-;3657:6;3665;3718:2;3706:9;3697:7;3693:23;3689:32;3686:52;;;3734:1;3731;3724:12;3686:52;3773:9;3760:23;3792:30;3816:5;3792:30;:::i;:::-;3841:5;-1:-1:-1;3898:2:200;3883:18;;3870:32;3911;3870;3911;:::i;:::-;3962:7;3952:17;;;3591:384;;;;;:::o;4172:127::-;4233:10;4228:3;4224:20;4221:1;4214:31;4264:4;4261:1;4254:15;4288:4;4285:1;4278:15;4304:718;4346:5;4399:3;4392:4;4384:6;4380:17;4376:27;4366:55;;4417:1;4414;4407:12;4366:55;4453:6;4440:20;4479:18;4516:2;4512;4509:10;4506:36;;;4522:18;;:::i;:::-;4597:2;4591:9;4565:2;4651:13;;-1:-1:-1;;4647:22:200;;;4671:2;4643:31;4639:40;4627:53;;;4695:18;;;4715:22;;;4692:46;4689:72;;;4741:18;;:::i;:::-;4781:10;4777:2;4770:22;4816:2;4808:6;4801:18;4862:3;4855:4;4850:2;4842:6;4838:15;4834:26;4831:35;4828:55;;;4879:1;4876;4869:12;4828:55;4943:2;4936:4;4928:6;4924:17;4917:4;4909:6;4905:17;4892:54;4990:1;4983:4;4978:2;4970:6;4966:15;4962:26;4955:37;5010:6;5001:15;;;;;;4304:718;;;;:::o;5027:730::-;5129:6;5137;5145;5153;5161;5214:3;5202:9;5193:7;5189:23;5185:33;5182:53;;;5231:1;5228;5221:12;5182:53;5270:9;5257:23;5289:30;5313:5;5289:30;:::i;:::-;5338:5;-1:-1:-1;5390:2:200;5375:18;;5362:32;;-1:-1:-1;5446:2:200;5431:18;;5418:32;5459;5418;5459;:::i;:::-;5510:7;-1:-1:-1;5564:2:200;5549:18;;5536:32;;-1:-1:-1;5619:3:200;5604:19;;5591:33;5647:18;5636:30;;5633:50;;;5679:1;5676;5669:12;5633:50;5702:49;5743:7;5734:6;5723:9;5719:22;5702:49;:::i;:::-;5692:59;;;5027:730;;;;;;;;:::o;6030:592::-;6114:6;6122;6130;6183:2;6171:9;6162:7;6158:23;6154:32;6151:52;;;6199:1;6196;6189:12;6151:52;6238:9;6225:23;6257:30;6281:5;6257:30;:::i;:::-;6306:5;-1:-1:-1;6363:2:200;6348:18;;6335:32;6376;6335;6376;:::i;:::-;6427:7;-1:-1:-1;6485:2:200;6470:18;;6457:32;6512:18;6501:30;;6498:50;;;6544:1;6541;6534:12;6498:50;6567:49;6608:7;6599:6;6588:9;6584:22;6567:49;:::i;:::-;6557:59;;;6030:592;;;;;:::o;6627:320::-;6695:6;6748:2;6736:9;6727:7;6723:23;6719:32;6716:52;;;6764:1;6761;6754:12;6716:52;6804:9;6791:23;6837:18;6829:6;6826:30;6823:50;;;6869:1;6866;6859:12;6823:50;6892:49;6933:7;6924:6;6913:9;6909:22;6892:49;:::i;:::-;6882:59;6627:320;-1:-1:-1;;;;6627:320:200:o;6952:245::-;7010:6;7063:2;7051:9;7042:7;7038:23;7034:32;7031:52;;;7079:1;7076;7069:12;7031:52;7118:9;7105:23;7137:30;7161:5;7137:30;:::i;7399:380::-;7478:1;7474:12;;;;7521;;;7542:61;;7596:4;7588:6;7584:17;7574:27;;7542:61;7649:2;7641:6;7638:14;7618:18;7615:38;7612:161;;7695:10;7690:3;7686:20;7683:1;7676:31;7730:4;7727:1;7720:15;7758:4;7755:1;7748:15;7612:161;;7399:380;;;:::o;7784:259::-;7862:6;7915:2;7903:9;7894:7;7890:23;7886:32;7883:52;;;7931:1;7928;7921:12;7883:52;7963:9;7957:16;7982:31;8007:5;7982:31;:::i;8048:184::-;8118:6;8171:2;8159:9;8150:7;8146:23;8142:32;8139:52;;;8187:1;8184;8177:12;8139:52;-1:-1:-1;8210:16:200;;8048:184;-1:-1:-1;8048:184:200:o;8362:544::-;8463:2;8458:3;8455:11;8452:448;;;8499:1;8524:5;8520:2;8513:17;8569:4;8565:2;8555:19;8639:2;8627:10;8623:19;8620:1;8616:27;8610:4;8606:38;8675:4;8663:10;8660:20;8657:47;;;-1:-1:-1;8698:4:200;8657:47;8753:2;8748:3;8744:12;8741:1;8737:20;8731:4;8727:31;8717:41;;8808:82;8826:2;8819:5;8816:13;8808:82;;;8871:17;;;8852:1;8841:13;8808:82;;;8812:3;;;8452:448;8362:544;;;:::o;9082:1348::-;9206:3;9200:10;9233:18;9225:6;9222:30;9219:56;;;9255:18;;:::i;:::-;9284:96;9373:6;9333:38;9365:4;9359:11;9333:38;:::i;:::-;9327:4;9284:96;:::i;:::-;9435:4;;9499:2;9488:14;;9516:1;9511:662;;;;10217:1;10234:6;10231:89;;;-1:-1:-1;10286:19:200;;;10280:26;10231:89;-1:-1:-1;;9039:1:200;9035:11;;;9031:24;9027:29;9017:40;9063:1;9059:11;;;9014:57;10333:81;;9481:943;;9511:662;8309:1;8302:14;;;8346:4;8333:18;;-1:-1:-1;;9547:20:200;;;9664:236;9678:7;9675:1;9672:14;9664:236;;;9767:19;;;9761:26;9746:42;;9859:27;;;;9827:1;9815:14;;;;9694:19;;9664:236;;;9668:3;9928:6;9919:7;9916:19;9913:201;;;9989:19;;;9983:26;-1:-1:-1;;10072:1:200;10068:14;;;10084:3;10064:24;10060:37;10056:42;10041:58;10026:74;;9913:201;-1:-1:-1;;;;;10160:1:200;10144:14;;;10140:22;10127:36;;-1:-1:-1;9082:1348:200:o;10435:277::-;10502:6;10555:2;10543:9;10534:7;10530:23;10526:32;10523:52;;;10571:1;10568;10561:12;10523:52;10603:9;10597:16;10656:5;10649:13;10642:21;10635:5;10632:32;10622:60;;10678:1;10675;10668:12;10717:249;10786:6;10839:2;10827:9;10818:7;10814:23;10810:32;10807:52;;;10855:1;10852;10845:12;10807:52;10887:9;10881:16;10906:30;10930:5;10906:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "agentManager()": "7622f78d",
    "agentStatus(address)": "28f3fac9",
    "deleteMockReturnValue()": "b81442e0",
    "getAgent(uint256)": "2de5aaf7",
    "getMinimumTipsValue(uint32,uint256,uint256)": "4fc6ad85",
    "getReturnValueAddress()": "4289cf75",
    "getReturnValueBool()": "76fae198",
    "getReturnValueBytes()": "5980330d",
    "getReturnValueUint()": "504730ab",
    "getReturnValueUint32()": "b78973d4",
    "inbox()": "fb0e722b",
    "isValidState(bytes)": "a9dcf22d",
    "openDispute(uint32,uint32)": "a2155c34",
    "resolveDispute(uint32,uint32)": "61169218",
    "sendBaseMessage(uint32,bytes32,uint32,uint256,bytes)": "873661bd",
    "sendManagerMessage(uint32,uint32,bytes)": "a1c702a7",
    "setMockReturnValue(address)": "e60f5f6a",
    "setMockReturnValue(bytes)": "f05b3351",
    "setMockReturnValue(uint256)": "714141de",
    "statesAmount()": "f2437942",
    "suggestLatestState()": "c0b56f7c",
    "suggestState(uint32)": "b4596b4b",
    "testAgentSecuredMock()": "4a4a26a2",
    "testBaseMock()": "b26406a0",
    "testOriginMock()": "d0d0cef7",
    "testStateHubMock()": "20b0f9b2",
    "withdrawTips(address,uint256)": "4e04e7a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"agentManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"agentStatus\",\"outputs\":[{\"components\":[{\"internalType\":\"enum AgentFlag\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"internalType\":\"struct AgentStatus\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteMockReturnValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum AgentFlag\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"internalType\":\"struct AgentStatus\",\"name\":\"status\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destination\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"paddedRequest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contentLength\",\"type\":\"uint256\"}],\"name\":\"getMinimumTipsValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tipsValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReturnValueAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReturnValueBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReturnValueBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReturnValueUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReturnValueUint32\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inbox\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"isValidState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"guardIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"notaryIndex\",\"type\":\"uint32\"}],\"name\":\"openDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"slashedIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"rivalIndex\",\"type\":\"uint32\"}],\"name\":\"resolveDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destination\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"optimisticPeriod\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"paddedRequest\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"content\",\"type\":\"bytes\"}],\"name\":\"sendBaseMessage\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"messageNonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destination\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"optimisticPeriod\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"sendManagerMessage\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"messageNonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setMockReturnValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"setMockReturnValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"setMockReturnValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"statesAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"suggestLatestState\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"statePayload\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"suggestState\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"statePayload\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAgentSecuredMock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBaseMock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOriginMock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testStateHubMock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTips\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"agentStatus(address)\":{\"details\":\"Will return AgentFlag.Fraudulent for agents that have been proven to commit fraud, but their status is not updated to Slashed yet.\",\"params\":{\"agent\":\"Agent address\"},\"returns\":{\"_0\":\"Status for the given agent: (flag, domain, index).\"}},\"getAgent(uint256)\":{\"details\":\"Will return empty values if agent with given index doesn't exist.\",\"params\":{\"index\":\"Agent index in the Agent Merkle Tree\"},\"returns\":{\"agent\":\"   Agent address\",\"status\":\"  Status for the given agent: (flag, domain, index)\"}},\"getMinimumTipsValue(uint32,uint256,uint256)\":{\"details\":\"Using at least `tipsValue` as `msg.value` for `sendBaseMessage()` will guarantee that the message will be accepted.\",\"params\":{\"contentLength\":\"The length of the message content\",\"destination\":\"Domain of destination chain\",\"paddedRequest\":\"Padded encoded message execution request on destination chain\"},\"returns\":{\"tipsValue\":\"       Minimum tips value for a message to be accepted\"}},\"inbox()\":{\"details\":\"Inbox passes verified agent statements to `IAgentSecured` contract.\"},\"openDispute(uint32,uint32)\":{\"params\":{\"guardIndex\":\"Index of the Guard in the Agent Merkle Tree\",\"notaryIndex\":\"Index of the Notary in the Agent Merkle Tree\"}},\"resolveDispute(uint32,uint32)\":{\"params\":{\"rivalIndex\":\"Index of the their Dispute Rival in the Agent Merkle Tree\",\"slashedIndex\":\"Index of the slashed agent in the Agent Merkle Tree\"}},\"sendBaseMessage(uint32,bytes32,uint32,uint256,bytes)\":{\"details\":\"Recipient has to conform to IMessageRecipient interface, otherwise message won't be delivered.\",\"params\":{\"content\":\"Raw bytes content of message\",\"destination\":\"Domain of destination chain\",\"optimisticPeriod\":\"Optimistic period for message execution on destination chain\",\"paddedRequest\":\"Padded encoded message execution request on destination chain\",\"recipient\":\"Address of recipient on destination chain as bytes32\"},\"returns\":{\"messageHash\":\"         Hash of the sent message\",\"messageNonce\":\"        Nonce of the sent message\"}},\"sendManagerMessage(uint32,uint32,bytes)\":{\"details\":\"This could only be called by AgentManager, which takes care of encoding the calldata payload. Note: (msgOrigin, proofMaturity) security args will be added to payload on the destination chain so that the AgentManager could verify where the Manager Message came from and how mature is the proof. Note: function is not payable, as no tips are required for sending a manager message.\",\"params\":{\"destination\":\"Domain of destination chain\",\"optimisticPeriod\":\"Optimistic period for message execution on destination chain\",\"payload\":\"Payload for calling AgentManager on destination chain (with extra security args)\"}},\"statesAmount()\":{\"details\":\"This includes the initial state of \\\"empty Origin Merkle Tree\\\".\"},\"suggestLatestState()\":{\"returns\":{\"statePayload\":\"    Raw payload with the latest state data\"}},\"suggestState(uint32)\":{\"params\":{\"nonce\":\"Historical nonce to form a state\"},\"returns\":{\"statePayload\":\"    Raw payload with historical state data\"}},\"withdrawTips(address,uint256)\":{\"details\":\"Could only be called by a local AgentManager.\",\"params\":{\"amount\":\"Tips value to withdraw\",\"recipient\":\"Address to withdraw tips to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"agentManager()\":{\"notice\":\"Returns the address of the local AgentManager contract, which is treated as the \\\"source of truth\\\" for agent statuses.\"},\"agentStatus(address)\":{\"notice\":\"Returns (flag, domain, index) for a given agent. See Structures.sol for details.\"},\"getAgent(uint256)\":{\"notice\":\"Returns agent address and their current status for a given agent index.\"},\"getMinimumTipsValue(uint32,uint256,uint256)\":{\"notice\":\"Returns the minimum tips value for sending a message to a given destination.\"},\"inbox()\":{\"notice\":\"Returns the address of the local Inbox contract, which is treated as the \\\"source of truth\\\" for agent-signed statements.\"},\"openDispute(uint32,uint32)\":{\"notice\":\"Local AgentManager should call this function to indicate that a dispute between a Guard and a Notary has been opened.\"},\"resolveDispute(uint32,uint32)\":{\"notice\":\"Local AgentManager should call this function to indicate that a dispute has been resolved due to one of the agents being slashed. > `rivalIndex` will be ZERO, if the slashed agent was not in the Dispute.\"},\"sendBaseMessage(uint32,bytes32,uint32,uint256,bytes)\":{\"notice\":\"Send a message to the recipient located on destination domain.\"},\"sendManagerMessage(uint32,uint32,bytes)\":{\"notice\":\"Send a manager message to the destination domain.\"},\"statesAmount()\":{\"notice\":\"Returns the amount of saved states so far.\"},\"suggestLatestState()\":{\"notice\":\"Suggest the data (state after latest sent message) to sign for an Agent. Note: signing the suggested state data will will never lead to slashing of the actor, assuming they have confirmed that the block, which number is included in the data, is not subject to reorganization (which is different for every observed chain).\"},\"suggestState(uint32)\":{\"notice\":\"Given the historical nonce, suggest the state data to sign for an Agent. Note: signing the suggested state data will will never lead to slashing of the actor, assuming they have confirmed that the block, which number is included in the data, is not subject to reorganization (which is different for every observed chain).\"},\"testAgentSecuredMock()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"},\"testBaseMock()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"},\"testOriginMock()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"},\"testStateHubMock()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"},\"withdrawTips(address,uint256)\":{\"notice\":\"Withdraws locked base message tips to the recipient.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/OriginMock.t.sol\":\"OriginMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/interfaces/IAgentSecured.sol\":{\"keccak256\":\"0x9a7efecf8fe37cc8245e3b0e3f5d6d6ee056cdd97ccb5631ff6347bdfc9fc889\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7877d223162a76d3fe75490069719b3a4f14cd66fc42bfa915f2813390b7d2aa\",\"dweb:/ipfs/QmZhE1rnffA9bbtkNAwVk6iitMPk14gHbK56mdeHQEPhxj\"]},\"contracts/interfaces/IStateHub.sol\":{\"keccak256\":\"0x26cf1842739cb65203ed5f243879b11939d2e77c46cc629349f016d667c003f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f9959d5230d5b0cac7bc3171cee2cfd95ab548bbcff0da3b06d02a02f61f31\",\"dweb:/ipfs/QmezRqMJF1MfxxU8dzXYFVteBTPq4yuaMVZLNVTMayUzuV\"]},\"contracts/interfaces/InterfaceOrigin.sol\":{\"keccak256\":\"0xe2c7feb15991348e274a413ee7e24c4cc4e2225c851924955ad2f025c8b5c42f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://314cdd9daf29e9d6ed288e02be302487cce6c0ca89805e5e8f6d78fb150c6ea6\",\"dweb:/ipfs/QmP6vY22Cpf45a3eDR6hPBnDDqCPcu4cRXJhH7W41ohkD6\"]},\"contracts/libs/Errors.sol\":{\"keccak256\":\"0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b\",\"dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB\"]},\"contracts/libs/Structures.sol\":{\"keccak256\":\"0x3eaa63f5d9aac514328111e8fdd037dc6fdb18af7541a8287deeacd2e44f7137\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://633619910c74a0685ef2993a2e7cc44088929121a15c8a9fc26c9bbadffbda71\",\"dweb:/ipfs/QmZceJv6UntiMWW4JZHbmytLsqXshbuav8yoiritksvqqy\"]},\"test/mocks/OriginMock.t.sol\":{\"keccak256\":\"0x88397a23f82c0e21324d3ef4cf90114f3b73aa9ed822f5d0baa68d87a7824365\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4ffe30614e8d4e39d4713cc176cae2113e768bf34a543d8cb019c6ec1eb3e0\",\"dweb:/ipfs/QmWmFroUNtnDD7BzsjmTCxpfXhM36dTieE5FB5WFThAR2L\"]},\"test/mocks/base/AgentSecuredMock.t.sol\":{\"keccak256\":\"0x7c74b961b7d06d65138f35d638b68be02046565479f09606bf099da0093eba36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5faa5048684a4685809fec66813899f0c55f47ec27b39c7b0440c2083cd34e4c\",\"dweb:/ipfs/QmfL3CxnjPXHnD137ERbyLMTuAfJsJa3k7yft7VqYGdvqf\"]},\"test/mocks/base/BaseMock.t.sol\":{\"keccak256\":\"0x5d0ddef55a6d63ce25175fd2cefc00b9030e8f7247600220e67a33c3982b9697\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96928ffa43cb650c3c594fa2d1459f2f44eea1f52fb988011a638e80b255d986\",\"dweb:/ipfs/QmXpFxAzvt9jaD4BsKGLJnBdHF1m4uvfB1iKt94mr3ryCJ\"]},\"test/mocks/hubs/StateHubMock.t.sol\":{\"keccak256\":\"0x04491dc0d2d8847c6ad54969d4a2d66b6df88fd357b2bc546407021ab23a9884\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca230a0bf6683fbe7420636c0a6afc0f64c3bec92a268ac3823a6dd668f48ee4\",\"dweb:/ipfs/QmY72pu3ACw9fQw785g7u61gg4UG6hUqUJSMhH1aK6XSmf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "agentManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "agentStatus",
          "outputs": [
            {
              "internalType": "struct AgentStatus",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum AgentFlag",
                  "name": "flag",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "domain",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "index",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteMockReturnValue"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgent",
          "outputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "struct AgentStatus",
              "name": "status",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum AgentFlag",
                  "name": "flag",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "domain",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "index",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "destination",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "paddedRequest",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "contentLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMinimumTipsValue",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tipsValue",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReturnValueAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReturnValueBool",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReturnValueBytes",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReturnValueUint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReturnValueUint32",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "inbox",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidState",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValid",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "guardIndex",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "notaryIndex",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "openDispute"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "slashedIndex",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "rivalIndex",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resolveDispute"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "destination",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "recipient",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "optimisticPeriod",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "paddedRequest",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "content",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sendBaseMessage",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "messageNonce",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "messageHash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "destination",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "optimisticPeriod",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sendManagerMessage",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "messageNonce",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "messageHash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMockReturnValue"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "value",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMockReturnValue"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMockReturnValue"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "statesAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "suggestLatestState",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "statePayload",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "suggestState",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "statePayload",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAgentSecuredMock"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBaseMock"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOriginMock"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testStateHubMock"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTips"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "agentStatus(address)": {
            "details": "Will return AgentFlag.Fraudulent for agents that have been proven to commit fraud, but their status is not updated to Slashed yet.",
            "params": {
              "agent": "Agent address"
            },
            "returns": {
              "_0": "Status for the given agent: (flag, domain, index)."
            }
          },
          "getAgent(uint256)": {
            "details": "Will return empty values if agent with given index doesn't exist.",
            "params": {
              "index": "Agent index in the Agent Merkle Tree"
            },
            "returns": {
              "agent": "   Agent address",
              "status": "  Status for the given agent: (flag, domain, index)"
            }
          },
          "getMinimumTipsValue(uint32,uint256,uint256)": {
            "details": "Using at least `tipsValue` as `msg.value` for `sendBaseMessage()` will guarantee that the message will be accepted.",
            "params": {
              "contentLength": "The length of the message content",
              "destination": "Domain of destination chain",
              "paddedRequest": "Padded encoded message execution request on destination chain"
            },
            "returns": {
              "tipsValue": "       Minimum tips value for a message to be accepted"
            }
          },
          "inbox()": {
            "details": "Inbox passes verified agent statements to `IAgentSecured` contract."
          },
          "openDispute(uint32,uint32)": {
            "params": {
              "guardIndex": "Index of the Guard in the Agent Merkle Tree",
              "notaryIndex": "Index of the Notary in the Agent Merkle Tree"
            }
          },
          "resolveDispute(uint32,uint32)": {
            "params": {
              "rivalIndex": "Index of the their Dispute Rival in the Agent Merkle Tree",
              "slashedIndex": "Index of the slashed agent in the Agent Merkle Tree"
            }
          },
          "sendBaseMessage(uint32,bytes32,uint32,uint256,bytes)": {
            "details": "Recipient has to conform to IMessageRecipient interface, otherwise message won't be delivered.",
            "params": {
              "content": "Raw bytes content of message",
              "destination": "Domain of destination chain",
              "optimisticPeriod": "Optimistic period for message execution on destination chain",
              "paddedRequest": "Padded encoded message execution request on destination chain",
              "recipient": "Address of recipient on destination chain as bytes32"
            },
            "returns": {
              "messageHash": "         Hash of the sent message",
              "messageNonce": "        Nonce of the sent message"
            }
          },
          "sendManagerMessage(uint32,uint32,bytes)": {
            "details": "This could only be called by AgentManager, which takes care of encoding the calldata payload. Note: (msgOrigin, proofMaturity) security args will be added to payload on the destination chain so that the AgentManager could verify where the Manager Message came from and how mature is the proof. Note: function is not payable, as no tips are required for sending a manager message.",
            "params": {
              "destination": "Domain of destination chain",
              "optimisticPeriod": "Optimistic period for message execution on destination chain",
              "payload": "Payload for calling AgentManager on destination chain (with extra security args)"
            }
          },
          "statesAmount()": {
            "details": "This includes the initial state of \"empty Origin Merkle Tree\"."
          },
          "suggestLatestState()": {
            "returns": {
              "statePayload": "    Raw payload with the latest state data"
            }
          },
          "suggestState(uint32)": {
            "params": {
              "nonce": "Historical nonce to form a state"
            },
            "returns": {
              "statePayload": "    Raw payload with historical state data"
            }
          },
          "withdrawTips(address,uint256)": {
            "details": "Could only be called by a local AgentManager.",
            "params": {
              "amount": "Tips value to withdraw",
              "recipient": "Address to withdraw tips to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "agentManager()": {
            "notice": "Returns the address of the local AgentManager contract, which is treated as the \"source of truth\" for agent statuses."
          },
          "agentStatus(address)": {
            "notice": "Returns (flag, domain, index) for a given agent. See Structures.sol for details."
          },
          "getAgent(uint256)": {
            "notice": "Returns agent address and their current status for a given agent index."
          },
          "getMinimumTipsValue(uint32,uint256,uint256)": {
            "notice": "Returns the minimum tips value for sending a message to a given destination."
          },
          "inbox()": {
            "notice": "Returns the address of the local Inbox contract, which is treated as the \"source of truth\" for agent-signed statements."
          },
          "openDispute(uint32,uint32)": {
            "notice": "Local AgentManager should call this function to indicate that a dispute between a Guard and a Notary has been opened."
          },
          "resolveDispute(uint32,uint32)": {
            "notice": "Local AgentManager should call this function to indicate that a dispute has been resolved due to one of the agents being slashed. > `rivalIndex` will be ZERO, if the slashed agent was not in the Dispute."
          },
          "sendBaseMessage(uint32,bytes32,uint32,uint256,bytes)": {
            "notice": "Send a message to the recipient located on destination domain."
          },
          "sendManagerMessage(uint32,uint32,bytes)": {
            "notice": "Send a manager message to the destination domain."
          },
          "statesAmount()": {
            "notice": "Returns the amount of saved states so far."
          },
          "suggestLatestState()": {
            "notice": "Suggest the data (state after latest sent message) to sign for an Agent. Note: signing the suggested state data will will never lead to slashing of the actor, assuming they have confirmed that the block, which number is included in the data, is not subject to reorganization (which is different for every observed chain)."
          },
          "suggestState(uint32)": {
            "notice": "Given the historical nonce, suggest the state data to sign for an Agent. Note: signing the suggested state data will will never lead to slashing of the actor, assuming they have confirmed that the block, which number is included in the data, is not subject to reorganization (which is different for every observed chain)."
          },
          "testAgentSecuredMock()": {
            "notice": "Prevents this contract from being included in the coverage report"
          },
          "testBaseMock()": {
            "notice": "Prevents this contract from being included in the coverage report"
          },
          "testOriginMock()": {
            "notice": "Prevents this contract from being included in the coverage report"
          },
          "testStateHubMock()": {
            "notice": "Prevents this contract from being included in the coverage report"
          },
          "withdrawTips(address,uint256)": {
            "notice": "Withdraws locked base message tips to the recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/mocks/OriginMock.t.sol": "OriginMock"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/IAgentSecured.sol": {
        "keccak256": "0x9a7efecf8fe37cc8245e3b0e3f5d6d6ee056cdd97ccb5631ff6347bdfc9fc889",
        "urls": [
          "bzz-raw://7877d223162a76d3fe75490069719b3a4f14cd66fc42bfa915f2813390b7d2aa",
          "dweb:/ipfs/QmZhE1rnffA9bbtkNAwVk6iitMPk14gHbK56mdeHQEPhxj"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStateHub.sol": {
        "keccak256": "0x26cf1842739cb65203ed5f243879b11939d2e77c46cc629349f016d667c003f1",
        "urls": [
          "bzz-raw://d8f9959d5230d5b0cac7bc3171cee2cfd95ab548bbcff0da3b06d02a02f61f31",
          "dweb:/ipfs/QmezRqMJF1MfxxU8dzXYFVteBTPq4yuaMVZLNVTMayUzuV"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceOrigin.sol": {
        "keccak256": "0xe2c7feb15991348e274a413ee7e24c4cc4e2225c851924955ad2f025c8b5c42f",
        "urls": [
          "bzz-raw://314cdd9daf29e9d6ed288e02be302487cce6c0ca89805e5e8f6d78fb150c6ea6",
          "dweb:/ipfs/QmP6vY22Cpf45a3eDR6hPBnDDqCPcu4cRXJhH7W41ohkD6"
        ],
        "license": "MIT"
      },
      "contracts/libs/Errors.sol": {
        "keccak256": "0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011",
        "urls": [
          "bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b",
          "dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB"
        ],
        "license": "MIT"
      },
      "contracts/libs/Structures.sol": {
        "keccak256": "0x3eaa63f5d9aac514328111e8fdd037dc6fdb18af7541a8287deeacd2e44f7137",
        "urls": [
          "bzz-raw://633619910c74a0685ef2993a2e7cc44088929121a15c8a9fc26c9bbadffbda71",
          "dweb:/ipfs/QmZceJv6UntiMWW4JZHbmytLsqXshbuav8yoiritksvqqy"
        ],
        "license": "MIT"
      },
      "test/mocks/OriginMock.t.sol": {
        "keccak256": "0x88397a23f82c0e21324d3ef4cf90114f3b73aa9ed822f5d0baa68d87a7824365",
        "urls": [
          "bzz-raw://ca4ffe30614e8d4e39d4713cc176cae2113e768bf34a543d8cb019c6ec1eb3e0",
          "dweb:/ipfs/QmWmFroUNtnDD7BzsjmTCxpfXhM36dTieE5FB5WFThAR2L"
        ],
        "license": "MIT"
      },
      "test/mocks/base/AgentSecuredMock.t.sol": {
        "keccak256": "0x7c74b961b7d06d65138f35d638b68be02046565479f09606bf099da0093eba36",
        "urls": [
          "bzz-raw://5faa5048684a4685809fec66813899f0c55f47ec27b39c7b0440c2083cd34e4c",
          "dweb:/ipfs/QmfL3CxnjPXHnD137ERbyLMTuAfJsJa3k7yft7VqYGdvqf"
        ],
        "license": "MIT"
      },
      "test/mocks/base/BaseMock.t.sol": {
        "keccak256": "0x5d0ddef55a6d63ce25175fd2cefc00b9030e8f7247600220e67a33c3982b9697",
        "urls": [
          "bzz-raw://96928ffa43cb650c3c594fa2d1459f2f44eea1f52fb988011a638e80b255d986",
          "dweb:/ipfs/QmXpFxAzvt9jaD4BsKGLJnBdHF1m4uvfB1iKt94mr3ryCJ"
        ],
        "license": "MIT"
      },
      "test/mocks/hubs/StateHubMock.t.sol": {
        "keccak256": "0x04491dc0d2d8847c6ad54969d4a2d66b6df88fd357b2bc546407021ab23a9884",
        "urls": [
          "bzz-raw://ca230a0bf6683fbe7420636c0a6afc0f64c3bec92a268ac3823a6dd668f48ee4",
          "dweb:/ipfs/QmY72pu3ACw9fQw785g7u61gg4UG6hUqUJSMhH1aK6XSmf"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/mocks/OriginMock.t.sol",
    "id": 58709,
    "exportedSymbols": {
      "AgentSecuredMock": [
        58872
      ],
      "InterfaceOrigin": [
        9966
      ],
      "OriginMock": [
        58708
      ],
      "StateHubMock": [
        59267
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1146:134",
    "nodes": [
      {
        "id": 58638,
        "nodeType": "PragmaDirective",
        "src": "32:23:134",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 58640,
        "nodeType": "ImportDirective",
        "src": "57:79:134",
        "nodes": [],
        "absolutePath": "contracts/interfaces/InterfaceOrigin.sol",
        "file": "../../contracts/interfaces/InterfaceOrigin.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58709,
        "sourceUnit": 9967,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58639,
              "name": "InterfaceOrigin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9966,
              "src": "65:15:134",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 58642,
        "nodeType": "ImportDirective",
        "src": "137:55:134",
        "nodes": [],
        "absolutePath": "test/mocks/hubs/StateHubMock.t.sol",
        "file": "./hubs/StateHubMock.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58709,
        "sourceUnit": 59268,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58641,
              "name": "StateHubMock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59267,
              "src": "145:12:134",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 58644,
        "nodeType": "ImportDirective",
        "src": "193:63:134",
        "nodes": [],
        "absolutePath": "test/mocks/base/AgentSecuredMock.t.sol",
        "file": "./base/AgentSecuredMock.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58709,
        "sourceUnit": 58873,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58643,
              "name": "AgentSecuredMock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58872,
              "src": "201:16:134",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 58708,
        "nodeType": "ContractDefinition",
        "src": "293:884:134",
        "nodes": [
          {
            "id": 58655,
            "nodeType": "FunctionDefinition",
            "src": "452:37:134",
            "nodes": [],
            "body": {
              "id": 58654,
              "nodeType": "Block",
              "src": "487:2:134",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 58651,
              "nodeType": "StructuredDocumentation",
              "src": "370:77:134",
              "text": "@notice Prevents this contract from being included in the coverage report"
            },
            "functionSelector": "d0d0cef7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOriginMock",
            "nameLocation": "461:14:134",
            "parameters": {
              "id": 58652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:2:134"
            },
            "returnParameters": {
              "id": 58653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:0:134"
            },
            "scope": 58708,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58673,
            "nodeType": "FunctionDefinition",
            "src": "495:250:134",
            "nodes": [],
            "body": {
              "id": 58672,
              "nodeType": "Block",
              "src": "743:2:134",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              9931
            ],
            "functionSelector": "873661bd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendBaseMessage",
            "nameLocation": "504:15:134",
            "parameters": {
              "id": 58666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58657,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "536:11:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 58673,
                  "src": "529:18:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 58656,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "529:6:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58659,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "565:9:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 58673,
                  "src": "557:17:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 58658,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58661,
                  "mutability": "mutable",
                  "name": "optimisticPeriod",
                  "nameLocation": "591:16:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 58673,
                  "src": "584:23:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 58660,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:6:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58663,
                  "mutability": "mutable",
                  "name": "paddedRequest",
                  "nameLocation": "625:13:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 58673,
                  "src": "617:21:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58662,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:7:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58665,
                  "mutability": "mutable",
                  "name": "content",
                  "nameLocation": "661:7:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 58673,
                  "src": "648:20:134",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 58664,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:5:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "519:155:134"
            },
            "returnParameters": {
              "id": 58671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58668,
                  "mutability": "mutable",
                  "name": "messageNonce",
                  "nameLocation": "708:12:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 58673,
                  "src": "701:19:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 58667,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:6:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58670,
                  "mutability": "mutable",
                  "name": "messageHash",
                  "nameLocation": "730:11:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 58673,
                  "src": "722:19:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 58669,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:7:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "700:42:134"
            },
            "scope": 58708,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58687,
            "nodeType": "FunctionDefinition",
            "src": "751:177:134",
            "nodes": [],
            "body": {
              "id": 58686,
              "nodeType": "Block",
              "src": "926:2:134",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              9945
            ],
            "functionSelector": "a1c702a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendManagerMessage",
            "nameLocation": "760:18:134",
            "parameters": {
              "id": 58680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58675,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "786:11:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 58687,
                  "src": "779:18:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 58674,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "779:6:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58677,
                  "mutability": "mutable",
                  "name": "optimisticPeriod",
                  "nameLocation": "806:16:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 58687,
                  "src": "799:23:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 58676,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:6:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58679,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "837:7:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 58687,
                  "src": "824:20:134",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 58678,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "824:5:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "778:67:134"
            },
            "returnParameters": {
              "id": 58685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58682,
                  "mutability": "mutable",
                  "name": "messageNonce",
                  "nameLocation": "887:12:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 58687,
                  "src": "880:19:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 58681,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:6:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58684,
                  "mutability": "mutable",
                  "name": "messageHash",
                  "nameLocation": "909:11:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 58687,
                  "src": "901:19:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 58683,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "901:7:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "879:42:134"
            },
            "scope": 58708,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58695,
            "nodeType": "FunctionDefinition",
            "src": "934:68:134",
            "nodes": [],
            "body": {
              "id": 58694,
              "nodeType": "Block",
              "src": "1000:2:134",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              9953
            ],
            "functionSelector": "4e04e7a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTips",
            "nameLocation": "943:12:134",
            "parameters": {
              "id": 58692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58689,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "964:9:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 58695,
                  "src": "956:17:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "956:7:134",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58691,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "983:6:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 58695,
                  "src": "975:14:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58690,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "955:35:134"
            },
            "returnParameters": {
              "id": 58693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1000:0:134"
            },
            "scope": 58708,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58707,
            "nodeType": "FunctionDefinition",
            "src": "1008:167:134",
            "nodes": [],
            "body": {
              "id": 58706,
              "nodeType": "Block",
              "src": "1173:2:134",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              9965
            ],
            "functionSelector": "4fc6ad85",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMinimumTipsValue",
            "nameLocation": "1017:19:134",
            "parameters": {
              "id": 58702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58697,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "1044:11:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 58707,
                  "src": "1037:18:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 58696,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1037:6:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58699,
                  "mutability": "mutable",
                  "name": "paddedRequest",
                  "nameLocation": "1065:13:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 58707,
                  "src": "1057:21:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58701,
                  "mutability": "mutable",
                  "name": "contentLength",
                  "nameLocation": "1088:13:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 58707,
                  "src": "1080:21:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:7:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1036:66:134"
            },
            "returnParameters": {
              "id": 58705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58704,
                  "mutability": "mutable",
                  "name": "tipsValue",
                  "nameLocation": "1158:9:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 58707,
                  "src": "1150:17:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58703,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1150:7:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1149:19:134"
            },
            "scope": 58708,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 58645,
              "name": "StateHubMock",
              "nameLocations": [
                "316:12:134"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 59267,
              "src": "316:12:134"
            },
            "id": 58646,
            "nodeType": "InheritanceSpecifier",
            "src": "316:12:134"
          },
          {
            "baseName": {
              "id": 58647,
              "name": "AgentSecuredMock",
              "nameLocations": [
                "330:16:134"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58872,
              "src": "330:16:134"
            },
            "id": 58648,
            "nodeType": "InheritanceSpecifier",
            "src": "330:16:134"
          },
          {
            "baseName": {
              "id": 58649,
              "name": "InterfaceOrigin",
              "nameLocations": [
                "348:15:134"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9966,
              "src": "348:15:134"
            },
            "id": 58650,
            "nodeType": "InheritanceSpecifier",
            "src": "348:15:134"
          }
        ],
        "canonicalName": "OriginMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          58708,
          9966,
          58872,
          9180,
          59267,
          9372,
          59016
        ],
        "name": "OriginMock",
        "nameLocation": "302:10:134",
        "scope": 58709,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 134
}