{
  "abi": [
    {
      "inputs": [],
      "name": "OccupiedMemory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PrecompileOutOfGas",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnallocatedMemory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ViewOverrun",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "addLastByte",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addressToBytes32",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "buf",
          "type": "bytes32"
        }
      ],
      "name": "bytes32ToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "payloadLength",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "firstElementLength",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "name": "createShortPayload",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "cutLastByte",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expectRevertAlreadyInitialized",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expectRevertNotOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "privKey",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hashedMsg",
          "type": "bytes32"
        }
      ],
      "name": "signMessage",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "privKey",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "signMessage",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "skipBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blocks",
          "type": "uint256"
        }
      ],
      "name": "skipBlocks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSynapseLibraryTest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSynapseUtilities",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint96",
              "name": "gasDrop",
              "type": "uint96"
            },
            {
              "internalType": "uint64",
              "name": "gasLimit",
              "type": "uint64"
            },
            {
              "internalType": "uint32",
              "name": "version",
              "type": "uint32"
            }
          ],
          "internalType": "struct RawRequest",
          "name": "rr",
          "type": "tuple"
        }
      ],
      "name": "test_encodeRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint96",
              "name": "gasDrop",
              "type": "uint96"
            },
            {
              "internalType": "uint64",
              "name": "gasLimit",
              "type": "uint64"
            },
            {
              "internalType": "uint32",
              "name": "version",
              "type": "uint32"
            }
          ],
          "internalType": "struct RawRequest",
          "name": "rr",
          "type": "tuple"
        }
      ],
      "name": "test_requestLength",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b5061200c8061003d6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80638820cb26116100de578063ba414fa611610097578063e20c9f7111610071578063e20c9f7114610305578063eaee26111461030d578063f1f97ac014610320578063fa7626d41461033357600080fd5b8063ba414fa6146102d2578063c10b95e7146102ea578063c63101b6146102fd57600080fd5b80638820cb261461027c578063916a17c61461029c57806391df0ed8146102a4578063a2cdb207146101a6578063a72e0a34146102b7578063b5508aa9146102ca57600080fd5b80633f7286f41161014b57806366d9a9a01161012557806366d9a9a0146102225780637b3471631461023757806382c947b71461023f57806385226c811461026757600080fd5b80633f7286f4146101e95780635ced058e146101f1578063660982d91461021a57600080fd5b806302859368146101935780630621feff146101a65780630a9254e4146101a85780631ed7831c146101b05780632e71d228146101ce5780633e5e3c23146101e1575b600080fd5b6101a66101a13660046116f4565b610340565b005b6101a6610740565b6101b861078b565b6040516101c59190611766565b60405180910390f35b6101a66101dc3660046116f4565b6107ed565b6101b86108d1565b6101b8610931565b6102026101ff3660046117b3565b90565b6040516001600160a01b0390911681526020016101c5565b6101a6610991565b61022a61099b565b6040516101c591906117cc565b6101a6610a8a565b61025961024d36600461187f565b6001600160a01b031690565b6040519081526020016101c5565b61026f610b0e565b6040516101c591906118ff565b61028f61028a366004611970565b610bde565b6040516101c591906119b1565b61022a610c6b565b61028f6102b23660046119c4565b610d51565b6101a66102c53660046117b3565b610e69565b61026f610ef5565b6102da610fc5565b60405190151581526020016101c5565b61028f6102f8366004611a73565b6110f0565b6101a661111d565b6101b8611185565b61028f61031b366004611aa8565b6111e5565b61028f61032e366004611a73565b611201565b6000546102da9060ff1681565b601b548151602083015160408085015190516357c3882b60e01b81526001600160601b03909316600484015267ffffffffffffffff909116602483015263ffffffff1660448201526000916001600160a01b0316906357c3882b90606401602060405180830381865afa1580156103bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103df9190611aef565b90506000826040015163ffffffff16836020015167ffffffffffffffff1664010000000061040d9190611b2e565b8451610426906001600160601b0316600160601b611b2e565b6104309190611b45565b61043a9190611b45565b9050610476826001600160c01b0316826040518060400160405280600e81526020016d08595b98dbd91954995c5d595cdd60921b815250611222565b601b5460405163138ac42f60e01b81526001600160c01b0384166004820152610520916001600160a01b03169063138ac42f90602401602060405180830381865afa1580156104c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ed9190611aef565b6001600160c01b0316826040518060400160405280600b81526020016a085ddc985c14185919195960aa1b815250611222565b601b54604051636714b01360e11b81526001600160c01b03841660048201526105d7916001600160a01b03169063ce29602690602401602060405180830381865afa158015610573573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105979190611b58565b67ffffffffffffffff16846020015167ffffffffffffffff16604051806040016040528060098152602001680859d85cd31a5b5a5d60ba1b815250611222565b601b5460405163b057c8c160e01b81526001600160c01b038416600482015261068b916001600160a01b03169063b057c8c190602401602060405180830381865afa15801561062a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064e9190611b75565b6001600160601b031684600001516001600160601b03166040518060400160405280600881526020016702167617344726f760c41b815250611222565b601b5460405163d3cbde3160e01b81526001600160c01b0384166004820152610739916001600160a01b03169063d3cbde3190602401602060405180830381865afa1580156106de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107029190611b92565b63ffffffff16846040015163ffffffff166040518060400160405280600881526020016710bb32b939b4b7b760c11b815250611222565b505050565b565b60405161074c90611694565b604051809103906000f080158015610768573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d8054806020026020016040519081016040528092919081815260200182805480156107e357602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107c5575b5050505050905090565b601b548151602083015160408085015190516357c3882b60e01b81526001600160601b03909316600484015267ffffffffffffffff909116602483015263ffffffff1660448201526000916001600160a01b0316906357c3882b90606401602060405180830381865afa158015610868573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088c9190611aef565b6040516020016108b0919060409190911b67ffffffffffffffff1916815260180190565b60405160208183030381529060405290506108cd81516018611266565b5050565b6060600f8054806020026020016040519081016040528092919081815260200182805480156107e3576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116107c5575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156107e3576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116107c5575050505050905090565b61073e6001610e69565b60606012805480602002602001604051908101604052809291908181526020016000905b82821015610a815760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610a6957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610a2b5790505b505050505081525050815260200190600101906109bf565b50505050905090565b6040805160608101909152602e808252737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391611fa960208301396040518263ffffffff1660e01b8152600401610ada91906119b1565b600060405180830381600087803b158015610af457600080fd5b505af1158015610b08573d6000803e3d6000fd5b50505050565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015610a81578382906000526020600020018054610b5190611baf565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7d90611baf565b8015610bca5780601f10610b9f57610100808354040283529160200191610bca565b820191906000526020600020905b815481529060010190602001808311610bad57829003601f168201915b505050505081526020019060010190610b32565b6060610bea8385611be9565b6040805160208101859052908101849052606081018490526080810184905260a0810184905260c0810184905260e081018490526101008101849052909450600090610120016040516020818303038152906040529050610c62610c5d60008760ff16610c568561138d565b91906113a8565b611400565b95945050505050565b60606013805480602002602001604051908101604052809291908181526020016000905b82821015610a815760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610d3957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610cfb5790505b50505050508152505081526020019060010190610c8f565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052606090600090605c0160408051808303601f190181529082905280516020909101206338d07aa960e21b82526004820186905260248201819052915060009081908190737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e341eaa490604401606060405180830381865afa158015610e00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e249190611c19565b6040805160208101939093528281019190915260f89290921b6001600160f81b0319166060820152815160418183030181526061909101909152979650505050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d631f7b4f30610e8d8343611b45565b6040518263ffffffff1660e01b8152600401610eab91815260200190565b600060405180830381600087803b158015610ec557600080fd5b505af1158015610ed9573d6000803e3d6000fd5b50505050610ef2600c82610eed9190611b2e565b611436565b50565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610a81578382906000526020600020018054610f3890611baf565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6490611baf565b8015610fb15780601f10610f8657610100808354040283529160200191610fb1565b820191906000526020600020905b815481529060010190602001808311610f9457829003601f168201915b505050505081526020019060010190610f19565b60008054610100900460ff1615610fe55750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156110eb5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091611073917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611c50565b60408051601f198184030181529082905261108d91611c81565b6000604051808303816000865af19150503d80600081146110ca576040519150601f19603f3d011682016040523d82523d6000602084013e6110cf565b606091505b50915050808060200190518101906110e79190611c9d565b9150505b919050565b604051606090611107908390600090602001611cbf565b6040516020818303038152906040529050919050565b60408051808201825260208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657290820152905163f28dceb360e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391610ada91906004016119b1565b6060600c8054806020026020016040519081016040528092919081815260200182805480156107e3576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116107c5575050505050905090565b60606111f8838380519060200120610d51565b90505b92915050565b60606111fb610c5d6000600185516112199190611cee565b610c568661138d565b818314610739577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516112589190611d01565b60405180910390a161073983835b8082146108cd577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112d79060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16108cd6114ad565b8051600090602083016113a081836115b9565b949350505050565b6000806113b58560801c90565b90506113c085611603565b836113cb8684611b45565b6113d59190611b45565b11156113f45760405163a3b99ded60e01b815260040160405180910390fd5b610c62848201846115b9565b604051806114118360208301611620565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d63e5d6bf0261145a8342611b45565b6040518263ffffffff1660e01b815260040161147891815260200190565b600060405180830381600087803b15801561149257600080fd5b505af11580156114a6573d6000803e3d6000fd5b5050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156115a85760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526115479291602001611c50565b60408051601f198184030181529082905261156191611c81565b6000604051808303816000865af19150503d806000811461159e576040519150601f19603f3d011682016040523d82523d6000602084013e6115a3565b606091505b505050505b6000805461ff001916610100179055565b6000806115c68385611b45565b90506040518111156115d6575060005b806000036115f75760405163085f79c360e11b815260040160405180910390fd5b608084901b83176113a0565b60006001600160801b0382166116198360801c90565b0192915050565b6040516000906001600160801b03841690608085901c9080851015611658576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa90508061168257604051637c7d772f60e01b815260040160405180910390fd5b608086901b8417979650505050505050565b61027880611d3183390190565b634e487b7160e01b600052604160045260246000fd5b6001600160601b0381168114610ef257600080fd5b67ffffffffffffffff81168114610ef257600080fd5b63ffffffff81168114610ef257600080fd5b60006060828403121561170657600080fd5b6040516060810181811067ffffffffffffffff82111715611729576117296116a1565b6040528235611737816116b7565b81526020830135611747816116cc565b6020820152604083013561175a816116e2565b60408201529392505050565b6020808252825182820181905260009190848201906040850190845b818110156117a75783516001600160a01b031683529284019291840191600101611782565b50909695505050505050565b6000602082840312156117c557600080fd5b5035919050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561187057898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101561185b5783516001600160e01b0319168252928b019260019290920191908b0190611831565b50978a019795505050918701916001016117f4565b50919998505050505050505050565b60006020828403121561189157600080fd5b81356001600160a01b03811681146118a857600080fd5b9392505050565b60005b838110156118ca5781810151838201526020016118b2565b50506000910152565b600081518084526118eb8160208601602086016118af565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561195457603f198886030184526119428583516118d3565b94509285019290850190600101611926565b5092979650505050505050565b60ff81168114610ef257600080fd5b60008060006060848603121561198557600080fd5b833561199081611961565b925060208401356119a081611961565b929592945050506040919091013590565b6020815260006111f860208301846118d3565b600080604083850312156119d757600080fd5b50508035926020909101359150565b600082601f8301126119f757600080fd5b813567ffffffffffffffff80821115611a1257611a126116a1565b604051601f8301601f19908116603f01168101908282118183101715611a3a57611a3a6116a1565b81604052838152866020858801011115611a5357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611a8557600080fd5b813567ffffffffffffffff811115611a9c57600080fd5b6113a0848285016119e6565b60008060408385031215611abb57600080fd5b82359150602083013567ffffffffffffffff811115611ad957600080fd5b611ae5858286016119e6565b9150509250929050565b600060208284031215611b0157600080fd5b81516001600160c01b03811681146118a857600080fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176111fb576111fb611b18565b808201808211156111fb576111fb611b18565b600060208284031215611b6a57600080fd5b81516118a8816116cc565b600060208284031215611b8757600080fd5b81516118a8816116b7565b600060208284031215611ba457600080fd5b81516118a8816116e2565b600181811c90821680611bc357607f821691505b602082108103611be357634e487b7160e01b600052602260045260246000fd5b50919050565b600060ff831680611c0a57634e487b7160e01b600052601260045260246000fd5b8060ff84160691505092915050565b600080600060608486031215611c2e57600080fd5b8351611c3981611961565b602085015160409095015190969495509392505050565b6001600160e01b0319831681528151600090611c738160048501602087016118af565b919091016004019392505050565b60008251611c938184602087016118af565b9190910192915050565b600060208284031215611caf57600080fd5b815180151581146118a857600080fd5b60008351611cd18184602088016118af565b6001600160f81b0319939093169190920190815260010192915050565b818103818111156111fb576111fb611b18565b60408152600560408201526422b93937b960d91b60608201526080602082015260006111f860808301846118d356fe608060405234801561001057600080fd5b50610258806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063138ac42f1461005c57806357c3882b1461008c578063b057c8c1146100d8578063ce29602614610103578063d3cbde311461012f575b600080fd5b61006f61006a36600461019c565b610157565b6040516001600160c01b0390911681526020015b60405180910390f35b61006f61009a3660046101b5565b60008063ffffffff8316602085901b6bffffffffffffffff0000000016606087901b6bffffffffffffffffffffffff60601b16171795945050505050565b6100eb6100e636600461019c565b610161565b6040516001600160601b039091168152602001610083565b61011661011136600461019c565b610176565b60405167ffffffffffffffff9091168152602001610083565b61014261013d36600461019c565b61018b565b60405163ffffffff9091168152602001610083565b6000815b92915050565b600061015b8260601c6001600160601b031690565b600061015b8260201c6001600160a01b031690565b60006001600160c01b03821661015b565b6000602082840312156101ae57600080fd5b5035919050565b6000806000606084860312156101ca57600080fd5b83356001600160601b03811681146101e157600080fd5b9250602084013567ffffffffffffffff811681146101fe57600080fd5b9150604084013563ffffffff8116811461021757600080fd5b80915050925092509256fea264697066735822122007f811c03027a02366d99227cc18037a86340b255feaaae9c43099361647ca2664736f6c63430008110033496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a2646970667358221220a1809b75803953056228add99d05bef4077fbb2596b20b9f69bd6074f69b2a1964736f6c63430008110033",
    "sourceMap": "412:1059:174:-:0;;;1572:26:67;;;1594:4;-1:-1:-1;;1572:26:67;;;;;;;;3288:44:71;;;;;;;;;;;412:1059:174;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c80638820cb26116100de578063ba414fa611610097578063e20c9f7111610071578063e20c9f7114610305578063eaee26111461030d578063f1f97ac014610320578063fa7626d41461033357600080fd5b8063ba414fa6146102d2578063c10b95e7146102ea578063c63101b6146102fd57600080fd5b80638820cb261461027c578063916a17c61461029c57806391df0ed8146102a4578063a2cdb207146101a6578063a72e0a34146102b7578063b5508aa9146102ca57600080fd5b80633f7286f41161014b57806366d9a9a01161012557806366d9a9a0146102225780637b3471631461023757806382c947b71461023f57806385226c811461026757600080fd5b80633f7286f4146101e95780635ced058e146101f1578063660982d91461021a57600080fd5b806302859368146101935780630621feff146101a65780630a9254e4146101a85780631ed7831c146101b05780632e71d228146101ce5780633e5e3c23146101e1575b600080fd5b6101a66101a13660046116f4565b610340565b005b6101a6610740565b6101b861078b565b6040516101c59190611766565b60405180910390f35b6101a66101dc3660046116f4565b6107ed565b6101b86108d1565b6101b8610931565b6102026101ff3660046117b3565b90565b6040516001600160a01b0390911681526020016101c5565b6101a6610991565b61022a61099b565b6040516101c591906117cc565b6101a6610a8a565b61025961024d36600461187f565b6001600160a01b031690565b6040519081526020016101c5565b61026f610b0e565b6040516101c591906118ff565b61028f61028a366004611970565b610bde565b6040516101c591906119b1565b61022a610c6b565b61028f6102b23660046119c4565b610d51565b6101a66102c53660046117b3565b610e69565b61026f610ef5565b6102da610fc5565b60405190151581526020016101c5565b61028f6102f8366004611a73565b6110f0565b6101a661111d565b6101b8611185565b61028f61031b366004611aa8565b6111e5565b61028f61032e366004611a73565b611201565b6000546102da9060ff1681565b601b548151602083015160408085015190516357c3882b60e01b81526001600160601b03909316600484015267ffffffffffffffff909116602483015263ffffffff1660448201526000916001600160a01b0316906357c3882b90606401602060405180830381865afa1580156103bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103df9190611aef565b90506000826040015163ffffffff16836020015167ffffffffffffffff1664010000000061040d9190611b2e565b8451610426906001600160601b0316600160601b611b2e565b6104309190611b45565b61043a9190611b45565b9050610476826001600160c01b0316826040518060400160405280600e81526020016d08595b98dbd91954995c5d595cdd60921b815250611222565b601b5460405163138ac42f60e01b81526001600160c01b0384166004820152610520916001600160a01b03169063138ac42f90602401602060405180830381865afa1580156104c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ed9190611aef565b6001600160c01b0316826040518060400160405280600b81526020016a085ddc985c14185919195960aa1b815250611222565b601b54604051636714b01360e11b81526001600160c01b03841660048201526105d7916001600160a01b03169063ce29602690602401602060405180830381865afa158015610573573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105979190611b58565b67ffffffffffffffff16846020015167ffffffffffffffff16604051806040016040528060098152602001680859d85cd31a5b5a5d60ba1b815250611222565b601b5460405163b057c8c160e01b81526001600160c01b038416600482015261068b916001600160a01b03169063b057c8c190602401602060405180830381865afa15801561062a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064e9190611b75565b6001600160601b031684600001516001600160601b03166040518060400160405280600881526020016702167617344726f760c41b815250611222565b601b5460405163d3cbde3160e01b81526001600160c01b0384166004820152610739916001600160a01b03169063d3cbde3190602401602060405180830381865afa1580156106de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107029190611b92565b63ffffffff16846040015163ffffffff166040518060400160405280600881526020016710bb32b939b4b7b760c11b815250611222565b505050565b565b60405161074c90611694565b604051809103906000f080158015610768573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d8054806020026020016040519081016040528092919081815260200182805480156107e357602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107c5575b5050505050905090565b601b548151602083015160408085015190516357c3882b60e01b81526001600160601b03909316600484015267ffffffffffffffff909116602483015263ffffffff1660448201526000916001600160a01b0316906357c3882b90606401602060405180830381865afa158015610868573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088c9190611aef565b6040516020016108b0919060409190911b67ffffffffffffffff1916815260180190565b60405160208183030381529060405290506108cd81516018611266565b5050565b6060600f8054806020026020016040519081016040528092919081815260200182805480156107e3576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116107c5575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156107e3576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116107c5575050505050905090565b61073e6001610e69565b60606012805480602002602001604051908101604052809291908181526020016000905b82821015610a815760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610a6957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610a2b5790505b505050505081525050815260200190600101906109bf565b50505050905090565b6040805160608101909152602e808252737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391611fa960208301396040518263ffffffff1660e01b8152600401610ada91906119b1565b600060405180830381600087803b158015610af457600080fd5b505af1158015610b08573d6000803e3d6000fd5b50505050565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015610a81578382906000526020600020018054610b5190611baf565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7d90611baf565b8015610bca5780601f10610b9f57610100808354040283529160200191610bca565b820191906000526020600020905b815481529060010190602001808311610bad57829003601f168201915b505050505081526020019060010190610b32565b6060610bea8385611be9565b6040805160208101859052908101849052606081018490526080810184905260a0810184905260c0810184905260e081018490526101008101849052909450600090610120016040516020818303038152906040529050610c62610c5d60008760ff16610c568561138d565b91906113a8565b611400565b95945050505050565b60606013805480602002602001604051908101604052809291908181526020016000905b82821015610a815760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610d3957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610cfb5790505b50505050508152505081526020019060010190610c8f565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052606090600090605c0160408051808303601f190181529082905280516020909101206338d07aa960e21b82526004820186905260248201819052915060009081908190737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e341eaa490604401606060405180830381865afa158015610e00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e249190611c19565b6040805160208101939093528281019190915260f89290921b6001600160f81b0319166060820152815160418183030181526061909101909152979650505050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d631f7b4f30610e8d8343611b45565b6040518263ffffffff1660e01b8152600401610eab91815260200190565b600060405180830381600087803b158015610ec557600080fd5b505af1158015610ed9573d6000803e3d6000fd5b50505050610ef2600c82610eed9190611b2e565b611436565b50565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610a81578382906000526020600020018054610f3890611baf565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6490611baf565b8015610fb15780601f10610f8657610100808354040283529160200191610fb1565b820191906000526020600020905b815481529060010190602001808311610f9457829003601f168201915b505050505081526020019060010190610f19565b60008054610100900460ff1615610fe55750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156110eb5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091611073917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611c50565b60408051601f198184030181529082905261108d91611c81565b6000604051808303816000865af19150503d80600081146110ca576040519150601f19603f3d011682016040523d82523d6000602084013e6110cf565b606091505b50915050808060200190518101906110e79190611c9d565b9150505b919050565b604051606090611107908390600090602001611cbf565b6040516020818303038152906040529050919050565b60408051808201825260208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657290820152905163f28dceb360e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391610ada91906004016119b1565b6060600c8054806020026020016040519081016040528092919081815260200182805480156107e3576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116107c5575050505050905090565b60606111f8838380519060200120610d51565b90505b92915050565b60606111fb610c5d6000600185516112199190611cee565b610c568661138d565b818314610739577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516112589190611d01565b60405180910390a161073983835b8082146108cd577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112d79060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16108cd6114ad565b8051600090602083016113a081836115b9565b949350505050565b6000806113b58560801c90565b90506113c085611603565b836113cb8684611b45565b6113d59190611b45565b11156113f45760405163a3b99ded60e01b815260040160405180910390fd5b610c62848201846115b9565b604051806114118360208301611620565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d63e5d6bf0261145a8342611b45565b6040518263ffffffff1660e01b815260040161147891815260200190565b600060405180830381600087803b15801561149257600080fd5b505af11580156114a6573d6000803e3d6000fd5b5050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156115a85760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526115479291602001611c50565b60408051601f198184030181529082905261156191611c81565b6000604051808303816000865af19150503d806000811461159e576040519150601f19603f3d011682016040523d82523d6000602084013e6115a3565b606091505b505050505b6000805461ff001916610100179055565b6000806115c68385611b45565b90506040518111156115d6575060005b806000036115f75760405163085f79c360e11b815260040160405180910390fd5b608084901b83176113a0565b60006001600160801b0382166116198360801c90565b0192915050565b6040516000906001600160801b03841690608085901c9080851015611658576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa90508061168257604051637c7d772f60e01b815260040160405180910390fd5b608086901b8417979650505050505050565b61027880611d3183390190565b634e487b7160e01b600052604160045260246000fd5b6001600160601b0381168114610ef257600080fd5b67ffffffffffffffff81168114610ef257600080fd5b63ffffffff81168114610ef257600080fd5b60006060828403121561170657600080fd5b6040516060810181811067ffffffffffffffff82111715611729576117296116a1565b6040528235611737816116b7565b81526020830135611747816116cc565b6020820152604083013561175a816116e2565b60408201529392505050565b6020808252825182820181905260009190848201906040850190845b818110156117a75783516001600160a01b031683529284019291840191600101611782565b50909695505050505050565b6000602082840312156117c557600080fd5b5035919050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561187057898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101561185b5783516001600160e01b0319168252928b019260019290920191908b0190611831565b50978a019795505050918701916001016117f4565b50919998505050505050505050565b60006020828403121561189157600080fd5b81356001600160a01b03811681146118a857600080fd5b9392505050565b60005b838110156118ca5781810151838201526020016118b2565b50506000910152565b600081518084526118eb8160208601602086016118af565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561195457603f198886030184526119428583516118d3565b94509285019290850190600101611926565b5092979650505050505050565b60ff81168114610ef257600080fd5b60008060006060848603121561198557600080fd5b833561199081611961565b925060208401356119a081611961565b929592945050506040919091013590565b6020815260006111f860208301846118d3565b600080604083850312156119d757600080fd5b50508035926020909101359150565b600082601f8301126119f757600080fd5b813567ffffffffffffffff80821115611a1257611a126116a1565b604051601f8301601f19908116603f01168101908282118183101715611a3a57611a3a6116a1565b81604052838152866020858801011115611a5357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611a8557600080fd5b813567ffffffffffffffff811115611a9c57600080fd5b6113a0848285016119e6565b60008060408385031215611abb57600080fd5b82359150602083013567ffffffffffffffff811115611ad957600080fd5b611ae5858286016119e6565b9150509250929050565b600060208284031215611b0157600080fd5b81516001600160c01b03811681146118a857600080fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176111fb576111fb611b18565b808201808211156111fb576111fb611b18565b600060208284031215611b6a57600080fd5b81516118a8816116cc565b600060208284031215611b8757600080fd5b81516118a8816116b7565b600060208284031215611ba457600080fd5b81516118a8816116e2565b600181811c90821680611bc357607f821691505b602082108103611be357634e487b7160e01b600052602260045260246000fd5b50919050565b600060ff831680611c0a57634e487b7160e01b600052601260045260246000fd5b8060ff84160691505092915050565b600080600060608486031215611c2e57600080fd5b8351611c3981611961565b602085015160409095015190969495509392505050565b6001600160e01b0319831681528151600090611c738160048501602087016118af565b919091016004019392505050565b60008251611c938184602087016118af565b9190910192915050565b600060208284031215611caf57600080fd5b815180151581146118a857600080fd5b60008351611cd18184602088016118af565b6001600160f81b0319939093169190920190815260010192915050565b818103818111156111fb576111fb611b18565b60408152600560408201526422b93937b960d91b60608201526080602082015260006111f860808301846118d356fe608060405234801561001057600080fd5b50610258806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063138ac42f1461005c57806357c3882b1461008c578063b057c8c1146100d8578063ce29602614610103578063d3cbde311461012f575b600080fd5b61006f61006a36600461019c565b610157565b6040516001600160c01b0390911681526020015b60405180910390f35b61006f61009a3660046101b5565b60008063ffffffff8316602085901b6bffffffffffffffff0000000016606087901b6bffffffffffffffffffffffff60601b16171795945050505050565b6100eb6100e636600461019c565b610161565b6040516001600160601b039091168152602001610083565b61011661011136600461019c565b610176565b60405167ffffffffffffffff9091168152602001610083565b61014261013d36600461019c565b61018b565b60405163ffffffff9091168152602001610083565b6000815b92915050565b600061015b8260601c6001600160601b031690565b600061015b8260201c6001600160a01b031690565b60006001600160c01b03821661015b565b6000602082840312156101ae57600080fd5b5035919050565b6000806000606084860312156101ca57600080fd5b83356001600160601b03811681146101e157600080fd5b9250602084013567ffffffffffffffff811681146101fe57600080fd5b9150604084013563ffffffff8116811461021757600080fd5b80915050925092509256fea264697066735822122007f811c03027a02366d99227cc18037a86340b255feaaae9c43099361647ca2664736f6c63430008110033496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a2646970667358221220a1809b75803953056228add99d05bef4077fbb2596b20b9f69bd6074f69b2a1964736f6c63430008110033",
    "sourceMap": "412:1059:174:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;622:603;;;;;;:::i;:::-;;:::i;:::-;;542:74;;;:::i;2161:134:74:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1231:238:174;;;;;;:::i;:::-;;:::i;2930:133:74:-;;;:::i;2631:141::-;;;:::i;1189:123:184:-;;;;;;:::i;:::-;1299:3;1189:123;;;;-1:-1:-1;;;;;2349:32:199;;;2331:51;;2319:2;2304:18;1189:123:184;2185:203:199;863:58:184;;;:::i;2447:178:74:-;;;:::i;:::-;;;;;;;:::i;653:109:184:-;;;:::i;1058:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1153:22:184;;1058:125;;;;4404:25:199;;;4392:2;4377:18;1058:125:184;4258:177:199;2301:140:74;;;:::i;:::-;;;;;;;:::i;449:473:180:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2778:146:74:-;;;:::i;1493:325:184:-;;;;;;:::i;:::-;;:::i;927:125::-;;;;;;:::i;:::-;;:::i;1866:141:74:-;;;:::i;1819:584:67:-;;;:::i;:::-;;;7177:14:199;;7170:22;7152:41;;7140:2;7125:18;1819:584:67;7012:187:199;1102:134:180;;;;;;:::i;:::-;;:::i;768:89:184:-;;;:::i;2013:142:74:-;;;:::i;1318:169:184:-;;;;;;:::i;:::-;;:::i;928:168:180:-;;;;;;:::i;:::-;;:::i;1572:26:67:-;;;;;;;;;622:603:174;707:10;;732;;744:11;;;;757:10;;;;;707:61;;-1:-1:-1;;;707:61:174;;-1:-1:-1;;;;;8859:39:199;;;707:61:174;;;8841:58:199;8947:18;8935:31;;;8915:18;;;8908:59;9015:10;9003:23;8983:18;;;8976:51;689:15:174;;-1:-1:-1;;;;;707:10:174;;:24;;8814:18:199;;707:61:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;689:79;;778:16;862:2;:10;;;797:75;;837:2;:11;;;829:20;;852:7;829:30;;;;:::i;:::-;805:10;;797:29;;-1:-1:-1;;;;;797:19:174;-1:-1:-1;;;797:29:174;:::i;:::-;:62;;;;:::i;:::-;:75;;;;:::i;:::-;778:94;;882:45;891:7;-1:-1:-1;;;;;882:45:174;900:8;882:45;;;;;;;;;;;;;-1:-1:-1;;;882:45:174;;;:8;:45::i;:::-;946:10;;:30;;-1:-1:-1;;;946:30:174;;-1:-1:-1;;;;;9932:32:199;;946:30:174;;;9914:51:199;937:65:174;;-1:-1:-1;;;;;946:10:174;;:21;;9887:18:199;;946:30:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;937:65:174;978:8;937:65;;;;;;;;;;;;;-1:-1:-1;;;937:65:174;;;:8;:65::i;:::-;1021:10;;:28;;-1:-1:-1;;;1021:28:174;;-1:-1:-1;;;;;9932:32:199;;1021:28:174;;;9914:51:199;1012:64:174;;-1:-1:-1;;;;;1021:10:174;;:19;;9887:18:199;;1021:28:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1012:64;;1051:2;:11;;;1012:64;;;;;;;;;;;;;;;-1:-1:-1;;;1012:64:174;;;:8;:64::i;:::-;1095:10;;:27;;-1:-1:-1;;;1095:27:174;;-1:-1:-1;;;;;9932:32:199;;1095:27:174;;;9914:51:199;1086:61:174;;-1:-1:-1;;;;;1095:10:174;;:18;;9887::199;;1095:27:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1086:61:174;1124:2;:10;;;-1:-1:-1;;;;;1086:61:174;;;;;;;;;;;;;;-1:-1:-1;;;1086:61:174;;;:8;:61::i;:::-;1166:10;;:27;;-1:-1:-1;;;1166:27:174;;-1:-1:-1;;;;;9932:32:199;;1166:27:174;;;9914:51:199;1157:61:174;;-1:-1:-1;;;;;1166:10:174;;:18;;9887::199;;1166:27:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1157:61;;1195:2;:10;;;1157:61;;;;;;;;;;;;;;;-1:-1:-1;;;1157:61:174;;;:8;:61::i;:::-;679:546;;622:603;:::o;604:43:184:-;:::o;542:74:174:-;589:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;576:10:174;:33;;-1:-1:-1;;;;;;576:33:174;-1:-1:-1;;;;;576:33:174;;;;;;;;;;542:74::o;2161:134:74:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:74;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;1231:238:174:-;1344:10;;1369;;1381:11;;;;1394:10;;;;;1344:61;;-1:-1:-1;;;1344:61:174;;-1:-1:-1;;;;;8859:39:199;;;1344:61:174;;;8841:58:199;8947:18;8935:31;;;8915:18;;;8908:59;9015:10;9003:23;8983:18;;;8976:51;1298:26:174;;-1:-1:-1;;;;;1344:10:174;;:24;;8814:18:199;;1344:61:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1327:79;;;;;;;10887:2:199;10883:15;;;;-1:-1:-1;;10879:45:199;10867:58;;10950:2;10941:12;;10738:221;1327:79:174;;;;;;;;;;;;;1298:108;;1416:46;1425:13;:20;1996:2:45;1416:8:174;:46::i;:::-;1288:181;1231:238;:::o;2930:133:74:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:74;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:74;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;863:58:184:-;901:13;912:1;901:10;:13::i;2447:178:74:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;653:109:184:-;728:26;;;;;;;;;;;;;712:15;;;;728:26;;;;;712:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;653:109::o;2301:140:74:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;449:473:180;583:12;627:34;643:18;627:13;:34;:::i;:::-;730:64;;;;;;11933:19:199;;;11968:12;;;11961:28;;;12005:12;;;11998:28;;;12042:12;;;12035:28;;;12079:13;;;12072:29;;;12117:13;;;12110:29;;;12155:13;;;12148:29;;;12193:13;;;12186:29;;;611:50:180;;-1:-1:-1;707:20:180;;12231:13:199;;730:64:180;;;;;;;;;;;;707:87;;854:61;:53;883:1;892:13;854:53;;:13;:7;:11;:13::i;:::-;:19;:53;:19;:53::i;:::-;:59;:61::i;:::-;847:68;449:473;-1:-1:-1;;;;;449:473:180:o;2778:146:74:-;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1493:325:184;1632:63;;12497:66:199;1632:63:184;;;12485:79:199;12580:12;;;12573:28;;;1571:22:184;;1605:14;;12617:12:199;;1632:63:184;;;;;;-1:-1:-1;;1632:63:184;;;;;;;1622:74;;1632:63;1622:74;;;;-1:-1:-1;;;1740:24:184;;;;;12814:25:199;;;12855:18;;;12848:34;;;1622:74:184;-1:-1:-1;1707:7:184;;;;;;1740;;;;12787:18:199;;1740:24:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1786:25;;;;;;13448:19:199;;;;13483:12;;;13476:28;;;;13560:3;13538:16;;;;-1:-1:-1;;;;;;13534:36:199;13520:12;;;13513:58;1786:25:184;;;;;;;;;13587:12:199;;;;1786:25:184;;;;1493:325;-1:-1:-1;;;;;;;1493:325:184:o;927:125::-;980:7;;988:21;1003:6;988:12;:21;:::i;:::-;980:30;;;;;;;;;;;;;4404:25:199;;4392:2;4377:18;;4258:177;980:30:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:25;3886:10:183;1025:6:184;:19;;;;:::i;:::-;1020:4;:25::i;:::-;927:125;:::o;1866:141:74:-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:67;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:67;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;13966:51:199;;;-1:-1:-1;;;14033:18:199;;;14026:34;2196:43:67;;;;;;;;;13939:18:199;;;2196:43:67;;;-1:-1:-1;;1671:64:67;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:67;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:67:o;1102:134:180:-;1197:32;;1166:12;;1197:32;;1210:7;;1226:1;;1197:32;;;:::i;:::-;;;;;;;;;;;;;1190:39;;1102:134;;;:::o;768:89:184:-;833:16;;;;;;;;;;;;;;;;;817:33;;-1:-1:-1;;;817:33:184;;:15;;;;:33;;833:16;817:33;;;:::i;2013:142:74:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:74;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;1318:169:184:-;1399:22;1440:40;1452:7;1471;1461:18;;;;;;1440:11;:40::i;:::-;1433:47;;1318:169;;;;;:::o;928:168:180:-;992:12;1023:66;:58;1052:1;1078;1061:7;:14;:18;;;;:::i;:::-;1023:13;:7;:11;:13::i;5476:178:67:-;5557:1;5552;:6;5548:100;;5579:30;5605:3;5579:30;;;;;;:::i;:::-;;;;;;;;5623:14;5632:1;5635;5209:262;5271:1;5266;:6;5262:203;;5293:41;;;;;16223:2:199;16205:21;;;16262:2;16242:18;;;16235:30;16301:34;16296:2;16281:18;;16274:62;-1:-1:-1;;;16367:2:199;16352:18;;16345:32;16409:3;16394:19;;16021:398;5293:41:67;;;;;;;;5353:31;;;16636:21:199;;;16693:2;16673:18;;;16666:30;-1:-1:-1;;;16727:2:199;16712:18;;16705:40;16812:4;16797:20;;16790:36;;;5353:31:67;;;;;;;16777:3:199;5353:31:67;;;5403;;;17049:21:199;;;17106:2;17086:18;;;17079:30;-1:-1:-1;;;17140:2:199;17125:18;;17118:40;17225:4;17210:20;;17203:36;;;5403:31:67;;;;;;;17190:3:199;5403:31:67;;;5448:6;:4;:6::i;2972:569:52:-;3060:10;;3026:7;;3486:4;3477:14;;3517:17;3477:14;3060:10;3517:5;:17::i;:::-;3510:24;2972:569;-1:-1:-1;;;;2972:569:52:o;10331:484::-;10416:7;10435:12;10450:13;:7;6898:3;6871:30;;6712:196;10450:13;10435:28;;10546:13;:7;:11;:13::i;:::-;10539:4;10523:13;10530:6;10523:4;:13;:::i;:::-;:20;;;;:::i;:::-;:36;10519:87;;;10582:13;;-1:-1:-1;;;10582:13:52;;;;;;;;;;;10519:87;10758:40;10778:6;10771:4;:13;10792:4;10758:5;:40::i;4079:1041::-;4325:4;4319:11;;4455:34;4469:7;4484:4;4478:10;;4455:13;:34::i;:::-;-1:-1:-1;;;;;;7239:43:52;;4701:12;8097:2;8081:18;;-1:-1:-1;;8465:20:52;4997;;5019:4;4993:31;4987:4;4980:45;-1:-1:-1;5087:17:52;;4079:1041;;-1:-1:-1;4079:1041:52:o;17805:93:72:-;17860:7;;17868:22;17886:4;17868:15;:22;:::i;:::-;17860:31;;;;;;;;;;;;;4404:25:199;;4392:2;4377:18;;4258:177;17860:31:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17805:93;:::o;2409:432:67:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;17452:51:199;;;-1:-1:-1;;;17519:18:199;;;17512:34;;;;2712:4:67;17562:18:199;;;17555:34;2489:11:67;;1671:64;2586:43;;17425:18:199;;2652:67:67;;;-1:-1:-1;;2652:67:67;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:67;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:67;2820:7;:14;;-1:-1:-1;;2820:14:67;;;;;2409:432::o;2092:540:52:-;2158:7;;2192:11;2199:4;2192;:11;:::i;:::-;2177:26;;2471:4;2465:11;2459:4;2456:21;2453:38;;;-1:-1:-1;2488:1:52;2453:38;2514:4;2522:1;2514:9;2510:66;;2546:19;;-1:-1:-1;;;2546:19:52;;;;;;;;;;;2510:66;17362:3;17354:11;;;17353:20;;2592:33;17029:352;7459:258;7512:12;-1:-1:-1;;;;;7239:43:52;;7671:13;:7;6898:3;6871:30;;6712:196;7671:13;:29;;7459:258;-1:-1:-1;;7459:258:52:o;18013:842::-;18352:4;18346:11;18091:7;;-1:-1:-1;;;;;7239:43:52;;;6898:3;6871:30;;;;18434:12;;;18430:66;;;18469:16;;-1:-1:-1;;;18469:16:52;;;;;;;;;;;18430:66;18505:8;18721:4;18713:6;18707:4;18699:6;18693:4;18686:5;18675:51;18668:58;;18750:3;18745:37;;18762:20;;-1:-1:-1;;;18762:20:52;;;;;;;;;;;18745:37;17362:3;17354:11;;;17353:20;;18792:56;18013:842;-1:-1:-1;;;;;;;18013:842:52:o;-1:-1:-1:-;;;;;;;;:::o;14:127:199:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:137;-1:-1:-1;;;;;224:5:199;220:38;213:5;210:49;200:77;;273:1;270;263:12;288:129;373:18;366:5;362:30;355:5;352:41;342:69;;407:1;404;397:12;422:121;507:10;500:5;496:22;489:5;486:33;476:61;;533:1;530;523:12;548:784;636:6;689:2;677:9;668:7;664:23;660:32;657:52;;;705:1;702;695:12;657:52;738:2;732:9;780:2;772:6;768:15;849:6;837:10;834:22;813:18;801:10;798:34;795:62;792:88;;;860:18;;:::i;:::-;896:2;889:22;933:23;;965:30;933:23;965:30;:::i;:::-;1004:21;;1077:2;1062:18;;1049:32;1090;1049;1090;:::i;:::-;1150:2;1138:15;;1131:32;1215:2;1200:18;;1187:32;1228;1187;1228;:::i;:::-;1288:2;1276:15;;1269:32;1280:6;548:784;-1:-1:-1;;;548:784:199:o;1337:658::-;1508:2;1560:21;;;1630:13;;1533:18;;;1652:22;;;1479:4;;1508:2;1731:15;;;;1705:2;1690:18;;;1479:4;1774:195;1788:6;1785:1;1782:13;1774:195;;;1853:13;;-1:-1:-1;;;;;1849:39:199;1837:52;;1944:15;;;;1909:12;;;;1885:1;1803:9;1774:195;;;-1:-1:-1;1986:3:199;;1337:658;-1:-1:-1;;;;;;1337:658:199:o;2000:180::-;2059:6;2112:2;2100:9;2091:7;2087:23;2083:32;2080:52;;;2128:1;2125;2118:12;2080:52;-1:-1:-1;2151:23:199;;2000:180;-1:-1:-1;2000:180:199:o;2393:1569::-;2597:4;2626:2;2666;2655:9;2651:18;2696:2;2685:9;2678:21;2719:6;2754;2748:13;2785:6;2777;2770:22;2811:2;2801:12;;2844:2;2833:9;2829:18;2822:25;;2906:2;2896:6;2893:1;2889:14;2878:9;2874:30;2870:39;2944:2;2936:6;2932:15;2965:1;2986;2996:937;3012:6;3007:3;3004:15;2996:937;;;3081:22;;;-1:-1:-1;;3077:36:199;3065:49;;3137:13;;3224:9;;-1:-1:-1;;;;;3220:35:199;3205:51;;3295:11;;3289:18;3327:15;;;3320:27;;;3408:19;;3177:15;;;3440:24;;;3530:21;;;;3575:1;;3498:2;3486:15;;;3589:236;3605:8;3600:3;3597:17;3589:236;;;3686:15;;-1:-1:-1;;;;;;3682:42:199;3668:57;;3794:17;;;;3633:1;3624:11;;;;;3751:14;;;;3589:236;;;-1:-1:-1;3911:12:199;;;;3848:5;-1:-1:-1;;;3876:15:199;;;;3038:1;3029:11;2996:937;;;-1:-1:-1;3950:6:199;;2393:1569;-1:-1:-1;;;;;;;;;2393:1569:199:o;3967:286::-;4026:6;4079:2;4067:9;4058:7;4054:23;4050:32;4047:52;;;4095:1;4092;4085:12;4047:52;4121:23;;-1:-1:-1;;;;;4173:31:199;;4163:42;;4153:70;;4219:1;4216;4209:12;4153:70;4242:5;3967:286;-1:-1:-1;;;3967:286:199:o;4440:250::-;4525:1;4535:113;4549:6;4546:1;4543:13;4535:113;;;4625:11;;;4619:18;4606:11;;;4599:39;4571:2;4564:10;4535:113;;;-1:-1:-1;;4682:1:199;4664:16;;4657:27;4440:250::o;4695:271::-;4737:3;4775:5;4769:12;4802:6;4797:3;4790:19;4818:76;4887:6;4880:4;4875:3;4871:14;4864:4;4857:5;4853:16;4818:76;:::i;:::-;4948:2;4927:15;-1:-1:-1;;4923:29:199;4914:39;;;;4955:4;4910:50;;4695:271;-1:-1:-1;;4695:271:199:o;4971:803::-;5133:4;5162:2;5202;5191:9;5187:18;5232:2;5221:9;5214:21;5255:6;5290;5284:13;5321:6;5313;5306:22;5359:2;5348:9;5344:18;5337:25;;5421:2;5411:6;5408:1;5404:14;5393:9;5389:30;5385:39;5371:53;;5459:2;5451:6;5447:15;5480:1;5490:255;5504:6;5501:1;5498:13;5490:255;;;5597:2;5593:7;5581:9;5573:6;5569:22;5565:36;5560:3;5553:49;5625:40;5658:6;5649;5643:13;5625:40;:::i;:::-;5615:50;-1:-1:-1;5723:12:199;;;;5688:15;;;;5526:1;5519:9;5490:255;;;-1:-1:-1;5762:6:199;;4971:803;-1:-1:-1;;;;;;;4971:803:199:o;5779:114::-;5863:4;5856:5;5852:16;5845:5;5842:27;5832:55;;5883:1;5880;5873:12;5898:448;5971:6;5979;5987;6040:2;6028:9;6019:7;6015:23;6011:32;6008:52;;;6056:1;6053;6046:12;6008:52;6095:9;6082:23;6114:29;6137:5;6114:29;:::i;:::-;6162:5;-1:-1:-1;6219:2:199;6204:18;;6191:32;6232:31;6191:32;6232:31;:::i;:::-;5898:448;;6282:7;;-1:-1:-1;;;6336:2:199;6321:18;;;;6308:32;;5898:448::o;6351:218::-;6498:2;6487:9;6480:21;6461:4;6518:45;6559:2;6548:9;6544:18;6536:6;6518:45;:::i;6574:248::-;6642:6;6650;6703:2;6691:9;6682:7;6678:23;6674:32;6671:52;;;6719:1;6716;6709:12;6671:52;-1:-1:-1;;6742:23:199;;;6812:2;6797:18;;;6784:32;;-1:-1:-1;6574:248:199:o;7204:718::-;7246:5;7299:3;7292:4;7284:6;7280:17;7276:27;7266:55;;7317:1;7314;7307:12;7266:55;7353:6;7340:20;7379:18;7416:2;7412;7409:10;7406:36;;;7422:18;;:::i;:::-;7497:2;7491:9;7465:2;7551:13;;-1:-1:-1;;7547:22:199;;;7571:2;7543:31;7539:40;7527:53;;;7595:18;;;7615:22;;;7592:46;7589:72;;;7641:18;;:::i;:::-;7681:10;7677:2;7670:22;7716:2;7708:6;7701:18;7762:3;7755:4;7750:2;7742:6;7738:15;7734:26;7731:35;7728:55;;;7779:1;7776;7769:12;7728:55;7843:2;7836:4;7828:6;7824:17;7817:4;7809:6;7805:17;7792:54;7890:1;7883:4;7878:2;7870:6;7866:15;7862:26;7855:37;7910:6;7901:15;;;;;;7204:718;;;;:::o;7927:320::-;7995:6;8048:2;8036:9;8027:7;8023:23;8019:32;8016:52;;;8064:1;8061;8054:12;8016:52;8104:9;8091:23;8137:18;8129:6;8126:30;8123:50;;;8169:1;8166;8159:12;8123:50;8192:49;8233:7;8224:6;8213:9;8209:22;8192:49;:::i;8252:388::-;8329:6;8337;8390:2;8378:9;8369:7;8365:23;8361:32;8358:52;;;8406:1;8403;8396:12;8358:52;8442:9;8429:23;8419:33;;8503:2;8492:9;8488:18;8475:32;8530:18;8522:6;8519:30;8516:50;;;8562:1;8559;8552:12;8516:50;8585:49;8626:7;8617:6;8606:9;8602:22;8585:49;:::i;:::-;8575:59;;;8252:388;;;;;:::o;9038:290::-;9108:6;9161:2;9149:9;9140:7;9136:23;9132:32;9129:52;;;9177:1;9174;9167:12;9129:52;9203:16;;-1:-1:-1;;;;;9248:31:199;;9238:42;;9228:70;;9294:1;9291;9284:12;9333:127;9394:10;9389:3;9385:20;9382:1;9375:31;9425:4;9422:1;9415:15;9449:4;9446:1;9439:15;9465:168;9538:9;;;9569;;9586:15;;;9580:22;;9566:37;9556:71;;9607:18;;:::i;9638:125::-;9703:9;;;9724:10;;;9721:36;;;9737:18;;:::i;9976:249::-;10045:6;10098:2;10086:9;10077:7;10073:23;10069:32;10066:52;;;10114:1;10111;10104:12;10066:52;10146:9;10140:16;10165:30;10189:5;10165:30;:::i;10230:249::-;10299:6;10352:2;10340:9;10331:7;10327:23;10323:32;10320:52;;;10368:1;10365;10358:12;10320:52;10400:9;10394:16;10419:30;10443:5;10419:30;:::i;10484:249::-;10553:6;10606:2;10594:9;10585:7;10581:23;10577:32;10574:52;;;10622:1;10619;10612:12;10574:52;10654:9;10648:16;10673:30;10697:5;10673:30;:::i;10964:380::-;11043:1;11039:12;;;;11086;;;11107:61;;11161:4;11153:6;11149:17;11139:27;;11107:61;11214:2;11206:6;11203:14;11183:18;11180:38;11177:161;;11260:10;11255:3;11251:20;11248:1;11241:31;11295:4;11292:1;11285:15;11323:4;11320:1;11313:15;11177:161;;10964:380;;;:::o;11349:254::-;11379:1;11413:4;11410:1;11406:12;11437:3;11427:134;;11483:10;11478:3;11474:20;11471:1;11464:31;11518:4;11515:1;11508:15;11546:4;11543:1;11536:15;11427:134;11593:3;11586:4;11583:1;11579:12;11575:22;11570:27;;;11349:254;;;;:::o;12893:369::-;12979:6;12987;12995;13048:2;13036:9;13027:7;13023:23;13019:32;13016:52;;;13064:1;13061;13054:12;13016:52;13096:9;13090:16;13115:29;13138:5;13115:29;:::i;:::-;13208:2;13193:18;;13187:25;13252:2;13237:18;;;13231:25;13163:5;;13187:25;;-1:-1:-1;13231:25:199;12893:369;-1:-1:-1;;;12893:369:199:o;14071:384::-;-1:-1:-1;;;;;;14256:33:199;;14244:46;;14313:13;;14226:3;;14335:74;14313:13;14398:1;14389:11;;14382:4;14370:17;;14335:74;:::i;:::-;14429:16;;;;14447:1;14425:24;;14071:384;-1:-1:-1;;;14071:384:199:o;14460:287::-;14589:3;14627:6;14621:13;14643:66;14702:6;14697:3;14690:4;14682:6;14678:17;14643:66;:::i;:::-;14725:16;;;;;14460:287;-1:-1:-1;;14460:287:199:o;14752:277::-;14819:6;14872:2;14860:9;14851:7;14847:23;14843:32;14840:52;;;14888:1;14885;14878:12;14840:52;14920:9;14914:16;14973:5;14966:13;14959:21;14952:5;14949:32;14939:60;;14995:1;14992;14985:12;15034:398;15189:3;15227:6;15221:13;15243:66;15302:6;15297:3;15290:4;15282:6;15278:17;15243:66;:::i;:::-;-1:-1:-1;;;;;;15370:26:199;;;;15331:16;;;;15356:41;;;15424:1;15413:13;;15034:398;-1:-1:-1;;15034:398:199:o;15437:128::-;15504:9;;;15525:11;;;15522:37;;;15539:18;;:::i;15570:446::-;15820:2;15809:9;15802:21;15859:1;15854:2;15843:9;15839:18;15832:29;-1:-1:-1;;;15892:2:199;15881:9;15877:18;15870:35;15943:3;15936:4;15925:9;15921:20;15914:33;15783:4;15964:46;16005:3;15994:9;15990:19;15982:6;15964:46;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "addLastByte(bytes)": "c10b95e7",
    "addressToBytes32(address)": "82c947b7",
    "bytes32ToAddress(bytes32)": "5ced058e",
    "createShortPayload(uint8,uint8,bytes32)": "8820cb26",
    "cutLastByte(bytes)": "f1f97ac0",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "expectRevertAlreadyInitialized()": "7b347163",
    "expectRevertNotOwner()": "c63101b6",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "signMessage(uint256,bytes)": "eaee2611",
    "signMessage(uint256,bytes32)": "91df0ed8",
    "skipBlock()": "660982d9",
    "skipBlocks(uint256)": "a72e0a34",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testSynapseLibraryTest()": "a2cdb207",
    "testSynapseUtilities()": "0621feff",
    "test_encodeRequest((uint96,uint64,uint32))": "02859368",
    "test_requestLength((uint96,uint64,uint32))": "2e71d228"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OccupiedMemory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PrecompileOutOfGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnallocatedMemory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ViewOverrun\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"addLastByte\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addressToBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"buf\",\"type\":\"bytes32\"}],\"name\":\"bytes32ToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"payloadLength\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"firstElementLength\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"createShortPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"cutLastByte\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevertAlreadyInitialized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevertNotOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hashedMsg\",\"type\":\"bytes32\"}],\"name\":\"signMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"signMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"skipBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blocks\",\"type\":\"uint256\"}],\"name\":\"skipBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSynapseLibraryTest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSynapseUtilities\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint96\",\"name\":\"gasDrop\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"version\",\"type\":\"uint32\"}],\"internalType\":\"struct RawRequest\",\"name\":\"rr\",\"type\":\"tuple\"}],\"name\":\"test_encodeRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint96\",\"name\":\"gasDrop\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"version\",\"type\":\"uint32\"}],\"internalType\":\"struct RawRequest\",\"name\":\"rr\",\"type\":\"tuple\"}],\"name\":\"test_requestLength\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"testSynapseLibraryTest()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"},\"testSynapseUtilities()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/suite/libs/stack/Request.t.sol\":\"RequestLibraryTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/libs/Constants.sol\":{\"keccak256\":\"0x9ead9581411ac7f702ccba26e3f478610f8c9c785ec3f96f3d9324d162177c2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cba4a834737651bee39e2abca02d59e676cd149439d21182ab6e4320d5e61279\",\"dweb:/ipfs/QmS2K5LKspFZPKuedWoaqywUw6v1nH9xdHa35dN8J9jDEi\"]},\"contracts/libs/Errors.sol\":{\"keccak256\":\"0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b\",\"dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB\"]},\"contracts/libs/memory/Attestation.sol\":{\"keccak256\":\"0x83b58e2d80cc7139b8996c51c5e9015f34e833e73b92036b53a1af6641e2b699\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a097c82542ba977de931c6331a9b01a39ef2e46b8916414a6f4f550bc59c113\",\"dweb:/ipfs/QmYRHMoPXzrnx86rZnHAEiFxqM5poEs6wyZinLLTEfwZH3\"]},\"contracts/libs/memory/BaseMessage.sol\":{\"keccak256\":\"0x6f625ee64c2abb64fe5e7645eb4ac449e4a743cf5c434de70b24b47522a2c579\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a29cb57889c10b4cc601abe0f65529f1829354a276437ecb7ce387a654fb671\",\"dweb:/ipfs/QmRYA9HJAdKaVhrvDdaCwdR5DvCYy7yPQGVJ4a9kUCAxaA\"]},\"contracts/libs/memory/ByteString.sol\":{\"keccak256\":\"0x99a2d8a7d93c1ce5063da6631347189cffb95d977cc1683c8bc2d9529b501d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c627819681a668117cbf3633700ed36b63942a3ea8d96db65211febe048bb8bb\",\"dweb:/ipfs/QmSdhu6BDD6Tk17zD2JcmYwYVEnnoeuh9UFWfUkVW5KKvL\"]},\"contracts/libs/memory/MemView.sol\":{\"keccak256\":\"0x95dd48e50e353b59fadce29f22f02629c91bd3b5e07c0efa588bd7c808536587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4347457c5338192aca52c237c7f588d15a4f541482cd44b0632c59f36f9558eb\",\"dweb:/ipfs/QmXn1sKY7nVNrgKtbtE9PaMHFKBadyg73fs2jhw4Navyb1\"]},\"contracts/libs/memory/Message.sol\":{\"keccak256\":\"0x206a96eb35a7015116bfc585b30d34bd5cf151761ded37b8a2a36dd74a9ba99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12ebb3152e1c1dc2aed3c88cb17f54d9abc2a157215c2628fa3c4ac161686cf\",\"dweb:/ipfs/QmbU6h7KEanE7Pt5UXN2WV5SQwWjziCwqBL5RLKAUJHKci\"]},\"contracts/libs/memory/Receipt.sol\":{\"keccak256\":\"0x009e8cfffa4806d1a0a326a31350ead092c9cd22105d4890c86bf93d20c7824d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa9905170f86e4e2d9b62e9fabaab36381398da14f001e0b9bb98c31c174a48e\",\"dweb:/ipfs/QmYpHjdY2yf3w6kFi9urUTyrMyVZBBsCGGEkE1kyTnXqVn\"]},\"contracts/libs/memory/Snapshot.sol\":{\"keccak256\":\"0x5df6aa04b1cbb65e410c7f1a02787e0e11dbcdb5cde18ae50d435029c27c1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2e19b5c6778338b7e8e9c8ef82738797d8955d37884c7db70d7cdea43329910\",\"dweb:/ipfs/Qma1cRGHqRM3tkh5JyzR2Td6iKKST2HapTygBwVNTRJJZD\"]},\"contracts/libs/memory/State.sol\":{\"keccak256\":\"0x3997f3a820110b3bce6f87ea8df3e1f8b006d1ac45efff1dc2f8873f8bbfa5af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf973a3633546dfff75b550673b4a680b7fab48d7fc8923157983a4fde3d5da4\",\"dweb:/ipfs/QmZ8NNwcYaqVxtar8g5MH5mqDXXuMTQLe6vi7zYGswFA3N\"]},\"contracts/libs/merkle/MerkleMath.sol\":{\"keccak256\":\"0xbd13c07bdc40b80f56c7d75e3f31b6c4a85a78d444b760604a5b71083d14925c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3162b491e4e216c0f2d143ce3baab4cf9e2a8b1b42466256a5d5b1f8b0385507\",\"dweb:/ipfs/QmYnDSZyxiGHfmB8Fx46zh1LZe3aCdVaKzpaQuD9piTc7u\"]},\"contracts/libs/stack/GasData.sol\":{\"keccak256\":\"0x2007fd4b97cf33bfe4aa7dc6ac887af87b4010ec9834636b4dd5685582ac26cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b54ca8b659d63ef7138c5b3b243190ca19b1e893b7b49dee1f8790d55b9e691\",\"dweb:/ipfs/Qmc2FGb16uosZ5kvyEK2onpWVPvWeE9X72xNWeJw8CbweD\"]},\"contracts/libs/stack/Header.sol\":{\"keccak256\":\"0x6a2030f6d08075f91336466c3fe4bd63f2760dcd42554856357af8024fd55344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1a1c8f6240f897c62cdc09fab57fc9eeea8072efbc8d101bd7e40b8eea272c9\",\"dweb:/ipfs/QmYrFA3fupKhW71k6yLkQsojPJt4Fcv4uH46hNvYYHcDsy\"]},\"contracts/libs/stack/Number.sol\":{\"keccak256\":\"0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd\",\"dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5\"]},\"contracts/libs/stack/Request.sol\":{\"keccak256\":\"0xecd4427fe7285d1d5663ea019a66ebb04d3f495c0be28a14043c99a0d9a90689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55e800c307070d6497031b90157d917dcabd5f93d342081be8d20ad3c80df429\",\"dweb:/ipfs/QmU8oza8MeWDbG9xfPaPVoj4Z1rKtvQ7pA3Z7CuYyGSuY6\"]},\"contracts/libs/stack/Tips.sol\":{\"keccak256\":\"0x2186d854149349ff689a8356c7f387d134f59fa4a97aed7b43c9e25f46661b0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff15d61f2c9b26e6ef33457aed4a2d9ed61726e2a746d3e0a7e68eb6cd3d63a1\",\"dweb:/ipfs/QmUeiiTAjPmuFhLfzDMqZ6DyvQmEYhsKo9XArHSrMvjYKL\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x027d1aa07f6a45546d6990186ee6ab2ccd1b654fbbef326145e9b6e125feaabc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c57fcb94bf64d583115157e4c89cc4ad58ff1102677613d7ef70263d98d270\",\"dweb:/ipfs/QmbASKUPs9pRck3j4soibhgGJ2ghr38vzdaSrF5Ae2xyqQ\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"test/harnesses/libs/stack/RequestHarness.t.sol\":{\"keccak256\":\"0x25bc96eb63d16d1dbbc6eb1ae6f7a4f0a0d24986463f066fee70fbc6cc2229c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b0e2d39a6c64b17c394115ac4695e91667f6c3f4de1b6122d97615cfe0a2e82\",\"dweb:/ipfs/QmU5GoyP6aKA8tzyhy59PQTxyoPiHFmv9nnj4ygUtRKXBp\"]},\"test/suite/libs/stack/Request.t.sol\":{\"keccak256\":\"0x36a895c59bbdd3309c15e66cf028286e9d265ee51a44050f50da471e12692842\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7b51ff60ba56f9edd23ff62ea95d025f7cd69c8826d259a4af36cf3676ed5ae\",\"dweb:/ipfs/QmYPLLN2XYrckVQnykXdANMXEu6z1HEz5upnuPmWG41FV4\"]},\"test/utils/SynapseLibraryTest.t.sol\":{\"keccak256\":\"0xadc2e35557bfeb3617d3f4806596e610ccb399b20255c51930626b4a100ee803\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee71b2028c579cb42ddc895a1ab40c3a6001e2e36119465e18562f2535627e9d\",\"dweb:/ipfs/QmXzRiSqSvA9z9Rq4xnhGFCSbJUYAgmE8VrnP3hqjfWBbm\"]},\"test/utils/SynapseTestConstants.t.sol\":{\"keccak256\":\"0x24b5c4c4f8e0de51b137e0b922875be258282ddd33580da8cf939bef0b552a79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ea15ff24cdcacc3c31382bd04c530287d49dc841f7013e9810133b4f91593e\",\"dweb:/ipfs/QmbBd33fFmSmTqPXks8knXCXZHpaYvUSjebtmFGrU3YE5A\"]},\"test/utils/SynapseUtilities.t.sol\":{\"keccak256\":\"0x8d08d6a579173fe927decca6fbeaa743e9455051837799f3be15c052420b7112\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5662d8d58cac1c6e0688ce8faee3b2085402e4d0ce0cbc38596bdaafa75e1b51\",\"dweb:/ipfs/QmU9b5UQeYndKQAVprdab994RuG1WW8Uz7sg38uadyN2gq\"]},\"test/utils/libs/SynapseStructs.t.sol\":{\"keccak256\":\"0x664ba9f04e889501196308480444a90657872af51267cbe7e6d9de5308edab13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b85dd129998afd92047c883b6712d815ae2930171eaa33eb30fdceb5dddca0ea\",\"dweb:/ipfs/QmRKcKo86FaRVEydU1yETN6jaSKbomdFFcrswzZeL3WnAh\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "OccupiedMemory"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PrecompileOutOfGas"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnallocatedMemory"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ViewOverrun"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "addLastByte",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "addressToBytes32",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "buf",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "bytes32ToAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "payloadLength",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "firstElementLength",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "createShortPayload",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cutLastByte",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "expectRevertAlreadyInitialized"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "expectRevertNotOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "privKey",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "hashedMsg",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "signMessage",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "privKey",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "signMessage",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "skipBlock"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blocks",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "skipBlocks"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSynapseLibraryTest"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSynapseUtilities"
        },
        {
          "inputs": [
            {
              "internalType": "struct RawRequest",
              "name": "rr",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint96",
                  "name": "gasDrop",
                  "type": "uint96"
                },
                {
                  "internalType": "uint64",
                  "name": "gasLimit",
                  "type": "uint64"
                },
                {
                  "internalType": "uint32",
                  "name": "version",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_encodeRequest"
        },
        {
          "inputs": [
            {
              "internalType": "struct RawRequest",
              "name": "rr",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint96",
                  "name": "gasDrop",
                  "type": "uint96"
                },
                {
                  "internalType": "uint64",
                  "name": "gasLimit",
                  "type": "uint64"
                },
                {
                  "internalType": "uint32",
                  "name": "version",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_requestLength"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "testSynapseLibraryTest()": {
            "notice": "Prevents this contract from being included in the coverage report"
          },
          "testSynapseUtilities()": {
            "notice": "Prevents this contract from being included in the coverage report"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/suite/libs/stack/Request.t.sol": "RequestLibraryTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/libs/Constants.sol": {
        "keccak256": "0x9ead9581411ac7f702ccba26e3f478610f8c9c785ec3f96f3d9324d162177c2c",
        "urls": [
          "bzz-raw://cba4a834737651bee39e2abca02d59e676cd149439d21182ab6e4320d5e61279",
          "dweb:/ipfs/QmS2K5LKspFZPKuedWoaqywUw6v1nH9xdHa35dN8J9jDEi"
        ],
        "license": "MIT"
      },
      "contracts/libs/Errors.sol": {
        "keccak256": "0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011",
        "urls": [
          "bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b",
          "dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Attestation.sol": {
        "keccak256": "0x83b58e2d80cc7139b8996c51c5e9015f34e833e73b92036b53a1af6641e2b699",
        "urls": [
          "bzz-raw://1a097c82542ba977de931c6331a9b01a39ef2e46b8916414a6f4f550bc59c113",
          "dweb:/ipfs/QmYRHMoPXzrnx86rZnHAEiFxqM5poEs6wyZinLLTEfwZH3"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/BaseMessage.sol": {
        "keccak256": "0x6f625ee64c2abb64fe5e7645eb4ac449e4a743cf5c434de70b24b47522a2c579",
        "urls": [
          "bzz-raw://0a29cb57889c10b4cc601abe0f65529f1829354a276437ecb7ce387a654fb671",
          "dweb:/ipfs/QmRYA9HJAdKaVhrvDdaCwdR5DvCYy7yPQGVJ4a9kUCAxaA"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/ByteString.sol": {
        "keccak256": "0x99a2d8a7d93c1ce5063da6631347189cffb95d977cc1683c8bc2d9529b501d66",
        "urls": [
          "bzz-raw://c627819681a668117cbf3633700ed36b63942a3ea8d96db65211febe048bb8bb",
          "dweb:/ipfs/QmSdhu6BDD6Tk17zD2JcmYwYVEnnoeuh9UFWfUkVW5KKvL"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/MemView.sol": {
        "keccak256": "0x95dd48e50e353b59fadce29f22f02629c91bd3b5e07c0efa588bd7c808536587",
        "urls": [
          "bzz-raw://4347457c5338192aca52c237c7f588d15a4f541482cd44b0632c59f36f9558eb",
          "dweb:/ipfs/QmXn1sKY7nVNrgKtbtE9PaMHFKBadyg73fs2jhw4Navyb1"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Message.sol": {
        "keccak256": "0x206a96eb35a7015116bfc585b30d34bd5cf151761ded37b8a2a36dd74a9ba99c",
        "urls": [
          "bzz-raw://e12ebb3152e1c1dc2aed3c88cb17f54d9abc2a157215c2628fa3c4ac161686cf",
          "dweb:/ipfs/QmbU6h7KEanE7Pt5UXN2WV5SQwWjziCwqBL5RLKAUJHKci"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Receipt.sol": {
        "keccak256": "0x009e8cfffa4806d1a0a326a31350ead092c9cd22105d4890c86bf93d20c7824d",
        "urls": [
          "bzz-raw://aa9905170f86e4e2d9b62e9fabaab36381398da14f001e0b9bb98c31c174a48e",
          "dweb:/ipfs/QmYpHjdY2yf3w6kFi9urUTyrMyVZBBsCGGEkE1kyTnXqVn"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Snapshot.sol": {
        "keccak256": "0x5df6aa04b1cbb65e410c7f1a02787e0e11dbcdb5cde18ae50d435029c27c1ce5",
        "urls": [
          "bzz-raw://d2e19b5c6778338b7e8e9c8ef82738797d8955d37884c7db70d7cdea43329910",
          "dweb:/ipfs/Qma1cRGHqRM3tkh5JyzR2Td6iKKST2HapTygBwVNTRJJZD"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/State.sol": {
        "keccak256": "0x3997f3a820110b3bce6f87ea8df3e1f8b006d1ac45efff1dc2f8873f8bbfa5af",
        "urls": [
          "bzz-raw://bf973a3633546dfff75b550673b4a680b7fab48d7fc8923157983a4fde3d5da4",
          "dweb:/ipfs/QmZ8NNwcYaqVxtar8g5MH5mqDXXuMTQLe6vi7zYGswFA3N"
        ],
        "license": "MIT"
      },
      "contracts/libs/merkle/MerkleMath.sol": {
        "keccak256": "0xbd13c07bdc40b80f56c7d75e3f31b6c4a85a78d444b760604a5b71083d14925c",
        "urls": [
          "bzz-raw://3162b491e4e216c0f2d143ce3baab4cf9e2a8b1b42466256a5d5b1f8b0385507",
          "dweb:/ipfs/QmYnDSZyxiGHfmB8Fx46zh1LZe3aCdVaKzpaQuD9piTc7u"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/GasData.sol": {
        "keccak256": "0x2007fd4b97cf33bfe4aa7dc6ac887af87b4010ec9834636b4dd5685582ac26cb",
        "urls": [
          "bzz-raw://8b54ca8b659d63ef7138c5b3b243190ca19b1e893b7b49dee1f8790d55b9e691",
          "dweb:/ipfs/Qmc2FGb16uosZ5kvyEK2onpWVPvWeE9X72xNWeJw8CbweD"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Header.sol": {
        "keccak256": "0x6a2030f6d08075f91336466c3fe4bd63f2760dcd42554856357af8024fd55344",
        "urls": [
          "bzz-raw://e1a1c8f6240f897c62cdc09fab57fc9eeea8072efbc8d101bd7e40b8eea272c9",
          "dweb:/ipfs/QmYrFA3fupKhW71k6yLkQsojPJt4Fcv4uH46hNvYYHcDsy"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Number.sol": {
        "keccak256": "0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96",
        "urls": [
          "bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd",
          "dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Request.sol": {
        "keccak256": "0xecd4427fe7285d1d5663ea019a66ebb04d3f495c0be28a14043c99a0d9a90689",
        "urls": [
          "bzz-raw://55e800c307070d6497031b90157d917dcabd5f93d342081be8d20ad3c80df429",
          "dweb:/ipfs/QmU8oza8MeWDbG9xfPaPVoj4Z1rKtvQ7pA3Z7CuYyGSuY6"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Tips.sol": {
        "keccak256": "0x2186d854149349ff689a8356c7f387d134f59fa4a97aed7b43c9e25f46661b0d",
        "urls": [
          "bzz-raw://ff15d61f2c9b26e6ef33457aed4a2d9ed61726e2a746d3e0a7e68eb6cd3d63a1",
          "dweb:/ipfs/QmUeiiTAjPmuFhLfzDMqZ6DyvQmEYhsKo9XArHSrMvjYKL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x027d1aa07f6a45546d6990186ee6ab2ccd1b654fbbef326145e9b6e125feaabc",
        "urls": [
          "bzz-raw://85c57fcb94bf64d583115157e4c89cc4ad58ff1102677613d7ef70263d98d270",
          "dweb:/ipfs/QmbASKUPs9pRck3j4soibhgGJ2ghr38vzdaSrF5Ae2xyqQ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "test/harnesses/libs/stack/RequestHarness.t.sol": {
        "keccak256": "0x25bc96eb63d16d1dbbc6eb1ae6f7a4f0a0d24986463f066fee70fbc6cc2229c0",
        "urls": [
          "bzz-raw://0b0e2d39a6c64b17c394115ac4695e91667f6c3f4de1b6122d97615cfe0a2e82",
          "dweb:/ipfs/QmU5GoyP6aKA8tzyhy59PQTxyoPiHFmv9nnj4ygUtRKXBp"
        ],
        "license": "MIT"
      },
      "test/suite/libs/stack/Request.t.sol": {
        "keccak256": "0x36a895c59bbdd3309c15e66cf028286e9d265ee51a44050f50da471e12692842",
        "urls": [
          "bzz-raw://e7b51ff60ba56f9edd23ff62ea95d025f7cd69c8826d259a4af36cf3676ed5ae",
          "dweb:/ipfs/QmYPLLN2XYrckVQnykXdANMXEu6z1HEz5upnuPmWG41FV4"
        ],
        "license": "MIT"
      },
      "test/utils/SynapseLibraryTest.t.sol": {
        "keccak256": "0xadc2e35557bfeb3617d3f4806596e610ccb399b20255c51930626b4a100ee803",
        "urls": [
          "bzz-raw://ee71b2028c579cb42ddc895a1ab40c3a6001e2e36119465e18562f2535627e9d",
          "dweb:/ipfs/QmXzRiSqSvA9z9Rq4xnhGFCSbJUYAgmE8VrnP3hqjfWBbm"
        ],
        "license": "MIT"
      },
      "test/utils/SynapseTestConstants.t.sol": {
        "keccak256": "0x24b5c4c4f8e0de51b137e0b922875be258282ddd33580da8cf939bef0b552a79",
        "urls": [
          "bzz-raw://12ea15ff24cdcacc3c31382bd04c530287d49dc841f7013e9810133b4f91593e",
          "dweb:/ipfs/QmbBd33fFmSmTqPXks8knXCXZHpaYvUSjebtmFGrU3YE5A"
        ],
        "license": "MIT"
      },
      "test/utils/SynapseUtilities.t.sol": {
        "keccak256": "0x8d08d6a579173fe927decca6fbeaa743e9455051837799f3be15c052420b7112",
        "urls": [
          "bzz-raw://5662d8d58cac1c6e0688ce8faee3b2085402e4d0ce0cbc38596bdaafa75e1b51",
          "dweb:/ipfs/QmU9b5UQeYndKQAVprdab994RuG1WW8Uz7sg38uadyN2gq"
        ],
        "license": "MIT"
      },
      "test/utils/libs/SynapseStructs.t.sol": {
        "keccak256": "0x664ba9f04e889501196308480444a90657872af51267cbe7e6d9de5308edab13",
        "urls": [
          "bzz-raw://b85dd129998afd92047c883b6712d815ae2930171eaa33eb30fdceb5dddca0ea",
          "dweb:/ipfs/QmRKcKo86FaRVEydU1yETN6jaSKbomdFFcrswzZeL3WnAh"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/suite/libs/stack/Request.t.sol",
    "id": 86206,
    "exportedSymbols": {
      "MemViewLib": [
        12265
      ],
      "REQUEST_LENGTH": [
        10102
      ],
      "RawRequest": [
        94251
      ],
      "RequestHarness": [
        58110
      ],
      "RequestLibraryTest": [
        86205
      ],
      "SynapseLibraryTest": [
        91481
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1440:174",
    "nodes": [
      {
        "id": 86059,
        "nodeType": "PragmaDirective",
        "src": "32:23:174",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 86061,
        "nodeType": "ImportDirective",
        "src": "57:72:174",
        "nodes": [],
        "absolutePath": "contracts/libs/Constants.sol",
        "file": "../../../../contracts/libs/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86206,
        "sourceUnit": 10171,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86060,
              "name": "REQUEST_LENGTH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10102,
              "src": "65:14:174",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86064,
        "nodeType": "ImportDirective",
        "src": "131:87:174",
        "nodes": [],
        "absolutePath": "test/utils/SynapseLibraryTest.t.sol",
        "file": "../../../utils/SynapseLibraryTest.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86206,
        "sourceUnit": 91482,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86062,
              "name": "SynapseLibraryTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 91481,
              "src": "139:18:174",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86063,
              "name": "MemViewLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12265,
              "src": "159:10:174",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86066,
        "nodeType": "ImportDirective",
        "src": "219:82:174",
        "nodes": [],
        "absolutePath": "test/harnesses/libs/stack/RequestHarness.t.sol",
        "file": "../../../harnesses/libs/stack/RequestHarness.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86206,
        "sourceUnit": 58111,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86065,
              "name": "RequestHarness",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58110,
              "src": "227:14:174",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86068,
        "nodeType": "ImportDirective",
        "src": "303:68:174",
        "nodes": [],
        "absolutePath": "test/utils/libs/SynapseStructs.t.sol",
        "file": "../../../utils/libs/SynapseStructs.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86206,
        "sourceUnit": 96327,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86067,
              "name": "RawRequest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 94251,
              "src": "311:10:174",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86205,
        "nodeType": "ContractDefinition",
        "src": "412:1059:174",
        "nodes": [
          {
            "id": 86073,
            "nodeType": "UsingForDirective",
            "src": "468:27:174",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 86071,
              "name": "MemViewLib",
              "nameLocations": [
                "474:10:174"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12265,
              "src": "474:10:174"
            },
            "typeName": {
              "id": 86072,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "489:5:174",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "id": 86076,
            "nodeType": "VariableDeclaration",
            "src": "501:34:174",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "libHarness",
            "nameLocation": "525:10:174",
            "scope": 86205,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RequestHarness_$58110",
              "typeString": "contract RequestHarness"
            },
            "typeName": {
              "id": 86075,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 86074,
                "name": "RequestHarness",
                "nameLocations": [
                  "501:14:174"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 58110,
                "src": "501:14:174"
              },
              "referencedDeclaration": 58110,
              "src": "501:14:174",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RequestHarness_$58110",
                "typeString": "contract RequestHarness"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 86087,
            "nodeType": "FunctionDefinition",
            "src": "542:74:174",
            "nodes": [],
            "body": {
              "id": 86086,
              "nodeType": "Block",
              "src": "566:50:174",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 86084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86079,
                      "name": "libHarness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86076,
                      "src": "576:10:174",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RequestHarness_$58110",
                        "typeString": "contract RequestHarness"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 86082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "589:18:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_RequestHarness_$58110_$",
                          "typeString": "function () returns (contract RequestHarness)"
                        },
                        "typeName": {
                          "id": 86081,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 86080,
                            "name": "RequestHarness",
                            "nameLocations": [
                              "593:14:174"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 58110,
                            "src": "593:14:174"
                          },
                          "referencedDeclaration": 58110,
                          "src": "593:14:174",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RequestHarness_$58110",
                            "typeString": "contract RequestHarness"
                          }
                        }
                      },
                      "id": 86083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "589:20:174",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RequestHarness_$58110",
                        "typeString": "contract RequestHarness"
                      }
                    },
                    "src": "576:33:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RequestHarness_$58110",
                      "typeString": "contract RequestHarness"
                    }
                  },
                  "id": 86085,
                  "nodeType": "ExpressionStatement",
                  "src": "576:33:174"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "551:5:174",
            "parameters": {
              "id": 86077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "556:2:174"
            },
            "returnParameters": {
              "id": 86078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "566:0:174"
            },
            "scope": 86205,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86176,
            "nodeType": "FunctionDefinition",
            "src": "622:603:174",
            "nodes": [],
            "body": {
              "id": 86175,
              "nodeType": "Block",
              "src": "679:546:174",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86094
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86094,
                      "mutability": "mutable",
                      "name": "encoded",
                      "nameLocation": "697:7:174",
                      "nodeType": "VariableDeclaration",
                      "scope": 86175,
                      "src": "689:15:174",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint192",
                        "typeString": "uint192"
                      },
                      "typeName": {
                        "id": 86093,
                        "name": "uint192",
                        "nodeType": "ElementaryTypeName",
                        "src": "689:7:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint192",
                          "typeString": "uint192"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86104,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 86097,
                          "name": "rr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86090,
                          "src": "732:2:174",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawRequest_$94251_memory_ptr",
                            "typeString": "struct RawRequest memory"
                          }
                        },
                        "id": 86098,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "735:7:174",
                        "memberName": "gasDrop",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94246,
                        "src": "732:10:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "expression": {
                          "id": 86099,
                          "name": "rr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86090,
                          "src": "744:2:174",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawRequest_$94251_memory_ptr",
                            "typeString": "struct RawRequest memory"
                          }
                        },
                        "id": 86100,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "747:8:174",
                        "memberName": "gasLimit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94248,
                        "src": "744:11:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 86101,
                          "name": "rr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86090,
                          "src": "757:2:174",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawRequest_$94251_memory_ptr",
                            "typeString": "struct RawRequest memory"
                          }
                        },
                        "id": 86102,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "760:7:174",
                        "memberName": "version",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94250,
                        "src": "757:10:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 86095,
                        "name": "libHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86076,
                        "src": "707:10:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RequestHarness_$58110",
                          "typeString": "contract RequestHarness"
                        }
                      },
                      "id": 86096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "718:13:174",
                      "memberName": "encodeRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58048,
                      "src": "707:24:174",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint96_$_t_uint64_$_t_uint32_$returns$_t_uint192_$",
                        "typeString": "function (uint96,uint64,uint32) pure external returns (uint192)"
                      }
                    },
                    "id": 86103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "707:61:174",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint192",
                      "typeString": "uint192"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "689:79:174"
                },
                {
                  "assignments": [
                    86106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86106,
                      "mutability": "mutable",
                      "name": "expected",
                      "nameLocation": "786:8:174",
                      "nodeType": "VariableDeclaration",
                      "scope": 86175,
                      "src": "778:16:174",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86105,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "778:7:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86129,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 86128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 86125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 86115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 86109,
                                "name": "rr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86090,
                                "src": "805:2:174",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RawRequest_$94251_memory_ptr",
                                  "typeString": "struct RawRequest memory"
                                }
                              },
                              "id": 86110,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "808:7:174",
                              "memberName": "gasDrop",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 94246,
                              "src": "805:10:174",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 86108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "797:7:174",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 86107,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "797:7:174",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 86111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "797:19:174",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                            "typeString": "int_const 79228162514264337593543950336"
                          },
                          "id": 86114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 86112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "819:1:174",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3936",
                            "id": 86113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "824:2:174",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_96_by_1",
                              "typeString": "int_const 96"
                            },
                            "value": "96"
                          },
                          "src": "819:7:174",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                            "typeString": "int_const 79228162514264337593543950336"
                          }
                        },
                        "src": "797:29:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 86124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 86118,
                                "name": "rr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86090,
                                "src": "837:2:174",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RawRequest_$94251_memory_ptr",
                                  "typeString": "struct RawRequest memory"
                                }
                              },
                              "id": 86119,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "840:8:174",
                              "memberName": "gasLimit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 94248,
                              "src": "837:11:174",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 86117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "829:7:174",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 86116,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "829:7:174",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 86120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "829:20:174",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_4294967296_by_1",
                            "typeString": "int_const 4294967296"
                          },
                          "id": 86123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 86121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "852:1:174",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3332",
                            "id": 86122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "857:2:174",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "852:7:174",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4294967296_by_1",
                            "typeString": "int_const 4294967296"
                          }
                        },
                        "src": "829:30:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "797:62:174",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "expression": {
                        "id": 86126,
                        "name": "rr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86090,
                        "src": "862:2:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RawRequest_$94251_memory_ptr",
                          "typeString": "struct RawRequest memory"
                        }
                      },
                      "id": 86127,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "865:7:174",
                      "memberName": "version",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 94250,
                      "src": "862:10:174",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "797:75:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "778:94:174"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86131,
                        "name": "encoded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86094,
                        "src": "891:7:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint192",
                          "typeString": "uint192"
                        }
                      },
                      {
                        "id": 86132,
                        "name": "expected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86106,
                        "src": "900:8:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "21656e636f646552657175657374",
                        "id": 86133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "910:16:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a590034fb8b3aca0a3f2cd67f57970c998b17d0248eb674d1cec296173e97268",
                          "typeString": "literal_string \"!encodeRequest\""
                        },
                        "value": "!encodeRequest"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint192",
                          "typeString": "uint192"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a590034fb8b3aca0a3f2cd67f57970c998b17d0248eb674d1cec296173e97268",
                          "typeString": "literal_string \"!encodeRequest\""
                        }
                      ],
                      "id": 86130,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18521,
                      "src": "882:8:174",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 86134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "882:45:174",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86135,
                  "nodeType": "ExpressionStatement",
                  "src": "882:45:174"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86139,
                            "name": "encoded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86094,
                            "src": "968:7:174",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint192",
                              "typeString": "uint192"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint192",
                              "typeString": "uint192"
                            }
                          ],
                          "expression": {
                            "id": 86137,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86076,
                            "src": "946:10:174",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RequestHarness_$58110",
                              "typeString": "contract RequestHarness"
                            }
                          },
                          "id": 86138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "957:10:174",
                          "memberName": "wrapPadded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58064,
                          "src": "946:21:174",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_uint192_$",
                            "typeString": "function (uint256) pure external returns (uint192)"
                          }
                        },
                        "id": 86140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "946:30:174",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint192",
                          "typeString": "uint192"
                        }
                      },
                      {
                        "id": 86141,
                        "name": "expected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86106,
                        "src": "978:8:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "2177726170506164646564",
                        "id": 86142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "988:13:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cccf3264734338ea4f6217a168ebbbcdc15a774eb2f9833030c3b5a54a5d1207",
                          "typeString": "literal_string \"!wrapPadded\""
                        },
                        "value": "!wrapPadded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint192",
                          "typeString": "uint192"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cccf3264734338ea4f6217a168ebbbcdc15a774eb2f9833030c3b5a54a5d1207",
                          "typeString": "literal_string \"!wrapPadded\""
                        }
                      ],
                      "id": 86136,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18521,
                      "src": "937:8:174",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 86143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "937:65:174",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86144,
                  "nodeType": "ExpressionStatement",
                  "src": "937:65:174"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86148,
                            "name": "encoded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86094,
                            "src": "1041:7:174",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint192",
                              "typeString": "uint192"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint192",
                              "typeString": "uint192"
                            }
                          ],
                          "expression": {
                            "id": 86146,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86076,
                            "src": "1021:10:174",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RequestHarness_$58110",
                              "typeString": "contract RequestHarness"
                            }
                          },
                          "id": 86147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1032:8:174",
                          "memberName": "gasLimit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58079,
                          "src": "1021:19:174",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_uint64_$",
                            "typeString": "function (uint256) pure external returns (uint64)"
                          }
                        },
                        "id": 86149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1021:28:174",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 86150,
                          "name": "rr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86090,
                          "src": "1051:2:174",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawRequest_$94251_memory_ptr",
                            "typeString": "struct RawRequest memory"
                          }
                        },
                        "id": 86151,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1054:8:174",
                        "memberName": "gasLimit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94248,
                        "src": "1051:11:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "216761734c696d6974",
                        "id": 86152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1064:11:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_992146294c69044e131caea28e0b9659f54caace062bf8ab234571552540adac",
                          "typeString": "literal_string \"!gasLimit\""
                        },
                        "value": "!gasLimit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_992146294c69044e131caea28e0b9659f54caace062bf8ab234571552540adac",
                          "typeString": "literal_string \"!gasLimit\""
                        }
                      ],
                      "id": 86145,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18521,
                      "src": "1012:8:174",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 86153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1012:64:174",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86154,
                  "nodeType": "ExpressionStatement",
                  "src": "1012:64:174"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86158,
                            "name": "encoded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86094,
                            "src": "1114:7:174",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint192",
                              "typeString": "uint192"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint192",
                              "typeString": "uint192"
                            }
                          ],
                          "expression": {
                            "id": 86156,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86076,
                            "src": "1095:10:174",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RequestHarness_$58110",
                              "typeString": "contract RequestHarness"
                            }
                          },
                          "id": 86157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1106:7:174",
                          "memberName": "gasDrop",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58094,
                          "src": "1095:18:174",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_uint96_$",
                            "typeString": "function (uint256) pure external returns (uint96)"
                          }
                        },
                        "id": 86159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1095:27:174",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "expression": {
                          "id": 86160,
                          "name": "rr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86090,
                          "src": "1124:2:174",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawRequest_$94251_memory_ptr",
                            "typeString": "struct RawRequest memory"
                          }
                        },
                        "id": 86161,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1127:7:174",
                        "memberName": "gasDrop",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94246,
                        "src": "1124:10:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "hexValue": "2167617344726f70",
                        "id": 86162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1136:10:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b5675a2039fcdea1ea8f1d868b2ad6f5660988a2cd0736e4cb334a51581c2bb",
                          "typeString": "literal_string \"!gasDrop\""
                        },
                        "value": "!gasDrop"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b5675a2039fcdea1ea8f1d868b2ad6f5660988a2cd0736e4cb334a51581c2bb",
                          "typeString": "literal_string \"!gasDrop\""
                        }
                      ],
                      "id": 86155,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18521,
                      "src": "1086:8:174",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 86163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1086:61:174",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86164,
                  "nodeType": "ExpressionStatement",
                  "src": "1086:61:174"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86168,
                            "name": "encoded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86094,
                            "src": "1185:7:174",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint192",
                              "typeString": "uint192"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint192",
                              "typeString": "uint192"
                            }
                          ],
                          "expression": {
                            "id": 86166,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86076,
                            "src": "1166:10:174",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RequestHarness_$58110",
                              "typeString": "contract RequestHarness"
                            }
                          },
                          "id": 86167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1177:7:174",
                          "memberName": "version",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58109,
                          "src": "1166:18:174",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_uint32_$",
                            "typeString": "function (uint256) pure external returns (uint32)"
                          }
                        },
                        "id": 86169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1166:27:174",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 86170,
                          "name": "rr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86090,
                          "src": "1195:2:174",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RawRequest_$94251_memory_ptr",
                            "typeString": "struct RawRequest memory"
                          }
                        },
                        "id": 86171,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1198:7:174",
                        "memberName": "version",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94250,
                        "src": "1195:10:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "2176657273696f6e",
                        "id": 86172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1207:10:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00c5f0a0632a53807e6e70517114aaed2d6739b651359c8b7d1213fa070885da",
                          "typeString": "literal_string \"!version\""
                        },
                        "value": "!version"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00c5f0a0632a53807e6e70517114aaed2d6739b651359c8b7d1213fa070885da",
                          "typeString": "literal_string \"!version\""
                        }
                      ],
                      "id": 86165,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18521,
                      "src": "1157:8:174",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 86173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1157:61:174",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86174,
                  "nodeType": "ExpressionStatement",
                  "src": "1157:61:174"
                }
              ]
            },
            "functionSelector": "02859368",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_encodeRequest",
            "nameLocation": "631:18:174",
            "parameters": {
              "id": 86091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86090,
                  "mutability": "mutable",
                  "name": "rr",
                  "nameLocation": "668:2:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 86176,
                  "src": "650:20:174",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RawRequest_$94251_memory_ptr",
                    "typeString": "struct RawRequest"
                  },
                  "typeName": {
                    "id": 86089,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86088,
                      "name": "RawRequest",
                      "nameLocations": [
                        "650:10:174"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 94251,
                      "src": "650:10:174"
                    },
                    "referencedDeclaration": 94251,
                    "src": "650:10:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RawRequest_$94251_storage_ptr",
                      "typeString": "struct RawRequest"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "649:22:174"
            },
            "returnParameters": {
              "id": 86092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "679:0:174"
            },
            "scope": 86205,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86204,
            "nodeType": "FunctionDefinition",
            "src": "1231:238:174",
            "nodes": [],
            "body": {
              "id": 86203,
              "nodeType": "Block",
              "src": "1288:181:174",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86183,
                      "mutability": "mutable",
                      "name": "packedRequest",
                      "nameLocation": "1311:13:174",
                      "nodeType": "VariableDeclaration",
                      "scope": 86203,
                      "src": "1298:26:174",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 86182,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1298:5:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86196,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 86188,
                              "name": "rr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86179,
                              "src": "1369:2:174",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawRequest_$94251_memory_ptr",
                                "typeString": "struct RawRequest memory"
                              }
                            },
                            "id": 86189,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1372:7:174",
                            "memberName": "gasDrop",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94246,
                            "src": "1369:10:174",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          {
                            "expression": {
                              "id": 86190,
                              "name": "rr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86179,
                              "src": "1381:2:174",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawRequest_$94251_memory_ptr",
                                "typeString": "struct RawRequest memory"
                              }
                            },
                            "id": 86191,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1384:8:174",
                            "memberName": "gasLimit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94248,
                            "src": "1381:11:174",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "expression": {
                              "id": 86192,
                              "name": "rr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86179,
                              "src": "1394:2:174",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RawRequest_$94251_memory_ptr",
                                "typeString": "struct RawRequest memory"
                              }
                            },
                            "id": 86193,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1397:7:174",
                            "memberName": "version",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94250,
                            "src": "1394:10:174",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "expression": {
                            "id": 86186,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86076,
                            "src": "1344:10:174",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RequestHarness_$58110",
                              "typeString": "contract RequestHarness"
                            }
                          },
                          "id": 86187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1355:13:174",
                          "memberName": "encodeRequest",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58048,
                          "src": "1344:24:174",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint96_$_t_uint64_$_t_uint32_$returns$_t_uint192_$",
                            "typeString": "function (uint96,uint64,uint32) pure external returns (uint192)"
                          }
                        },
                        "id": 86194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1344:61:174",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint192",
                          "typeString": "uint192"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint192",
                          "typeString": "uint192"
                        }
                      ],
                      "expression": {
                        "id": 86184,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1327:3:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 86185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1331:12:174",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "1327:16:174",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 86195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1327:79:174",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1298:108:174"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 86198,
                          "name": "packedRequest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86183,
                          "src": "1425:13:174",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 86199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1439:6:174",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1425:20:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86200,
                        "name": "REQUEST_LENGTH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10102,
                        "src": "1447:14:174",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86197,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18496,
                      "src": "1416:8:174",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 86201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1416:46:174",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86202,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:46:174"
                }
              ]
            },
            "functionSelector": "2e71d228",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_requestLength",
            "nameLocation": "1240:18:174",
            "parameters": {
              "id": 86180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86179,
                  "mutability": "mutable",
                  "name": "rr",
                  "nameLocation": "1277:2:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 86204,
                  "src": "1259:20:174",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RawRequest_$94251_memory_ptr",
                    "typeString": "struct RawRequest"
                  },
                  "typeName": {
                    "id": 86178,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86177,
                      "name": "RawRequest",
                      "nameLocations": [
                        "1259:10:174"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 94251,
                      "src": "1259:10:174"
                    },
                    "referencedDeclaration": 94251,
                    "src": "1259:10:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RawRequest_$94251_storage_ptr",
                      "typeString": "struct RawRequest"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1258:22:174"
            },
            "returnParameters": {
              "id": 86181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1288:0:174"
            },
            "scope": 86205,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 86069,
              "name": "SynapseLibraryTest",
              "nameLocations": [
                "443:18:174"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 91481,
              "src": "443:18:174"
            },
            "id": 86070,
            "nodeType": "InheritanceSpecifier",
            "src": "443:18:174"
          }
        ],
        "canonicalName": "RequestLibraryTest",
        "contractDependencies": [
          58110
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          86205,
          91481,
          93143,
          28782,
          19828,
          19825,
          28733,
          24532,
          24242,
          23563,
          21991,
          21279,
          19768,
          92974
        ],
        "name": "RequestLibraryTest",
        "nameLocation": "421:18:174",
        "scope": 86206,
        "usedErrors": [
          10326,
          10328,
          10330,
          10332
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 174
}