{
  "abi": [
    {
      "inputs": [],
      "name": "OccupiedMemory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PrecompileOutOfGas",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnallocatedMemory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ViewOverrun",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "addLastByte",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addressToBytes32",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "buf",
          "type": "bytes32"
        }
      ],
      "name": "bytes32ToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mantissa",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exponent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "check_decompress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "payloadLength",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "firstElementLength",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "name": "createShortPayload",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "cutLastByte",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expectRevertAlreadyInitialized",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expectRevertNotOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "privKey",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hashedMsg",
          "type": "bytes32"
        }
      ],
      "name": "signMessage",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "privKey",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "signMessage",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "skipBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blocks",
          "type": "uint256"
        }
      ],
      "name": "skipBlocks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSynapseLibraryTest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSynapseUtilities",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "test_compress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "test_mostSignificantBit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "test_parity_exponentFF",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mantissa",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exponent",
          "type": "uint256"
        }
      ],
      "name": "test_parity_exponentNotFF",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b5061246f8061003d6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638820cb2611610104578063ba414fa6116100a2578063e20c9f7111610071578063e20c9f711461037f578063eaee261114610387578063f1f97ac01461039a578063fa7626d4146103ad57600080fd5b8063ba414fa614610339578063c10b95e714610351578063c38bcfa314610364578063c63101b61461037757600080fd5b8063a2cdb207116100de578063a2cdb207146101d4578063a72e0a341461030b578063abe95b361461031e578063b5508aa91461033157600080fd5b80638820cb26146102d0578063916a17c6146102f057806391df0ed8146102f857600080fd5b80633f7286f41161017157806366d9a9a01161014b57806366d9a9a0146102765780637b3471631461028b57806382c947b71461029357806385226c81146102bb57600080fd5b80633f7286f41461023d5780635ced058e14610245578063660982d91461026e57600080fd5b806322195fd2116101ad57806322195fd2146101fc57806324cacb561461020f57806334091ef5146102225780633e5e3c231461023557600080fd5b80630621feff146101d45780630a9254e4146101d65780631ed7831c146101de575b600080fd5b005b6101d46103bc565b6101e6610407565b6040516101f39190611a8d565b60405180910390f35b6101d461020a366004611ada565b610469565b6101d461021d366004611ada565b6105d7565b6101d4610230366004611af3565b6105f5565b6101e6610700565b6101e6610760565b610256610253366004611ada565b90565b6040516001600160a01b0390911681526020016101f3565b6101d46107c0565b61027e6107ca565b6040516101f39190611b1f565b6101d46108b9565b6102ad6102a1366004611bd2565b6001600160a01b031690565b6040519081526020016101f3565b6102c3610937565b6040516101f39190611c4b565b6102e36102de366004611cbc565b610a07565b6040516101f39190611cfd565b61027e610a96565b6102e3610306366004611d10565b610b7c565b6101d4610319366004611ada565b610c94565b6101d461032c366004611ada565b610d1d565b6102c3610dea565b610341610eba565b60405190151581526020016101f3565b6102e361035f366004611dd5565b610fe5565b6101d4610372366004611d10565b611012565b6101d46110a0565b6101e6611108565b6102e3610395366004611e0a565b611168565b6102e36103a8366004611dd5565b611184565b6000546103419060ff1681565b565b6040516103c890611a80565b604051809103906000f0801580156103e4573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d80548060200260200160405190810160405280929190818152602001828054801561045f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610441575b5050505050905090565b601b5460405162b005b760e51b8152600481018390526000916001600160a01b031690631600b6e090602401602060405180830381865afa1580156104b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d69190611e51565b601b54604051631633543d60e21b815261ffff831660048201529192506000916001600160a01b03909116906358cd50f490602401602060405180830381865afa158015610528573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054c9190611e75565b90506105858184604051806040016040528060148152602001736465636f6d7072657373656420746f6f2062696760601b8152506111a5565b828110156105d2576105d261059a8285611ea4565b6105a690610100611eb7565b846040518060400160405280600d81526020016c6572726f7220746f6f2062696760981b8152506111ee565b505050565b6105e481600060ff611236565b90506105f28160ff836105f5565b50565b601b5460405162b005b760e51b8152600481018390526000916001600160a01b031690631600b6e090602401602060405180830381865afa15801561063e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106629190611e51565b905061067560ff600883901c1685611273565b6106828160ff1684611273565b601b54604051631633543d60e21b815261ffff831660048201526106fa916001600160a01b0316906358cd50f490602401602060405180830381865afa1580156106d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f49190611e75565b83611273565b50505050565b6060600f80548060200260200160405190810160405280929190818152602001828054801561045f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610441575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801561045f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610441575050505050905090565b6103ba6001610c94565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156108b05760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561089857602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161085a5790505b505050505081525050815260200190600101906107ee565b50505050905090565b6040805160608101909152602e808252737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb3916123ec60208301396040518263ffffffff1660e01b81526004016109099190611cfd565b600060405180830381600087803b15801561092357600080fd5b505af11580156106fa573d6000803e3d6000fd5b60606011805480602002602001604051908101604052809291908181526020016000905b828210156108b057838290600052602060002001805461097a90611ece565b80601f01602080910402602001604051908101604052809291908181526020018280546109a690611ece565b80156109f35780601f106109c8576101008083540402835291602001916109f3565b820191906000526020600020905b8154815290600101906020018083116109d657829003601f168201915b50505050508152602001906001019061095b565b6060610a138385611f1e565b6040805160208101859052908101849052606081018490526080810184905260a0810184905260c0810184905260e081018490526101008101849052909450600090610120016040516020818303038152906040529050610a8b610a8660008760ff16610a7f85611369565b9190611384565b6113dc565b9150505b9392505050565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156108b05760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610b6457602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610b265790505b50505050508152505081526020019060010190610aba565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052606090600090605c0160408051808303601f190181529082905280516020909101206338d07aa960e21b82526004820186905260248201819052915060009081908190737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e341eaa490604401606060405180830381865afa158015610c2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4f9190611f40565b6040805160208101939093528281019190915260f89290921b6001600160f81b0319166060820152815160418183030181526061909101909152979650505050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d631f7b4f30610cb88343611f77565b6040518263ffffffff1660e01b8152600401610cd691815260200190565b600060405180830381600087803b158015610cf057600080fd5b505af1158015610d04573d6000803e3d6000fd5b505050506105f2600c82610d189190611eb7565b611412565b601b5460405163e6bcbc6560e01b8152600481018390526000916001600160a01b03169063e6bcbc6590602401602060405180830381865afa158015610d67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8b9190611e75565b905081600003610da457610da0816000611273565b5050565b610daf8160ff611489565b610dc3610dbd82600261206e565b83611489565b8060ff14610da057610da0610dd9826001611f77565b610de490600261206e565b83611572565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156108b0578382906000526020600020018054610e2d90611ece565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5990611ece565b8015610ea65780601f10610e7b57610100808354040283529160200191610ea6565b820191906000526020600020905b815481529060010190602001808311610e8957829003601f168201915b505050505081526020019060010190610e0e565b60008054610100900460ff1615610eda5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610fe05760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610f68917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161207a565b60408051601f1981840301815290829052610f82916120ab565b6000604051808303816000865af19150503d8060008114610fbf576040519150601f19603f3d011682016040523d82523d6000602084013e610fc4565b606091505b5091505080806020019051810190610fdc91906120c7565b9150505b919050565b604051606090610ffc9083906000906020016120e9565b6040516020818303038152906040529050919050565b61101f82600060ff611236565b915061102e81600060f7611236565b905060008161103f84610100611f77565b901b905061104f83610100611f77565b81831c146110955760405162461bcd60e51b815260206004820152600e60248201526d7365747570206f766572666c6f7760901b60448201526064015b60405180910390fd5b6105d28383836105f5565b60408051808201825260208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657290820152905163f28dceb360e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb3916109099190600401611cfd565b6060600c80548060200260200160405190810160405280929190818152602001828054801561045f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610441575050505050905090565b606061117b838380519060200120610b7c565b90505b92915050565b606061117e610a8660006001855161119c9190611ea4565b610a7f86611369565b818311156105d2577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516111dc9190612118565b60405180910390a16105d28383611489565b8183106105d2577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516112249190612118565b60405180910390a16105d283836115d0565b600061124384848461162e565b9050610a8f6040518060400160405280600c81526020016b109bdd5b990814995cdd5b1d60a21b815250826117f2565b808214610da0576000805160206123cc8339815191526040516112d29060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b606082015260208101849052905160008051602061241a8339815191529181900360800190a160408051818152600a91810191909152690808080808149a59da1d60b21b60608201526020810182905260008051602061241a833981519152906080015b60405180910390a1610da0611899565b80516000906020830161137c81836119a5565b949350505050565b6000806113918560801c90565b905061139c856119ef565b836113a78684611f77565b6113b19190611f77565b11156113d05760405163a3b99ded60e01b815260040160405180910390fd5b610a8b848201846119a5565b604051806113ed8360208301611a0c565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d63e5d6bf026114368342611f77565b6040518263ffffffff1660e01b815260040161145491815260200190565b600060405180830381600087803b15801561146e57600080fd5b505af1158015611482573d6000803e3d6000fd5b5050505050565b80821115610da0576000805160206123cc8339815191526040516114e99060208082526022908201527f4572726f723a2061203c3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a16040805181815260098183015268202056616c7565206160b81b606082015260208101849052905160008051602061241a8339815191529181900360800190a1604080518181526009918101919091526810102b30b63ab2903160b91b60608201526020810182905260008051602061241a83398151915290608001611359565b808211610da0576000805160206123cc8339815191526040516114e99060208082526021908201527f4572726f723a2061203e2062206e6f7420736174697366696564205b75696e746040820152605d60f81b606082015260800190565b808210610da0576000805160206123cc8339815191526040516114e99060208082526021908201527f4572726f723a2061203c2062206e6f7420736174697366696564205b75696e746040820152605d60f81b606082015260800190565b6000818311156116a65760405162461bcd60e51b815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840161108c565b8284101580156116b65750818411155b156116c2575082610a8f565b60006116ce8484611ea4565b6116d9906001611f77565b9050600385111580156116eb57508481115b15611702576116fa8585611f77565b915050610a8f565b61170f6003600019611ea4565b8510158015611728575061172585600019611ea4565b81115b156117435761173985600019611ea4565b6116fa9084611ea4565b828511156117995760006117578487611ea4565b905060006117658383612147565b90508060000361177a57849350505050610a8f565b60016117868288611f77565b6117909190611ea4565b935050506117ea565b838510156117ea5760006117ad8686611ea4565b905060006117bb8383612147565b9050806000036117d057859350505050610a8f565b6117da8186611ea4565b6117e5906001611f77565b935050505b509392505050565b60006a636f6e736f6c652e6c6f676001600160a01b0316838360405160240161181c92919061215b565b60408051601f198184030181529181526020820180516001600160e01b0316632d839cb360e21b1790525161185191906120ab565b600060405180830381855afa9150503d806000811461188c576040519150601f19603f3d011682016040523d82523d6000602084013e611891565b606091505b505050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156119945760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052611933929160200161207a565b60408051601f198184030181529082905261194d916120ab565b6000604051808303816000865af19150503d806000811461198a576040519150601f19603f3d011682016040523d82523d6000602084013e61198f565b606091505b505050505b6000805461ff001916610100179055565b6000806119b28385611f77565b90506040518111156119c2575060005b806000036119e35760405163085f79c360e11b815260040160405180910390fd5b608084901b831761137c565b60006001600160801b038216611a058360801c90565b0192915050565b6040516000906001600160801b03841690608085901c9080851015611a44576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa905080611a6e57604051637c7d772f60e01b815260040160405180910390fd5b608086901b8417979650505050505050565b61024e8061217e83390190565b6020808252825182820181905260009190848201906040850190845b81811015611ace5783516001600160a01b031683529284019291840191600101611aa9565b50909695505050505050565b600060208284031215611aec57600080fd5b5035919050565b600080600060608486031215611b0857600080fd5b505081359360208301359350604090920135919050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015611bc357898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015611bae5783516001600160e01b0319168252928b019260019290920191908b0190611b84565b50978a01979550505091870191600101611b47565b50919998505050505050505050565b600060208284031215611be457600080fd5b81356001600160a01b0381168114610a8f57600080fd5b60005b83811015611c16578181015183820152602001611bfe565b50506000910152565b60008151808452611c37816020860160208601611bfb565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611ca057603f19888603018452611c8e858351611c1f565b94509285019290850190600101611c72565b5092979650505050505050565b60ff811681146105f257600080fd5b600080600060608486031215611cd157600080fd5b8335611cdc81611cad565b92506020840135611cec81611cad565b929592945050506040919091013590565b60208152600061117b6020830184611c1f565b60008060408385031215611d2357600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611d5957600080fd5b813567ffffffffffffffff80821115611d7457611d74611d32565b604051601f8301601f19908116603f01168101908282118183101715611d9c57611d9c611d32565b81604052838152866020858801011115611db557600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611de757600080fd5b813567ffffffffffffffff811115611dfe57600080fd5b61137c84828501611d48565b60008060408385031215611e1d57600080fd5b82359150602083013567ffffffffffffffff811115611e3b57600080fd5b611e4785828601611d48565b9150509250929050565b600060208284031215611e6357600080fd5b815161ffff81168114610a8f57600080fd5b600060208284031215611e8757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561117e5761117e611e8e565b808202811582820484141761117e5761117e611e8e565b600181811c90821680611ee257607f821691505b602082108103611f0257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601260045260246000fd5b600060ff831680611f3157611f31611f08565b8060ff84160691505092915050565b600080600060608486031215611f5557600080fd5b8351611f6081611cad565b602085015160409095015190969495509392505050565b8082018082111561117e5761117e611e8e565b600181815b80851115611fc5578160001904821115611fab57611fab611e8e565b80851615611fb857918102915b93841c9390800290611f8f565b509250929050565b600082611fdc5750600161117e565b81611fe95750600061117e565b8160018114611fff576002811461200957612025565b600191505061117e565b60ff84111561201a5761201a611e8e565b50506001821b61117e565b5060208310610133831016604e8410600b8410161715612048575081810a61117e565b6120528383611f8a565b806000190482111561206657612066611e8e565b029392505050565b600061117b8383611fcd565b6001600160e01b031983168152815160009061209d816004850160208701611bfb565b919091016004019392505050565b600082516120bd818460208701611bfb565b9190910192915050565b6000602082840312156120d957600080fd5b81518015158114610a8f57600080fd5b600083516120fb818460208801611bfb565b6001600160f81b0319939093169190920190815260010192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600061117b6080830184611c1f565b60008261215657612156611f08565b500690565b60408152600061216e6040830185611c1f565b9050826020830152939250505056fe608060405234801561001057600080fd5b5061022e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631600b6e01461004657806358cd50f414610071578063e6bcbc6514610092575b600080fd5b6100596100543660046101bb565b6100a5565b60405161ffff90911681526020015b60405180910390f35b61008461007f3660046101d4565b6100b6565b604051908152602001610068565b6100846100a03660046101bb565b6100c1565b60006100b0826100cc565b92915050565b60006100b082610113565b60006100b08261013f565b6000806100d88361013f565b905060088110156100f75761ff00600884901b1660ff175b9392505050565b600719810161ff0084821c60081b1660ff821617949350505050565b600060ff600883901c81169080841690819003610131575092915050565b610100909101901b92915050565b60016fffffffffffffffffffffffffffffffff821160071b91821c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211871b91821c969096119490961792909217171791909117919091171790565b6000602082840312156101cd57600080fd5b5035919050565b6000602082840312156101e657600080fd5b813561ffff811681146100f057600080fdfea264697066735822122070ac992faded917b633472a55a96d9426fe107f09e5d080c7d8c6c3bc77bc73864736f6c6343000811003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564b2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8a2646970667358221220b0220b2d5533672819b63691d410eb62e66eb004c330426946ebf087bb4d392564736f6c63430008110033",
    "sourceMap": "262:2055:173:-:0;;;1572:26:67;;;1594:4;-1:-1:-1;;1572:26:67;;;;;;;;3288:44:71;;;;;;;;;;;262:2055:173;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638820cb2611610104578063ba414fa6116100a2578063e20c9f7111610071578063e20c9f711461037f578063eaee261114610387578063f1f97ac01461039a578063fa7626d4146103ad57600080fd5b8063ba414fa614610339578063c10b95e714610351578063c38bcfa314610364578063c63101b61461037757600080fd5b8063a2cdb207116100de578063a2cdb207146101d4578063a72e0a341461030b578063abe95b361461031e578063b5508aa91461033157600080fd5b80638820cb26146102d0578063916a17c6146102f057806391df0ed8146102f857600080fd5b80633f7286f41161017157806366d9a9a01161014b57806366d9a9a0146102765780637b3471631461028b57806382c947b71461029357806385226c81146102bb57600080fd5b80633f7286f41461023d5780635ced058e14610245578063660982d91461026e57600080fd5b806322195fd2116101ad57806322195fd2146101fc57806324cacb561461020f57806334091ef5146102225780633e5e3c231461023557600080fd5b80630621feff146101d45780630a9254e4146101d65780631ed7831c146101de575b600080fd5b005b6101d46103bc565b6101e6610407565b6040516101f39190611a8d565b60405180910390f35b6101d461020a366004611ada565b610469565b6101d461021d366004611ada565b6105d7565b6101d4610230366004611af3565b6105f5565b6101e6610700565b6101e6610760565b610256610253366004611ada565b90565b6040516001600160a01b0390911681526020016101f3565b6101d46107c0565b61027e6107ca565b6040516101f39190611b1f565b6101d46108b9565b6102ad6102a1366004611bd2565b6001600160a01b031690565b6040519081526020016101f3565b6102c3610937565b6040516101f39190611c4b565b6102e36102de366004611cbc565b610a07565b6040516101f39190611cfd565b61027e610a96565b6102e3610306366004611d10565b610b7c565b6101d4610319366004611ada565b610c94565b6101d461032c366004611ada565b610d1d565b6102c3610dea565b610341610eba565b60405190151581526020016101f3565b6102e361035f366004611dd5565b610fe5565b6101d4610372366004611d10565b611012565b6101d46110a0565b6101e6611108565b6102e3610395366004611e0a565b611168565b6102e36103a8366004611dd5565b611184565b6000546103419060ff1681565b565b6040516103c890611a80565b604051809103906000f0801580156103e4573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d80548060200260200160405190810160405280929190818152602001828054801561045f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610441575b5050505050905090565b601b5460405162b005b760e51b8152600481018390526000916001600160a01b031690631600b6e090602401602060405180830381865afa1580156104b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d69190611e51565b601b54604051631633543d60e21b815261ffff831660048201529192506000916001600160a01b03909116906358cd50f490602401602060405180830381865afa158015610528573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054c9190611e75565b90506105858184604051806040016040528060148152602001736465636f6d7072657373656420746f6f2062696760601b8152506111a5565b828110156105d2576105d261059a8285611ea4565b6105a690610100611eb7565b846040518060400160405280600d81526020016c6572726f7220746f6f2062696760981b8152506111ee565b505050565b6105e481600060ff611236565b90506105f28160ff836105f5565b50565b601b5460405162b005b760e51b8152600481018390526000916001600160a01b031690631600b6e090602401602060405180830381865afa15801561063e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106629190611e51565b905061067560ff600883901c1685611273565b6106828160ff1684611273565b601b54604051631633543d60e21b815261ffff831660048201526106fa916001600160a01b0316906358cd50f490602401602060405180830381865afa1580156106d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f49190611e75565b83611273565b50505050565b6060600f80548060200260200160405190810160405280929190818152602001828054801561045f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610441575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801561045f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610441575050505050905090565b6103ba6001610c94565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156108b05760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561089857602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161085a5790505b505050505081525050815260200190600101906107ee565b50505050905090565b6040805160608101909152602e808252737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb3916123ec60208301396040518263ffffffff1660e01b81526004016109099190611cfd565b600060405180830381600087803b15801561092357600080fd5b505af11580156106fa573d6000803e3d6000fd5b60606011805480602002602001604051908101604052809291908181526020016000905b828210156108b057838290600052602060002001805461097a90611ece565b80601f01602080910402602001604051908101604052809291908181526020018280546109a690611ece565b80156109f35780601f106109c8576101008083540402835291602001916109f3565b820191906000526020600020905b8154815290600101906020018083116109d657829003601f168201915b50505050508152602001906001019061095b565b6060610a138385611f1e565b6040805160208101859052908101849052606081018490526080810184905260a0810184905260c0810184905260e081018490526101008101849052909450600090610120016040516020818303038152906040529050610a8b610a8660008760ff16610a7f85611369565b9190611384565b6113dc565b9150505b9392505050565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156108b05760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610b6457602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610b265790505b50505050508152505081526020019060010190610aba565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052606090600090605c0160408051808303601f190181529082905280516020909101206338d07aa960e21b82526004820186905260248201819052915060009081908190737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e341eaa490604401606060405180830381865afa158015610c2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4f9190611f40565b6040805160208101939093528281019190915260f89290921b6001600160f81b0319166060820152815160418183030181526061909101909152979650505050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d631f7b4f30610cb88343611f77565b6040518263ffffffff1660e01b8152600401610cd691815260200190565b600060405180830381600087803b158015610cf057600080fd5b505af1158015610d04573d6000803e3d6000fd5b505050506105f2600c82610d189190611eb7565b611412565b601b5460405163e6bcbc6560e01b8152600481018390526000916001600160a01b03169063e6bcbc6590602401602060405180830381865afa158015610d67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8b9190611e75565b905081600003610da457610da0816000611273565b5050565b610daf8160ff611489565b610dc3610dbd82600261206e565b83611489565b8060ff14610da057610da0610dd9826001611f77565b610de490600261206e565b83611572565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156108b0578382906000526020600020018054610e2d90611ece565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5990611ece565b8015610ea65780601f10610e7b57610100808354040283529160200191610ea6565b820191906000526020600020905b815481529060010190602001808311610e8957829003601f168201915b505050505081526020019060010190610e0e565b60008054610100900460ff1615610eda5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610fe05760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610f68917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161207a565b60408051601f1981840301815290829052610f82916120ab565b6000604051808303816000865af19150503d8060008114610fbf576040519150601f19603f3d011682016040523d82523d6000602084013e610fc4565b606091505b5091505080806020019051810190610fdc91906120c7565b9150505b919050565b604051606090610ffc9083906000906020016120e9565b6040516020818303038152906040529050919050565b61101f82600060ff611236565b915061102e81600060f7611236565b905060008161103f84610100611f77565b901b905061104f83610100611f77565b81831c146110955760405162461bcd60e51b815260206004820152600e60248201526d7365747570206f766572666c6f7760901b60448201526064015b60405180910390fd5b6105d28383836105f5565b60408051808201825260208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657290820152905163f28dceb360e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb3916109099190600401611cfd565b6060600c80548060200260200160405190810160405280929190818152602001828054801561045f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610441575050505050905090565b606061117b838380519060200120610b7c565b90505b92915050565b606061117e610a8660006001855161119c9190611ea4565b610a7f86611369565b818311156105d2577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516111dc9190612118565b60405180910390a16105d28383611489565b8183106105d2577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516112249190612118565b60405180910390a16105d283836115d0565b600061124384848461162e565b9050610a8f6040518060400160405280600c81526020016b109bdd5b990814995cdd5b1d60a21b815250826117f2565b808214610da0576000805160206123cc8339815191526040516112d29060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b606082015260208101849052905160008051602061241a8339815191529181900360800190a160408051818152600a91810191909152690808080808149a59da1d60b21b60608201526020810182905260008051602061241a833981519152906080015b60405180910390a1610da0611899565b80516000906020830161137c81836119a5565b949350505050565b6000806113918560801c90565b905061139c856119ef565b836113a78684611f77565b6113b19190611f77565b11156113d05760405163a3b99ded60e01b815260040160405180910390fd5b610a8b848201846119a5565b604051806113ed8360208301611a0c565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d63e5d6bf026114368342611f77565b6040518263ffffffff1660e01b815260040161145491815260200190565b600060405180830381600087803b15801561146e57600080fd5b505af1158015611482573d6000803e3d6000fd5b5050505050565b80821115610da0576000805160206123cc8339815191526040516114e99060208082526022908201527f4572726f723a2061203c3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a16040805181815260098183015268202056616c7565206160b81b606082015260208101849052905160008051602061241a8339815191529181900360800190a1604080518181526009918101919091526810102b30b63ab2903160b91b60608201526020810182905260008051602061241a83398151915290608001611359565b808211610da0576000805160206123cc8339815191526040516114e99060208082526021908201527f4572726f723a2061203e2062206e6f7420736174697366696564205b75696e746040820152605d60f81b606082015260800190565b808210610da0576000805160206123cc8339815191526040516114e99060208082526021908201527f4572726f723a2061203c2062206e6f7420736174697366696564205b75696e746040820152605d60f81b606082015260800190565b6000818311156116a65760405162461bcd60e51b815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840161108c565b8284101580156116b65750818411155b156116c2575082610a8f565b60006116ce8484611ea4565b6116d9906001611f77565b9050600385111580156116eb57508481115b15611702576116fa8585611f77565b915050610a8f565b61170f6003600019611ea4565b8510158015611728575061172585600019611ea4565b81115b156117435761173985600019611ea4565b6116fa9084611ea4565b828511156117995760006117578487611ea4565b905060006117658383612147565b90508060000361177a57849350505050610a8f565b60016117868288611f77565b6117909190611ea4565b935050506117ea565b838510156117ea5760006117ad8686611ea4565b905060006117bb8383612147565b9050806000036117d057859350505050610a8f565b6117da8186611ea4565b6117e5906001611f77565b935050505b509392505050565b60006a636f6e736f6c652e6c6f676001600160a01b0316838360405160240161181c92919061215b565b60408051601f198184030181529181526020820180516001600160e01b0316632d839cb360e21b1790525161185191906120ab565b600060405180830381855afa9150503d806000811461188c576040519150601f19603f3d011682016040523d82523d6000602084013e611891565b606091505b505050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156119945760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052611933929160200161207a565b60408051601f198184030181529082905261194d916120ab565b6000604051808303816000865af19150503d806000811461198a576040519150601f19603f3d011682016040523d82523d6000602084013e61198f565b606091505b505050505b6000805461ff001916610100179055565b6000806119b28385611f77565b90506040518111156119c2575060005b806000036119e35760405163085f79c360e11b815260040160405180910390fd5b608084901b831761137c565b60006001600160801b038216611a058360801c90565b0192915050565b6040516000906001600160801b03841690608085901c9080851015611a44576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa905080611a6e57604051637c7d772f60e01b815260040160405180910390fd5b608086901b8417979650505050505050565b61024e8061217e83390190565b6020808252825182820181905260009190848201906040850190845b81811015611ace5783516001600160a01b031683529284019291840191600101611aa9565b50909695505050505050565b600060208284031215611aec57600080fd5b5035919050565b600080600060608486031215611b0857600080fd5b505081359360208301359350604090920135919050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015611bc357898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015611bae5783516001600160e01b0319168252928b019260019290920191908b0190611b84565b50978a01979550505091870191600101611b47565b50919998505050505050505050565b600060208284031215611be457600080fd5b81356001600160a01b0381168114610a8f57600080fd5b60005b83811015611c16578181015183820152602001611bfe565b50506000910152565b60008151808452611c37816020860160208601611bfb565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611ca057603f19888603018452611c8e858351611c1f565b94509285019290850190600101611c72565b5092979650505050505050565b60ff811681146105f257600080fd5b600080600060608486031215611cd157600080fd5b8335611cdc81611cad565b92506020840135611cec81611cad565b929592945050506040919091013590565b60208152600061117b6020830184611c1f565b60008060408385031215611d2357600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611d5957600080fd5b813567ffffffffffffffff80821115611d7457611d74611d32565b604051601f8301601f19908116603f01168101908282118183101715611d9c57611d9c611d32565b81604052838152866020858801011115611db557600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611de757600080fd5b813567ffffffffffffffff811115611dfe57600080fd5b61137c84828501611d48565b60008060408385031215611e1d57600080fd5b82359150602083013567ffffffffffffffff811115611e3b57600080fd5b611e4785828601611d48565b9150509250929050565b600060208284031215611e6357600080fd5b815161ffff81168114610a8f57600080fd5b600060208284031215611e8757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561117e5761117e611e8e565b808202811582820484141761117e5761117e611e8e565b600181811c90821680611ee257607f821691505b602082108103611f0257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601260045260246000fd5b600060ff831680611f3157611f31611f08565b8060ff84160691505092915050565b600080600060608486031215611f5557600080fd5b8351611f6081611cad565b602085015160409095015190969495509392505050565b8082018082111561117e5761117e611e8e565b600181815b80851115611fc5578160001904821115611fab57611fab611e8e565b80851615611fb857918102915b93841c9390800290611f8f565b509250929050565b600082611fdc5750600161117e565b81611fe95750600061117e565b8160018114611fff576002811461200957612025565b600191505061117e565b60ff84111561201a5761201a611e8e565b50506001821b61117e565b5060208310610133831016604e8410600b8410161715612048575081810a61117e565b6120528383611f8a565b806000190482111561206657612066611e8e565b029392505050565b600061117b8383611fcd565b6001600160e01b031983168152815160009061209d816004850160208701611bfb565b919091016004019392505050565b600082516120bd818460208701611bfb565b9190910192915050565b6000602082840312156120d957600080fd5b81518015158114610a8f57600080fd5b600083516120fb818460208801611bfb565b6001600160f81b0319939093169190920190815260010192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600061117b6080830184611c1f565b60008261215657612156611f08565b500690565b60408152600061216e6040830185611c1f565b9050826020830152939250505056fe608060405234801561001057600080fd5b5061022e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631600b6e01461004657806358cd50f414610071578063e6bcbc6514610092575b600080fd5b6100596100543660046101bb565b6100a5565b60405161ffff90911681526020015b60405180910390f35b61008461007f3660046101d4565b6100b6565b604051908152602001610068565b6100846100a03660046101bb565b6100c1565b60006100b0826100cc565b92915050565b60006100b082610113565b60006100b08261013f565b6000806100d88361013f565b905060088110156100f75761ff00600884901b1660ff175b9392505050565b600719810161ff0084821c60081b1660ff821617949350505050565b600060ff600883901c81169080841690819003610131575092915050565b610100909101901b92915050565b60016fffffffffffffffffffffffffffffffff821160071b91821c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211871b91821c969096119490961792909217171791909117919091171790565b6000602082840312156101cd57600080fd5b5035919050565b6000602082840312156101e657600080fd5b813561ffff811681146100f057600080fdfea264697066735822122070ac992faded917b633472a55a96d9426fe107f09e5d080c7d8c6c3bc77bc73864736f6c6343000811003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564b2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8a2646970667358221220b0220b2d5533672819b63691d410eb62e66eb004c330426946ebf087bb4d392564736f6c63430008110033",
    "sourceMap": "262:2055:173:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:43:184;;357:73:173;;;:::i;2161:134:74:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;436:541:173;;;;;;:::i;:::-;;:::i;1370:174::-;;;;;;:::i;:::-;;:::i;1550:336::-;;;;;;:::i;:::-;;:::i;2930:133:74:-;;;:::i;2631:141::-;;;:::i;1189:123:184:-;;;;;;:::i;:::-;1299:3;1189:123;;;;-1:-1:-1;;;;;1532:32:199;;;1514:51;;1502:2;1487:18;1189:123:184;1368:203:199;863:58:184;;;:::i;2447:178:74:-;;;:::i;:::-;;;;;;;:::i;653:109:184:-;;;:::i;1058:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1153:22:184;;1058:125;;;;3587:25:199;;;3575:2;3560:18;1058:125:184;3441:177:199;2301:140:74;;;:::i;:::-;;;;;;;:::i;449:473:180:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2778:146:74:-;;;:::i;1493:325:184:-;;;;;;:::i;:::-;;:::i;927:125::-;;;;;;:::i;:::-;;:::i;1892:423:173:-;;;;;;:::i;:::-;;:::i;1866:141:74:-;;;:::i;1819:584:67:-;;;:::i;:::-;;;6175:14:199;;6168:22;6150:41;;6138:2;6123:18;1819:584:67;6010:187:199;1102:134:180;;;;;;:::i;:::-;;:::i;983:381:173:-;;;;;;:::i;:::-;;:::i;768:89:184:-;;;:::i;2013:142:74:-;;;:::i;1318:169:184:-;;;;;;:::i;:::-;;:::i;928:168:180:-;;;;;;:::i;:::-;;:::i;1572:26:67:-;;;;;;;;;604:43:184;:::o;357:73:173:-;404:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;391:10:173;:32;;-1:-1:-1;;;;;;391:32:173;-1:-1:-1;;;;;391:32:173;;;;;;;;;;357:73::o;2161:134:74:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:74;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;436:541:173:-;573:10;;:26;;-1:-1:-1;;;573:26:173;;;;;3587:25:199;;;560:10:173;;-1:-1:-1;;;;;573:10:173;;:19;;3560:18:199;;573:26:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;632:10;;:26;;-1:-1:-1;;;632:26:173;;8723:6:199;8711:19;;632:26:173;;;8693:38:199;560:39:173;;-1:-1:-1;609:20:173;;-1:-1:-1;;;;;632:10:173;;;;:21;;8666:18:199;;632:26:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;609:49;;717:53;726:12;740:5;717:53;;;;;;;;;;;;;-1:-1:-1;;;717:53:173;;;:8;:53::i;:::-;877:5;862:12;:20;858:113;;;898:62;908:20;916:12;908:5;:20;:::i;:::-;907:28;;932:3;907:28;:::i;:::-;937:5;898:62;;;;;;;;;;;;;-1:-1:-1;;;898:62:173;;;:8;:62::i;:::-;481:496;;436:541;:::o;1370:174::-;1442:20;1448:5;1455:1;1458:3;1442:5;:20::i;:::-;1434:28;;1472:65;1500:5;1517:4;1530:5;1472:16;:65::i;:::-;1370:174;:::o;1550:336::-;1664:10;;:26;;-1:-1:-1;;;1664:26:173;;;;;3587:25:199;;;1644:17:173;;-1:-1:-1;;;;;1664:10:173;;:19;;3560:18:199;;1664:26:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1644:46;-1:-1:-1;1700:57:173;1715:30;1744:1;1715:30;;;;1748:8;1700;:57::i;:::-;1767:52;1796:10;1767:52;;1810:8;1767;:52::i;:::-;1838:10;;:33;;-1:-1:-1;;;1838:33:173;;8723:6:199;8711:19;;1838:33:173;;;8693:38:199;1829:50:173;;-1:-1:-1;;;;;1838:10:173;;:21;;8666:18:199;;1838:33:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1873:5;1829:8;:50::i;:::-;1634:252;1550:336;;;:::o;2930:133:74:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:74;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:74;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;863:58:184:-;901:13;912:1;901:10;:13::i;2447:178:74:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;653:109:184:-;728:26;;;;;;;;;;;;;712:15;;;;728:26;;;;;712:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2301:140:74;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;449:473:180;583:12;627:34;643:18;627:13;:34;:::i;:::-;730:64;;;;;;10373:19:199;;;10408:12;;;10401:28;;;10445:12;;;10438:28;;;10482:12;;;10475:28;;;10519:13;;;10512:29;;;10557:13;;;10550:29;;;10595:13;;;10588:29;;;10633:13;;;10626:29;;;611:50:180;;-1:-1:-1;707:20:180;;10671:13:199;;730:64:180;;;;;;;;;;;;707:87;;854:61;:53;883:1;892:13;854:53;;:13;:7;:11;:13::i;:::-;:19;:53;:19;:53::i;:::-;:59;:61::i;:::-;847:68;;;449:473;;;;;;:::o;2778:146:74:-;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1493:325:184;1632:63;;10937:66:199;1632:63:184;;;10925:79:199;11020:12;;;11013:28;;;1571:22:184;;1605:14;;11057:12:199;;1632:63:184;;;;;;-1:-1:-1;;1632:63:184;;;;;;;1622:74;;1632:63;1622:74;;;;-1:-1:-1;;;1740:24:184;;;;;11254:25:199;;;11295:18;;;11288:34;;;1622:74:184;-1:-1:-1;1707:7:184;;;;;;1740;;;;11227:18:199;;1740:24:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1786:25;;;;;;11888:19:199;;;;11923:12;;;11916:28;;;;12000:3;11978:16;;;;-1:-1:-1;;;;;;11974:36:199;11960:12;;;11953:58;1786:25:184;;;;;;;;;12027:12:199;;;;1786:25:184;;;;1493:325;-1:-1:-1;;;;;;;1493:325:184:o;927:125::-;980:7;;988:21;1003:6;988:12;:21;:::i;:::-;980:30;;;;;;;;;;;;;3587:25:199;;3575:2;3560:18;;3441:177;980:30:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:25;3886:10:183;1025:6:184;:19;;;;:::i;:::-;1020:4;:25::i;1892:423:173:-;1971:10;;:36;;-1:-1:-1;;;1971:36:173;;;;;3587:25:199;;;1957:11:173;;-1:-1:-1;;;;;1971:10:173;;:29;;3560:18:199;;1971:36:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1957:50;;2021:5;2030:1;2021:10;2017:292;;2047:16;2056:3;2061:1;2047:8;:16::i;:::-;1947:368;1892:423;:::o;2017:292::-;2148:18;2157:3;2162;2148:8;:18::i;:::-;2180:25;2189:8;2194:3;2189:1;:8;:::i;:::-;2199:5;2180:8;:25::i;:::-;2223:3;2230;2223:10;2219:80;;2253:31;2268:7;:3;2274:1;2268:7;:::i;:::-;2262:14;;:1;:14;:::i;:::-;2278:5;2253:8;:31::i;1866:141:74:-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:67;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:67;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;13728:51:199;;;-1:-1:-1;;;13795:18:199;;;13788:34;2196:43:67;;;;;;;;;13701:18:199;;;2196:43:67;;;-1:-1:-1;;1671:64:67;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:67;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:67:o;1102:134:180:-;1197:32;;1166:12;;1197:32;;1210:7;;1226:1;;1197:32;;;:::i;:::-;;;;;;;;;;;;;1190:39;;1102:134;;;:::o;983:381:173:-;1082:23;1088:8;1098:1;1101:3;1082:5;:23::i;:::-;1071:34;;1126:23;1132:8;1142:1;1145:3;1126:5;:23::i;:::-;1115:34;-1:-1:-1;1159:13:173;1115:34;1176:14;1182:8;1176:3;:14;:::i;:::-;1175:28;;;-1:-1:-1;1242:14:173;1248:8;1242:3;:14;:::i;:::-;1221:17;;;:35;1213:62;;;;-1:-1:-1;;;1213:62:173;;15401:2:199;1213:62:173;;;15383:21:199;15440:2;15420:18;;;15413:30;-1:-1:-1;;;15459:18:199;;;15452:44;15513:18;;1213:62:173;;;;;;;;;1285:72;1313:8;1333;1350:5;1285:16;:72::i;768:89:184:-;833:16;;;;;;;;;;;;;;;;;817:33;;-1:-1:-1;;;817:33:184;;:15;;;;:33;;833:16;817:33;;;:::i;2013:142:74:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:74;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;1318:169:184:-;1399:22;1440:40;1452:7;1471;1461:18;;;;;;1440:11;:40::i;:::-;1433:47;;1318:169;;;;;:::o;928:168:180:-;992:12;1023:66;:58;1052:1;1078;1061:7;:14;:18;;;;:::i;:::-;1023:13;:7;:11;:13::i;12978:177:67:-;13058:1;13054;:5;13050:99;;;13080:30;13106:3;13080:30;;;;;;:::i;:::-;;;;;;;;13124:14;13133:1;13136;13124:8;:14::i;10993:178::-;11074:1;11069;:6;11065:100;;11096:30;11122:3;11096:30;;;;;;:::i;:::-;;;;;;;;11140:14;11149:1;11152;11140:8;:14::i;2703:190:79:-;2786:14;2821:19;2828:1;2831:3;2836;2821:6;:19::i;:::-;2812:28;;2850:36;;;;;;;;;;;;;;-1:-1:-1;;;2850:36:79;;;2879:6;2850:12;:36::i;5209:262:67:-;5271:1;5266;:6;5262:203;;-1:-1:-1;;;;;;;;;;;5293:41:67;;;;16195:2:199;16177:21;;;16234:2;16214:18;;;16207:30;16273:34;16268:2;16253:18;;16246:62;-1:-1:-1;;;16339:2:199;16324:18;;16317:32;16381:3;16366:19;;15993:398;5293:41:67;;;;;;;;5353:31;;;16608:21:199;;;16665:2;16645:18;;;16638:30;-1:-1:-1;;;16699:2:199;16684:18;;16677:40;16784:4;16769:20;;16762:36;;;5353:31:67;;-1:-1:-1;;;;;;;;;;;5353:31:67;;;;16749:3:199;5353:31:67;;;5403;;;17021:21:199;;;17078:2;17058:18;;;17051:30;;;;-1:-1:-1;;;17112:2:199;17097:18;;17090:40;17197:4;17182:20;;17175:36;;;-1:-1:-1;;;;;;;;;;;5403:31:67;17162:3:199;17147:19;5403:31:67;;;;;;;;5448:6;:4;:6::i;2972:569:52:-;3060:10;;3026:7;;3486:4;3477:14;;3517:17;3477:14;3060:10;3517:5;:17::i;:::-;3510:24;2972:569;-1:-1:-1;;;;2972:569:52:o;10331:484::-;10416:7;10435:12;10450:13;:7;6898:3;6871:30;;6712:196;10450:13;10435:28;;10546:13;:7;:11;:13::i;:::-;10539:4;10523:13;10530:6;10523:4;:13;:::i;:::-;:20;;;;:::i;:::-;:36;10519:87;;;10582:13;;-1:-1:-1;;;10582:13:52;;;;;;;;;;;10519:87;10758:40;10778:6;10771:4;:13;10792:4;10758:5;:40::i;4079:1041::-;4325:4;4319:11;;4455:34;4469:7;4484:4;4478:10;;4455:13;:34::i;:::-;-1:-1:-1;;;;;;7239:43:52;;4701:12;8097:2;8081:18;;-1:-1:-1;;8465:20:52;4997;;5019:4;4993:31;4987:4;4980:45;-1:-1:-1;5087:17:52;;4079:1041;;-1:-1:-1;4079:1041:52:o;17805:93:72:-;17860:7;;17868:22;17886:4;17868:15;:22;:::i;:::-;17860:31;;;;;;;;;;;;;3587:25:199;;3575:2;3560:18;;3441:177;17860:31:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17805:93;:::o;12714:259:67:-;12775:1;12771;:5;12767:200;;;-1:-1:-1;;;;;;;;;;;12797:41:67;;;;17424:2:199;17406:21;;;17463:2;17443:18;;;17436:30;17502:34;17497:2;17482:18;;17475:62;-1:-1:-1;;;17568:2:199;17553:18;;17546:32;17610:3;17595:19;;17222:398;12797:41:67;;;;;;;;12857:30;;;17837:21:199;;;17894:1;17874:18;;;17867:29;-1:-1:-1;;;17927:2:199;17912:18;;17905:39;18011:4;17996:20;;17989:36;;;12857:30:67;;-1:-1:-1;;;;;;;;;;;12857:30:67;;;;17976:3:199;12857:30:67;;;12906;;;18248:21:199;;;18305:1;18285:18;;;18278:29;;;;-1:-1:-1;;;18338:2:199;18323:18;;18316:39;18422:4;18407:20;;18400:36;;;-1:-1:-1;;;;;;;;;;;12906:30:67;18387:3:199;18372:19;12906:30:67;18036:406:199;6763:259:67;6825:1;6820;:6;6816:200;;-1:-1:-1;;;;;;;;;;;6847:40:67;;;;18649:2:199;18631:21;;;18688:2;18668:18;;;18661:30;18727:34;18722:2;18707:18;;18700:62;-1:-1:-1;;;18793:2:199;18778:18;;18771:31;18834:3;18819:19;;18447:397;10729:259:67;10791:1;10786;:6;10782:200;;-1:-1:-1;;;;;;;;;;;10813:40:67;;;;19051:2:199;19033:21;;;19090:2;19070:18;;;19063:30;19129:34;19124:2;19109:18;;19102:62;-1:-1:-1;;;19195:2:199;19180:18;;19173:31;19236:3;19221:19;;18849:397;1434:1263:79;1518:14;1559:3;1552;:10;;1544:85;;;;-1:-1:-1;;;1544:85:79;;19453:2:199;1544:85:79;;;19435:21:199;19492:2;19472:18;;;19465:30;19531:34;19511:18;;;19504:62;19602:32;19582:18;;;19575:60;19652:19;;1544:85:79;19251:426:199;1544:85:79;1863:3;1858:1;:8;;:20;;;;;1875:3;1870:1;:8;;1858:20;1854:34;;;-1:-1:-1;1887:1:79;1880:8;;1854:34;1899:12;1914:9;1920:3;1914;:9;:::i;:::-;:13;;1926:1;1914:13;:::i;:::-;1899:28;;2122:1;2117;:6;;:18;;;;;2134:1;2127:4;:8;2117:18;2113:38;;;2144:7;2150:1;2144:3;:7;:::i;:::-;2137:14;;;;;2113:38;2170:15;2184:1;-1:-1:-1;;2170:15:79;:::i;:::-;2165:1;:20;;:46;;;;-1:-1:-1;2196:15:79;2210:1;-1:-1:-1;;2196:15:79;:::i;:::-;2189:4;:22;2165:46;2161:82;;;2227:15;2241:1;-1:-1:-1;;2227:15:79;:::i;:::-;2220:23;;:3;:23;:::i;2161:82::-;2347:3;2343:1;:7;2339:352;;;2366:12;2381:7;2385:3;2381:1;:7;:::i;:::-;2366:22;-1:-1:-1;2402:11:79;2416;2423:4;2366:22;2416:11;:::i;:::-;2402:25;;2445:3;2452:1;2445:8;2441:24;;2462:3;2455:10;;;;;;;2441:24;2500:1;2488:9;2494:3;2488;:9;:::i;:::-;:13;;;;:::i;:::-;2479:22;;2352:160;;2339:352;;;2526:3;2522:1;:7;2518:173;;;2545:12;2560:7;2566:1;2560:3;:7;:::i;:::-;2545:22;-1:-1:-1;2581:11:79;2595;2602:4;2545:22;2595:11;:::i;:::-;2581:25;;2624:3;2631:1;2624:8;2620:24;;2641:3;2634:10;;;;;;;2620:24;2667:9;2673:3;2667;:9;:::i;:::-;:13;;2679:1;2667:13;:::i;:::-;2658:22;;2531:160;;2518:173;1534:1163;1434:1263;;;;;:::o;9671:207::-;9747:11;702:42;-1:-1:-1;;;;;9763:36:79;9847:2;9851;9800:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9800:54:79;;;;;;;;;;;;;;-1:-1:-1;;;;;9800:54:79;-1:-1:-1;;;9800:54:79;;;9763:92;;;9800:54;9763:92;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9671:207:79:o;2409:432:67:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;20297:51:199;;;-1:-1:-1;;;20364:18:199;;;20357:34;;;;2712:4:67;20407:18:199;;;20400:34;2489:11:67;;1671:64;2586:43;;20270:18:199;;2652:67:67;;;-1:-1:-1;;2652:67:67;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:67;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:67;2820:7;:14;;-1:-1:-1;;2820:14:67;;;;;2409:432::o;2092:540:52:-;2158:7;;2192:11;2199:4;2192;:11;:::i;:::-;2177:26;;2471:4;2465:11;2459:4;2456:21;2453:38;;;-1:-1:-1;2488:1:52;2453:38;2514:4;2522:1;2514:9;2510:66;;2546:19;;-1:-1:-1;;;2546:19:52;;;;;;;;;;;2510:66;17362:3;17354:11;;;17353:20;;2592:33;17029:352;7459:258;7512:12;-1:-1:-1;;;;;7239:43:52;;7671:13;:7;6898:3;6871:30;;6712:196;7671:13;:29;;7459:258;-1:-1:-1;;7459:258:52:o;18013:842::-;18352:4;18346:11;18091:7;;-1:-1:-1;;;;;7239:43:52;;;6898:3;6871:30;;;;18434:12;;;18430:66;;;18469:16;;-1:-1:-1;;;18469:16:52;;;;;;;;;;;18430:66;18505:8;18721:4;18713:6;18707:4;18699:6;18693:4;18686:5;18675:51;18668:58;;18750:3;18745:37;;18762:20;;-1:-1:-1;;;18762:20:52;;;;;;;;;;;18745:37;17362:3;17354:11;;;17353:20;;18792:56;18013:842;-1:-1:-1;;;;;;;18013:842:52:o;-1:-1:-1:-;;;;;;;;:::o;14:658:199:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:199;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:199;;14:658;-1:-1:-1;;;;;;14:658:199:o;677:180::-;736:6;789:2;777:9;768:7;764:23;760:32;757:52;;;805:1;802;795:12;757:52;-1:-1:-1;828:23:199;;677:180;-1:-1:-1;677:180:199:o;862:316::-;939:6;947;955;1008:2;996:9;987:7;983:23;979:32;976:52;;;1024:1;1021;1014:12;976:52;-1:-1:-1;;1047:23:199;;;1117:2;1102:18;;1089:32;;-1:-1:-1;1168:2:199;1153:18;;;1140:32;;862:316;-1:-1:-1;862:316:199:o;1576:1569::-;1780:4;1809:2;1849;1838:9;1834:18;1879:2;1868:9;1861:21;1902:6;1937;1931:13;1968:6;1960;1953:22;1994:2;1984:12;;2027:2;2016:9;2012:18;2005:25;;2089:2;2079:6;2076:1;2072:14;2061:9;2057:30;2053:39;2127:2;2119:6;2115:15;2148:1;2169;2179:937;2195:6;2190:3;2187:15;2179:937;;;2264:22;;;-1:-1:-1;;2260:36:199;2248:49;;2320:13;;2407:9;;-1:-1:-1;;;;;2403:35:199;2388:51;;2478:11;;2472:18;2510:15;;;2503:27;;;2591:19;;2360:15;;;2623:24;;;2713:21;;;;2758:1;;2681:2;2669:15;;;2772:236;2788:8;2783:3;2780:17;2772:236;;;2869:15;;-1:-1:-1;;;;;;2865:42:199;2851:57;;2977:17;;;;2816:1;2807:11;;;;;2934:14;;;;2772:236;;;-1:-1:-1;3094:12:199;;;;3031:5;-1:-1:-1;;;3059:15:199;;;;2221:1;2212:11;2179:937;;;-1:-1:-1;3133:6:199;;1576:1569;-1:-1:-1;;;;;;;;;1576:1569:199:o;3150:286::-;3209:6;3262:2;3250:9;3241:7;3237:23;3233:32;3230:52;;;3278:1;3275;3268:12;3230:52;3304:23;;-1:-1:-1;;;;;3356:31:199;;3346:42;;3336:70;;3402:1;3399;3392:12;3623:250;3708:1;3718:113;3732:6;3729:1;3726:13;3718:113;;;3808:11;;;3802:18;3789:11;;;3782:39;3754:2;3747:10;3718:113;;;-1:-1:-1;;3865:1:199;3847:16;;3840:27;3623:250::o;3878:271::-;3920:3;3958:5;3952:12;3985:6;3980:3;3973:19;4001:76;4070:6;4063:4;4058:3;4054:14;4047:4;4040:5;4036:16;4001:76;:::i;:::-;4131:2;4110:15;-1:-1:-1;;4106:29:199;4097:39;;;;4138:4;4093:50;;3878:271;-1:-1:-1;;3878:271:199:o;4154:803::-;4316:4;4345:2;4385;4374:9;4370:18;4415:2;4404:9;4397:21;4438:6;4473;4467:13;4504:6;4496;4489:22;4542:2;4531:9;4527:18;4520:25;;4604:2;4594:6;4591:1;4587:14;4576:9;4572:30;4568:39;4554:53;;4642:2;4634:6;4630:15;4663:1;4673:255;4687:6;4684:1;4681:13;4673:255;;;4780:2;4776:7;4764:9;4756:6;4752:22;4748:36;4743:3;4736:49;4808:40;4841:6;4832;4826:13;4808:40;:::i;:::-;4798:50;-1:-1:-1;4906:12:199;;;;4871:15;;;;4709:1;4702:9;4673:255;;;-1:-1:-1;4945:6:199;;4154:803;-1:-1:-1;;;;;;;4154:803:199:o;4962:114::-;5046:4;5039:5;5035:16;5028:5;5025:27;5015:55;;5066:1;5063;5056:12;5081:448;5154:6;5162;5170;5223:2;5211:9;5202:7;5198:23;5194:32;5191:52;;;5239:1;5236;5229:12;5191:52;5278:9;5265:23;5297:29;5320:5;5297:29;:::i;:::-;5345:5;-1:-1:-1;5402:2:199;5387:18;;5374:32;5415:31;5374:32;5415:31;:::i;:::-;5081:448;;5465:7;;-1:-1:-1;;;5519:2:199;5504:18;;;;5491:32;;5081:448::o;5534:218::-;5681:2;5670:9;5663:21;5644:4;5701:45;5742:2;5731:9;5727:18;5719:6;5701:45;:::i;5757:248::-;5825:6;5833;5886:2;5874:9;5865:7;5861:23;5857:32;5854:52;;;5902:1;5899;5892:12;5854:52;-1:-1:-1;;5925:23:199;;;5995:2;5980:18;;;5967:32;;-1:-1:-1;5757:248:199:o;6202:127::-;6263:10;6258:3;6254:20;6251:1;6244:31;6294:4;6291:1;6284:15;6318:4;6315:1;6308:15;6334:718;6376:5;6429:3;6422:4;6414:6;6410:17;6406:27;6396:55;;6447:1;6444;6437:12;6396:55;6483:6;6470:20;6509:18;6546:2;6542;6539:10;6536:36;;;6552:18;;:::i;:::-;6627:2;6621:9;6595:2;6681:13;;-1:-1:-1;;6677:22:199;;;6701:2;6673:31;6669:40;6657:53;;;6725:18;;;6745:22;;;6722:46;6719:72;;;6771:18;;:::i;:::-;6811:10;6807:2;6800:22;6846:2;6838:6;6831:18;6892:3;6885:4;6880:2;6872:6;6868:15;6864:26;6861:35;6858:55;;;6909:1;6906;6899:12;6858:55;6973:2;6966:4;6958:6;6954:17;6947:4;6939:6;6935:17;6922:54;7020:1;7013:4;7008:2;7000:6;6996:15;6992:26;6985:37;7040:6;7031:15;;;;;;6334:718;;;;:::o;7057:320::-;7125:6;7178:2;7166:9;7157:7;7153:23;7149:32;7146:52;;;7194:1;7191;7184:12;7146:52;7234:9;7221:23;7267:18;7259:6;7256:30;7253:50;;;7299:1;7296;7289:12;7253:50;7322:49;7363:7;7354:6;7343:9;7339:22;7322:49;:::i;7635:388::-;7712:6;7720;7773:2;7761:9;7752:7;7748:23;7744:32;7741:52;;;7789:1;7786;7779:12;7741:52;7825:9;7812:23;7802:33;;7886:2;7875:9;7871:18;7858:32;7913:18;7905:6;7902:30;7899:50;;;7945:1;7942;7935:12;7899:50;7968:49;8009:7;8000:6;7989:9;7985:22;7968:49;:::i;:::-;7958:59;;;7635:388;;;;;:::o;8210:305::-;8308:6;8361:2;8349:9;8340:7;8336:23;8332:32;8329:52;;;8377:1;8374;8367:12;8329:52;8409:9;8403:16;8459:6;8452:5;8448:18;8441:5;8438:29;8428:57;;8481:1;8478;8471:12;8742:184;8812:6;8865:2;8853:9;8844:7;8840:23;8836:32;8833:52;;;8881:1;8878;8871:12;8833:52;-1:-1:-1;8904:16:199;;8742:184;-1:-1:-1;8742:184:199:o;8931:127::-;8992:10;8987:3;8983:20;8980:1;8973:31;9023:4;9020:1;9013:15;9047:4;9044:1;9037:15;9063:128;9130:9;;;9151:11;;;9148:37;;;9165:18;;:::i;9196:168::-;9269:9;;;9300;;9317:15;;;9311:22;;9297:37;9287:71;;9338:18;;:::i;9369:380::-;9448:1;9444:12;;;;9491;;;9512:61;;9566:4;9558:6;9554:17;9544:27;;9512:61;9619:2;9611:6;9608:14;9588:18;9585:38;9582:161;;9665:10;9660:3;9656:20;9653:1;9646:31;9700:4;9697:1;9690:15;9728:4;9725:1;9718:15;9582:161;;9369:380;;;:::o;9754:127::-;9815:10;9810:3;9806:20;9803:1;9796:31;9846:4;9843:1;9836:15;9870:4;9867:1;9860:15;9886:157;9916:1;9950:4;9947:1;9943:12;9974:3;9964:37;;9981:18;;:::i;:::-;10033:3;10026:4;10023:1;10019:12;10015:22;10010:27;;;9886:157;;;;:::o;11333:369::-;11419:6;11427;11435;11488:2;11476:9;11467:7;11463:23;11459:32;11456:52;;;11504:1;11501;11494:12;11456:52;11536:9;11530:16;11555:29;11578:5;11555:29;:::i;:::-;11648:2;11633:18;;11627:25;11692:2;11677:18;;;11671:25;11603:5;;11627:25;;-1:-1:-1;11671:25:199;11333:369;-1:-1:-1;;;11333:369:199:o;12050:125::-;12115:9;;;12136:10;;;12133:36;;;12149:18;;:::i;12180:422::-;12269:1;12312:5;12269:1;12326:270;12347:7;12337:8;12334:21;12326:270;;;12406:4;12402:1;12398:6;12394:17;12388:4;12385:27;12382:53;;;12415:18;;:::i;:::-;12465:7;12455:8;12451:22;12448:55;;;12485:16;;;;12448:55;12564:22;;;;12524:15;;;;12326:270;;;12330:3;12180:422;;;;;:::o;12607:806::-;12656:5;12686:8;12676:80;;-1:-1:-1;12727:1:199;12741:5;;12676:80;12775:4;12765:76;;-1:-1:-1;12812:1:199;12826:5;;12765:76;12857:4;12875:1;12870:59;;;;12943:1;12938:130;;;;12850:218;;12870:59;12900:1;12891:10;;12914:5;;;12938:130;12975:3;12965:8;12962:17;12959:43;;;12982:18;;:::i;:::-;-1:-1:-1;;13038:1:199;13024:16;;13053:5;;12850:218;;13152:2;13142:8;13139:16;13133:3;13127:4;13124:13;13120:36;13114:2;13104:8;13101:16;13096:2;13090:4;13087:12;13083:35;13080:77;13077:159;;;-1:-1:-1;13189:19:199;;;13221:5;;13077:159;13268:34;13293:8;13287:4;13268:34;:::i;:::-;13338:6;13334:1;13330:6;13326:19;13317:7;13314:32;13311:58;;;13349:18;;:::i;:::-;13387:20;;12607:806;-1:-1:-1;;;12607:806:199:o;13418:131::-;13478:5;13507:36;13534:8;13528:4;13507:36;:::i;13833:384::-;-1:-1:-1;;;;;;14018:33:199;;14006:46;;14075:13;;13988:3;;14097:74;14075:13;14160:1;14151:11;;14144:4;14132:17;;14097:74;:::i;:::-;14191:16;;;;14209:1;14187:24;;13833:384;-1:-1:-1;;;13833:384:199:o;14222:287::-;14351:3;14389:6;14383:13;14405:66;14464:6;14459:3;14452:4;14444:6;14440:17;14405:66;:::i;:::-;14487:16;;;;;14222:287;-1:-1:-1;;14222:287:199:o;14514:277::-;14581:6;14634:2;14622:9;14613:7;14609:23;14605:32;14602:52;;;14650:1;14647;14640:12;14602:52;14682:9;14676:16;14735:5;14728:13;14721:21;14714:5;14711:32;14701:60;;14757:1;14754;14747:12;14796:398;14951:3;14989:6;14983:13;15005:66;15064:6;15059:3;15052:4;15044:6;15040:17;15005:66;:::i;:::-;-1:-1:-1;;;;;;15132:26:199;;;;15093:16;;;;15118:41;;;15186:1;15175:13;;14796:398;-1:-1:-1;;14796:398:199:o;15542:446::-;15792:2;15781:9;15774:21;15831:1;15826:2;15815:9;15811:18;15804:29;-1:-1:-1;;;15864:2:199;15853:9;15849:18;15842:35;15915:3;15908:4;15897:9;15893:20;15886:33;15755:4;15936:46;15977:3;15966:9;15962:19;15954:6;15936:46;:::i;19682:112::-;19714:1;19740;19730:35;;19745:18;;:::i;:::-;-1:-1:-1;19779:9:199;;19682:112::o;19799:291::-;19976:2;19965:9;19958:21;19939:4;19996:45;20037:2;20026:9;20022:18;20014:6;19996:45;:::i;:::-;19988:53;;20077:6;20072:2;20061:9;20057:18;20050:34;19799:291;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "addLastByte(bytes)": "c10b95e7",
    "addressToBytes32(address)": "82c947b7",
    "bytes32ToAddress(bytes32)": "5ced058e",
    "check_decompress(uint256,uint256,uint256)": "34091ef5",
    "createShortPayload(uint8,uint8,bytes32)": "8820cb26",
    "cutLastByte(bytes)": "f1f97ac0",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "expectRevertAlreadyInitialized()": "7b347163",
    "expectRevertNotOwner()": "c63101b6",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "signMessage(uint256,bytes)": "eaee2611",
    "signMessage(uint256,bytes32)": "91df0ed8",
    "skipBlock()": "660982d9",
    "skipBlocks(uint256)": "a72e0a34",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testSynapseLibraryTest()": "a2cdb207",
    "testSynapseUtilities()": "0621feff",
    "test_compress(uint256)": "22195fd2",
    "test_mostSignificantBit(uint256)": "abe95b36",
    "test_parity_exponentFF(uint256)": "24cacb56",
    "test_parity_exponentNotFF(uint256,uint256)": "c38bcfa3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OccupiedMemory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PrecompileOutOfGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnallocatedMemory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ViewOverrun\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"addLastByte\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addressToBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"buf\",\"type\":\"bytes32\"}],\"name\":\"bytes32ToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mantissa\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exponent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"check_decompress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"payloadLength\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"firstElementLength\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"createShortPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"cutLastByte\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevertAlreadyInitialized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevertNotOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hashedMsg\",\"type\":\"bytes32\"}],\"name\":\"signMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"signMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"skipBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blocks\",\"type\":\"uint256\"}],\"name\":\"skipBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSynapseLibraryTest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSynapseUtilities\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"test_compress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"test_mostSignificantBit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"test_parity_exponentFF\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mantissa\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exponent\",\"type\":\"uint256\"}],\"name\":\"test_parity_exponentNotFF\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"testSynapseLibraryTest()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"},\"testSynapseUtilities()\":{\"notice\":\"Prevents this contract from being included in the coverage report\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/suite/libs/stack/Number.t.sol\":\"NumberLibraryTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/libs/Constants.sol\":{\"keccak256\":\"0x9ead9581411ac7f702ccba26e3f478610f8c9c785ec3f96f3d9324d162177c2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cba4a834737651bee39e2abca02d59e676cd149439d21182ab6e4320d5e61279\",\"dweb:/ipfs/QmS2K5LKspFZPKuedWoaqywUw6v1nH9xdHa35dN8J9jDEi\"]},\"contracts/libs/Errors.sol\":{\"keccak256\":\"0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b\",\"dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB\"]},\"contracts/libs/memory/MemView.sol\":{\"keccak256\":\"0x95dd48e50e353b59fadce29f22f02629c91bd3b5e07c0efa588bd7c808536587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4347457c5338192aca52c237c7f588d15a4f541482cd44b0632c59f36f9558eb\",\"dweb:/ipfs/QmXn1sKY7nVNrgKtbtE9PaMHFKBadyg73fs2jhw4Navyb1\"]},\"contracts/libs/stack/Number.sol\":{\"keccak256\":\"0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd\",\"dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x027d1aa07f6a45546d6990186ee6ab2ccd1b654fbbef326145e9b6e125feaabc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c57fcb94bf64d583115157e4c89cc4ad58ff1102677613d7ef70263d98d270\",\"dweb:/ipfs/QmbASKUPs9pRck3j4soibhgGJ2ghr38vzdaSrF5Ae2xyqQ\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"test/harnesses/libs/stack/NumberHarness.t.sol\":{\"keccak256\":\"0xf92f9464c6853b752aebf7b19c98518c924f0f3df27bfee010be41a2c03dc328\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e47747d2eae005c566322374d53475d3eeab00759f9f1e28ca5d91737c5532a5\",\"dweb:/ipfs/QmSeWuQTukth6muLSowD5yhdCbnSNZfFWDvbqhLzLKUGMe\"]},\"test/suite/libs/stack/Number.t.sol\":{\"keccak256\":\"0x30695ae20363351b1e94795a412d87a985e326dce727de585fe1ef885c36ca40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cfff96711cf8d7a39d40318a18858eb2103e0cd56a2704fbaab11e915477aa3\",\"dweb:/ipfs/QmQDppujx2mABs9RTPtTvRnWSAhqqjWU2rcEfUZGSDqVa2\"]},\"test/utils/SynapseLibraryTest.t.sol\":{\"keccak256\":\"0xadc2e35557bfeb3617d3f4806596e610ccb399b20255c51930626b4a100ee803\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee71b2028c579cb42ddc895a1ab40c3a6001e2e36119465e18562f2535627e9d\",\"dweb:/ipfs/QmXzRiSqSvA9z9Rq4xnhGFCSbJUYAgmE8VrnP3hqjfWBbm\"]},\"test/utils/SynapseTestConstants.t.sol\":{\"keccak256\":\"0x24b5c4c4f8e0de51b137e0b922875be258282ddd33580da8cf939bef0b552a79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ea15ff24cdcacc3c31382bd04c530287d49dc841f7013e9810133b4f91593e\",\"dweb:/ipfs/QmbBd33fFmSmTqPXks8knXCXZHpaYvUSjebtmFGrU3YE5A\"]},\"test/utils/SynapseUtilities.t.sol\":{\"keccak256\":\"0x8d08d6a579173fe927decca6fbeaa743e9455051837799f3be15c052420b7112\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5662d8d58cac1c6e0688ce8faee3b2085402e4d0ce0cbc38596bdaafa75e1b51\",\"dweb:/ipfs/QmU9b5UQeYndKQAVprdab994RuG1WW8Uz7sg38uadyN2gq\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "OccupiedMemory"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PrecompileOutOfGas"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnallocatedMemory"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ViewOverrun"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "addLastByte",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "addressToBytes32",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "buf",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "bytes32ToAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "mantissa",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exponent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "check_decompress"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "payloadLength",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "firstElementLength",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "createShortPayload",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cutLastByte",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "expectRevertAlreadyInitialized"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "expectRevertNotOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "privKey",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "hashedMsg",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "signMessage",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "privKey",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "signMessage",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "skipBlock"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blocks",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "skipBlocks"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSynapseLibraryTest"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSynapseUtilities"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_compress"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_mostSignificantBit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_parity_exponentFF"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "mantissa",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exponent",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_parity_exponentNotFF"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "testSynapseLibraryTest()": {
            "notice": "Prevents this contract from being included in the coverage report"
          },
          "testSynapseUtilities()": {
            "notice": "Prevents this contract from being included in the coverage report"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/suite/libs/stack/Number.t.sol": "NumberLibraryTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/libs/Constants.sol": {
        "keccak256": "0x9ead9581411ac7f702ccba26e3f478610f8c9c785ec3f96f3d9324d162177c2c",
        "urls": [
          "bzz-raw://cba4a834737651bee39e2abca02d59e676cd149439d21182ab6e4320d5e61279",
          "dweb:/ipfs/QmS2K5LKspFZPKuedWoaqywUw6v1nH9xdHa35dN8J9jDEi"
        ],
        "license": "MIT"
      },
      "contracts/libs/Errors.sol": {
        "keccak256": "0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011",
        "urls": [
          "bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b",
          "dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/MemView.sol": {
        "keccak256": "0x95dd48e50e353b59fadce29f22f02629c91bd3b5e07c0efa588bd7c808536587",
        "urls": [
          "bzz-raw://4347457c5338192aca52c237c7f588d15a4f541482cd44b0632c59f36f9558eb",
          "dweb:/ipfs/QmXn1sKY7nVNrgKtbtE9PaMHFKBadyg73fs2jhw4Navyb1"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Number.sol": {
        "keccak256": "0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96",
        "urls": [
          "bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd",
          "dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x027d1aa07f6a45546d6990186ee6ab2ccd1b654fbbef326145e9b6e125feaabc",
        "urls": [
          "bzz-raw://85c57fcb94bf64d583115157e4c89cc4ad58ff1102677613d7ef70263d98d270",
          "dweb:/ipfs/QmbASKUPs9pRck3j4soibhgGJ2ghr38vzdaSrF5Ae2xyqQ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "test/harnesses/libs/stack/NumberHarness.t.sol": {
        "keccak256": "0xf92f9464c6853b752aebf7b19c98518c924f0f3df27bfee010be41a2c03dc328",
        "urls": [
          "bzz-raw://e47747d2eae005c566322374d53475d3eeab00759f9f1e28ca5d91737c5532a5",
          "dweb:/ipfs/QmSeWuQTukth6muLSowD5yhdCbnSNZfFWDvbqhLzLKUGMe"
        ],
        "license": "MIT"
      },
      "test/suite/libs/stack/Number.t.sol": {
        "keccak256": "0x30695ae20363351b1e94795a412d87a985e326dce727de585fe1ef885c36ca40",
        "urls": [
          "bzz-raw://1cfff96711cf8d7a39d40318a18858eb2103e0cd56a2704fbaab11e915477aa3",
          "dweb:/ipfs/QmQDppujx2mABs9RTPtTvRnWSAhqqjWU2rcEfUZGSDqVa2"
        ],
        "license": "MIT"
      },
      "test/utils/SynapseLibraryTest.t.sol": {
        "keccak256": "0xadc2e35557bfeb3617d3f4806596e610ccb399b20255c51930626b4a100ee803",
        "urls": [
          "bzz-raw://ee71b2028c579cb42ddc895a1ab40c3a6001e2e36119465e18562f2535627e9d",
          "dweb:/ipfs/QmXzRiSqSvA9z9Rq4xnhGFCSbJUYAgmE8VrnP3hqjfWBbm"
        ],
        "license": "MIT"
      },
      "test/utils/SynapseTestConstants.t.sol": {
        "keccak256": "0x24b5c4c4f8e0de51b137e0b922875be258282ddd33580da8cf939bef0b552a79",
        "urls": [
          "bzz-raw://12ea15ff24cdcacc3c31382bd04c530287d49dc841f7013e9810133b4f91593e",
          "dweb:/ipfs/QmbBd33fFmSmTqPXks8knXCXZHpaYvUSjebtmFGrU3YE5A"
        ],
        "license": "MIT"
      },
      "test/utils/SynapseUtilities.t.sol": {
        "keccak256": "0x8d08d6a579173fe927decca6fbeaa743e9455051837799f3be15c052420b7112",
        "urls": [
          "bzz-raw://5662d8d58cac1c6e0688ce8faee3b2085402e4d0ce0cbc38596bdaafa75e1b51",
          "dweb:/ipfs/QmU9b5UQeYndKQAVprdab994RuG1WW8Uz7sg38uadyN2gq"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/suite/libs/stack/Number.t.sol",
    "id": 86058,
    "exportedSymbols": {
      "Number": [
        15268
      ],
      "NumberHarness": [
        58016
      ],
      "NumberLibraryTest": [
        86057
      ],
      "SynapseLibraryTest": [
        91481
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2286:173",
    "nodes": [
      {
        "id": 85821,
        "nodeType": "PragmaDirective",
        "src": "32:23:173",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 85823,
        "nodeType": "ImportDirective",
        "src": "57:75:173",
        "nodes": [],
        "absolutePath": "test/utils/SynapseLibraryTest.t.sol",
        "file": "../../../utils/SynapseLibraryTest.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86058,
        "sourceUnit": 91482,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85822,
              "name": "SynapseLibraryTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 91481,
              "src": "65:18:173",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85826,
        "nodeType": "ImportDirective",
        "src": "133:88:173",
        "nodes": [],
        "absolutePath": "test/harnesses/libs/stack/NumberHarness.t.sol",
        "file": "../../../harnesses/libs/stack/NumberHarness.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86058,
        "sourceUnit": 58017,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85824,
              "name": "Number",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 15268,
              "src": "141:6:173",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 85825,
              "name": "NumberHarness",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58016,
              "src": "149:13:173",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86057,
        "nodeType": "ContractDefinition",
        "src": "262:2055:173",
        "nodes": [
          {
            "id": 85831,
            "nodeType": "VariableDeclaration",
            "src": "317:33:173",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "libHarness",
            "nameLocation": "340:10:173",
            "scope": 86057,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NumberHarness_$58016",
              "typeString": "contract NumberHarness"
            },
            "typeName": {
              "id": 85830,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 85829,
                "name": "NumberHarness",
                "nameLocations": [
                  "317:13:173"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 58016,
                "src": "317:13:173"
              },
              "referencedDeclaration": 58016,
              "src": "317:13:173",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NumberHarness_$58016",
                "typeString": "contract NumberHarness"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 85842,
            "nodeType": "FunctionDefinition",
            "src": "357:73:173",
            "nodes": [],
            "body": {
              "id": 85841,
              "nodeType": "Block",
              "src": "381:49:173",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 85839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85834,
                      "name": "libHarness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85831,
                      "src": "391:10:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NumberHarness_$58016",
                        "typeString": "contract NumberHarness"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 85837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "404:17:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_NumberHarness_$58016_$",
                          "typeString": "function () returns (contract NumberHarness)"
                        },
                        "typeName": {
                          "id": 85836,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 85835,
                            "name": "NumberHarness",
                            "nameLocations": [
                              "408:13:173"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 58016,
                            "src": "408:13:173"
                          },
                          "referencedDeclaration": 58016,
                          "src": "408:13:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NumberHarness_$58016",
                            "typeString": "contract NumberHarness"
                          }
                        }
                      },
                      "id": 85838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "404:19:173",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NumberHarness_$58016",
                        "typeString": "contract NumberHarness"
                      }
                    },
                    "src": "391:32:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NumberHarness_$58016",
                      "typeString": "contract NumberHarness"
                    }
                  },
                  "id": 85840,
                  "nodeType": "ExpressionStatement",
                  "src": "391:32:173"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "366:5:173",
            "parameters": {
              "id": 85832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "371:2:173"
            },
            "returnParameters": {
              "id": 85833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "381:0:173"
            },
            "scope": 86057,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 85885,
            "nodeType": "FunctionDefinition",
            "src": "436:541:173",
            "nodes": [],
            "body": {
              "id": 85884,
              "nodeType": "Block",
              "src": "481:496:173",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    85849
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85849,
                      "mutability": "mutable",
                      "name": "num",
                      "nameLocation": "567:3:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 85884,
                      "src": "560:10:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Number_$15268",
                        "typeString": "Number"
                      },
                      "typeName": {
                        "id": 85848,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 85847,
                          "name": "Number",
                          "nameLocations": [
                            "560:6:173"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15268,
                          "src": "560:6:173"
                        },
                        "referencedDeclaration": 15268,
                        "src": "560:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Number_$15268",
                          "typeString": "Number"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85854,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 85852,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85844,
                        "src": "593:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 85850,
                        "name": "libHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85831,
                        "src": "573:10:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NumberHarness_$58016",
                          "typeString": "contract NumberHarness"
                        }
                      },
                      "id": 85851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "584:8:173",
                      "memberName": "compress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57988,
                      "src": "573:19:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_userDefinedValueType$_Number_$15268_$",
                        "typeString": "function (uint256) pure external returns (Number)"
                      }
                    },
                    "id": 85853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "573:26:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Number_$15268",
                      "typeString": "Number"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "560:39:173"
                },
                {
                  "assignments": [
                    85856
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85856,
                      "mutability": "mutable",
                      "name": "decompressed",
                      "nameLocation": "617:12:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 85884,
                      "src": "609:20:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 85855,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "609:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85861,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 85859,
                        "name": "num",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85849,
                        "src": "654:3:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Number_$15268",
                          "typeString": "Number"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Number_$15268",
                          "typeString": "Number"
                        }
                      ],
                      "expression": {
                        "id": 85857,
                        "name": "libHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85831,
                        "src": "632:10:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NumberHarness_$58016",
                          "typeString": "contract NumberHarness"
                        }
                      },
                      "id": 85858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "643:10:173",
                      "memberName": "decompress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58002,
                      "src": "632:21:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_Number_$15268_$returns$_t_uint256_$",
                        "typeString": "function (Number) pure external returns (uint256)"
                      }
                    },
                    "id": 85860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "632:26:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "609:49:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85863,
                        "name": "decompressed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85856,
                        "src": "726:12:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 85864,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85844,
                        "src": "740:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "6465636f6d7072657373656420746f6f20626967",
                        "id": 85865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "747:22:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3dd60a8b0c282225b041d7ad9ac3f94fdec63ef61739c67cebba26bed3f7f830",
                          "typeString": "literal_string \"decompressed too big\""
                        },
                        "value": "decompressed too big"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3dd60a8b0c282225b041d7ad9ac3f94fdec63ef61739c67cebba26bed3f7f830",
                          "typeString": "literal_string \"decompressed too big\""
                        }
                      ],
                      "id": 85862,
                      "name": "assertLe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19377,
                        19402,
                        19432,
                        19457
                      ],
                      "referencedDeclaration": 19402,
                      "src": "717:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 85866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "717:53:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85867,
                  "nodeType": "ExpressionStatement",
                  "src": "717:53:173"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 85870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 85868,
                      "name": "decompressed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85856,
                      "src": "862:12:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 85869,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85844,
                      "src": "877:5:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "862:20:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 85883,
                  "nodeType": "IfStatement",
                  "src": "858:113:173",
                  "trueBody": {
                    "id": 85882,
                    "nodeType": "Block",
                    "src": "884:87:173",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 85877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 85874,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 85872,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 85844,
                                      "src": "908:5:173",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 85873,
                                      "name": "decompressed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 85856,
                                      "src": "916:12:173",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "908:20:173",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 85875,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "907:22:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "323536",
                                "id": 85876,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "932:3:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_256_by_1",
                                  "typeString": "int_const 256"
                                },
                                "value": "256"
                              },
                              "src": "907:28:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 85878,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85844,
                              "src": "937:5:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "6572726f7220746f6f20626967",
                              "id": 85879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "944:15:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_046a4b119edcfbf2da7070ff222d5c52a2acddb374c2128e40cd0763e4ace728",
                                "typeString": "literal_string \"error too big\""
                              },
                              "value": "error too big"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_046a4b119edcfbf2da7070ff222d5c52a2acddb374c2128e40cd0763e4ace728",
                                "typeString": "literal_string \"error too big\""
                              }
                            ],
                            "id": 85871,
                            "name": "assertLt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19143,
                              19168,
                              19198,
                              19223
                            ],
                            "referencedDeclaration": 19168,
                            "src": "898:8:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 85880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "898:62:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85881,
                        "nodeType": "ExpressionStatement",
                        "src": "898:62:173"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "22195fd2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_compress",
            "nameLocation": "445:13:173",
            "parameters": {
              "id": 85845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85844,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "467:5:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 85885,
                  "src": "459:13:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "458:15:173"
            },
            "returnParameters": {
              "id": 85846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "481:0:173"
            },
            "scope": 86057,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 85935,
            "nodeType": "FunctionDefinition",
            "src": "983:381:173",
            "nodes": [],
            "body": {
              "id": 85934,
              "nodeType": "Block",
              "src": "1061:303:173",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 85898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85892,
                      "name": "mantissa",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85887,
                      "src": "1071:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 85894,
                          "name": "mantissa",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85887,
                          "src": "1088:8:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 85895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1098:1:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "323535",
                          "id": 85896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1101:3:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_255_by_1",
                            "typeString": "int_const 255"
                          },
                          "value": "255"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_255_by_1",
                            "typeString": "int_const 255"
                          }
                        ],
                        "id": 85893,
                        "name": "bound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          28123,
                          28253
                        ],
                        "referencedDeclaration": 28123,
                        "src": "1082:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 85897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1082:23:173",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1071:34:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 85899,
                  "nodeType": "ExpressionStatement",
                  "src": "1071:34:173"
                },
                {
                  "expression": {
                    "id": 85906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85900,
                      "name": "exponent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85889,
                      "src": "1115:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 85902,
                          "name": "exponent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85889,
                          "src": "1132:8:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 85903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1142:1:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "323437",
                          "id": 85904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1145:3:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_247_by_1",
                            "typeString": "int_const 247"
                          },
                          "value": "247"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_247_by_1",
                            "typeString": "int_const 247"
                          }
                        ],
                        "id": 85901,
                        "name": "bound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          28123,
                          28253
                        ],
                        "referencedDeclaration": 28123,
                        "src": "1126:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 85905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1126:23:173",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1115:34:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 85907,
                  "nodeType": "ExpressionStatement",
                  "src": "1115:34:173"
                },
                {
                  "assignments": [
                    85909
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85909,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1167:5:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 85934,
                      "src": "1159:13:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 85908,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1159:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85916,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 85915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 85912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "323536",
                            "id": 85910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1176:3:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_256_by_1",
                              "typeString": "int_const 256"
                            },
                            "value": "256"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 85911,
                            "name": "mantissa",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85887,
                            "src": "1182:8:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1176:14:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 85913,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1175:16:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "id": 85914,
                      "name": "exponent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85889,
                      "src": "1195:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1175:28:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1159:44:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 85924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 85920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 85918,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85909,
                            "src": "1221:5:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">>",
                          "rightExpression": {
                            "id": 85919,
                            "name": "exponent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85889,
                            "src": "1230:8:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1221:17:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 85923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "323536",
                            "id": 85921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1242:3:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_256_by_1",
                              "typeString": "int_const 256"
                            },
                            "value": "256"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 85922,
                            "name": "mantissa",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85887,
                            "src": "1248:8:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1242:14:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1221:35:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7365747570206f766572666c6f77",
                        "id": 85925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1258:16:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5694c48741b1c563327d0beaab2732a336bc69747a25077619f7f1eb6a346be",
                          "typeString": "literal_string \"setup overflow\""
                        },
                        "value": "setup overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5694c48741b1c563327d0beaab2732a336bc69747a25077619f7f1eb6a346be",
                          "typeString": "literal_string \"setup overflow\""
                        }
                      ],
                      "id": 85917,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1213:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 85926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1213:62:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85927,
                  "nodeType": "ExpressionStatement",
                  "src": "1213:62:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85929,
                        "name": "mantissa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85887,
                        "src": "1313:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 85930,
                        "name": "exponent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85889,
                        "src": "1333:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 85931,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85909,
                        "src": "1350:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85928,
                      "name": "check_decompress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86005,
                      "src": "1285:16:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 85932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1303:8:173",
                      "1323:8:173",
                      "1343:5:173"
                    ],
                    "names": [
                      "mantissa",
                      "exponent",
                      "value"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1285:72:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85933,
                  "nodeType": "ExpressionStatement",
                  "src": "1285:72:173"
                }
              ]
            },
            "functionSelector": "c38bcfa3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_parity_exponentNotFF",
            "nameLocation": "992:25:173",
            "parameters": {
              "id": 85890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85887,
                  "mutability": "mutable",
                  "name": "mantissa",
                  "nameLocation": "1026:8:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 85935,
                  "src": "1018:16:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85889,
                  "mutability": "mutable",
                  "name": "exponent",
                  "nameLocation": "1044:8:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 85935,
                  "src": "1036:16:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85888,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1017:36:173"
            },
            "returnParameters": {
              "id": 85891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1061:0:173"
            },
            "scope": 86057,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 85955,
            "nodeType": "FunctionDefinition",
            "src": "1370:174:173",
            "nodes": [],
            "body": {
              "id": 85954,
              "nodeType": "Block",
              "src": "1424:120:173",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 85946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85940,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85937,
                      "src": "1434:5:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 85942,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85937,
                          "src": "1448:5:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 85943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1455:1:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "323535",
                          "id": 85944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1458:3:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_255_by_1",
                            "typeString": "int_const 255"
                          },
                          "value": "255"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_255_by_1",
                            "typeString": "int_const 255"
                          }
                        ],
                        "id": 85941,
                        "name": "bound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          28123,
                          28253
                        ],
                        "referencedDeclaration": 28123,
                        "src": "1442:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 85945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1442:20:173",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1434:28:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 85947,
                  "nodeType": "ExpressionStatement",
                  "src": "1434:28:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85949,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85937,
                        "src": "1500:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30784646",
                        "id": 85950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1517:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_255_by_1",
                          "typeString": "int_const 255"
                        },
                        "value": "0xFF"
                      },
                      {
                        "id": 85951,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85937,
                        "src": "1530:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_255_by_1",
                          "typeString": "int_const 255"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85948,
                      "name": "check_decompress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86005,
                      "src": "1472:16:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 85952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1490:8:173",
                      "1507:8:173",
                      "1523:5:173"
                    ],
                    "names": [
                      "mantissa",
                      "exponent",
                      "value"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1472:65:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85953,
                  "nodeType": "ExpressionStatement",
                  "src": "1472:65:173"
                }
              ]
            },
            "functionSelector": "24cacb56",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_parity_exponentFF",
            "nameLocation": "1379:22:173",
            "parameters": {
              "id": 85938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85937,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1410:5:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 85955,
                  "src": "1402:13:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1401:15:173"
            },
            "returnParameters": {
              "id": 85939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1424:0:173"
            },
            "scope": 86057,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86005,
            "nodeType": "FunctionDefinition",
            "src": "1550:336:173",
            "nodes": [],
            "body": {
              "id": 86004,
              "nodeType": "Block",
              "src": "1634:252:173",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    85966
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85966,
                      "mutability": "mutable",
                      "name": "compressed",
                      "nameLocation": "1651:10:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 86004,
                      "src": "1644:17:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Number_$15268",
                        "typeString": "Number"
                      },
                      "typeName": {
                        "id": 85965,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 85964,
                          "name": "Number",
                          "nameLocations": [
                            "1644:6:173"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15268,
                          "src": "1644:6:173"
                        },
                        "referencedDeclaration": 15268,
                        "src": "1644:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Number_$15268",
                          "typeString": "Number"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85971,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 85969,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85961,
                        "src": "1684:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 85967,
                        "name": "libHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85831,
                        "src": "1664:10:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NumberHarness_$58016",
                          "typeString": "contract NumberHarness"
                        }
                      },
                      "id": 85968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1675:8:173",
                      "memberName": "compress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57988,
                      "src": "1664:19:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_userDefinedValueType$_Number_$15268_$",
                        "typeString": "function (uint256) pure external returns (Number)"
                      }
                    },
                    "id": 85970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1664:26:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Number_$15268",
                      "typeString": "Number"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1644:46:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 85980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 85977,
                                  "name": "compressed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85966,
                                  "src": "1729:10:173",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_userDefinedValueType$_Number_$15268",
                                    "typeString": "Number"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_userDefinedValueType$_Number_$15268",
                                    "typeString": "Number"
                                  }
                                ],
                                "expression": {
                                  "id": 85975,
                                  "name": "Number",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15268,
                                  "src": "1715:6:173",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_userDefinedValueType$_Number_$15268_$",
                                    "typeString": "type(Number)"
                                  }
                                },
                                "id": 85976,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1722:6:173",
                                "memberName": "unwrap",
                                "nodeType": "MemberAccess",
                                "src": "1715:13:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Number_$15268_$returns$_t_uint16_$",
                                  "typeString": "function (Number) pure returns (uint16)"
                                }
                              },
                              "id": 85978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1715:25:173",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">>",
                            "rightExpression": {
                              "hexValue": "38",
                              "id": 85979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1744:1:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_8_by_1",
                                "typeString": "int_const 8"
                              },
                              "value": "8"
                            },
                            "src": "1715:30:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "id": 85974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1709:5:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 85973,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "1709:5:173",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1709:37:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 85982,
                        "name": "mantissa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85957,
                        "src": "1748:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85972,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18496,
                      "src": "1700:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 85983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1700:57:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85984,
                  "nodeType": "ExpressionStatement",
                  "src": "1700:57:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 85990,
                                "name": "compressed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85966,
                                "src": "1796:10:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Number_$15268",
                                  "typeString": "Number"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Number_$15268",
                                  "typeString": "Number"
                                }
                              ],
                              "expression": {
                                "id": 85988,
                                "name": "Number",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15268,
                                "src": "1782:6:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_userDefinedValueType$_Number_$15268_$",
                                  "typeString": "type(Number)"
                                }
                              },
                              "id": 85989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1789:6:173",
                              "memberName": "unwrap",
                              "nodeType": "MemberAccess",
                              "src": "1782:13:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Number_$15268_$returns$_t_uint16_$",
                                "typeString": "function (Number) pure returns (uint16)"
                              }
                            },
                            "id": 85991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1782:25:173",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "id": 85987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1776:5:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 85986,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "1776:5:173",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1776:32:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 85993,
                        "name": "exponent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85959,
                        "src": "1810:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85985,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18496,
                      "src": "1767:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 85994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1767:52:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85995,
                  "nodeType": "ExpressionStatement",
                  "src": "1767:52:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 85999,
                            "name": "compressed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85966,
                            "src": "1860:10:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Number_$15268",
                              "typeString": "Number"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Number_$15268",
                              "typeString": "Number"
                            }
                          ],
                          "expression": {
                            "id": 85997,
                            "name": "libHarness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85831,
                            "src": "1838:10:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NumberHarness_$58016",
                              "typeString": "contract NumberHarness"
                            }
                          },
                          "id": 85998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1849:10:173",
                          "memberName": "decompress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58002,
                          "src": "1838:21:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_Number_$15268_$returns$_t_uint256_$",
                            "typeString": "function (Number) pure external returns (uint256)"
                          }
                        },
                        "id": 86000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1838:33:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86001,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85961,
                        "src": "1873:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85996,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19996,
                        20021,
                        20034,
                        20050,
                        20092,
                        20134,
                        20176,
                        20213,
                        20250,
                        20287,
                        18302,
                        18327,
                        18357,
                        18382,
                        18441,
                        18466,
                        18496,
                        18521,
                        19621,
                        19656
                      ],
                      "referencedDeclaration": 18496,
                      "src": "1829:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 86002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1829:50:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86003,
                  "nodeType": "ExpressionStatement",
                  "src": "1829:50:173"
                }
              ]
            },
            "functionSelector": "34091ef5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "check_decompress",
            "nameLocation": "1559:16:173",
            "parameters": {
              "id": 85962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85957,
                  "mutability": "mutable",
                  "name": "mantissa",
                  "nameLocation": "1584:8:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 86005,
                  "src": "1576:16:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1576:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85959,
                  "mutability": "mutable",
                  "name": "exponent",
                  "nameLocation": "1602:8:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 86005,
                  "src": "1594:16:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85958,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1594:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85961,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1620:5:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 86005,
                  "src": "1612:13:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1612:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1575:51:173"
            },
            "returnParameters": {
              "id": 85963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1634:0:173"
            },
            "scope": 86057,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86056,
            "nodeType": "FunctionDefinition",
            "src": "1892:423:173",
            "nodes": [],
            "body": {
              "id": 86055,
              "nodeType": "Block",
              "src": "1947:368:173",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86011
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86011,
                      "mutability": "mutable",
                      "name": "msb",
                      "nameLocation": "1965:3:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 86055,
                      "src": "1957:11:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86010,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1957:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86016,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86014,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86007,
                        "src": "2001:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 86012,
                        "name": "libHarness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85831,
                        "src": "1971:10:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NumberHarness_$58016",
                          "typeString": "contract NumberHarness"
                        }
                      },
                      "id": 86013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1982:18:173",
                      "memberName": "mostSignificantBit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58015,
                      "src": "1971:29:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure external returns (uint256)"
                      }
                    },
                    "id": 86015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1971:36:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1957:50:173"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 86019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 86017,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86007,
                      "src": "2021:5:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 86018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2030:1:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2021:10:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 86053,
                    "nodeType": "Block",
                    "src": "2080:229:173",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 86027,
                              "name": "msb",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86011,
                              "src": "2157:3:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "323535",
                              "id": 86028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2162:3:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_255_by_1",
                                "typeString": "int_const 255"
                              },
                              "value": "255"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_255_by_1",
                                "typeString": "int_const 255"
                              }
                            ],
                            "id": 86026,
                            "name": "assertLe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19377,
                              19402,
                              19432,
                              19457
                            ],
                            "referencedDeclaration": 19377,
                            "src": "2148:8:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 86029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2148:18:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86030,
                        "nodeType": "ExpressionStatement",
                        "src": "2148:18:173"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 86034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32",
                                "id": 86032,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2189:1:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "id": 86033,
                                "name": "msb",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86011,
                                "src": "2194:3:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2189:8:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 86035,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86007,
                              "src": "2199:5:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 86031,
                            "name": "assertLe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19377,
                              19402,
                              19432,
                              19457
                            ],
                            "referencedDeclaration": 19377,
                            "src": "2180:8:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 86036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2180:25:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86037,
                        "nodeType": "ExpressionStatement",
                        "src": "2180:25:173"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 86040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 86038,
                            "name": "msb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86011,
                            "src": "2223:3:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "323535",
                            "id": 86039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2230:3:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_255_by_1",
                              "typeString": "int_const 255"
                            },
                            "value": "255"
                          },
                          "src": "2223:10:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 86052,
                        "nodeType": "IfStatement",
                        "src": "2219:80:173",
                        "trueBody": {
                          "id": 86051,
                          "nodeType": "Block",
                          "src": "2235:64:173",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 86047,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32",
                                      "id": 86042,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2262:1:173",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 86045,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 86043,
                                            "name": "msb",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 86011,
                                            "src": "2268:3:173",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "+",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 86044,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2274:1:173",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "2268:7:173",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 86046,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "2267:9:173",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2262:14:173",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 86048,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86007,
                                    "src": "2278:5:173",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 86041,
                                  "name": "assertGt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    18675,
                                    18700,
                                    18730,
                                    18755
                                  ],
                                  "referencedDeclaration": 18675,
                                  "src": "2253:8:173",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 86049,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2253:31:173",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 86050,
                              "nodeType": "ExpressionStatement",
                              "src": "2253:31:173"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 86054,
                  "nodeType": "IfStatement",
                  "src": "2017:292:173",
                  "trueBody": {
                    "id": 86025,
                    "nodeType": "Block",
                    "src": "2033:41:173",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 86021,
                              "name": "msb",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86011,
                              "src": "2056:3:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 86022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2061:1:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 86020,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19996,
                              20021,
                              20034,
                              20050,
                              20092,
                              20134,
                              20176,
                              20213,
                              20250,
                              20287,
                              18302,
                              18327,
                              18357,
                              18382,
                              18441,
                              18466,
                              18496,
                              18521,
                              19621,
                              19656
                            ],
                            "referencedDeclaration": 18496,
                            "src": "2047:8:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 86023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2047:16:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86024,
                        "nodeType": "ExpressionStatement",
                        "src": "2047:16:173"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "abe95b36",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_mostSignificantBit",
            "nameLocation": "1901:23:173",
            "parameters": {
              "id": 86008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86007,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1933:5:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 86056,
                  "src": "1925:13:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1925:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1924:15:173"
            },
            "returnParameters": {
              "id": 86009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1947:0:173"
            },
            "scope": 86057,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 85827,
              "name": "SynapseLibraryTest",
              "nameLocations": [
                "292:18:173"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 91481,
              "src": "292:18:173"
            },
            "id": 85828,
            "nodeType": "InheritanceSpecifier",
            "src": "292:18:173"
          }
        ],
        "canonicalName": "NumberLibraryTest",
        "contractDependencies": [
          58016
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          86057,
          91481,
          93143,
          28782,
          19828,
          19825,
          28733,
          24532,
          24242,
          23563,
          21991,
          21279,
          19768,
          92974
        ],
        "name": "NumberLibraryTest",
        "nameLocation": "271:17:173",
        "scope": 86058,
        "usedErrors": [
          10326,
          10328,
          10330,
          10332
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 173
}