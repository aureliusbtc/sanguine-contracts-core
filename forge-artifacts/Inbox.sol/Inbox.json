{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AgentNotActive",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AgentNotActiveNorUnstaking",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AgentNotGuard",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AgentNotNotary",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AgentUnknown",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CallerNotDestination",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectAgentDomain",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectSnapshotProof",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectSnapshotRoot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectTipsProof",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectVersionLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IndexOutOfRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IndexedTooMuch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MustBeSynapseDomain",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OccupiedMemory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PrecompileOutOfGas",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TreeHeightTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnallocatedMemory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnformattedAttestation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnformattedReceipt",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnformattedSnapshot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnformattedState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ViewOverrun",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "notary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "name": "AttestationAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidAttestation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "arPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "arSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidAttestationReport",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "rcptPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "rcptSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidReceipt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "rrPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "rrSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidReceiptReport",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "srPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "srSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidStateReport",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "statePayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidStateWithAttestation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "snapSignature",
          "type": "bytes"
        }
      ],
      "name": "InvalidStateWithSnapshot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "notary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "rcptPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "rcptSignature",
          "type": "bytes"
        }
      ],
      "name": "ReceiptAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "domain",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "snapSignature",
          "type": "bytes"
        }
      ],
      "name": "SnapshotAccepted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "agentManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "destination",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getGuardReport",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "statementPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "reportSignature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReportsAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getStoredSignature",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agentManager_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destination_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "summit_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "localDomain",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "allowFailure",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct MultiCallable.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "returnData",
              "type": "bytes"
            }
          ],
          "internalType": "struct MultiCallable.Result[]",
          "name": "callResults",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "origin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "attNotaryIndex",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "attNonce",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "paddedTips",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "rcptPayload",
          "type": "bytes"
        }
      ],
      "name": "passReceipt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "wasAccepted",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "rcptPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "rcptSignature",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "paddedTips",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "headerHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "bodyHash",
          "type": "bytes32"
        }
      ],
      "name": "submitReceipt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "wasAccepted",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "rcptPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "rcptSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "rrSignature",
          "type": "bytes"
        }
      ],
      "name": "submitReceiptReport",
      "outputs": [
        {
          "internalType": "bool",
          "name": "wasAccepted",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "snapSignature",
          "type": "bytes"
        }
      ],
      "name": "submitSnapshot",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "agentRoot_",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "snapGas",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "srSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "name": "submitStateReportWithAttestation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "wasAccepted",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "srSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "snapSignature",
          "type": "bytes"
        }
      ],
      "name": "submitStateReportWithSnapshot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "wasAccepted",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "statePayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "srSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes32[]",
          "name": "snapProof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "name": "submitStateReportWithSnapshotProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "wasAccepted",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "summit",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "name": "verifyAttestation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidAttestation",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "arSignature",
          "type": "bytes"
        }
      ],
      "name": "verifyAttestationReport",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidReport",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "rcptPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "rcptSignature",
          "type": "bytes"
        }
      ],
      "name": "verifyReceipt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidReceipt",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "rcptPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "rrSignature",
          "type": "bytes"
        }
      ],
      "name": "verifyReceiptReport",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidReport",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "statePayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "srSignature",
          "type": "bytes"
        }
      ],
      "name": "verifyStateReport",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidReport",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "name": "verifyStateWithAttestation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidState",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "snapPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "snapSignature",
          "type": "bytes"
        }
      ],
      "name": "verifyStateWithSnapshot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidState",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stateIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "statePayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes32[]",
          "name": "snapProof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "attPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attSignature",
          "type": "bytes"
        }
      ],
      "name": "verifyStateWithSnapshotProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidState",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "versionString",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b506040516200421a3803806200421a83398101604081905262000034916200009d565b60408051808201909152600580825264302e302e3360d81b602083015260805281816200006181620000cc565b60a0525063ffffffff90811660c05282166103851490506200009657604051632b3a807f60e01b815260040160405180910390fd5b50620000f4565b600060208284031215620000b057600080fd5b815163ffffffff81168114620000c557600080fd5b9392505050565b80516020808301519190811015620000ee576000198160200360031b1b821691505b50919050565b60805160a05160c0516140e8620001326000396000818161039501528181611e770152611eae015260006102ac0152600061028901526140e86000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80637be8e73811610104578063b269681d116100a2578063ddeffa6611610071578063ddeffa6614610470578063dfe3967514610483578063f2fde38b14610496578063f8c8765e146104a957600080fd5b8063b269681d14610416578063b2a4b45514610429578063c25aa5851461043c578063c495912b1461044f57600080fd5b80638da5cb5b116100de5780638da5cb5b146103cc57806391af2e5d146103dd578063938b5f32146103f05780639fbcb9cb1461040357600080fd5b80637be8e7381461036a578063892465031461037d5780638d3638f41461039057600080fd5b806354fd4d50116101715780636b47b3bc1161014b5780636b47b3bc14610311578063715018a614610324578063756ed01d1461032e5780637622f78d1461033f57600080fd5b806354fd4d501461027d57806360fc8466146102de57806362389709146102fe57600080fd5b8063200f6b66116101ad578063200f6b6614610222578063213a6ddb1461023557806331e8df5a146102485780634bb73ea51461025b57600080fd5b80630b6b985c146101d45780630ca77473146101fc5780630db27e771461020f575b600080fd5b6101e76101e2366004613324565b6104bc565b60405190151581526020015b60405180910390f35b6101e761020a3660046133da565b6105ee565b6101e761021d3660046134b1565b61073a565b6101e761023036600461358a565b6107a8565b6101e761024336600461361b565b61094f565b6101e76102563660046133da565b610aad565b61026e6102693660046133da565b610b7f565b6040516101f3939291906136d7565b604080518082019091527f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201525b6040516101f39190613733565b6102f16102ec366004613746565b610e20565b6040516101f391906137ba565b6101e761030c36600461358a565b610f68565b6101e761031f366004613834565b61105a565b61032c611110565b005b609b546040519081526020016101f3565b609754610352906001600160a01b031681565b6040516001600160a01b0390911681526020016101f3565b6101e7610378366004613893565b611171565b6101e761038b3660046138f7565b6112de565b6103b77f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101f3565b6033546001600160a01b0316610352565b6101e76103eb3660046133da565b6113a9565b609854610352906001600160a01b031681565b60c954610352906001600160a01b031681565b609954610352906001600160a01b031681565b6101e7610437366004613945565b61147b565b6101e761044a3660046133da565b611740565b61046261045d3660046139c3565b611811565b6040516101f39291906139dc565b6102d161047e3660046139c3565b6119bd565b6101e76104913660046133da565b611a6c565b61032c6104a4366004613a18565b611b3e565b61032c6104b7366004613a33565b611c09565b6000806104c885611ca0565b905060006104d68289611cb9565b905060006104e48289611d1e565b5090506104f081611d82565b60006104fb87611db5565b905060006105098288611dc8565b50905061051581611e21565b6105228160200151611e75565b61052b82611ef7565b61053486611f08565b14610552576040516312a37cf560e11b815260040160405180910390fd5b61056961056385611fe0565b611fe0565b8b612016565b609754604084810151838201519151632885570d60e21b815263ffffffff9182166004820152911660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b1580156105c557600080fd5b505af11580156105d9573d6000803e3d6000fd5b5060019e9d5050505050505050505050505050565b6000806105fa84611db5565b90506000806106098386611dc8565b9150915061061682611e21565b60c954604051634362fd1160e01b81526001600160a01b0390911690634362fd1190610646908990600401613733565b602060405180830381865afa158015610663573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106879190613a87565b935083610731577f5ce497fe75d0d52e5ee139d2cd651d0ff00692a94d7052cb37faef5592d74b2b86866040516106bf9291906139dc565b60405180910390a16097546020830151604051631429d07360e11b81526001600160a01b0390921691632853a0e6916106fe9185903390600401613aa9565b600060405180830381600087803b15801561071857600080fd5b505af115801561072c573d6000803e3d6000fd5b505050505b50505092915050565b600080610746876120b0565b905060006107548288611d1e565b50905061076081611d82565b600061076b86611db5565b905060006107798287611dc8565b50905061078581611e21565b6107928160200151611e75565b61079e828c868b6120be565b6105698a8a612016565b6000806107b484611db5565b90506000806107c38386611dc8565b915091506107d082611e21565b60006107db88611ca0565b90506107e684611ef7565b6107ef82611f08565b1461080d576040516312a37cf560e11b815260040160405180910390fd5b600061082261055e61081f848d611cb9565b90565b60985460405163a9dcf22d60e01b81529192506001600160a01b03169063a9dcf22d90610853908490600401613733565b602060405180830381865afa158015610870573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108949190613a87565b955085610942577f541491c63a99c21d0612ba7b3c4d90f7662f54a123363e65fae5c51e34e8a4928a828a8a6040516108d09493929190613ad0565b60405180910390a16097546020850151604051631429d07360e11b81526001600160a01b0390921691632853a0e69161090f9187903390600401613aa9565b600060405180830381600087803b15801561092957600080fd5b505af115801561093d573d6000803e3d6000fd5b505050505b5050505050949350505050565b60008061095b84611ca0565b905060008061096c8386600061214e565b9150915061097982611e21565b6098546001600160a01b031663a9dcf22d61099a61055e61081f878c611cb9565b6040518263ffffffff1660e01b81526004016109b69190613733565b602060405180830381865afa1580156109d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f79190613a87565b935083610aa3577f8ec8481d2e38a1ffe2c6ec35459332dc9e6248b1219d287dfa4143a68a75bbd1878787604051610a3193929190613b0f565b60405180910390a16097546020830151604051631429d07360e11b81526001600160a01b0390921691632853a0e691610a709185903390600401613aa9565b600060405180830381600087803b158015610a8a57600080fd5b505af1158015610a9e573d6000803e3d6000fd5b505050505b5050509392505050565b600080610ab984611db5565b9050600080610ac883866121bd565b91509150610ad582611e21565b60c954604051634362fd1160e01b81526001600160a01b0390911690634362fd1190610b05908990600401613733565b602060405180830381865afa158015610b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b469190613a87565b15935083610731577f6f83f9b71f5c687c7dd205d520001d4e5adc1f16e4e2ee5b798c720d643e5a9e86866040516106bf9291906139dc565b6060600060606000610b9086611ca0565b9050600080610ba18388600061214e565b91509150610bae82611d82565b6000610bb9886121e6565b9050826020015163ffffffff16600003610c3b5760c9546040808501519051639cc1bb3160e01b81526001600160a01b0390921691639cc1bb3191610c049185908e90600401613b44565b600060405180830381600087803b158015610c1e57600080fd5b505af1158015610c32573d6000803e3d6000fd5b50505050610dc7565b609760009054906101000a90046001600160a01b03166001600160a01b03166336cba43c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb29190613b69565b60c9546040808601519051623cd01560e21b81529298506001600160a01b039091169162f3405491610cec9185908b908f90600401613b82565b6000604051808303816000875af1158015610d0b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d339190810190613bad565b96506000610d4085612229565b6099546040808701519051631cff139b60e11b81529293506001600160a01b03909116916339fe273691610d8091600019908d908d908890600401613c1a565b6020604051808303816000875af1158015610d9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc39190613a87565b5094505b816001600160a01b0316836020015163ffffffff167f5ca3d740e03650b41813a4b418830f6ba39700ae010fe8c4d1bca0e8676b9c568b8b604051610e0d9291906139dc565b60405180910390a3505050509250925092565b606081806001600160401b03811115610e3b57610e3b613261565b604051908082528060200260200182016040528015610e8157816020015b604080518082019091526000815260606020820152815260200190600190039081610e595790505b5091503660005b8281101561073157858582818110610ea257610ea2613c93565b9050602002810190610eb49190613ca9565b91506000848281518110610eca57610eca613c93565b60200260200101519050306001600160a01b0316838060200190610eee9190613cc9565b604051610efc929190613d0f565b600060405180830381855af49150503d8060008114610f37576040519150601f19603f3d011682016040523d82523d6000602084013e610f3c565b606091505b5060208301521515808252833517610f5f576309ad446560e31b60005260046000fd5b50600101610e88565b600080610f7484611ca0565b90506000610f848285600161214e565b509050610f9081611e21565b610f9d8160200151611e75565b6000610fa98389611cb9565b90506000610fb78289611d1e565b509050610fc381611d82565b610fd5610fcf83611fe0565b89612016565b609754604082810151858201519151632885570d60e21b815263ffffffff9182166004820152911660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b15801561103157600080fd5b505af1158015611045573d6000803e3d6000fd5b5050505060019450505050505b949350505050565b6099546000906001600160a01b0316331461108857604051636efcc49f60e01b815260040160405180910390fd5b60c95460405163c79a431b60e01b81526001600160a01b039091169063c79a431b906110c49088908190600019908a908a908a90600401613d1f565b6020604051808303816000875af11580156110e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111079190613a87565b95945050505050565b6033546001600160a01b0316331461116f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b565b60008061117d84611db5565b905060008061118c8386611dc8565b9150915061119982611e21565b60006111a4896120b0565b90506111b2848b838b6120be565b60985460405163a9dcf22d60e01b81526001600160a01b039091169063a9dcf22d906111e2908c90600401613733565b602060405180830381865afa1580156111ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112239190613a87565b9450846112d1577f541491c63a99c21d0612ba7b3c4d90f7662f54a123363e65fae5c51e34e8a4928a8a898960405161125f9493929190613ad0565b60405180910390a16097546020840151604051631429d07360e11b81526001600160a01b0390921691632853a0e69161129e9186903390600401613aa9565b600060405180830381600087803b1580156112b857600080fd5b505af11580156112cc573d6000803e3d6000fd5b505050505b5050505095945050505050565b6000806112ea8561230e565b905060006112f88285612321565b50905061130481611d82565b6000611310838761234a565b50905061131c81611e21565b6113268786612016565b609754604083810151838201519151632885570d60e21b815263ffffffff9182166004820152911660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b15801561138257600080fd5b505af1158015611396573d6000803e3d6000fd5b50505050600193505050505b9392505050565b6000806113b58461230e565b90506000806113c48386612321565b915091506113d182611e21565b60995460405163e2f006f760e01b81526001600160a01b039091169063e2f006f790611401908990600401613733565b602060405180830381865afa15801561141e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114429190613a87565b15935083610731577fa0cb383b7028fbeae86e018eb9fe765c15c869483a584edbb95bf5509344658786866040516106bf9291906139dc565b60006114856131ff565b60006114908861230e565b905061149c818861234a565b6001600160a01b031660208401528083526114b690611d82565b6099546001600160a01b0316634f1275676114d083612373565b6040518263ffffffff1660e01b81526004016114ee91815260200190565b602060405180830381865afa15801561150b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152f9190613d68565b63ffffffff166040830181905260000361155c576040516312a37cf560e11b815260040160405180910390fd5b6097546001600160a01b03166328f3fac961157683612382565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401606060405180830381865afa1580156115ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115de9190613d85565b60608301526115ec8161238f565b63ffffffff1682606001516020015163ffffffff161461161f57604051630b09697760e11b815260040160405180910390fd5b61163361162b826123a0565b8787876123af565b600061163e886121e6565b905060c960009054906101000a90046001600160a01b03166001600160a01b031663c79a431b8460000151604001518560600151604001518487604001518c8f6040518763ffffffff1660e01b815260040161169f96959493929190613d1f565b6020604051808303816000875af11580156116be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e29190613a87565b93508315611734577f9377955fede38ca63bc09f7b3fae7dd349934c78c058963a6d3c05d4eed0411283600001516020015184602001518b8b60405161172b9493929190613dfa565b60405180910390a15b50505095945050505050565b60008061174c8461230e565b905060008061175b838661234a565b9150915061176882611e21565b60995460405163e2f006f760e01b81526001600160a01b039091169063e2f006f790611798908990600401613733565b602060405180830381865afa1580156117b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d99190613a87565b935083610731577f4d4c3a87f0d5fbcea3c51d5baa727fceedb200dd7c9287f7ef85b60b794d6a8d86866040516106bf9291906139dc565b609b546060908190831061183857604051631390f2a160e01b815260040160405180910390fd5b6000609b848154811061184d5761184d613c93565b90600052602060002090600202016040518060400160405290816000820154815260200160018201805461188090613e3c565b80601f01602080910402602001604051908101604052809291908181526020018280546118ac90613e3c565b80156118f95780601f106118ce576101008083540402835291602001916118f9565b820191906000526020600020905b8154815290600101906020018083116118dc57829003601f168201915b505050505081525050905080602001519250609a81600001518154811061192257611922613c93565b90600052602060002001805461193790613e3c565b80601f016020809104026020016040519081016040528092919081815260200182805461196390613e3c565b80156119b05780601f10611985576101008083540402835291602001916119b0565b820191906000526020600020905b81548152906001019060200180831161199357829003601f168201915b5050505050915050915091565b6060609a82815481106119d2576119d2613c93565b9060005260206000200180546119e790613e3c565b80601f0160208091040260200160405190810160405280929190818152602001828054611a1390613e3c565b8015611a605780601f10611a3557610100808354040283529160200191611a60565b820191906000526020600020905b815481529060010190602001808311611a4357829003601f168201915b50505050509050919050565b600080611a78846120b0565b9050600080611a878386611d1e565b91509150611a9482611e21565b60985460405163a9dcf22d60e01b81526001600160a01b039091169063a9dcf22d90611ac4908990600401613733565b602060405180830381865afa158015611ae1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b059190613a87565b15935083610731577f9b0db5e74572fe0188dcef5afafe498161864c5706c3003c98ee506ae5c0282d86866040516106bf9291906139dc565b6033546001600160a01b03163314611b985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611166565b6001600160a01b038116611bfd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401611166565b611c06816123f5565b50565b6000611c156001612447565b90508015611c2d576000805461ff0019166101001790555b611c388585856124d4565b60c980546001600160a01b0319166001600160a01b0384161790558015611c99576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6000611cb3611cae83612545565b612558565b92915050565b60008281611cc9600c6032613e86565b611cd39085613e99565b90506001600160801b0382168110611cfe57604051631390f2a160e01b815260040160405180910390fd5b611107611d1982611d11600c6032613e86565b859190612584565b6125dc565b6040805160608101825260008082526020820181905291810182905290611d4d611d4785612604565b84612632565b6020820151919350915063ffffffff1615611d7b576040516370488f8b60e01b815260040160405180910390fd5b9250929050565b600181516005811115611d9757611d97613eb0565b14611c0657604051632437e77160e11b815260040160405180910390fd5b6000611cb3611dc383612545565b612738565b6040805160608101825260008082526020820181905291810182905290611df1611d4785612760565b6020820151919350915063ffffffff16600003611d7b576040516354cc70e560e11b815260040160405180910390fd5b600181516005811115611e3657611e36613eb0565b14158015611e575750600281516005811115611e5457611e54613eb0565b14155b15611c065760405163ec3d0d8560e01b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff1614158015611ed957507f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661038514155b15611c0657604051630b09697760e11b815260040160405180910390fd5b6000611cb3816020845b919061278c565b600080611f1483612821565b90506000816001600160401b03811115611f3057611f30613261565b604051908082528060200260200182016040528015611f59578160200160208202803683370190505b50905060005b82811015611fa657611f79611f748683611cb9565b612842565b828281518110611f8b57611f8b613c93565b6020908102919091010152611f9f81613ec6565b9050611f5f565b50611fbc81611fb760016006613edf565b612881565b80600081518110611fcf57611fcf613c93565b602002602001015192505050919050565b60405180611ff1836020830161295b565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b6000612021826121e6565b6040805180820190915281815260208101858152609b8054600181018255600091909152825160029091027fbba9db4cdbea0a37c207bbb83e20f828cd4441c49891101dc94fd20dc8efc3498101918255915193945091927fbba9db4cdbea0a37c207bbb83e20f828cd4441c49891101dc94fd20dc8efc34a909101906120a89082613f38565b505050505050565b6000611cb3611d1983612545565b60006120c9836129d0565b91505080826000815181106120e0576120e0613c93565b602002602001015114612106576040516339bbd1f360e21b815260040160405180910390fd5b600061212461211485611ef7565b61211d866129ff565b8588612a0e565b90508061213087611ef7565b146120a8576040516312a37cf560e11b815260040160405180910390fd5b604080516060810182526000808252602082018190529181018290529061217d61217786612a51565b85612632565b90925090508280156121975750602082015163ffffffff16155b156121b5576040516354cc70e560e11b815260040160405180910390fd5b935093915050565b6040805160608101825260008082526020820181905291810182905290611d4d611d4785612a7d565b609a80546001810182556000919091527f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be481016122238382613f38565b50919050565b6060600061223683612821565b9050806001600160401b0381111561225057612250613261565b604051908082528060200260200182016040528015612279578160200160208202803683370190505b50915060005b818110156123075760006122938583611cb9565b90506122cc6122a182612aa9565b6122aa836129ff565b63ffffffff1660209190911b6fffffffffffffffffffffffff00000000161790565b8483815181106122de576122de613c93565b6001600160801b03909216602092830291909101909101525061230081613ec6565b905061227f565b5050919050565b6000611cb361231c83612545565b612abb565b6040805160608101825260008082526020820181905291810182905290611d4d611d4785612ae3565b6040805160608101825260008082526020820181905291810182905290611df1611d4785612b0f565b6000611cb36028602084611f01565b6000611cb3826049612b3b565b6000611cb3600480845b9190612b45565b6000611cb36008602084611f01565b6000839050846123d7846123d26123cc8560009081526020902090565b86612b66565b612b66565b14611c99576040516335a072f760e21b815260040160405180910390fd5b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff161561248e578160ff16600114801561246a5750303b155b6124865760405162461bcd60e51b815260040161116690613ff7565b506000919050565b60005460ff8084169116106124b55760405162461bcd60e51b815260040161116690613ff7565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166124fb5760405162461bcd60e51b815260040161116690614045565b609780546001600160a01b038086166001600160a01b031992831617909255609880548584169083161790556099805492841692909116919091179055612540612bb2565b505050565b8051600090602083016110528183612be1565b600061256382612c2b565b61258057604051635cb1e1ad60e11b815260040160405180910390fd5b5090565b6000806125918560801c90565b905061259c85612c78565b836125a78684613e86565b6125b19190613e86565b11156125d05760405163a3b99ded60e01b815260040160405180910390fd5b61110784820184612be1565b60006125e782612c95565b61258057604051631ae8107160e21b815260040160405180910390fd5b6000611cb37f43713cd927f8eb63b519f3b180bd5f3708ebbe93666be9ba4b9624b7bc57e663835b90612cb5565b60408051606081018252600080825260208201819052918101919091526000806126a9856040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b90506126b58185612cf2565b6097546040516328f3fac960e01b81526001600160a01b0380841660048301529294509116906328f3fac990602401606060405180830381865afa158015612701573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127259190613d85565b925061273083612d16565b509250929050565b600061274382612d49565b61258057604051633ae4998b60e21b815260040160405180910390fd5b6000611cb37f3464bf887f210604c594030208052a323ac6628785466262d7524176912016418361262c565b60008160000361279e575060006113a2565b60208211156127c05760405163063af09560e31b815260040160405180910390fd5b6001600160801b0384166127d48385613e86565b11156127f35760405163a3b99ded60e01b815260040160405180910390fd5b600382901b60006128048660801c90565b90940151600160ff1b600019929092019190911d16949350505050565b600061282f600c6032613e86565b611cb3906001600160801b038416614090565b6000806000612850846129d0565b6040805160208082019490945280820192909252805180830382018152606090920190528051910120949350505050565b81516001821b8111156128a75760405163c5360feb60e01b815260040160405180910390fd5b60005b828110156129555760005b8281101561294657600081600101905060008683815181106128d9576128d9613c93565b6020026020010151905060008583106128f357600061290e565b87838151811061290557612905613c93565b60200260200101515b905061291a8282612b66565b88600186901c8151811061293057612930613c93565b60209081029190910101525050506002016128b5565b506001918201821c91016128aa565b50505050565b6040516000906001600160801b03841690608085901c9080851015612993576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa9050806129bd57604051637c7d772f60e01b815260040160405180910390fd5b608086901b84175b979650505050505050565b600080826129e76129e2826024612d5c565b612d69565b92506129f76129e2826024612d8b565b915050915091565b6000611cb36020600484612399565b6000600182901b60408110612a3657604051631390f2a160e01b815260040160405180910390fd5b6000612a428787612dcf565b90506129c58282876006612dfa565b6000611cb37ff304ae6578b1582b0b5b512e0a7070d6f76973b1f360f99dd500082d3bc948778361262c565b6000611cb37fccfadb9c399e4e4257b6d0c3f92e1f9a9c00b1802b55a2f7d511702faa7690908361262c565b6000611cb361081f6032600c85612399565b6000612ac682612e89565b61258057604051631dad384f60e21b815260040160405180910390fd5b6000611cb37fdf42b2c0137811ba604f5c79e20c4d6b94770aa819cc524eca444056544f8ab78361262c565b6000611cb37fb38669e8ca41a27fcd85729b868e8ab047d0f142073a017213e58f0a91e88ef38361262c565b60006113a2838360145b600080612b5385858561278c565b602084900360031b1c9150509392505050565b600082158015612b74575081155b15612b8157506000611cb3565b6040805160208101859052908101839052606001604051602081830303815290604052805190602001209050611cb3565b600054610100900460ff16612bd95760405162461bcd60e51b815260040161116690614045565b61116f612e9c565b600080612bee8385613e86565b9050604051811115612bfe575060005b80600003612c1f5760405163085f79c360e11b815260040160405180910390fd5b608084901b8317611052565b60006001600160801b03821681612c44600c6032613e86565b612c4e9083614090565b905081612c5d600c6032613e86565b612c679083613e99565b148015611052575061105281612ecc565b60006001600160801b038216612c8e8360801c90565b0192915050565b6000612ca3600c6032613e86565b6001600160801b0383165b1492915050565b600081612cc184612d69565b6040805160208101939093528201526060015b60405160208183030381529060405280519060200120905092915050565b6000806000612d018585612ef1565b91509150612d0e81612f33565b509392505050565b600081516005811115612d2b57612d2b613eb0565b03611c065760405163dc449cb760e01b815260040160405180910390fd5b6000604e6001600160801b038316612cae565b60006113a2838284612584565b600080612d768360801c90565b6001600160801b039390931690922092915050565b60006001600160801b03831680831115612db85760405163a3b99ded60e01b815260040160405180910390fd5b61105283612dc68660801c90565b01848303612be1565b60008282604051602001612cd492919091825260e01b6001600160e01b031916602082015260240190565b815160009082811115612e205760405163c5360feb60e01b815260040160405180910390fd5b84915060005b81811015612e5d57612e5383868381518110612e4457612e44613c93565b602002602001015189846130e9565b9250600101612e26565b50805b83811015612e7f57612e7583600089846130e9565b9250600101612e60565b5050949350505050565b600060856001600160801b038316612cae565b600054610100900460ff16612ec35760405162461bcd60e51b815260040161116690614045565b61116f336123f5565b60008115801590611cb35750612ee460016006613edf565b6001901b82111592915050565b6000808251604103612f275760208301516040840151606085015160001a612f1b87828585613112565b94509450505050611d7b565b50600090506002611d7b565b6000816004811115612f4757612f47613eb0565b03612f4f5750565b6001816004811115612f6357612f63613eb0565b03612fb05760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401611166565b6002816004811115612fc457612fc4613eb0565b036130115760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401611166565b600381600481111561302557613025613eb0565b0361307d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401611166565b600481600481111561309157613091613eb0565b03611c065760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401611166565b6000600183831c168103613108576131018585612b66565b9050611052565b6131018486612b66565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561314957506000905060036131f6565b8460ff16601b1415801561316157508460ff16601c14155b1561317257506000905060046131f6565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156131c6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166131ef576000600192509250506131f6565b9150600090505b94509492505050565b6040805160e0810190915260006080820181815260a0830182905260c083019190915281908152600060208201819052604082015260600161325c6040805160608101909152806000815260006020820181905260409091015290565b905290565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561329f5761329f613261565b604052919050565b60006001600160401b038211156132c0576132c0613261565b50601f01601f191660200190565b600082601f8301126132df57600080fd5b81356132f26132ed826132a7565b613277565b81815284602083860101111561330757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561333c57600080fd5b8535945060208601356001600160401b038082111561335a57600080fd5b61336689838a016132ce565b9550604088013591508082111561337c57600080fd5b61338889838a016132ce565b9450606088013591508082111561339e57600080fd5b6133aa89838a016132ce565b935060808801359150808211156133c057600080fd5b506133cd888289016132ce565b9150509295509295909350565b600080604083850312156133ed57600080fd5b82356001600160401b038082111561340457600080fd5b613410868387016132ce565b9350602085013591508082111561342657600080fd5b50613433858286016132ce565b9150509250929050565b600082601f83011261344e57600080fd5b813560206001600160401b0382111561346957613469613261565b8160051b613478828201613277565b928352848101820192828101908785111561349257600080fd5b83870192505b848310156129c557823582529183019190830190613498565b60008060008060008060c087890312156134ca57600080fd5b8635955060208701356001600160401b03808211156134e857600080fd5b6134f48a838b016132ce565b9650604089013591508082111561350a57600080fd5b6135168a838b016132ce565b9550606089013591508082111561352c57600080fd5b6135388a838b0161343d565b9450608089013591508082111561354e57600080fd5b61355a8a838b016132ce565b935060a089013591508082111561357057600080fd5b5061357d89828a016132ce565b9150509295509295509295565b600080600080608085870312156135a057600080fd5b8435935060208501356001600160401b03808211156135be57600080fd5b6135ca888389016132ce565b945060408701359150808211156135e057600080fd5b6135ec888389016132ce565b9350606087013591508082111561360257600080fd5b5061360f878288016132ce565b91505092959194509250565b60008060006060848603121561363057600080fd5b8335925060208401356001600160401b038082111561364e57600080fd5b61365a878388016132ce565b9350604086013591508082111561367057600080fd5b5061367d868287016132ce565b9150509250925092565b60005b838110156136a257818101518382015260200161368a565b50506000910152565b600081518084526136c3816020860160208601613687565b601f01601f19169290920160200192915050565b6060815260006136ea60608301866136ab565b6020838101869052838203604085015284518083528582019282019060005b8181101561372557845183529383019391830191600101613709565b509098975050505050505050565b6020815260006113a260208301846136ab565b6000806020838503121561375957600080fd5b82356001600160401b038082111561377057600080fd5b818501915085601f83011261378457600080fd5b81358181111561379357600080fd5b8660208260051b85010111156137a857600080fd5b60209290920196919550909350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561372557888303603f19018552815180511515845287015187840187905261380f878501826136ab565b95880195935050908601906001016137e1565b63ffffffff81168114611c0657600080fd5b6000806000806080858703121561384a57600080fd5b843561385581613822565b9350602085013561386581613822565b92506040850135915060608501356001600160401b0381111561388757600080fd5b61360f878288016132ce565b600080600080600060a086880312156138ab57600080fd5b8535945060208601356001600160401b03808211156138c957600080fd5b6138d589838a016132ce565b955060408801359150808211156138eb57600080fd5b61338889838a0161343d565b60008060006060848603121561390c57600080fd5b83356001600160401b038082111561392357600080fd5b61392f878388016132ce565b9450602086013591508082111561364e57600080fd5b600080600080600060a0868803121561395d57600080fd5b85356001600160401b038082111561397457600080fd5b61398089838a016132ce565b9650602088013591508082111561399657600080fd5b506139a3888289016132ce565b959895975050505060408401359360608101359360809091013592509050565b6000602082840312156139d557600080fd5b5035919050565b6040815260006139ef60408301856136ab565b828103602084015261110781856136ab565b80356001600160a01b03811681146124cf57600080fd5b600060208284031215613a2a57600080fd5b6113a282613a01565b60008060008060808587031215613a4957600080fd5b613a5285613a01565b9350613a6060208601613a01565b9250613a6e60408601613a01565b9150613a7c60608601613a01565b905092959194509250565b600060208284031215613a9957600080fd5b815180151581146113a257600080fd5b63ffffffff9390931683526001600160a01b03918216602084015216604082015260600190565b848152608060208201526000613ae960808301866136ab565b8281036040840152613afb81866136ab565b905082810360608401526129c581856136ab565b838152606060208201526000613b2860608301856136ab565b8281036040840152613b3a81856136ab565b9695505050505050565b63ffffffff8416815282602082015260606040820152600061110760608301846136ab565b600060208284031215613b7b57600080fd5b5051919050565b63ffffffff85168152836020820152826040820152608060608201526000613b3a60808301846136ab565b600060208284031215613bbf57600080fd5b81516001600160401b03811115613bd557600080fd5b8201601f81018413613be657600080fd5b8051613bf46132ed826132a7565b818152856020838501011115613c0957600080fd5b611107826020830160208601613687565b63ffffffff8616815260006020868184015260a06040840152613c4060a08401876136ab565b60608401869052838103608085015284518082528286019183019060005b81811015613c835783516001600160801b031683529284019291840191600101613c5e565b50909a9950505050505050505050565b634e487b7160e01b600052603260045260246000fd5b60008235603e19833603018112613cbf57600080fd5b9190910192915050565b6000808335601e19843603018112613ce057600080fd5b8301803591506001600160401b03821115613cfa57600080fd5b602001915036819003821315611d7b57600080fd5b8183823760009101908152919050565b600063ffffffff8089168352808816602084015286604084015280861660608401525083608083015260c060a0830152613d5c60c08301846136ab565b98975050505050505050565b600060208284031215613d7a57600080fd5b81516113a281613822565b600060608284031215613d9757600080fd5b604051606081018181106001600160401b0382111715613db957613db9613261565b604052825160068110613dcb57600080fd5b81526020830151613ddb81613822565b60208201526040830151613dee81613822565b60408201529392505050565b63ffffffff851681526001600160a01b0384166020820152608060408201819052600090613e2a908301856136ab565b82810360608401526129c581856136ab565b600181811c90821680613e5057607f821691505b60208210810361222357634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115611cb357611cb3613e70565b8082028115828204841417611cb357611cb3613e70565b634e487b7160e01b600052602160045260246000fd5b600060018201613ed857613ed8613e70565b5060010190565b81810381811115611cb357611cb3613e70565b601f82111561254057600081815260208120601f850160051c81016020861015613f195750805b601f850160051c820191505b818110156120a857828155600101613f25565b81516001600160401b03811115613f5157613f51613261565b613f6581613f5f8454613e3c565b84613ef2565b602080601f831160018114613f9a5760008415613f825750858301515b600019600386901b1c1916600185901b1785556120a8565b600085815260208120601f198616915b82811015613fc957888601518255948401946001909101908401613faa565b5085821015613fe75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000826140ad57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f28918c99354ca5da6f3a15221ff400e574f1d25899294bfc1a7b66c5aef250964736f6c63430008110033",
    "sourceMap": "2151:10587:27:-:0;;;3241:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1839:120:5;;;;;;;;;;;;;-1:-1:-1;;;1839:120:5;;;;1080:32:7;;3291:6:27;1839:120:5;1346:24:7;1360:8;1346:24;:::i;:::-;1338:32;;-1:-1:-1;1926:26:5::1;::::0;;::::1;;::::0;3313:24:27;::::1;3861:3:45;3313:24:27;::::0;-1:-1:-1;3309:58:27::1;;3346:21;;-1:-1:-1::0;;;3346:21:27::1;;;;;;;;;;;3309:58;3241:133:::0;2151:10587;;14:280:201;83:6;136:2;124:9;115:7;111:23;107:32;104:52;;;152:1;149;142:12;104:52;184:9;178:16;234:10;227:5;223:22;216:5;213:33;203:61;;260:1;257;250:12;203:61;283:5;14:280;-1:-1:-1;;;14:280:201:o;299:297::-;417:12;;464:4;453:16;;;447:23;;417:12;482:16;;479:111;;;576:1;572:6;562;556:4;552:17;549:1;545:25;541:38;534:5;530:50;521:59;;479:111;;299:297;;;:::o;:::-;2151:10587:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c80637be8e73811610104578063b269681d116100a2578063ddeffa6611610071578063ddeffa6614610470578063dfe3967514610483578063f2fde38b14610496578063f8c8765e146104a957600080fd5b8063b269681d14610416578063b2a4b45514610429578063c25aa5851461043c578063c495912b1461044f57600080fd5b80638da5cb5b116100de5780638da5cb5b146103cc57806391af2e5d146103dd578063938b5f32146103f05780639fbcb9cb1461040357600080fd5b80637be8e7381461036a578063892465031461037d5780638d3638f41461039057600080fd5b806354fd4d50116101715780636b47b3bc1161014b5780636b47b3bc14610311578063715018a614610324578063756ed01d1461032e5780637622f78d1461033f57600080fd5b806354fd4d501461027d57806360fc8466146102de57806362389709146102fe57600080fd5b8063200f6b66116101ad578063200f6b6614610222578063213a6ddb1461023557806331e8df5a146102485780634bb73ea51461025b57600080fd5b80630b6b985c146101d45780630ca77473146101fc5780630db27e771461020f575b600080fd5b6101e76101e2366004613324565b6104bc565b60405190151581526020015b60405180910390f35b6101e761020a3660046133da565b6105ee565b6101e761021d3660046134b1565b61073a565b6101e761023036600461358a565b6107a8565b6101e761024336600461361b565b61094f565b6101e76102563660046133da565b610aad565b61026e6102693660046133da565b610b7f565b6040516101f3939291906136d7565b604080518082019091527f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201525b6040516101f39190613733565b6102f16102ec366004613746565b610e20565b6040516101f391906137ba565b6101e761030c36600461358a565b610f68565b6101e761031f366004613834565b61105a565b61032c611110565b005b609b546040519081526020016101f3565b609754610352906001600160a01b031681565b6040516001600160a01b0390911681526020016101f3565b6101e7610378366004613893565b611171565b6101e761038b3660046138f7565b6112de565b6103b77f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101f3565b6033546001600160a01b0316610352565b6101e76103eb3660046133da565b6113a9565b609854610352906001600160a01b031681565b60c954610352906001600160a01b031681565b609954610352906001600160a01b031681565b6101e7610437366004613945565b61147b565b6101e761044a3660046133da565b611740565b61046261045d3660046139c3565b611811565b6040516101f39291906139dc565b6102d161047e3660046139c3565b6119bd565b6101e76104913660046133da565b611a6c565b61032c6104a4366004613a18565b611b3e565b61032c6104b7366004613a33565b611c09565b6000806104c885611ca0565b905060006104d68289611cb9565b905060006104e48289611d1e565b5090506104f081611d82565b60006104fb87611db5565b905060006105098288611dc8565b50905061051581611e21565b6105228160200151611e75565b61052b82611ef7565b61053486611f08565b14610552576040516312a37cf560e11b815260040160405180910390fd5b61056961056385611fe0565b611fe0565b8b612016565b609754604084810151838201519151632885570d60e21b815263ffffffff9182166004820152911660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b1580156105c557600080fd5b505af11580156105d9573d6000803e3d6000fd5b5060019e9d5050505050505050505050505050565b6000806105fa84611db5565b90506000806106098386611dc8565b9150915061061682611e21565b60c954604051634362fd1160e01b81526001600160a01b0390911690634362fd1190610646908990600401613733565b602060405180830381865afa158015610663573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106879190613a87565b935083610731577f5ce497fe75d0d52e5ee139d2cd651d0ff00692a94d7052cb37faef5592d74b2b86866040516106bf9291906139dc565b60405180910390a16097546020830151604051631429d07360e11b81526001600160a01b0390921691632853a0e6916106fe9185903390600401613aa9565b600060405180830381600087803b15801561071857600080fd5b505af115801561072c573d6000803e3d6000fd5b505050505b50505092915050565b600080610746876120b0565b905060006107548288611d1e565b50905061076081611d82565b600061076b86611db5565b905060006107798287611dc8565b50905061078581611e21565b6107928160200151611e75565b61079e828c868b6120be565b6105698a8a612016565b6000806107b484611db5565b90506000806107c38386611dc8565b915091506107d082611e21565b60006107db88611ca0565b90506107e684611ef7565b6107ef82611f08565b1461080d576040516312a37cf560e11b815260040160405180910390fd5b600061082261055e61081f848d611cb9565b90565b60985460405163a9dcf22d60e01b81529192506001600160a01b03169063a9dcf22d90610853908490600401613733565b602060405180830381865afa158015610870573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108949190613a87565b955085610942577f541491c63a99c21d0612ba7b3c4d90f7662f54a123363e65fae5c51e34e8a4928a828a8a6040516108d09493929190613ad0565b60405180910390a16097546020850151604051631429d07360e11b81526001600160a01b0390921691632853a0e69161090f9187903390600401613aa9565b600060405180830381600087803b15801561092957600080fd5b505af115801561093d573d6000803e3d6000fd5b505050505b5050505050949350505050565b60008061095b84611ca0565b905060008061096c8386600061214e565b9150915061097982611e21565b6098546001600160a01b031663a9dcf22d61099a61055e61081f878c611cb9565b6040518263ffffffff1660e01b81526004016109b69190613733565b602060405180830381865afa1580156109d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f79190613a87565b935083610aa3577f8ec8481d2e38a1ffe2c6ec35459332dc9e6248b1219d287dfa4143a68a75bbd1878787604051610a3193929190613b0f565b60405180910390a16097546020830151604051631429d07360e11b81526001600160a01b0390921691632853a0e691610a709185903390600401613aa9565b600060405180830381600087803b158015610a8a57600080fd5b505af1158015610a9e573d6000803e3d6000fd5b505050505b5050509392505050565b600080610ab984611db5565b9050600080610ac883866121bd565b91509150610ad582611e21565b60c954604051634362fd1160e01b81526001600160a01b0390911690634362fd1190610b05908990600401613733565b602060405180830381865afa158015610b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b469190613a87565b15935083610731577f6f83f9b71f5c687c7dd205d520001d4e5adc1f16e4e2ee5b798c720d643e5a9e86866040516106bf9291906139dc565b6060600060606000610b9086611ca0565b9050600080610ba18388600061214e565b91509150610bae82611d82565b6000610bb9886121e6565b9050826020015163ffffffff16600003610c3b5760c9546040808501519051639cc1bb3160e01b81526001600160a01b0390921691639cc1bb3191610c049185908e90600401613b44565b600060405180830381600087803b158015610c1e57600080fd5b505af1158015610c32573d6000803e3d6000fd5b50505050610dc7565b609760009054906101000a90046001600160a01b03166001600160a01b03166336cba43c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb29190613b69565b60c9546040808601519051623cd01560e21b81529298506001600160a01b039091169162f3405491610cec9185908b908f90600401613b82565b6000604051808303816000875af1158015610d0b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d339190810190613bad565b96506000610d4085612229565b6099546040808701519051631cff139b60e11b81529293506001600160a01b03909116916339fe273691610d8091600019908d908d908890600401613c1a565b6020604051808303816000875af1158015610d9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc39190613a87565b5094505b816001600160a01b0316836020015163ffffffff167f5ca3d740e03650b41813a4b418830f6ba39700ae010fe8c4d1bca0e8676b9c568b8b604051610e0d9291906139dc565b60405180910390a3505050509250925092565b606081806001600160401b03811115610e3b57610e3b613261565b604051908082528060200260200182016040528015610e8157816020015b604080518082019091526000815260606020820152815260200190600190039081610e595790505b5091503660005b8281101561073157858582818110610ea257610ea2613c93565b9050602002810190610eb49190613ca9565b91506000848281518110610eca57610eca613c93565b60200260200101519050306001600160a01b0316838060200190610eee9190613cc9565b604051610efc929190613d0f565b600060405180830381855af49150503d8060008114610f37576040519150601f19603f3d011682016040523d82523d6000602084013e610f3c565b606091505b5060208301521515808252833517610f5f576309ad446560e31b60005260046000fd5b50600101610e88565b600080610f7484611ca0565b90506000610f848285600161214e565b509050610f9081611e21565b610f9d8160200151611e75565b6000610fa98389611cb9565b90506000610fb78289611d1e565b509050610fc381611d82565b610fd5610fcf83611fe0565b89612016565b609754604082810151858201519151632885570d60e21b815263ffffffff9182166004820152911660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b15801561103157600080fd5b505af1158015611045573d6000803e3d6000fd5b5050505060019450505050505b949350505050565b6099546000906001600160a01b0316331461108857604051636efcc49f60e01b815260040160405180910390fd5b60c95460405163c79a431b60e01b81526001600160a01b039091169063c79a431b906110c49088908190600019908a908a908a90600401613d1f565b6020604051808303816000875af11580156110e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111079190613a87565b95945050505050565b6033546001600160a01b0316331461116f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b565b60008061117d84611db5565b905060008061118c8386611dc8565b9150915061119982611e21565b60006111a4896120b0565b90506111b2848b838b6120be565b60985460405163a9dcf22d60e01b81526001600160a01b039091169063a9dcf22d906111e2908c90600401613733565b602060405180830381865afa1580156111ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112239190613a87565b9450846112d1577f541491c63a99c21d0612ba7b3c4d90f7662f54a123363e65fae5c51e34e8a4928a8a898960405161125f9493929190613ad0565b60405180910390a16097546020840151604051631429d07360e11b81526001600160a01b0390921691632853a0e69161129e9186903390600401613aa9565b600060405180830381600087803b1580156112b857600080fd5b505af11580156112cc573d6000803e3d6000fd5b505050505b5050505095945050505050565b6000806112ea8561230e565b905060006112f88285612321565b50905061130481611d82565b6000611310838761234a565b50905061131c81611e21565b6113268786612016565b609754604083810151838201519151632885570d60e21b815263ffffffff9182166004820152911660248201526001600160a01b039091169063a2155c3490604401600060405180830381600087803b15801561138257600080fd5b505af1158015611396573d6000803e3d6000fd5b50505050600193505050505b9392505050565b6000806113b58461230e565b90506000806113c48386612321565b915091506113d182611e21565b60995460405163e2f006f760e01b81526001600160a01b039091169063e2f006f790611401908990600401613733565b602060405180830381865afa15801561141e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114429190613a87565b15935083610731577fa0cb383b7028fbeae86e018eb9fe765c15c869483a584edbb95bf5509344658786866040516106bf9291906139dc565b60006114856131ff565b60006114908861230e565b905061149c818861234a565b6001600160a01b031660208401528083526114b690611d82565b6099546001600160a01b0316634f1275676114d083612373565b6040518263ffffffff1660e01b81526004016114ee91815260200190565b602060405180830381865afa15801561150b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152f9190613d68565b63ffffffff166040830181905260000361155c576040516312a37cf560e11b815260040160405180910390fd5b6097546001600160a01b03166328f3fac961157683612382565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401606060405180830381865afa1580156115ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115de9190613d85565b60608301526115ec8161238f565b63ffffffff1682606001516020015163ffffffff161461161f57604051630b09697760e11b815260040160405180910390fd5b61163361162b826123a0565b8787876123af565b600061163e886121e6565b905060c960009054906101000a90046001600160a01b03166001600160a01b031663c79a431b8460000151604001518560600151604001518487604001518c8f6040518763ffffffff1660e01b815260040161169f96959493929190613d1f565b6020604051808303816000875af11580156116be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e29190613a87565b93508315611734577f9377955fede38ca63bc09f7b3fae7dd349934c78c058963a6d3c05d4eed0411283600001516020015184602001518b8b60405161172b9493929190613dfa565b60405180910390a15b50505095945050505050565b60008061174c8461230e565b905060008061175b838661234a565b9150915061176882611e21565b60995460405163e2f006f760e01b81526001600160a01b039091169063e2f006f790611798908990600401613733565b602060405180830381865afa1580156117b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d99190613a87565b935083610731577f4d4c3a87f0d5fbcea3c51d5baa727fceedb200dd7c9287f7ef85b60b794d6a8d86866040516106bf9291906139dc565b609b546060908190831061183857604051631390f2a160e01b815260040160405180910390fd5b6000609b848154811061184d5761184d613c93565b90600052602060002090600202016040518060400160405290816000820154815260200160018201805461188090613e3c565b80601f01602080910402602001604051908101604052809291908181526020018280546118ac90613e3c565b80156118f95780601f106118ce576101008083540402835291602001916118f9565b820191906000526020600020905b8154815290600101906020018083116118dc57829003601f168201915b505050505081525050905080602001519250609a81600001518154811061192257611922613c93565b90600052602060002001805461193790613e3c565b80601f016020809104026020016040519081016040528092919081815260200182805461196390613e3c565b80156119b05780601f10611985576101008083540402835291602001916119b0565b820191906000526020600020905b81548152906001019060200180831161199357829003601f168201915b5050505050915050915091565b6060609a82815481106119d2576119d2613c93565b9060005260206000200180546119e790613e3c565b80601f0160208091040260200160405190810160405280929190818152602001828054611a1390613e3c565b8015611a605780601f10611a3557610100808354040283529160200191611a60565b820191906000526020600020905b815481529060010190602001808311611a4357829003601f168201915b50505050509050919050565b600080611a78846120b0565b9050600080611a878386611d1e565b91509150611a9482611e21565b60985460405163a9dcf22d60e01b81526001600160a01b039091169063a9dcf22d90611ac4908990600401613733565b602060405180830381865afa158015611ae1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b059190613a87565b15935083610731577f9b0db5e74572fe0188dcef5afafe498161864c5706c3003c98ee506ae5c0282d86866040516106bf9291906139dc565b6033546001600160a01b03163314611b985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611166565b6001600160a01b038116611bfd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401611166565b611c06816123f5565b50565b6000611c156001612447565b90508015611c2d576000805461ff0019166101001790555b611c388585856124d4565b60c980546001600160a01b0319166001600160a01b0384161790558015611c99576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6000611cb3611cae83612545565b612558565b92915050565b60008281611cc9600c6032613e86565b611cd39085613e99565b90506001600160801b0382168110611cfe57604051631390f2a160e01b815260040160405180910390fd5b611107611d1982611d11600c6032613e86565b859190612584565b6125dc565b6040805160608101825260008082526020820181905291810182905290611d4d611d4785612604565b84612632565b6020820151919350915063ffffffff1615611d7b576040516370488f8b60e01b815260040160405180910390fd5b9250929050565b600181516005811115611d9757611d97613eb0565b14611c0657604051632437e77160e11b815260040160405180910390fd5b6000611cb3611dc383612545565b612738565b6040805160608101825260008082526020820181905291810182905290611df1611d4785612760565b6020820151919350915063ffffffff16600003611d7b576040516354cc70e560e11b815260040160405180910390fd5b600181516005811115611e3657611e36613eb0565b14158015611e575750600281516005811115611e5457611e54613eb0565b14155b15611c065760405163ec3d0d8560e01b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff1614158015611ed957507f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661038514155b15611c0657604051630b09697760e11b815260040160405180910390fd5b6000611cb3816020845b919061278c565b600080611f1483612821565b90506000816001600160401b03811115611f3057611f30613261565b604051908082528060200260200182016040528015611f59578160200160208202803683370190505b50905060005b82811015611fa657611f79611f748683611cb9565b612842565b828281518110611f8b57611f8b613c93565b6020908102919091010152611f9f81613ec6565b9050611f5f565b50611fbc81611fb760016006613edf565b612881565b80600081518110611fcf57611fcf613c93565b602002602001015192505050919050565b60405180611ff1836020830161295b565b506001600160801b0383166000601f8201601f19168301602001604052509052919050565b6000612021826121e6565b6040805180820190915281815260208101858152609b8054600181018255600091909152825160029091027fbba9db4cdbea0a37c207bbb83e20f828cd4441c49891101dc94fd20dc8efc3498101918255915193945091927fbba9db4cdbea0a37c207bbb83e20f828cd4441c49891101dc94fd20dc8efc34a909101906120a89082613f38565b505050505050565b6000611cb3611d1983612545565b60006120c9836129d0565b91505080826000815181106120e0576120e0613c93565b602002602001015114612106576040516339bbd1f360e21b815260040160405180910390fd5b600061212461211485611ef7565b61211d866129ff565b8588612a0e565b90508061213087611ef7565b146120a8576040516312a37cf560e11b815260040160405180910390fd5b604080516060810182526000808252602082018190529181018290529061217d61217786612a51565b85612632565b90925090508280156121975750602082015163ffffffff16155b156121b5576040516354cc70e560e11b815260040160405180910390fd5b935093915050565b6040805160608101825260008082526020820181905291810182905290611d4d611d4785612a7d565b609a80546001810182556000919091527f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be481016122238382613f38565b50919050565b6060600061223683612821565b9050806001600160401b0381111561225057612250613261565b604051908082528060200260200182016040528015612279578160200160208202803683370190505b50915060005b818110156123075760006122938583611cb9565b90506122cc6122a182612aa9565b6122aa836129ff565b63ffffffff1660209190911b6fffffffffffffffffffffffff00000000161790565b8483815181106122de576122de613c93565b6001600160801b03909216602092830291909101909101525061230081613ec6565b905061227f565b5050919050565b6000611cb361231c83612545565b612abb565b6040805160608101825260008082526020820181905291810182905290611d4d611d4785612ae3565b6040805160608101825260008082526020820181905291810182905290611df1611d4785612b0f565b6000611cb36028602084611f01565b6000611cb3826049612b3b565b6000611cb3600480845b9190612b45565b6000611cb36008602084611f01565b6000839050846123d7846123d26123cc8560009081526020902090565b86612b66565b612b66565b14611c99576040516335a072f760e21b815260040160405180910390fd5b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff161561248e578160ff16600114801561246a5750303b155b6124865760405162461bcd60e51b815260040161116690613ff7565b506000919050565b60005460ff8084169116106124b55760405162461bcd60e51b815260040161116690613ff7565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166124fb5760405162461bcd60e51b815260040161116690614045565b609780546001600160a01b038086166001600160a01b031992831617909255609880548584169083161790556099805492841692909116919091179055612540612bb2565b505050565b8051600090602083016110528183612be1565b600061256382612c2b565b61258057604051635cb1e1ad60e11b815260040160405180910390fd5b5090565b6000806125918560801c90565b905061259c85612c78565b836125a78684613e86565b6125b19190613e86565b11156125d05760405163a3b99ded60e01b815260040160405180910390fd5b61110784820184612be1565b60006125e782612c95565b61258057604051631ae8107160e21b815260040160405180910390fd5b6000611cb37f43713cd927f8eb63b519f3b180bd5f3708ebbe93666be9ba4b9624b7bc57e663835b90612cb5565b60408051606081018252600080825260208201819052918101919091526000806126a9856040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b90506126b58185612cf2565b6097546040516328f3fac960e01b81526001600160a01b0380841660048301529294509116906328f3fac990602401606060405180830381865afa158015612701573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127259190613d85565b925061273083612d16565b509250929050565b600061274382612d49565b61258057604051633ae4998b60e21b815260040160405180910390fd5b6000611cb37f3464bf887f210604c594030208052a323ac6628785466262d7524176912016418361262c565b60008160000361279e575060006113a2565b60208211156127c05760405163063af09560e31b815260040160405180910390fd5b6001600160801b0384166127d48385613e86565b11156127f35760405163a3b99ded60e01b815260040160405180910390fd5b600382901b60006128048660801c90565b90940151600160ff1b600019929092019190911d16949350505050565b600061282f600c6032613e86565b611cb3906001600160801b038416614090565b6000806000612850846129d0565b6040805160208082019490945280820192909252805180830382018152606090920190528051910120949350505050565b81516001821b8111156128a75760405163c5360feb60e01b815260040160405180910390fd5b60005b828110156129555760005b8281101561294657600081600101905060008683815181106128d9576128d9613c93565b6020026020010151905060008583106128f357600061290e565b87838151811061290557612905613c93565b60200260200101515b905061291a8282612b66565b88600186901c8151811061293057612930613c93565b60209081029190910101525050506002016128b5565b506001918201821c91016128aa565b50505050565b6040516000906001600160801b03841690608085901c9080851015612993576040516312ca856360e21b815260040160405180910390fd5b60008386858560045afa9050806129bd57604051637c7d772f60e01b815260040160405180910390fd5b608086901b84175b979650505050505050565b600080826129e76129e2826024612d5c565b612d69565b92506129f76129e2826024612d8b565b915050915091565b6000611cb36020600484612399565b6000600182901b60408110612a3657604051631390f2a160e01b815260040160405180910390fd5b6000612a428787612dcf565b90506129c58282876006612dfa565b6000611cb37ff304ae6578b1582b0b5b512e0a7070d6f76973b1f360f99dd500082d3bc948778361262c565b6000611cb37fccfadb9c399e4e4257b6d0c3f92e1f9a9c00b1802b55a2f7d511702faa7690908361262c565b6000611cb361081f6032600c85612399565b6000612ac682612e89565b61258057604051631dad384f60e21b815260040160405180910390fd5b6000611cb37fdf42b2c0137811ba604f5c79e20c4d6b94770aa819cc524eca444056544f8ab78361262c565b6000611cb37fb38669e8ca41a27fcd85729b868e8ab047d0f142073a017213e58f0a91e88ef38361262c565b60006113a2838360145b600080612b5385858561278c565b602084900360031b1c9150509392505050565b600082158015612b74575081155b15612b8157506000611cb3565b6040805160208101859052908101839052606001604051602081830303815290604052805190602001209050611cb3565b600054610100900460ff16612bd95760405162461bcd60e51b815260040161116690614045565b61116f612e9c565b600080612bee8385613e86565b9050604051811115612bfe575060005b80600003612c1f5760405163085f79c360e11b815260040160405180910390fd5b608084901b8317611052565b60006001600160801b03821681612c44600c6032613e86565b612c4e9083614090565b905081612c5d600c6032613e86565b612c679083613e99565b148015611052575061105281612ecc565b60006001600160801b038216612c8e8360801c90565b0192915050565b6000612ca3600c6032613e86565b6001600160801b0383165b1492915050565b600081612cc184612d69565b6040805160208101939093528201526060015b60405160208183030381529060405280519060200120905092915050565b6000806000612d018585612ef1565b91509150612d0e81612f33565b509392505050565b600081516005811115612d2b57612d2b613eb0565b03611c065760405163dc449cb760e01b815260040160405180910390fd5b6000604e6001600160801b038316612cae565b60006113a2838284612584565b600080612d768360801c90565b6001600160801b039390931690922092915050565b60006001600160801b03831680831115612db85760405163a3b99ded60e01b815260040160405180910390fd5b61105283612dc68660801c90565b01848303612be1565b60008282604051602001612cd492919091825260e01b6001600160e01b031916602082015260240190565b815160009082811115612e205760405163c5360feb60e01b815260040160405180910390fd5b84915060005b81811015612e5d57612e5383868381518110612e4457612e44613c93565b602002602001015189846130e9565b9250600101612e26565b50805b83811015612e7f57612e7583600089846130e9565b9250600101612e60565b5050949350505050565b600060856001600160801b038316612cae565b600054610100900460ff16612ec35760405162461bcd60e51b815260040161116690614045565b61116f336123f5565b60008115801590611cb35750612ee460016006613edf565b6001901b82111592915050565b6000808251604103612f275760208301516040840151606085015160001a612f1b87828585613112565b94509450505050611d7b565b50600090506002611d7b565b6000816004811115612f4757612f47613eb0565b03612f4f5750565b6001816004811115612f6357612f63613eb0565b03612fb05760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401611166565b6002816004811115612fc457612fc4613eb0565b036130115760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401611166565b600381600481111561302557613025613eb0565b0361307d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401611166565b600481600481111561309157613091613eb0565b03611c065760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401611166565b6000600183831c168103613108576131018585612b66565b9050611052565b6131018486612b66565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561314957506000905060036131f6565b8460ff16601b1415801561316157508460ff16601c14155b1561317257506000905060046131f6565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156131c6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166131ef576000600192509250506131f6565b9150600090505b94509492505050565b6040805160e0810190915260006080820181815260a0830182905260c083019190915281908152600060208201819052604082015260600161325c6040805160608101909152806000815260006020820181905260409091015290565b905290565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561329f5761329f613261565b604052919050565b60006001600160401b038211156132c0576132c0613261565b50601f01601f191660200190565b600082601f8301126132df57600080fd5b81356132f26132ed826132a7565b613277565b81815284602083860101111561330757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561333c57600080fd5b8535945060208601356001600160401b038082111561335a57600080fd5b61336689838a016132ce565b9550604088013591508082111561337c57600080fd5b61338889838a016132ce565b9450606088013591508082111561339e57600080fd5b6133aa89838a016132ce565b935060808801359150808211156133c057600080fd5b506133cd888289016132ce565b9150509295509295909350565b600080604083850312156133ed57600080fd5b82356001600160401b038082111561340457600080fd5b613410868387016132ce565b9350602085013591508082111561342657600080fd5b50613433858286016132ce565b9150509250929050565b600082601f83011261344e57600080fd5b813560206001600160401b0382111561346957613469613261565b8160051b613478828201613277565b928352848101820192828101908785111561349257600080fd5b83870192505b848310156129c557823582529183019190830190613498565b60008060008060008060c087890312156134ca57600080fd5b8635955060208701356001600160401b03808211156134e857600080fd5b6134f48a838b016132ce565b9650604089013591508082111561350a57600080fd5b6135168a838b016132ce565b9550606089013591508082111561352c57600080fd5b6135388a838b0161343d565b9450608089013591508082111561354e57600080fd5b61355a8a838b016132ce565b935060a089013591508082111561357057600080fd5b5061357d89828a016132ce565b9150509295509295509295565b600080600080608085870312156135a057600080fd5b8435935060208501356001600160401b03808211156135be57600080fd5b6135ca888389016132ce565b945060408701359150808211156135e057600080fd5b6135ec888389016132ce565b9350606087013591508082111561360257600080fd5b5061360f878288016132ce565b91505092959194509250565b60008060006060848603121561363057600080fd5b8335925060208401356001600160401b038082111561364e57600080fd5b61365a878388016132ce565b9350604086013591508082111561367057600080fd5b5061367d868287016132ce565b9150509250925092565b60005b838110156136a257818101518382015260200161368a565b50506000910152565b600081518084526136c3816020860160208601613687565b601f01601f19169290920160200192915050565b6060815260006136ea60608301866136ab565b6020838101869052838203604085015284518083528582019282019060005b8181101561372557845183529383019391830191600101613709565b509098975050505050505050565b6020815260006113a260208301846136ab565b6000806020838503121561375957600080fd5b82356001600160401b038082111561377057600080fd5b818501915085601f83011261378457600080fd5b81358181111561379357600080fd5b8660208260051b85010111156137a857600080fd5b60209290920196919550909350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561372557888303603f19018552815180511515845287015187840187905261380f878501826136ab565b95880195935050908601906001016137e1565b63ffffffff81168114611c0657600080fd5b6000806000806080858703121561384a57600080fd5b843561385581613822565b9350602085013561386581613822565b92506040850135915060608501356001600160401b0381111561388757600080fd5b61360f878288016132ce565b600080600080600060a086880312156138ab57600080fd5b8535945060208601356001600160401b03808211156138c957600080fd5b6138d589838a016132ce565b955060408801359150808211156138eb57600080fd5b61338889838a0161343d565b60008060006060848603121561390c57600080fd5b83356001600160401b038082111561392357600080fd5b61392f878388016132ce565b9450602086013591508082111561364e57600080fd5b600080600080600060a0868803121561395d57600080fd5b85356001600160401b038082111561397457600080fd5b61398089838a016132ce565b9650602088013591508082111561399657600080fd5b506139a3888289016132ce565b959895975050505060408401359360608101359360809091013592509050565b6000602082840312156139d557600080fd5b5035919050565b6040815260006139ef60408301856136ab565b828103602084015261110781856136ab565b80356001600160a01b03811681146124cf57600080fd5b600060208284031215613a2a57600080fd5b6113a282613a01565b60008060008060808587031215613a4957600080fd5b613a5285613a01565b9350613a6060208601613a01565b9250613a6e60408601613a01565b9150613a7c60608601613a01565b905092959194509250565b600060208284031215613a9957600080fd5b815180151581146113a257600080fd5b63ffffffff9390931683526001600160a01b03918216602084015216604082015260600190565b848152608060208201526000613ae960808301866136ab565b8281036040840152613afb81866136ab565b905082810360608401526129c581856136ab565b838152606060208201526000613b2860608301856136ab565b8281036040840152613b3a81856136ab565b9695505050505050565b63ffffffff8416815282602082015260606040820152600061110760608301846136ab565b600060208284031215613b7b57600080fd5b5051919050565b63ffffffff85168152836020820152826040820152608060608201526000613b3a60808301846136ab565b600060208284031215613bbf57600080fd5b81516001600160401b03811115613bd557600080fd5b8201601f81018413613be657600080fd5b8051613bf46132ed826132a7565b818152856020838501011115613c0957600080fd5b611107826020830160208601613687565b63ffffffff8616815260006020868184015260a06040840152613c4060a08401876136ab565b60608401869052838103608085015284518082528286019183019060005b81811015613c835783516001600160801b031683529284019291840191600101613c5e565b50909a9950505050505050505050565b634e487b7160e01b600052603260045260246000fd5b60008235603e19833603018112613cbf57600080fd5b9190910192915050565b6000808335601e19843603018112613ce057600080fd5b8301803591506001600160401b03821115613cfa57600080fd5b602001915036819003821315611d7b57600080fd5b8183823760009101908152919050565b600063ffffffff8089168352808816602084015286604084015280861660608401525083608083015260c060a0830152613d5c60c08301846136ab565b98975050505050505050565b600060208284031215613d7a57600080fd5b81516113a281613822565b600060608284031215613d9757600080fd5b604051606081018181106001600160401b0382111715613db957613db9613261565b604052825160068110613dcb57600080fd5b81526020830151613ddb81613822565b60208201526040830151613dee81613822565b60408201529392505050565b63ffffffff851681526001600160a01b0384166020820152608060408201819052600090613e2a908301856136ab565b82810360608401526129c581856136ab565b600181811c90821680613e5057607f821691505b60208210810361222357634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115611cb357611cb3613e70565b8082028115828204841417611cb357611cb3613e70565b634e487b7160e01b600052602160045260246000fd5b600060018201613ed857613ed8613e70565b5060010190565b81810381811115611cb357611cb3613e70565b601f82111561254057600081815260208120601f850160051c81016020861015613f195750805b601f850160051c820191505b818110156120a857828155600101613f25565b81516001600160401b03811115613f5157613f51613261565b613f6581613f5f8454613e3c565b84613ef2565b602080601f831160018114613f9a5760008415613f825750858301515b600019600386901b1c1916600185901b1785556120a8565b600085815260208120601f198616915b82811015613fc957888601518255948401946001909101908401613faa565b5085821015613fe75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000826140ad57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f28918c99354ca5da6f3a15221ff400e574f1d25899294bfc1a7b66c5aef250964736f6c63430008110033",
    "sourceMap": "2151:10587:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5988:1487:29;;;;;;:::i;:::-;;:::i;:::-;;;2259:14:201;;2252:22;2234:41;;2222:2;2207:18;5988:1487:29;;;;;;;;10181:801:27;;;;;;:::i;:::-;;:::i;7517:1713:29:-;;;;;;:::i;:::-;;:::i;11279:1234::-;;;;;;:::i;:::-;;:::i;14096:980::-;;;;;;:::i;:::-;;:::i;11023:871:27:-;;;;;;:::i;:::-;;:::i;4142:2138::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1383:401:7:-;1554:28;;;;;;;;;1567:7;1554:28;;1576:5;1554:28;;;;1383:401;;;;;;;:::i;542:1352:6:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4627:1319:29:-;;;;;;:::i;:::-;;:::i;9254:588:27:-;;;;;;:::i;:::-;;:::i;2184:57:5:-;;;:::i;:::-;;16404:105:29;16481:14;:21;16404:105;;10424:25:201;;;10412:2;10397:18;16404:105:29;10278:177:201;3119:27:29;;;;;-1:-1:-1;;;;;3119:27:29;;;;;;-1:-1:-1;;;;;10624:32:201;;;10606:51;;10594:2;10579:18;3119:27:29;10460:203:201;12555:1499:29;;;;;;:::i;:::-;;:::i;8241:972:27:-;;;;;;:::i;:::-;;:::i;1356:35:5:-;;;;;;;;12622:10:201;12610:23;;;12592:42;;12580:2;12565:18;1356:35:5;12448:192:201;1276:85:87;1348:6;;-1:-1:-1;;;;;1348:6:87;1276:85;;10387:850:29;;;;;;:::i;:::-;;:::i;3152:21::-;;;;;-1:-1:-1;;;;;3152:21:29;;;2919::27;;;;;-1:-1:-1;;;;;2919:21:27;;;3179:26:29;;;;;-1:-1:-1;;;;;3179:26:29;;;6321:1879:27;;;;;;:::i;:::-;;:::i;9570:775:29:-;;;;;;:::i;:::-;;:::i;16551:420::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;17013:128::-;;;;;;:::i;:::-;;:::i;15118:910::-;;;;;;:::i;:::-;;:::i;2158:198:87:-;;;;;;:::i;:::-;;:::i;3561:242:27:-;;;;;;:::i;:::-;;:::i;5988:1487:29:-;6218:16;6303:17;6323:28;:11;:26;:28::i;:::-;6303:48;-1:-1:-1;6420:11:29;6434:26;6303:48;6449:10;6434:14;:26::i;:::-;6420:40;;6542:30;6577:38;6596:5;6603:11;6577:18;:38::i;:::-;6541:74;;;6663:26;:11;:24;:26::i;:::-;6760:15;6778:30;:10;:28;:30::i;:::-;6760:48;;6880:31;6916:37;6935:3;6940:12;6916:18;:37::i;:::-;6879:74;;;7010:36;:12;:34;:36::i;:::-;7107:40;7127:12;:19;;;7107;:40::i;:::-;7189:14;:3;:12;:14::i;:::-;7161:24;:8;:22;:24::i;:::-;:42;7157:78;;7212:23;;-1:-1:-1;;;7212:23:29;;;;;;;;;;;7157:78;7245:48;7257:22;:5;:20;:22::i;:14::-;:20;:22::i;:::-;7281:11;7245;:48::i;:::-;7383:12;;7409:17;;;;;7428:18;;;;7369:78;;-1:-1:-1;;;7369:78:29;;15147:10:201;15184:15;;;7369:78:29;;;15166:34:201;15236:15;;15216:18;;;15209:43;-1:-1:-1;;;;;7383:12:29;;;;7369:39;;15110:18:201;;7369:78:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7464:4:29;;5988:1487;-1:-1:-1;;;;;;;;;;;;;;5988:1487:29:o;10181:801:27:-;10294:23;10394:15;10412:30;:10;:28;:30::i;:::-;10394:48;;10529:25;10556:14;10574:37;10593:3;10598:12;10574:18;:37::i;:::-;10528:83;;;;10668:30;:6;:28;:30::i;:::-;10742:6;;10729:51;;-1:-1:-1;;;10729:51:27;;-1:-1:-1;;;;;10742:6:27;;;;10729:39;;:51;;10769:10;;10729:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10708:72;;10795:18;10790:186;;10834:44;10853:10;10865:12;10834:44;;;;;;;:::i;:::-;;;;;;;;10906:12;;10931:13;;;;10892:73;;-1:-1:-1;;;10892:73:27;;-1:-1:-1;;;;;10906:12:27;;;;10892:38;;:73;;10946:6;;10954:10;;10892:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10790:186;10323:659;;;10181:801;;;;:::o;7517:1713:29:-;7786:16;7868:11;7882:26;:12;:24;:26::i;:::-;7868:40;;7990:30;8025:38;8044:5;8051:11;8025:18;:38::i;:::-;7989:74;;;8111:26;:11;:24;:26::i;:::-;8208:15;8226:30;:10;:28;:30::i;:::-;8208:48;;8327:31;8363:37;8382:3;8387:12;8363:18;:37::i;:::-;8326:74;;;8457:36;:12;:34;:36::i;:::-;8554:40;8574:12;:19;;;8554;:40::i;:::-;8944:56;8966:3;8971:10;8983:5;8990:9;8944:21;:56::i;:::-;9010:38;9022:12;9036:11;9010;:38::i;11279:1234::-;11469:17;11559:15;11577:30;:10;:28;:30::i;:::-;11559:48;;11694:25;11721:14;11739:37;11758:3;11763:12;11739:18;:37::i;:::-;11693:83;;;;11833:30;:6;:28;:30::i;:::-;11930:17;11950:28;:11;:26;:28::i;:::-;11930:48;;12020:14;:3;:12;:14::i;:::-;11992:24;:8;:22;:24::i;:::-;:42;11988:78;;12043:23;;-1:-1:-1;;;12043:23:29;;;;;;;;;;;11988:78;12142:25;12170:43;:35;:26;:8;12185:10;12170:14;:26::i;:::-;4917:5:56;4813:118;12170:43:29;12248:6;;12238:44;;-1:-1:-1;;;12238:44:29;;12142:71;;-1:-1:-1;;;;;;12248:6:29;;12238:30;;:44;;12142:71;;12238:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12223:59;;12297:12;12292:215;;12330:79;12358:10;12370:12;12384:10;12396:12;12330:79;;;;;;;;;:::i;:::-;;;;;;;;12437:12;;12462:13;;;;12423:73;;-1:-1:-1;;;12423:73:29;;-1:-1:-1;;;;;12437:12:29;;;;12423:38;;:73;;12477:6;;12485:10;;12423:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12292:215;11488:1025;;;;;11279:1234;;;;;;:::o;14096:980::-;14237:17;14327;14347:28;:11;:26;:28::i;:::-;14327:48;;14465:25;14492:13;14521:88;14548:8;14573:13;14602:5;14521:15;:88::i;:::-;14464:145;;;;14665:30;:6;:28;:30::i;:::-;14796:6;;-1:-1:-1;;;;;14796:6:29;14786:30;14817:43;:35;:26;:8;14832:10;14817:14;:26::i;:43::-;14786:75;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14771:90;;14876:12;14871:199;;14909:64;14934:10;14946:11;14959:13;14909:64;;;;;;;;:::i;:::-;;;;;;;;15001:12;;15026:13;;;;14987:72;;-1:-1:-1;;;14987:72:29;;-1:-1:-1;;;;;15001:12:29;;;;14987:38;;:72;;15041:5;;15048:10;;14987:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14871:199;14260:816;;;14096:980;;;;;:::o;11023:871:27:-;11141:18;11236:15;11254:30;:10;:28;:30::i;:::-;11236:48;;11365:25;11392:13;11409:42;11434:3;11439:11;11409:24;:42::i;:::-;11364:87;;;;11507:30;:6;:28;:30::i;:::-;11655:6;;11642:51;;-1:-1:-1;;;11642:51:27;;-1:-1:-1;;;;;11655:6:27;;;;11642:39;;:51;;11682:10;;11642:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11641:52;11625:68;;11708:13;11703:185;;11742:49;11767:10;11779:11;11742:49;;;;;;;:::i;4142:2138::-;4254:23;4279:18;4299:24;4396:17;4416:28;:11;:26;:28::i;:::-;4396:48;;4525:25;4552:13;4581:88;4608:8;4633:13;4662:5;4581:15;:88::i;:::-;4524:145;;;;4717:21;:6;:19;:21::i;:::-;4798:16;4817:29;4832:13;4817:14;:29::i;:::-;4798:48;;4860:6;:13;;;:18;;4877:1;4860:18;4856:1337;;5007:6;;5065:12;;;;;4991:179;;-1:-1:-1;;;4991:179:27;;-1:-1:-1;;;;;5007:6:27;;;;4991:43;;:179;;5105:8;;5144:11;;4991:179;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4856:1337;;;5283:12;;;;;;;;;-1:-1:-1;;;;;5283:12:27;-1:-1:-1;;;;;5269:37:27;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5407:6;;5467:12;;;;;5391:220;;-1:-1:-1;;;5391:220:27;;5256:52;;-1:-1:-1;;;;;;5407:6:27;;;;5391:44;;:220;;5507:8;;5256:52;;5585:11;;5391:220;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5391:220:27;;;;;;;;;;;;:::i;:::-;5378:233;;5625:26;5654:18;:8;:16;:18::i;:::-;5815:11;;5863:12;;;;;5794:148;;-1:-1:-1;;;5794:148:27;;5625:47;;-1:-1:-1;;;;;;5815:11:27;;;;5794:51;;:148;;-1:-1:-1;;5877:17:27;5896:10;;5908;;5625:47;;5794:148;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6161:8:27;-1:-1:-1;4856:1337:27;6239:5;-1:-1:-1;;;;;6207:66:27;6224:6;:13;;;6207:66;;;6246:11;6259:13;6207:66;;;;;;;:::i;:::-;;;;;;;;4329:1951;;;;4142:2138;;;;;:::o;542:1352:6:-;602:27;658:5;;-1:-1:-1;;;;;694:20:6;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;694:20:6;;;;;;;;;;;;;;;;680:34;;724:19;758:9;753:1135;777:6;773:1;:10;753:1135;;;808:5;;814:1;808:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;800:16;;830:20;853:11;865:1;853:14;;;;;;;;:::i;:::-;;;;;;;830:37;;1210:4;-1:-1:-1;;;;;1202:26:6;1229:5;:14;;;;;;;;:::i;:::-;1202:42;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1181:17:6;;;1164:80;;;;;;1517:19;;1514:38;1504:301;;-1:-1:-1;;;1675:4:6;1668:80;1782:4;1776;1769:18;1504:301;-1:-1:-1;1860:3:6;;753:1135;;4627:1319:29;4822:16;4907:17;4927:28;:11;:26;:28::i;:::-;4907:48;;5039:31;5087:87;5114:8;5139:13;5168:4;5087:15;:87::i;:::-;5038:136;;;5231:36;:12;:34;:36::i;:::-;5328:40;5348:12;:19;;;5328;:40::i;:::-;5437:11;5451:26;:8;5466:10;5451:14;:26::i;:::-;5437:40;;5559:30;5594:38;5613:5;5620:11;5594:18;:38::i;:::-;5558:74;;;5680:26;:11;:24;:26::i;:::-;5716:48;5728:22;:5;7257:20;:22::i;5728:::-;5752:11;5716;:48::i;:::-;5854:12;;5880:17;;;;;5899:18;;;;5840:78;;-1:-1:-1;;;5840:78:29;;15147:10:201;15184:15;;;5840:78:29;;;15166:34:201;15236:15;;15216:18;;;15209:43;-1:-1:-1;;;;;5854:12:29;;;;5840:39;;15110:18:201;;5840:78:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5935:4;5928:11;;;;;;4627:1319;;;;;;;:::o;9254:588:27:-;9491:11;;9395:16;;-1:-1:-1;;;;;9491:11:27;9477:10;:25;9473:60;;9511:22;;-1:-1:-1;;;9511:22:27;;;;;;;;;;;9473:60;9566:6;;9550:285;;-1:-1:-1;;;9550:285:27;;-1:-1:-1;;;;;9566:6:27;;;;9550:37;;:285;;9619:14;;;;-1:-1:-1;;9701:17:27;9742:8;;9776:10;;9813:11;;9550:285;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9543:292;9254:588;-1:-1:-1;;;;;9254:588:27:o;2184:57:5:-;1348:6:87;;-1:-1:-1;;;;;1348:6:87;929:10:91;1488:23:87;1480:68;;;;-1:-1:-1;;;1480:68:87;;21840:2:201;1480:68:87;;;21822:21:201;;;21859:18;;;21852:30;21918:34;21898:18;;;21891:62;21970:18;;1480:68:87;;;;;;;;;2184:57:5:o;12555:1499:29:-;12784:17;12874:15;12892:30;:10;:28;:30::i;:::-;12874:48;;13009:25;13036:14;13054:37;13073:3;13078:12;13054:18;:37::i;:::-;13008:83;;;;13148:30;:6;:28;:30::i;:::-;13242:11;13256:26;:12;:24;:26::i;:::-;13242:40;;13632:56;13654:3;13659:10;13671:5;13678:9;13632:21;:56::i;:::-;13789:6;;13779:44;;-1:-1:-1;;;13779:44:29;;-1:-1:-1;;;;;13789:6:29;;;;13779:30;;:44;;13810:12;;13779:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13764:59;;13838:12;13833:215;;13871:79;13899:10;13911:12;13925:10;13937:12;13871:79;;;;;;;;;:::i;:::-;;;;;;;;13978:12;;14003:13;;;;13964:73;;-1:-1:-1;;;13964:73:29;;-1:-1:-1;;;;;13978:12:29;;;;13964:38;;:73;;14018:6;;14026:10;;13964:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13833:215;12803:1251;;;;12555:1499;;;;;;;:::o;8241:972:27:-;8384:16;8472:12;8487:27;:11;:25;:27::i;:::-;8472:42;;8596:30;8631:39;8652:4;8658:11;8631:20;:39::i;:::-;8595:75;;;8716:26;:11;:24;:26::i;:::-;8820:31;8856:35;8871:4;8877:13;8856:14;:35::i;:::-;8819:72;;;8948:36;:12;:34;:36::i;:::-;8994:37;9006:11;9019;8994;:37::i;:::-;9121:12;;9147:17;;;;;9166:18;;;;9107:78;;-1:-1:-1;;;9107:78:27;;15147:10:201;15184:15;;;9107:78:27;;;15166:34:201;15236:15;;15216:18;;;15209:43;-1:-1:-1;;;;;9121:12:27;;;;9107:39;;15110:18:201;;9107:78:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9202:4;9195:11;;;;;8241:972;;;;;;:::o;10387:850:29:-;10502:18;10592:12;10607:27;:11;:25;:27::i;:::-;10592:42;;10715:25;10742:13;10759:39;10780:4;10786:11;10759:20;:39::i;:::-;10714:84;;;;10854:30;:6;:28;:30::i;:::-;10999:11;;10985:54;;-1:-1:-1;;;10985:54:29;;-1:-1:-1;;;;;10999:11:29;;;;10985:41;;:54;;11027:11;;10985:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10984:55;10968:71;;11054:13;11049:182;;11088:46;11109:11;11122;11088:46;;;;;;;:::i;6321:1879:27:-;6520:16;6602:23;;:::i;:::-;6691:12;6706:27;:11;:25;:27::i;:::-;6691:42;;6854:35;6869:4;6875:13;6854:14;:35::i;:::-;-1:-1:-1;;;;;6815:74:27;6839:11;;;6815:74;;;;6944:36;;:34;:36::i;:::-;7020:11;;-1:-1:-1;;;;;7020:11:27;7006:46;7053:19;:4;:17;:19::i;:::-;7006:67;;;;;;;;;;;;;10424:25:201;;10412:2;10397:18;;10278:177;7006:67:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6990:83;;:13;;;:83;;;7104:1;7087:18;7083:54;;7114:23;;-1:-1:-1;;;7114:23:27;;;;;;;;;;;7083:54;7259:12;;-1:-1:-1;;;;;7259:12:27;7245:39;7285:16;:4;:14;:16::i;:::-;7245:57;;-1:-1:-1;;;;;;7245:57:27;;;;;;;-1:-1:-1;;;;;10624:32:201;;;7245:57:27;;;10606:51:201;10579:18;;7245:57:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7222:20;;;:80;7347:18;:4;:16;:18::i;:::-;7316:49;;:4;:20;;;:27;;;:49;;;7312:84;;7374:22;;-1:-1:-1;;;7374:22:27;;;;;;;;;;;7312:84;7481:72;7500:18;:4;:16;:18::i;:::-;7520:10;7532;7544:8;7481:18;:72::i;:::-;7613:16;7632:29;7647:13;7632:14;:29::i;:::-;7613:48;;7761:6;;;;;;;;;-1:-1:-1;;;;;7761:6:27;-1:-1:-1;;;;;7745:37:27;;7814:4;:21;;;:27;;;7871:4;:20;;;:26;;;7921:8;7953:4;:13;;;7992:10;8029:11;7745:306;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7731:320;;8065:11;8061:133;;;8097:86;8113:4;:21;;;:28;;;8143:4;:11;;;8156;8169:13;8097:86;;;;;;;;;:::i;:::-;;;;;;;;8061:133;6538:1662;;;6321:1879;;;;;;;:::o;9570:775:29:-;9681:19;9772:12;9787:27;:11;:25;:27::i;:::-;9772:42;;9901:25;9928:14;9946:35;9961:4;9967:13;9946:14;:35::i;:::-;9900:81;;;;10038:30;:6;:28;:30::i;:::-;10109:11;;10095:54;;-1:-1:-1;;;10095:54:29;;-1:-1:-1;;;;;10109:11:29;;;;10095:41;;:54;;10137:11;;10095:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10078:71;;10164:14;10159:180;;10199:42;10214:11;10227:13;10199:42;;;;;;;:::i;16551:420::-;16725:14;:21;16637:29;;;;16716:30;;16712:60;;16755:17;;-1:-1:-1;;;16755:17:29;;;;;;;;;;;16712:60;16782:32;16817:14;16832:5;16817:21;;;;;;;;:::i;:::-;;;;;;;;;;;16782:56;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16867:12;:29;;;16848:48;;16924:17;16942:12;:21;;;16924:40;;;;;;;;:::i;:::-;;;;;;;;16906:58;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16702:269;16551:420;;;:::o;17013:128::-;17079:12;17110:17;17128:5;17110:24;;;;;;;;:::i;:::-;;;;;;;;17103:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17013:128;;;:::o;15118:910::-;15232:18;15320:11;15334:26;:12;:24;:26::i;:::-;15320:40;;15441:25;15468:13;15485:38;15504:5;15511:11;15485:18;:38::i;:::-;15440:83;;;;15579:30;:6;:28;:30::i;:::-;15797:6;;15787:44;;-1:-1:-1;;;15787:44:29;;-1:-1:-1;;;;;15797:6:29;;;;15787:30;;:44;;15818:12;;15787:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15786:45;15770:61;;15846:13;15841:181;;15880:45;15899:12;15913:11;15880:45;;;;;;;:::i;2158:198:87:-;1348:6;;-1:-1:-1;;;;;1348:6:87;929:10:91;1488:23:87;1480:68;;;;-1:-1:-1;;;1480:68:87;;21840:2:201;1480:68:87;;;21822:21:201;;;21859:18;;;21852:30;21918:34;21898:18;;;21891:62;21970:18;;1480:68:87;21638:356:201;1480:68:87;-1:-1:-1;;;;;2246:22:87;::::1;2238:73;;;::::0;-1:-1:-1;;;2238:73:87;;24379:2:201;2238:73:87::1;::::0;::::1;24361:21:201::0;24418:2;24398:18;;;24391:30;24457:34;24437:18;;;24430:62;-1:-1:-1;;;24508:18:201;;;24501:36;24554:19;;2238:73:87::1;24177:402:201::0;2238:73:87::1;2321:28;2340:8;2321:18;:28::i;:::-;2158:198:::0;:::o;3561:242:27:-;3111:19:88;3133:25;3156:1;3133:22;:25::i;:::-;3111:47;;3172:14;3168:65;;;3202:13;:20;;-1:-1:-1;;3202:20:88;;;;;3168:65;3711:59:27::1;3733:13;3748:7;3757:12;3711:21;:59::i;:::-;3780:6;:16:::0;;-1:-1:-1;;;;;;3780:16:27::1;-1:-1:-1::0;;;;;3780:16:27;::::1;;::::0;;3253:99:88;;;;3303:5;3287:21;;-1:-1:-1;;3287:21:88;;;3327:14;;-1:-1:-1;24736:36:201;;3327:14:88;;24724:2:201;24709:18;3327:14:88;;;;;;;3253:99;3101:257;3561:242:27;;;;:::o;4187:132:55:-;4256:8;4283:29;4298:13;:7;:11;:13::i;:::-;4283:14;:29::i;:::-;4276:36;4187:132;-1:-1:-1;;4187:132:55:o;6104:342::-;6181:5;6216:8;6181:5;1387:20:45;1107:2;1387;:20;:::i;:::-;6263:25:55;;:10;:25;:::i;:::-;6243:45;-1:-1:-1;;;;;;7239:43:52;;6302:9:55;:26;6298:56;;6337:17;;-1:-1:-1;;;6337:17:55;;;;;;;;;;;6298:56;6371:68;:54;6394:9;1387:20:45;1107:2;1387;:20;:::i;:::-;6371:7:55;;:54;:13;:54::i;:::-;:66;:68::i;25177:416:29:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;25424:47:29;25438:19;:5;:17;:19::i;:::-;25459:11;25424:13;:47::i;:::-;25544:13;;;;25406:65;;-1:-1:-1;25406:65:29;-1:-1:-1;25544:18:29;;;25540:46;;25571:15;;-1:-1:-1;;;25571:15:29;;;;;;;;;;;25540:46;25177:416;;;;;:::o;3392:164:47:-;3484:16;3469:11;;:31;;;;;;;;:::i;:::-;;3465:85;;3523:16;;-1:-1:-1;;;3523:16:47;;;;;;;;;;;5288:141:49;5360:11;5390:32;5408:13;:7;:11;:13::i;:::-;5390:17;:32::i;20913:426:29:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;21167:44:29;21181:15;:3;:13;:15::i;21167:44::-;21289:13;;;;21148:63;;-1:-1:-1;21148:63:29;-1:-1:-1;21289:18:29;;21306:1;21289:18;21285:47;;21316:16;;-1:-1:-1;;;21316:16:29;;;;;;;;;;;3845:223:47;3946:16;3931:11;;:31;;;;;;;;:::i;:::-;;;:69;;;;-1:-1:-1;3981:19:47;3966:11;;:34;;;;;;;;:::i;:::-;;;3931:69;3927:135;;;4023:28;;-1:-1:-1;;;4023:28:47;;;;;;;;;;;19775:366:29;20059:11;20043:27;;:12;:27;;;;:60;;;;-1:-1:-1;20074:11:29;:29;;3861:3:45;20074:29:29;;20043:60;20039:95;;;20112:22;;-1:-1:-1;;;20112:22:29;;;;;;;;;;;7339:149:49;7397:7;7423:58;7397:7;7477:2;7423:3;:12;:18;:58;:18;:58::i;7594:807:55:-;7659:7;7678:21;7702:23;:8;:21;:23::i;:::-;7678:47;;7735:23;7775:13;-1:-1:-1;;;;;7761:28:55;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7761:28:55;;7735:54;;7804:9;7799:298;7823:13;7819:1;:17;7799:298;;;8062:24;:17;:8;8077:1;8062:14;:17::i;:::-;:22;:24::i;:::-;8050:6;8057:1;8050:9;;;;;;;;:::i;:::-;;;;;;;;;;:36;7838:3;;;:::i;:::-;;;7799:298;;;-1:-1:-1;8236:58:55;8261:6;8269:24;8292:1;645::45;8269:24:55;:::i;:::-;8236;:58::i;:::-;8385:6;8392:1;8385:9;;;;;;;;:::i;:::-;;;;;;;8378:16;;;;7594:807;;;:::o;4079:1041:52:-;4325:4;4319:11;;4455:34;4469:7;4484:4;4478:10;;4455:13;:34::i;:::-;-1:-1:-1;;;;;;7239:43:52;;4701:12;8097:2;8081:18;;-1:-1:-1;;8465:20:52;4997;;5019:4;4993:31;4987:4;4980:45;-1:-1:-1;5087:17:52;;4079:1041;;-1:-1:-1;4079:1041:52:o;17557:229:29:-;17658:16;17677:31;17692:15;17677:14;:31::i;:::-;17738:40;;;;;;;;;;;;;;;;;;17718:14;:61;;;;;;;-1:-1:-1;17718:61:29;;;;;;;;;;;;;;;;;;17658:50;;-1:-1:-1;17738:40:29;;17718:61;;;;;;;;;:::i;:::-;;;;17648:138;17557:229;;:::o;3771:123:56:-;3837:5;3861:26;3873:13;:7;:11;:13::i;27671:825:29:-;27918:20;27942:16;:5;:14;:16::i;:::-;27915:43;;;27988:12;27972:9;27982:1;27972:12;;;;;;;;:::i;:::-;;;;;;;:28;27968:65;;28009:24;;-1:-1:-1;;;28009:24:29;;;;;;;;;;;27968:65;28253:20;28276:78;28302:12;:5;:10;:12::i;:::-;28316:14;:5;:12;:14::i;:::-;28332:9;28343:10;28276:25;:78::i;:::-;28253:101;;28445:12;28427:14;:3;:12;:14::i;:::-;:30;28423:66;;28466:23;;-1:-1:-1;;;28466:23:29;;;;;;;;;;;26218:476;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;26489:50:29;26503:20;:8;:18;:20::i;:::-;26525:13;26489;:50::i;:::-;26471:68;;-1:-1:-1;26471:68:29;-1:-1:-1;26628:12:29;:34;;;;-1:-1:-1;26644:13:29;;;;:18;;;26628:34;26624:63;;;26671:16;;-1:-1:-1;;;26671:16:29;;;;;;;;;;;26624:63;26218:476;;;;;;:::o;21863:424::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;22120:45:29;22134:17;:3;:15;:17::i;17848:179::-;17953:17;:24;;17987:33;;;;;17914:16;17987:33;;;;;;;;18010:9;17987:33;;:::i;:::-;;17848:179;;;:::o;6788:399:55:-;6847:26;6885:21;6909:23;:8;:21;:23::i;:::-;6885:47;;6968:13;-1:-1:-1;;;;;6953:29:55;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6953:29:55;;6942:40;;6997:9;6992:189;7016:13;7012:1;:17;6992:189;;;7050:12;7065:17;:8;7080:1;7065:14;:17::i;:::-;7050:32;;7110:60;7136:16;:6;:14;:16::i;:::-;7154:15;:6;:13;:15::i;:::-;7560:16:59;;3168:5;7506:51;;;;;;:70;;7384:200;7110:60:55;7096:8;7105:1;7096:11;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7096:74:55;;;:11;;;;;;;;;;;:74;-1:-1:-1;7031:3:55;;;:::i;:::-;;;6992:189;;;;6875:312;6788:399;;;:::o;4344:129:54:-;4412:7;4438:28;4452:13;:7;:11;:13::i;:::-;4438;:28::i;23980:418:29:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;24230:46:29;24244:18;:4;:16;:18::i;23051:418::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;23299:46:29;23313:16;:4;:14;:16::i;7245:161:54:-;7307:7;7333:66;2479:2;7395;7333:7;:16;4813:118:56;7698:150:54;7757:7;7783:58;:7;2586:2;7783:29;:58::i;6795:168::-;6856:6;6888:67;2370:1;;6888:7;:16;:26;:67;:26;:67::i;7024:159::-;7085:7;7111:65;2424:1;7172:2;7111:7;:16;4813:118:56;12280:456:27;12427:9;12458:10;12427:42;;12669:7;12588:77;12609:10;12621:43;12642:11;:4;5656:18:63;5808:15;;;5918:2;5905:16;;;5608:329;12642:11:27;12655:8;12621:20;:43::i;:::-;12588:20;:77::i;:::-;:88;12584:146;;12699:20;;-1:-1:-1;;;12699:20:27;;;;;;;;;;;2510:187:87;2602:6;;;-1:-1:-1;;;;;2618:17:87;;;-1:-1:-1;;;;;;2618:17:87;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;5287:808:88:-;5351:4;5684:13;;;;;;;5680:409;;;5738:7;:12;;5749:1;5738:12;:61;;;;-1:-1:-1;5793:4:88;1476:19:90;:23;5738:61:88;5713:166;;;;-1:-1:-1;;;5713:166:88;;;;;;;:::i;:::-;-1:-1:-1;5900:5:88;;5287:808;-1:-1:-1;5287:808:88:o;5680:409::-;5944:12;;:22;;;;:12;;:22;5936:81;;;;-1:-1:-1;;;5936:81:88;;;;;;;:::i;:::-;-1:-1:-1;6031:12:88;:22;;-1:-1:-1;;6031:22:88;;;;;;;;;;;;-1:-1:-1;;5287:808:88:o;5680:409::-;5287:808;;;:::o;3973:272:29:-;4698:13:88;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:88;;;;;;;:::i;:::-;4122:12:29::1;:28:::0;;-1:-1:-1;;;;;4122:28:29;;::::1;-1:-1:-1::0;;;;;;4122:28:29;;::::1;;::::0;;;4160:6:::1;:16:::0;;;;::::1;::::0;;::::1;;::::0;;4186:11:::1;:26:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;4222:16:::1;:14;:16::i;:::-;3973:272:::0;;;:::o;2972:569:52:-;3060:10;;3026:7;;3486:4;3477:14;;3517:17;3477:14;3060:10;3517:5;:17::i;4471:200:55:-;4535:8;4560:19;4571:7;4560:10;:19::i;:::-;4555:54;;4588:21;;-1:-1:-1;;;4588:21:55;;;;;;;;;;;4555:54;-1:-1:-1;4655:7:55;4471:200::o;10331:484:52:-;10416:7;10435:12;10450:13;:7;6898:3;6871:30;;6712:196;10450:13;10435:28;;10546:13;:7;:11;:13::i;:::-;10539:4;10523:13;10530:6;10523:4;:13;:::i;:::-;:20;;;;:::i;:::-;:36;10519:87;;;10582:13;;-1:-1:-1;;;10582:13:52;;;;;;;;;;;10519:87;10758:40;10778:6;10771:4;:13;10792:4;10758:5;:40::i;4032:185:56:-;4093:5;4115:16;4123:7;4115;:16::i;:::-;4110:48;;4140:18;;-1:-1:-1;;;4140:18:56;;;;;;;;;;;4533:214;4590:7;4693:47;2996:31:45;4693:5:56;:14;:27;;:47::i;19167:531:29:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;19313:13:29;19342:20;19365:45;19394:15;7662:58:96;;29364:66:201;7662:58:96;;;29352:79:201;29447:12;;;29440:28;;;7532:7:96;;29484:12:201;;7662:58:96;;;;;;;;;;;;7652:69;;;;;;7645:76;;7463:265;;;;19365:45:29;19342:68;;19428:38;19442:12;19456:9;19428:13;:38::i;:::-;19499:12;;19485:46;;-1:-1:-1;;;19485:46:29;;-1:-1:-1;;;;;10624:32:201;;;19485:46:29;;;10606:51:201;19420:46:29;;-1:-1:-1;19499:12:29;;;19485:39;;10579:18:201;;19485:46:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19476:55;;19671:20;:6;:18;:20::i;:::-;19332:366;19167:531;;;;;:::o;5581:215:49:-;5648:11;5676:22;5690:7;5676:13;:22::i;:::-;5671:60;;5707:24;;-1:-1:-1;;;5707:24:49;;;;;;;;;;;6142:223;6201:7;6309:49;2619:35:45;6309:3:49;:12;4813:118:56;13860:1334:52;13947:14;13977:6;13987:1;13977:11;13973:59;;-1:-1:-1;14019:1:52;14004:17;;13973:59;14118:2;14109:6;:11;14105:65;;;14143:16;;-1:-1:-1;;;14143:16:52;;;;;;;;;;;14105:65;-1:-1:-1;;;;;7239:43:52;;14249:15;14258:6;14249;:15;:::i;:::-;:31;14245:82;;;14303:13;;-1:-1:-1;;;14303:13:52;;;;;;;;;;;14245:82;14366:1;14356:11;;;14336:17;14406:13;:7;6898:3;6871:30;;6712:196;14406:13;15153:17;;;15147:24;-1:-1:-1;;;;;14845:17:52;;;;14841:90;;;;15143:35;;13860:1334;-1:-1:-1;;;;13860:1334:52:o;6514:195:55:-;6578:7;1387:20:45;1107:2;1387;:20;:::i;:::-;6664:38:55;;-1:-1:-1;;;;;7239:43:52;;6664:38:55;:::i;5663:248:56:-;5713:7;5733:17;5752:18;5774:16;:5;:14;:16::i;:::-;5868:35;;;;;;;29027:19:201;;;;29062:12;;;29055:28;;;;5868:35:56;;;;;;;;;29099:12:201;;;;5868:35:56;;5858:46;;;;;;5663:248;-1:-1:-1;;;;5663:248:56:o;4547:1885:57:-;4657:13;;4790:1;:11;;4775:27;;4771:58;;;4811:18;;-1:-1:-1;;;4811:18:57;;;;;;;;;;;4771:58;5099:9;5094:1322;5118:6;5114:1;:10;5094:1322;;;5632:17;5627:618;5667:11;5655:9;:23;5627:618;;;5718:18;5739:9;5751:1;5739:13;5718:34;;5774:17;5794:6;5801:9;5794:17;;;;;;;;:::i;:::-;;;;;;;5774:37;;5887:18;5921:11;5908:10;:24;:58;;5964:1;5908:58;;;5935:6;5942:10;5935:18;;;;;;;;:::i;:::-;;;;;;;5908:58;5887:79;;6194:32;6204:9;6215:10;6194:9;:32::i;:::-;6169:6;6189:1;6176:9;:14;;6169:22;;;;;;;;:::i;:::-;;;;;;;;;;:57;-1:-1:-1;;;5693:1:57;5680:14;5627:618;;;-1:-1:-1;6400:1:57;6380:15;;;6379:22;;;5126:3;5094:1322;;;;4625:1807;4547:1885;;:::o;18013:842:52:-;18352:4;18346:11;18091:7;;-1:-1:-1;;;;;7239:43:52;;;6898:3;6871:30;;;;18434:12;;;18430:66;;;18469:16;;-1:-1:-1;;;18469:16:52;;;;;;;;;;;18430:66;18505:8;18721:4;18713:6;18707:4;18699:6;18693:4;18686:5;18675:51;18668:58;;18750:3;18745:37;;18762:20;;-1:-1:-1;;;18762:20:52;;;;;;;;;;;18745:37;17362:3;17354:11;;;17353:20;;18799:49;18792:56;18013:842;-1:-1:-1;;;;;;;18013:842:52:o;6256:393:56:-;6310:17;;6377:5;6452:45;:36;6377:5;2354:2;6452:14;:36::i;:::-;:43;:45::i;:::-;6440:57;-1:-1:-1;6592:50:56;:41;:7;2354:2;6592:17;:41::i;:50::-;6579:63;;6349:300;6256:393;;;:::o;7939:152::-;7991:6;8023:60;2306:2;8080:1;8023:5;:14;4813:118;9026:841:55;9179:7;9315:1;9301:15;;;9418:25;9400:44;;9396:74;;9453:17;;-1:-1:-1;;;9453:17:55;;;;;;;;;;;9396:74;9565:16;9584:37;9602:10;9614:6;9584:17;:37::i;:::-;9565:56;;9782:78;9803:13;9818:8;9828:9;645:1:45;9782:20:55;:78::i;5284:236::-;5345:22;5462:51;2924:32:45;5462:8:55;:17;4813:118:56;6512:234:49;6573:7;6688:51;2700:37:45;6688:3:49;:12;4813:118:56;8942:186;8995:7;9021:100;9044:76;2512:2;1107::45;9044:5:56;:14;4813:118;4615:195:54;4678:7;4702:18;4712:7;4702:9;:18::i;:::-;4697:52;;4729:20;;-1:-1:-1;;;4729:20:54;;;;;;;;;;;5521:230;5582:7;5693:51;2850:33:45;5693:7:54;:16;4813:118:56;5168:215:54;5227:7;5327:49;2777:31:45;5327:7:54;:16;4813:118:56;16353:225:52;16431:7;16540:29;:7;16558:6;16566:2;15552:538;15643:7;;15685:29;:7;15699:6;15707;15685:13;:29::i;:::-;16055:2;:11;;;16071:1;16054:18;16028:45;;-1:-1:-1;;15552:538:52;;;;;:::o;3115:287:57:-;3196:14;3226:23;;:51;;;;-1:-1:-1;3253:24:57;;3226:51;3222:174;;;-1:-1:-1;3300:1:57;3293:8;;3222:174;3349:35;;;;;;29027:19:201;;;29062:12;;;29055:28;;;29099:12;;3349:35:57;;;;;;;;;;;;3339:46;;;;;;3332:53;;;;988:95:87;4698:13:88;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:88;;;;;;;:::i;:::-;1050:26:87::1;:24;:26::i;2092:540:52:-:0;2158:7;;2192:11;2199:4;2192;:11;:::i;:::-;2177:26;;2471:4;2465:11;2459:4;2456:21;2453:38;;;-1:-1:-1;2488:1:52;2453:38;2514:4;2522:1;2514:9;2510:66;;2546:19;;-1:-1:-1;;;2546:19:52;;;;;;;;;;;2510:66;17362:3;17354:11;;;17353:20;;2592:33;17029:352;4755:389:55;4815:4;-1:-1:-1;;;;;7239:43:52;;4815:4:55;1387:20:45;1107:2;1387;:20;:::i;:::-;5028:21:55;;:6;:21;:::i;:::-;5004:45;-1:-1:-1;5098:6:55;1387:20:45;1107:2;1387;:20;:::i;:::-;5066:28:55;;:13;:28;:::i;:::-;:38;:71;;;;;5108:29;5123:13;5108:14;:29::i;7459:258:52:-;7512:12;-1:-1:-1;;;;;7239:43:52;;7671:13;:7;6898:3;6871:30;;6712:196;7671:13;:29;;7459:258;-1:-1:-1;;7459:258:52:o;4283:116:56:-;4340:4;1387:20:45;1107:2;1387;:20;:::i;:::-;-1:-1:-1;;;;;7239:43:52;;4363:13:56;:29;;4283:116;-1:-1:-1;;4283:116:56:o;9558:169:52:-;9634:20;9696:4;9702:16;:7;:14;:16::i;:::-;9683:36;;;;;;29027:19:201;;;;29062:12;;29055:28;29099:12;;9683:36:52;;;;;;;;;;;;;9673:47;;;;;;9666:54;;9558:169;;;;:::o;3759:227:96:-;3837:7;3857:17;3876:18;3898:27;3909:4;3915:9;3898:10;:27::i;:::-;3856:69;;;;3935:18;3947:5;3935:11;:18::i;:::-;-1:-1:-1;3970:9:96;3759:227;-1:-1:-1;;;3759:227:96:o;4353:162:47:-;4444:17;4429:11;;:32;;;;;;;;:::i;:::-;;4425:84;;4484:14;;-1:-1:-1;;;4484:14:47;;;;;;;;;;;5868:128:49;5931:4;985:2:45;-1:-1:-1;;;;;7239:43:52;;5954:13:49;7081:208:52;11947:141;12017:7;12043:38;:7;12017;12075:4;12043:13;:38::i;9003:292::-;9059:14;9085:12;9100:13;:7;6898:3;6871:30;;6712:196;9100:13;-1:-1:-1;;;;;7239:43:52;;;;9258:21;;;;;-1:-1:-1;;9003:292:52:o;11126:529::-;11201:7;-1:-1:-1;;;;;7239:43:52;;11308:13;;;11304:64;;;11344:13;;-1:-1:-1;;;11344:13:52;;;;;;;;;;;11304:64;11580:58;11609:6;11593:13;:7;6898:3;6871:30;;6712:196;11593:13;:22;11630:6;11623:4;:13;11580:5;:58::i;6713:220:56:-;6785:7;6910:5;6917:7;6893:32;;;;;;;;29662:19:201;;;29737:3;29715:16;-1:-1:-1;;;;;;29711:43:201;29706:2;29697:12;;29690:65;29780:2;29771:12;;29507:282;843:900:57;1083:12;;978:13;;1109:17;;;1105:48;;;1135:18;;-1:-1:-1;;;1135:18:57;;;;;;;;;;;1105:48;1171:4;1163:12;;1340:9;1335:189;1359:8;1355:1;:12;1335:189;;;1473:36;1483:5;1490;1496:1;1490:8;;;;;;;;:::i;:::-;;;;;;;1500:5;1507:1;1473:9;:36::i;:::-;1465:44;-1:-1:-1;1369:3:57;;1335:189;;;-1:-1:-1;1621:8:57;1604:123;1635:6;1631:1;:10;1604:123;;;1674:38;1684:5;1699:1;1703:5;1710:1;1674:9;:38::i;:::-;1666:46;-1:-1:-1;1643:3:57;;1604:123;;;;997:746;843:900;;;;;;:::o;4878:152:54:-;4937:4;1255:3:45;-1:-1:-1;;;;;7239:43:52;;4992:13:54;7081:208:52;1089:111:87;4698:13:88;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:88;;;;;;;:::i;:::-;1161:32:87::1;929:10:91::0;1161:18:87::1;:32::i;10245:302:55:-:0;10315:4;10482:18;;;;;:58;;-1:-1:-1;1552:24:45;1575:1;645;1552:24;:::i;:::-;1546:1;:31;;10504:13:55;:36;;10475:65;10245:302;-1:-1:-1;;10245:302:55:o;2243:730:96:-;2324:7;2333:12;2361:9;:16;2381:2;2361:22;2357:610;;2697:4;2682:20;;2676:27;2746:4;2731:20;;2725:27;2803:4;2788:20;;2782:27;2399:9;2774:36;2844:25;2855:4;2774:36;2676:27;2725;2844:10;:25::i;:::-;2837:32;;;;;;;;;2357:610;-1:-1:-1;2916:1:96;;-1:-1:-1;2920:35:96;2900:56;;548:631;625:20;616:5;:29;;;;;;;;:::i;:::-;;612:561;;548:631;:::o;612:561::-;721:29;712:5;:38;;;;;;;;:::i;:::-;;708:465;;766:34;;-1:-1:-1;;;766:34:96;;29996:2:201;766:34:96;;;29978:21:201;30035:2;30015:18;;;30008:30;30074:26;30054:18;;;30047:54;30118:18;;766:34:96;29794:348:201;708:465:96;830:35;821:5;:44;;;;;;;;:::i;:::-;;817:356;;881:41;;-1:-1:-1;;;881:41:96;;30349:2:201;881:41:96;;;30331:21:201;30388:2;30368:18;;;30361:30;30427:33;30407:18;;;30400:61;30478:18;;881:41:96;30147:355:201;817:356:96;952:30;943:5;:39;;;;;;;;:::i;:::-;;939:234;;998:44;;-1:-1:-1;;;998:44:96;;30709:2:201;998:44:96;;;30691:21:201;30748:2;30728:18;;;30721:30;30787:34;30767:18;;;30760:62;-1:-1:-1;;;30838:18:201;;;30831:32;30880:19;;998:44:96;30507:398:201;939:234:96;1072:30;1063:5;:39;;;;;;;;:::i;:::-;;1059:114;;1118:44;;-1:-1:-1;;;1118:44:96;;31112:2:201;1118:44:96;;;31094:21:201;31151:2;31131:18;;;31124:30;31190:34;31170:18;;;31163:62;-1:-1:-1;;;31241:18:201;;;31234:32;31283:19;;1118:44:96;30910:398:201;2125:526:57;2261:14;2466:1;2439:23;;;2438:29;:34;;2434:211;;2521:24;2531:4;2537:7;2521:9;:24::i;:::-;2514:31;;;;2434:211;2610:24;2620:7;2629:4;2610:9;:24::i;5167:1603:96:-;5293:7;;6217:66;6204:79;;6200:161;;;-1:-1:-1;6315:1:96;;-1:-1:-1;6319:30:96;6299:51;;6200:161;6374:1;:7;;6379:2;6374:7;;:18;;;;;6385:1;:7;;6390:2;6385:7;;6374:18;6370:100;;;-1:-1:-1;6424:1:96;;-1:-1:-1;6428:30:96;6408:51;;6370:100;6581:24;;;6564:14;6581:24;;;;;;;;;31540:25:201;;;31613:4;31601:17;;31581:18;;;31574:45;;;;31635:18;;;31628:34;;;31678:18;;;31671:34;;;6581:24:96;;31512:19:201;;6581:24:96;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6581:24:96;;-1:-1:-1;;6581:24:96;;;-1:-1:-1;;;;;;;6619:20:96;;6615:101;;6671:1;6675:29;6655:50;;;;;;;6615:101;6734:6;-1:-1:-1;6742:20:96;;-1:-1:-1;5167:1603:96;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:201:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:201;247:40;;-1:-1:-1;;;;;302:34:201;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:201:o;426:186::-;474:4;-1:-1:-1;;;;;499:6:201;496:30;493:56;;;529:18;;:::i;:::-;-1:-1:-1;595:2:201;574:15;-1:-1:-1;;570:29:201;601:4;566:40;;426:186::o;617:462::-;659:5;712:3;705:4;697:6;693:17;689:27;679:55;;730:1;727;720:12;679:55;766:6;753:20;797:48;813:31;841:2;813:31;:::i;:::-;797:48;:::i;:::-;870:2;861:7;854:19;916:3;909:4;904:2;896:6;892:15;888:26;885:35;882:55;;;933:1;930;923:12;882:55;998:2;991:4;983:6;979:17;972:4;963:7;959:18;946:55;1046:1;1021:16;;;1039:4;1017:27;1010:38;;;;1025:7;617:462;-1:-1:-1;;;617:462:201:o;1084:1005::-;1215:6;1223;1231;1239;1247;1300:3;1288:9;1279:7;1275:23;1271:33;1268:53;;;1317:1;1314;1307:12;1268:53;1353:9;1340:23;1330:33;;1414:2;1403:9;1399:18;1386:32;-1:-1:-1;;;;;1478:2:201;1470:6;1467:14;1464:34;;;1494:1;1491;1484:12;1464:34;1517:49;1558:7;1549:6;1538:9;1534:22;1517:49;:::i;:::-;1507:59;;1619:2;1608:9;1604:18;1591:32;1575:48;;1648:2;1638:8;1635:16;1632:36;;;1664:1;1661;1654:12;1632:36;1687:51;1730:7;1719:8;1708:9;1704:24;1687:51;:::i;:::-;1677:61;;1791:2;1780:9;1776:18;1763:32;1747:48;;1820:2;1810:8;1807:16;1804:36;;;1836:1;1833;1826:12;1804:36;1859:51;1902:7;1891:8;1880:9;1876:24;1859:51;:::i;:::-;1849:61;;1963:3;1952:9;1948:19;1935:33;1919:49;;1993:2;1983:8;1980:16;1977:36;;;2009:1;2006;1999:12;1977:36;;2032:51;2075:7;2064:8;2053:9;2049:24;2032:51;:::i;:::-;2022:61;;;1084:1005;;;;;;;;:::o;2286:539::-;2372:6;2380;2433:2;2421:9;2412:7;2408:23;2404:32;2401:52;;;2449:1;2446;2439:12;2401:52;2489:9;2476:23;-1:-1:-1;;;;;2559:2:201;2551:6;2548:14;2545:34;;;2575:1;2572;2565:12;2545:34;2598:49;2639:7;2630:6;2619:9;2615:22;2598:49;:::i;:::-;2588:59;;2700:2;2689:9;2685:18;2672:32;2656:48;;2729:2;2719:8;2716:16;2713:36;;;2745:1;2742;2735:12;2713:36;;2768:51;2811:7;2800:8;2789:9;2785:24;2768:51;:::i;:::-;2758:61;;;2286:539;;;;;:::o;2830:712::-;2884:5;2937:3;2930:4;2922:6;2918:17;2914:27;2904:55;;2955:1;2952;2945:12;2904:55;2991:6;2978:20;3017:4;-1:-1:-1;;;;;3036:2:201;3033:26;3030:52;;;3062:18;;:::i;:::-;3108:2;3105:1;3101:10;3131:28;3155:2;3151;3147:11;3131:28;:::i;:::-;3193:15;;;3263;;;3259:24;;;3224:12;;;;3295:15;;;3292:35;;;3323:1;3320;3313:12;3292:35;3359:2;3351:6;3347:15;3336:26;;3371:142;3387:6;3382:3;3379:15;3371:142;;;3453:17;;3441:30;;3404:12;;;;3491;;;;3371:142;;3547:1232;3712:6;3720;3728;3736;3744;3752;3805:3;3793:9;3784:7;3780:23;3776:33;3773:53;;;3822:1;3819;3812:12;3773:53;3858:9;3845:23;3835:33;;3919:2;3908:9;3904:18;3891:32;-1:-1:-1;;;;;3983:2:201;3975:6;3972:14;3969:34;;;3999:1;3996;3989:12;3969:34;4022:49;4063:7;4054:6;4043:9;4039:22;4022:49;:::i;:::-;4012:59;;4124:2;4113:9;4109:18;4096:32;4080:48;;4153:2;4143:8;4140:16;4137:36;;;4169:1;4166;4159:12;4137:36;4192:51;4235:7;4224:8;4213:9;4209:24;4192:51;:::i;:::-;4182:61;;4296:2;4285:9;4281:18;4268:32;4252:48;;4325:2;4315:8;4312:16;4309:36;;;4341:1;4338;4331:12;4309:36;4364:63;4419:7;4408:8;4397:9;4393:24;4364:63;:::i;:::-;4354:73;;4480:3;4469:9;4465:19;4452:33;4436:49;;4510:2;4500:8;4497:16;4494:36;;;4526:1;4523;4516:12;4494:36;4549:51;4592:7;4581:8;4570:9;4566:24;4549:51;:::i;:::-;4539:61;;4653:3;4642:9;4638:19;4625:33;4609:49;;4683:2;4673:8;4670:16;4667:36;;;4699:1;4696;4689:12;4667:36;;4722:51;4765:7;4754:8;4743:9;4739:24;4722:51;:::i;:::-;4712:61;;;3547:1232;;;;;;;;:::o;4784:806::-;4897:6;4905;4913;4921;4974:3;4962:9;4953:7;4949:23;4945:33;4942:53;;;4991:1;4988;4981:12;4942:53;5027:9;5014:23;5004:33;;5088:2;5077:9;5073:18;5060:32;-1:-1:-1;;;;;5152:2:201;5144:6;5141:14;5138:34;;;5168:1;5165;5158:12;5138:34;5191:49;5232:7;5223:6;5212:9;5208:22;5191:49;:::i;:::-;5181:59;;5293:2;5282:9;5278:18;5265:32;5249:48;;5322:2;5312:8;5309:16;5306:36;;;5338:1;5335;5328:12;5306:36;5361:51;5404:7;5393:8;5382:9;5378:24;5361:51;:::i;:::-;5351:61;;5465:2;5454:9;5450:18;5437:32;5421:48;;5494:2;5484:8;5481:16;5478:36;;;5510:1;5507;5500:12;5478:36;;5533:51;5576:7;5565:8;5554:9;5550:24;5533:51;:::i;:::-;5523:61;;;4784:806;;;;;;;:::o;5595:607::-;5690:6;5698;5706;5759:2;5747:9;5738:7;5734:23;5730:32;5727:52;;;5775:1;5772;5765:12;5727:52;5811:9;5798:23;5788:33;;5872:2;5861:9;5857:18;5844:32;-1:-1:-1;;;;;5936:2:201;5928:6;5925:14;5922:34;;;5952:1;5949;5942:12;5922:34;5975:49;6016:7;6007:6;5996:9;5992:22;5975:49;:::i;:::-;5965:59;;6077:2;6066:9;6062:18;6049:32;6033:48;;6106:2;6096:8;6093:16;6090:36;;;6122:1;6119;6112:12;6090:36;;6145:51;6188:7;6177:8;6166:9;6162:24;6145:51;:::i;:::-;6135:61;;;5595:607;;;;;:::o;6207:250::-;6292:1;6302:113;6316:6;6313:1;6310:13;6302:113;;;6392:11;;;6386:18;6373:11;;;6366:39;6338:2;6331:10;6302:113;;;-1:-1:-1;;6449:1:201;6431:16;;6424:27;6207:250::o;6462:270::-;6503:3;6541:5;6535:12;6568:6;6563:3;6556:19;6584:76;6653:6;6646:4;6641:3;6637:14;6630:4;6623:5;6619:16;6584:76;:::i;:::-;6714:2;6693:15;-1:-1:-1;;6689:29:201;6680:39;;;;6721:4;6676:50;;6462:270;-1:-1:-1;;6462:270:201:o;6737:831::-;6990:2;6979:9;6972:21;6953:4;7016:44;7056:2;7045:9;7041:18;7033:6;7016:44;:::i;:::-;7079:2;7097:18;;;7090:34;;;7160:22;;;7155:2;7140:18;;7133:50;7232:13;;7254:22;;;7330:15;;;;7292;;;-1:-1:-1;7373:169:201;7387:6;7384:1;7381:13;7373:169;;;7448:13;;7436:26;;7517:15;;;;7482:12;;;;7409:1;7402:9;7373:169;;;-1:-1:-1;7559:3:201;;6737:831;-1:-1:-1;;;;;;;;6737:831:201:o;7573:219::-;7722:2;7711:9;7704:21;7685:4;7742:44;7782:2;7771:9;7767:18;7759:6;7742:44;:::i;7797:639::-;7907:6;7915;7968:2;7956:9;7947:7;7943:23;7939:32;7936:52;;;7984:1;7981;7974:12;7936:52;8024:9;8011:23;-1:-1:-1;;;;;8094:2:201;8086:6;8083:14;8080:34;;;8110:1;8107;8100:12;8080:34;8148:6;8137:9;8133:22;8123:32;;8193:7;8186:4;8182:2;8178:13;8174:27;8164:55;;8215:1;8212;8205:12;8164:55;8255:2;8242:16;8281:2;8273:6;8270:14;8267:34;;;8297:1;8294;8287:12;8267:34;8350:7;8345:2;8335:6;8332:1;8328:14;8324:2;8320:23;8316:32;8313:45;8310:65;;;8371:1;8368;8361:12;8310:65;8402:2;8394:11;;;;;8424:6;;-1:-1:-1;7797:639:201;;-1:-1:-1;;;;7797:639:201:o;8441:1040::-;8631:4;8660:2;8700;8689:9;8685:18;8730:2;8719:9;8712:21;8753:6;8788;8782:13;8819:6;8811;8804:22;8845:2;8835:12;;8878:2;8867:9;8863:18;8856:25;;8940:2;8930:6;8927:1;8923:14;8912:9;8908:30;8904:39;8978:2;8970:6;8966:15;8999:1;9009:443;9023:6;9020:1;9017:13;9009:443;;;9088:22;;;-1:-1:-1;;9084:36:201;9072:49;;9144:13;;9199:9;;9192:17;9185:25;9170:41;;9250:11;;9244:18;9282:15;;;9275:27;;;9325:47;9356:15;;;9244:18;9325:47;:::i;:::-;9430:12;;;;9315:57;-1:-1:-1;;9395:15:201;;;;9045:1;9038:9;9009:443;;9486:121;9571:10;9564:5;9560:22;9553:5;9550:33;9540:61;;9597:1;9594;9587:12;9612:661;9705:6;9713;9721;9729;9782:3;9770:9;9761:7;9757:23;9753:33;9750:53;;;9799:1;9796;9789:12;9750:53;9838:9;9825:23;9857:30;9881:5;9857:30;:::i;:::-;9906:5;-1:-1:-1;9963:2:201;9948:18;;9935:32;9976;9935;9976;:::i;:::-;10027:7;-1:-1:-1;10081:2:201;10066:18;;10053:32;;-1:-1:-1;10136:2:201;10121:18;;10108:32;-1:-1:-1;;;;;10152:30:201;;10149:50;;;10195:1;10192;10185:12;10149:50;10218:49;10259:7;10250:6;10239:9;10235:22;10218:49;:::i;10668:1033::-;10815:6;10823;10831;10839;10847;10900:3;10888:9;10879:7;10875:23;10871:33;10868:53;;;10917:1;10914;10907:12;10868:53;10953:9;10940:23;10930:33;;11014:2;11003:9;10999:18;10986:32;-1:-1:-1;;;;;11078:2:201;11070:6;11067:14;11064:34;;;11094:1;11091;11084:12;11064:34;11117:49;11158:7;11149:6;11138:9;11134:22;11117:49;:::i;:::-;11107:59;;11219:2;11208:9;11204:18;11191:32;11175:48;;11248:2;11238:8;11235:16;11232:36;;;11264:1;11261;11254:12;11232:36;11287:63;11342:7;11331:8;11320:9;11316:24;11287:63;:::i;11706:737::-;11810:6;11818;11826;11879:2;11867:9;11858:7;11854:23;11850:32;11847:52;;;11895:1;11892;11885:12;11847:52;11935:9;11922:23;-1:-1:-1;;;;;12005:2:201;11997:6;11994:14;11991:34;;;12021:1;12018;12011:12;11991:34;12044:49;12085:7;12076:6;12065:9;12061:22;12044:49;:::i;:::-;12034:59;;12146:2;12135:9;12131:18;12118:32;12102:48;;12175:2;12165:8;12162:16;12159:36;;;12191:1;12188;12181:12;12645:745;12758:6;12766;12774;12782;12790;12843:3;12831:9;12822:7;12818:23;12814:33;12811:53;;;12860:1;12857;12850:12;12811:53;12900:9;12887:23;-1:-1:-1;;;;;12970:2:201;12962:6;12959:14;12956:34;;;12986:1;12983;12976:12;12956:34;13009:49;13050:7;13041:6;13030:9;13026:22;13009:49;:::i;:::-;12999:59;;13111:2;13100:9;13096:18;13083:32;13067:48;;13140:2;13130:8;13127:16;13124:36;;;13156:1;13153;13146:12;13124:36;;13179:51;13222:7;13211:8;13200:9;13196:24;13179:51;:::i;:::-;12645:745;;13169:61;;-1:-1:-1;;;;13277:2:201;13262:18;;13249:32;;13328:2;13313:18;;13300:32;;13379:3;13364:19;;;13351:33;;-1:-1:-1;12645:745:201;-1:-1:-1;12645:745:201:o;13395:180::-;13454:6;13507:2;13495:9;13486:7;13482:23;13478:32;13475:52;;;13523:1;13520;13513:12;13475:52;-1:-1:-1;13546:23:201;;13395:180;-1:-1:-1;13395:180:201:o;13580:377::-;13773:2;13762:9;13755:21;13736:4;13799:44;13839:2;13828:9;13824:18;13816:6;13799:44;:::i;:::-;13891:9;13883:6;13879:22;13874:2;13863:9;13859:18;13852:50;13919:32;13944:6;13936;13919:32;:::i;14184:173::-;14252:20;;-1:-1:-1;;;;;14301:31:201;;14291:42;;14281:70;;14347:1;14344;14337:12;14362:186;14421:6;14474:2;14462:9;14453:7;14449:23;14445:32;14442:52;;;14490:1;14487;14480:12;14442:52;14513:29;14532:9;14513:29;:::i;14553:409::-;14639:6;14647;14655;14663;14716:3;14704:9;14695:7;14691:23;14687:33;14684:53;;;14733:1;14730;14723:12;14684:53;14756:29;14775:9;14756:29;:::i;:::-;14746:39;;14804:38;14838:2;14827:9;14823:18;14804:38;:::i;:::-;14794:48;;14861:38;14895:2;14884:9;14880:18;14861:38;:::i;:::-;14851:48;;14918:38;14952:2;14941:9;14937:18;14918:38;:::i;:::-;14908:48;;14553:409;;;;;;;:::o;15263:277::-;15330:6;15383:2;15371:9;15362:7;15358:23;15354:32;15351:52;;;15399:1;15396;15389:12;15351:52;15431:9;15425:16;15484:5;15477:13;15470:21;15463:5;15460:32;15450:60;;15506:1;15503;15496:12;15545:390;15775:10;15763:23;;;;15745:42;;-1:-1:-1;;;;;15861:15:201;;;15856:2;15841:18;;15834:43;15913:15;15908:2;15893:18;;15886:43;15733:2;15718:18;;15545:390::o;15940:610::-;16207:6;16196:9;16189:25;16250:3;16245:2;16234:9;16230:18;16223:31;16170:4;16277:45;16317:3;16306:9;16302:19;16294:6;16277:45;:::i;:::-;16370:9;16362:6;16358:22;16353:2;16342:9;16338:18;16331:50;16404:32;16429:6;16421;16404:32;:::i;:::-;16390:46;;16484:9;16476:6;16472:22;16467:2;16456:9;16452:18;16445:50;16512:32;16537:6;16529;16512:32;:::i;16555:448::-;16776:6;16765:9;16758:25;16819:2;16814;16803:9;16799:18;16792:30;16739:4;16845:44;16885:2;16874:9;16870:18;16862:6;16845:44;:::i;:::-;16937:9;16929:6;16925:22;16920:2;16909:9;16905:18;16898:50;16965:32;16990:6;16982;16965:32;:::i;:::-;16957:40;16555:448;-1:-1:-1;;;;;;16555:448:201:o;17008:374::-;17221:10;17213:6;17209:23;17198:9;17191:42;17269:6;17264:2;17253:9;17249:18;17242:34;17312:2;17307;17296:9;17292:18;17285:30;17172:4;17332:44;17372:2;17361:9;17357:18;17349:6;17332:44;:::i;17387:184::-;17457:6;17510:2;17498:9;17489:7;17485:23;17481:32;17478:52;;;17526:1;17523;17516:12;17478:52;-1:-1:-1;17549:16:201;;17387:184;-1:-1:-1;17387:184:201:o;17576:447::-;17817:10;17809:6;17805:23;17794:9;17787:42;17865:6;17860:2;17849:9;17845:18;17838:34;17908:6;17903:2;17892:9;17888:18;17881:34;17951:3;17946:2;17935:9;17931:18;17924:31;17768:4;17972:45;18012:3;18001:9;17997:19;17989:6;17972:45;:::i;18028:647::-;18107:6;18160:2;18148:9;18139:7;18135:23;18131:32;18128:52;;;18176:1;18173;18166:12;18128:52;18209:9;18203:16;-1:-1:-1;;;;;18234:6:201;18231:30;18228:50;;;18274:1;18271;18264:12;18228:50;18297:22;;18350:4;18342:13;;18338:27;-1:-1:-1;18328:55:201;;18379:1;18376;18369:12;18328:55;18408:2;18402:9;18433:48;18449:31;18477:2;18449:31;:::i;18433:48::-;18504:2;18497:5;18490:17;18544:7;18539:2;18534;18530;18526:11;18522:20;18519:33;18516:53;;;18565:1;18562;18555:12;18516:53;18578:67;18642:2;18637;18630:5;18626:14;18621:2;18617;18613:11;18578:67;:::i;18680:1062::-;19029:10;19021:6;19017:23;19006:9;18999:42;18980:4;19060:2;19098:6;19093:2;19082:9;19078:18;19071:34;19141:3;19136:2;19125:9;19121:18;19114:31;19168:45;19208:3;19197:9;19193:19;19185:6;19168:45;:::i;:::-;19244:2;19229:18;;19222:34;;;19293:22;;;19287:3;19272:19;;19265:51;19365:13;;19387:22;;;19463:15;;;;19425;;;-1:-1:-1;19506:210:201;19520:6;19517:1;19514:13;19506:210;;;19585:13;;-1:-1:-1;;;;;19581:54:201;19569:67;;19691:15;;;;19656:12;;;;19542:1;19535:9;19506:210;;;-1:-1:-1;19733:3:201;;18680:1062;-1:-1:-1;;;;;;;;;;18680:1062:201:o;19747:127::-;19808:10;19803:3;19799:20;19796:1;19789:31;19839:4;19836:1;19829:15;19863:4;19860:1;19853:15;19879:321;19969:4;20027:11;20014:25;20121:2;20117:7;20106:8;20090:14;20086:29;20082:43;20062:18;20058:68;20048:96;;20140:1;20137;20130:12;20048:96;20161:33;;;;;19879:321;-1:-1:-1;;19879:321:201:o;20205:521::-;20282:4;20288:6;20348:11;20335:25;20442:2;20438:7;20427:8;20411:14;20407:29;20403:43;20383:18;20379:68;20369:96;;20461:1;20458;20451:12;20369:96;20488:33;;20540:20;;;-1:-1:-1;;;;;;20572:30:201;;20569:50;;;20615:1;20612;20605:12;20569:50;20648:4;20636:17;;-1:-1:-1;20679:14:201;20675:27;;;20665:38;;20662:58;;;20716:1;20713;20706:12;20731:271;20914:6;20906;20901:3;20888:33;20870:3;20940:16;;20965:13;;;20940:16;20731:271;-1:-1:-1;20731:271:201:o;21007:626::-;21251:4;21280:10;21329:2;21321:6;21317:15;21306:9;21299:34;21381:2;21373:6;21369:15;21364:2;21353:9;21349:18;21342:43;21421:6;21416:2;21405:9;21401:18;21394:34;21476:2;21468:6;21464:15;21459:2;21448:9;21444:18;21437:43;;21517:6;21511:3;21500:9;21496:19;21489:35;21561:3;21555;21544:9;21540:19;21533:32;21582:45;21622:3;21611:9;21607:19;21599:6;21582:45;:::i;:::-;21574:53;21007:626;-1:-1:-1;;;;;;;;21007:626:201:o;22181:249::-;22250:6;22303:2;22291:9;22282:7;22278:23;22274:32;22271:52;;;22319:1;22316;22309:12;22271:52;22351:9;22345:16;22370:30;22394:5;22370:30;:::i;22435:785::-;22535:6;22588:2;22576:9;22567:7;22563:23;22559:32;22556:52;;;22604:1;22601;22594:12;22556:52;22637:2;22631:9;22679:2;22671:6;22667:15;22748:6;22736:10;22733:22;-1:-1:-1;;;;;22700:10:201;22697:34;22694:62;22691:88;;;22759:18;;:::i;:::-;22795:2;22788:22;22832:16;;22877:1;22867:12;;22857:40;;22893:1;22890;22883:12;22857:40;22906:21;;22972:2;22957:18;;22951:25;22985:32;22951:25;22985:32;:::i;:::-;23045:2;23033:15;;23026:32;23103:2;23088:18;;23082:25;23116:32;23082:25;23116:32;:::i;:::-;23176:2;23164:15;;23157:32;23168:6;22435:785;-1:-1:-1;;;22435:785:201:o;23225:562::-;23484:10;23472:23;;23454:42;;-1:-1:-1;;;;;23532:32:201;;23527:2;23512:18;;23505:60;23601:3;23596:2;23581:18;;23574:31;;;-1:-1:-1;;23628:45:201;;23653:19;;23645:6;23628:45;:::i;:::-;23721:9;23713:6;23709:22;23704:2;23693:9;23689:18;23682:50;23749:32;23774:6;23766;23749:32;:::i;23792:380::-;23871:1;23867:12;;;;23914;;;23935:61;;23989:4;23981:6;23977:17;23967:27;;23935:61;24042:2;24034:6;24031:14;24011:18;24008:38;24005:161;;24088:10;24083:3;24079:20;24076:1;24069:31;24123:4;24120:1;24113:15;24151:4;24148:1;24141:15;24783:127;24844:10;24839:3;24835:20;24832:1;24825:31;24875:4;24872:1;24865:15;24899:4;24896:1;24889:15;24915:125;24980:9;;;25001:10;;;24998:36;;;25014:18;;:::i;25045:168::-;25118:9;;;25149;;25166:15;;;25160:22;;25146:37;25136:71;;25187:18;;:::i;25218:127::-;25279:10;25274:3;25270:20;25267:1;25260:31;25310:4;25307:1;25300:15;25334:4;25331:1;25324:15;25350:135;25389:3;25410:17;;;25407:43;;25430:18;;:::i;:::-;-1:-1:-1;25477:1:201;25466:13;;25350:135::o;25490:128::-;25557:9;;;25578:11;;;25575:37;;;25592:18;;:::i;25748:544::-;25849:2;25844:3;25841:11;25838:448;;;25885:1;25910:5;25906:2;25899:17;25955:4;25951:2;25941:19;26025:2;26013:10;26009:19;26006:1;26002:27;25996:4;25992:38;26061:4;26049:10;26046:20;26043:47;;;-1:-1:-1;26084:4:201;26043:47;26139:2;26134:3;26130:12;26127:1;26123:20;26117:4;26113:31;26103:41;;26194:82;26212:2;26205:5;26202:13;26194:82;;;26257:17;;;26238:1;26227:13;26194:82;;26468:1348;26592:3;26586:10;-1:-1:-1;;;;;26611:6:201;26608:30;26605:56;;;26641:18;;:::i;:::-;26670:96;26759:6;26719:38;26751:4;26745:11;26719:38;:::i;:::-;26713:4;26670:96;:::i;:::-;26821:4;;26885:2;26874:14;;26902:1;26897:662;;;;27603:1;27620:6;27617:89;;;-1:-1:-1;27672:19:201;;;27666:26;27617:89;-1:-1:-1;;26425:1:201;26421:11;;;26417:24;26413:29;26403:40;26449:1;26445:11;;;26400:57;27719:81;;26867:943;;26897:662;25695:1;25688:14;;;25732:4;25719:18;;-1:-1:-1;;26933:20:201;;;27050:236;27064:7;27061:1;27058:14;27050:236;;;27153:19;;;27147:26;27132:42;;27245:27;;;;27213:1;27201:14;;;;27080:19;;27050:236;;;27054:3;27314:6;27305:7;27302:19;27299:201;;;27375:19;;;27369:26;-1:-1:-1;;27458:1:201;27454:14;;;27470:3;27450:24;27446:37;27442:42;27427:58;27412:74;;27299:201;-1:-1:-1;;;;;27546:1:201;27530:14;;;27526:22;27513:36;;-1:-1:-1;26468:1348:201:o;27821:410::-;28023:2;28005:21;;;28062:2;28042:18;;;28035:30;28101:34;28096:2;28081:18;;28074:62;-1:-1:-1;;;28167:2:201;28152:18;;28145:44;28221:3;28206:19;;27821:410::o;28236:407::-;28438:2;28420:21;;;28477:2;28457:18;;;28450:30;28516:34;28511:2;28496:18;;28489:62;-1:-1:-1;;;28582:2:201;28567:18;;28560:41;28633:3;28618:19;;28236:407::o;28648:217::-;28688:1;28714;28704:132;;28758:10;28753:3;28749:20;28746:1;28739:31;28793:4;28790:1;28783:15;28821:4;28818:1;28811:15;28704:132;-1:-1:-1;28850:9:201;;28648:217::o",
    "linkReferences": {},
    "immutableReferences": {
      "2822": [
        {
          "start": 917,
          "length": 32
        },
        {
          "start": 7799,
          "length": 32
        },
        {
          "start": 7854,
          "length": 32
        }
      ],
      "2954": [
        {
          "start": 649,
          "length": 32
        }
      ],
      "2957": [
        {
          "start": 684,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "agentManager()": "7622f78d",
    "destination()": "b269681d",
    "getGuardReport(uint256)": "c495912b",
    "getReportsAmount()": "756ed01d",
    "getStoredSignature(uint256)": "ddeffa66",
    "initialize(address,address,address,address)": "f8c8765e",
    "localDomain()": "8d3638f4",
    "multicall((bool,bytes)[])": "60fc8466",
    "origin()": "938b5f32",
    "owner()": "8da5cb5b",
    "passReceipt(uint32,uint32,uint256,bytes)": "6b47b3bc",
    "renounceOwnership()": "715018a6",
    "submitReceipt(bytes,bytes,uint256,bytes32,bytes32)": "b2a4b455",
    "submitReceiptReport(bytes,bytes,bytes)": "89246503",
    "submitSnapshot(bytes,bytes)": "4bb73ea5",
    "submitStateReportWithAttestation(uint256,bytes,bytes,bytes,bytes)": "0b6b985c",
    "submitStateReportWithSnapshot(uint256,bytes,bytes,bytes)": "62389709",
    "submitStateReportWithSnapshotProof(uint256,bytes,bytes,bytes32[],bytes,bytes)": "0db27e77",
    "summit()": "9fbcb9cb",
    "transferOwnership(address)": "f2fde38b",
    "verifyAttestation(bytes,bytes)": "0ca77473",
    "verifyAttestationReport(bytes,bytes)": "31e8df5a",
    "verifyReceipt(bytes,bytes)": "c25aa585",
    "verifyReceiptReport(bytes,bytes)": "91af2e5d",
    "verifyStateReport(bytes,bytes)": "dfe39675",
    "verifyStateWithAttestation(uint256,bytes,bytes,bytes)": "200f6b66",
    "verifyStateWithSnapshot(uint256,bytes,bytes)": "213a6ddb",
    "verifyStateWithSnapshotProof(uint256,bytes,bytes32[],bytes,bytes)": "7be8e738",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AgentNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AgentNotActiveNorUnstaking\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AgentNotGuard\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AgentNotNotary\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AgentUnknown\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallerNotDestination\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectAgentDomain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectSnapshotProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectSnapshotRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectTipsProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectVersionLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexedTooMuch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustBeSynapseDomain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OccupiedMemory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PrecompileOutOfGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TreeHeightTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnallocatedMemory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnformattedAttestation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnformattedReceipt\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnformattedSnapshot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnformattedState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ViewOverrun\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"name\":\"AttestationAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidAttestation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"arPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"arSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidAttestationReport\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"rcptPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"rcptSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidReceipt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"rrPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"rrSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidReceiptReport\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidStateReport\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"statePayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidStateWithAttestation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"snapSignature\",\"type\":\"bytes\"}],\"name\":\"InvalidStateWithSnapshot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"rcptPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"rcptSignature\",\"type\":\"bytes\"}],\"name\":\"ReceiptAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"snapSignature\",\"type\":\"bytes\"}],\"name\":\"SnapshotAccepted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"agentManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getGuardReport\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"statementPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"reportSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReportsAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStoredSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agentManager_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destination_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"summit_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localDomain\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct MultiCallable.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"multicall\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct MultiCallable.Result[]\",\"name\":\"callResults\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"origin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"attNotaryIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"attNonce\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"paddedTips\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"rcptPayload\",\"type\":\"bytes\"}],\"name\":\"passReceipt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"wasAccepted\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"rcptPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"rcptSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"paddedTips\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"headerHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyHash\",\"type\":\"bytes32\"}],\"name\":\"submitReceipt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"wasAccepted\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"rcptPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"rcptSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"rrSignature\",\"type\":\"bytes\"}],\"name\":\"submitReceiptReport\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"wasAccepted\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"snapSignature\",\"type\":\"bytes\"}],\"name\":\"submitSnapshot\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"agentRoot_\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"snapGas\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"srSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"name\":\"submitStateReportWithAttestation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"wasAccepted\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"srSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"snapSignature\",\"type\":\"bytes\"}],\"name\":\"submitStateReportWithSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"wasAccepted\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"statePayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"srSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"snapProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"name\":\"submitStateReportWithSnapshotProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"wasAccepted\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"summit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"name\":\"verifyAttestation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValidAttestation\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"arSignature\",\"type\":\"bytes\"}],\"name\":\"verifyAttestationReport\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValidReport\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"rcptPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"rcptSignature\",\"type\":\"bytes\"}],\"name\":\"verifyReceipt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValidReceipt\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"rcptPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"rrSignature\",\"type\":\"bytes\"}],\"name\":\"verifyReceiptReport\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValidReport\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"statePayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"srSignature\",\"type\":\"bytes\"}],\"name\":\"verifyStateReport\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValidReport\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"name\":\"verifyStateWithAttestation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValidState\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"snapPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"snapSignature\",\"type\":\"bytes\"}],\"name\":\"verifyStateWithSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValidState\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stateIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"statePayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"snapProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"attPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attSignature\",\"type\":\"bytes\"}],\"name\":\"verifyStateWithSnapshotProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValidState\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"versionString\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getGuardReport(uint256)\":{\"details\":\"Will revert if report with given index doesn't exist.\",\"params\":{\"index\":\"Report index\"},\"returns\":{\"reportSignature\":\" Guard signature for the report\",\"statementPayload\":\"Raw payload with statement that Guard reported as invalid\"}},\"getStoredSignature(uint256)\":{\"details\":\"Will revert if signature with given index doesn't exist.\",\"params\":{\"index\":\"Signature index\"},\"returns\":{\"_0\":\"Raw payload with signature\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"passReceipt(uint32,uint32,uint256,bytes)\":{\"details\":\"If a receipt is not accepted, any of the Notaries can submit it later using `submitReceipt`.\",\"params\":{\"attNonce\":\"Nonce of the attestation used for proving the executed message\",\"attNotaryIndex\":\"Index of the Notary who signed the attestation\",\"paddedTips\":\"Tips for the message execution\",\"rcptPayload\":\"Raw payload with message execution receipt\"},\"returns\":{\"wasAccepted\":\"     Whether the receipt was accepted\"}},\"renounceOwnership()\":{\"details\":\"Should be impossible to renounce ownership; we override OpenZeppelin OwnableUpgradeable's implementation of renounceOwnership to make it a no-op\"},\"submitReceipt(bytes,bytes,uint256,bytes32,bytes32)\":{\"params\":{\"bodyHash\":\"Hash of the message body excluding the tips\",\"headerHash\":\"Hash of the message header\",\"paddedTips\":\"Tips for the message execution\",\"rcptPayload\":\"Raw payload with receipt data\",\"rcptSignature\":\"Notary signature for the receipt\"},\"returns\":{\"wasAccepted\":\"     Whether the receipt was accepted\"}},\"submitReceiptReport(bytes,bytes,bytes)\":{\"params\":{\"rcptPayload\":\"Raw payload with Receipt data that Guard reports as invalid\",\"rcptSignature\":\"Notary signature for the reported receipt\",\"rrSignature\":\"Guard signature for the report\"},\"returns\":{\"wasAccepted\":\"     Whether the Report was accepted (resulting in Dispute between the agents)\"}},\"submitSnapshot(bytes,bytes)\":{\"details\":\"Notary will need to provide both `agentRoot` and `snapGas` when submitting an attestation on the remote chain (the attestation contains only their merged hash). These are returned by this function, and could be also obtained by calling `getAttestation(nonce)` or `getLatestNotaryAttestation(notary)`.\",\"params\":{\"snapPayload\":\"Raw payload with snapshot data\",\"snapSignature\":\"Agent signature for the snapshot\"},\"returns\":{\"agentRoot_\":\"       Current root of the Agent Merkle Tree (zero, if a Guard snapshot was submitted)\",\"attPayload\":\"      Raw payload with data for attestation derived from Notary snapshot.                          Empty payload, if a Guard snapshot was submitted.\",\"snapGas\":\"         Gas data for each chain in the snapshot                          Empty list, if a Guard snapshot was submitted.\"}},\"submitStateReportWithAttestation(uint256,bytes,bytes,bytes,bytes)\":{\"params\":{\"attPayload\":\"Raw payload with Attestation data\",\"attSignature\":\"Notary signature for the Attestation\",\"snapPayload\":\"Raw payload with Snapshot data\",\"srSignature\":\"Guard signature for the report\",\"stateIndex\":\"Index of the reported State in the Snapshot\"},\"returns\":{\"wasAccepted\":\"     Whether the Report was accepted (resulting in Dispute between the agents)\"}},\"submitStateReportWithSnapshot(uint256,bytes,bytes,bytes)\":{\"params\":{\"snapPayload\":\"Raw payload with Snapshot data\",\"snapSignature\":\"Notary signature for the Snapshot\",\"srSignature\":\"Guard signature for the report\",\"stateIndex\":\"Index of the reported State in the Snapshot\"},\"returns\":{\"wasAccepted\":\"     Whether the Report was accepted (resulting in Dispute between the agents)\"}},\"submitStateReportWithSnapshotProof(uint256,bytes,bytes,bytes32[],bytes,bytes)\":{\"params\":{\"attPayload\":\"Raw payload with Attestation data\",\"attSignature\":\"Notary signature for the Attestation\",\"snapProof\":\"Proof of inclusion of reported State's Left Leaf into Snapshot Merkle Tree\",\"srSignature\":\"Guard signature for the report\",\"stateIndex\":\"Index of the reported State in the Snapshot\",\"statePayload\":\"Raw payload with State data that Guard reports as invalid\"},\"returns\":{\"wasAccepted\":\"     Whether the Report was accepted (resulting in Dispute between the agents)\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"verifyAttestation(bytes,bytes)\":{\"params\":{\"attPayload\":\"Raw payload with Attestation data\",\"attSignature\":\"Notary signature for the attestation\"},\"returns\":{\"isValidAttestation\":\"  Whether the provided attestation is valid.                              Notary is slashed, if return value is FALSE.\"}},\"verifyAttestationReport(bytes,bytes)\":{\"params\":{\"arSignature\":\"Guard signature for the report\",\"attPayload\":\"Raw payload with Attestation data that Guard reports as invalid\"},\"returns\":{\"isValidReport\":\"   Whether the provided report is valid.                          Guard is slashed, if return value is FALSE.\"}},\"verifyReceipt(bytes,bytes)\":{\"params\":{\"rcptPayload\":\"Raw payload with Receipt data\",\"rcptSignature\":\"Notary signature for the receipt\"},\"returns\":{\"isValidReceipt\":\"  Whether the provided receipt is valid.                          Notary is slashed, if return value is FALSE.\"}},\"verifyReceiptReport(bytes,bytes)\":{\"params\":{\"rcptPayload\":\"Raw payload with Receipt data that Guard reports as invalid\",\"rrSignature\":\"Guard signature for the report\"},\"returns\":{\"isValidReport\":\"   Whether the provided report is valid.                          Guard is slashed, if return value is FALSE.\"}},\"verifyStateReport(bytes,bytes)\":{\"params\":{\"srSignature\":\"Guard signature for the report\",\"statePayload\":\"Raw payload with State data that Guard reports as invalid\"},\"returns\":{\"isValidReport\":\"   Whether the provided report is valid.                          Guard is slashed, if return value is FALSE.\"}},\"verifyStateWithAttestation(uint256,bytes,bytes,bytes)\":{\"params\":{\"attPayload\":\"Raw payload with Attestation data\",\"attSignature\":\"Notary signature for the attestation\",\"snapPayload\":\"Raw payload with snapshot data\",\"stateIndex\":\"State index to check\"},\"returns\":{\"isValidState\":\"    Whether the provided state is valid.                          Notary is slashed, if return value is FALSE.\"}},\"verifyStateWithSnapshot(uint256,bytes,bytes)\":{\"params\":{\"snapPayload\":\"Raw payload with snapshot data\",\"snapSignature\":\"Agent signature for the snapshot\",\"stateIndex\":\"State index to check\"},\"returns\":{\"isValidState\":\"    Whether the provided state is valid.                          Agent is slashed, if return value is FALSE.\"}},\"verifyStateWithSnapshotProof(uint256,bytes,bytes32[],bytes,bytes)\":{\"params\":{\"attPayload\":\"Raw payload with Attestation data\",\"attSignature\":\"Notary signature for the attestation\",\"snapProof\":\"Proof of inclusion of provided State's Left Leaf into Snapshot Merkle Tree\",\"stateIndex\":\"Index of state in the snapshot\",\"statePayload\":\"Raw payload with State data to check\"},\"returns\":{\"isValidState\":\"    Whether the provided state is valid.                          Notary is slashed, if return value is FALSE.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AttestationAccepted(uint32,address,bytes,bytes)\":{\"notice\":\"Emitted when a snapshot is accepted by the Destination contract.\"},\"InvalidAttestation(bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid attestation is submitted.\"},\"InvalidAttestationReport(bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid attestation report is submitted.\"},\"InvalidReceipt(bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid receipt statement is submitted.\"},\"InvalidReceiptReport(bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid receipt report is submitted.\"},\"InvalidStateReport(bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid state report is submitted.\"},\"InvalidStateWithAttestation(uint256,bytes,bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid state in the signed attestation is submitted.\"},\"InvalidStateWithSnapshot(uint256,bytes,bytes)\":{\"notice\":\"Emitted when a proof of invalid state in the signed snapshot is submitted.\"},\"ReceiptAccepted(uint32,address,bytes,bytes)\":{\"notice\":\"Emitted when a snapshot is accepted by the Summit contract.\"},\"SnapshotAccepted(uint32,address,bytes,bytes)\":{\"notice\":\"Emitted when a snapshot is accepted by the Summit contract.\"}},\"kind\":\"user\",\"methods\":{\"getGuardReport(uint256)\":{\"notice\":\"Returns the Guard report with the given index stored in StatementInbox. > Only reports that led to opening a Dispute are stored.\"},\"getReportsAmount()\":{\"notice\":\"Returns the amount of Guard Reports stored in StatementInbox. > Only reports that led to opening a Dispute are stored.\"},\"getStoredSignature(uint256)\":{\"notice\":\"Returns the signature with the given index stored in StatementInbox.\"},\"initialize(address,address,address,address)\":{\"notice\":\"Initializes `Inbox` contract: - Sets `msg.sender` as the owner of the contract - Sets `agentManager`, `origin`, `destination` and `summit` addresses\"},\"localDomain()\":{\"notice\":\"Domain of the local chain, set once upon contract creation\"},\"multicall((bool,bytes)[])\":{\"notice\":\"Aggregates a few calls to this contract into one multicall without modifying `msg.sender`.\"},\"passReceipt(uint32,uint32,uint256,bytes)\":{\"notice\":\"Passes the message execution receipt from Destination to the Summit contract to save. > Will revert if any of these is true: > - Called by anyone other than Destination.\"},\"submitReceipt(bytes,bytes,uint256,bytes32,bytes32)\":{\"notice\":\"Accepts a receipt signed by a Notary and passes it to Summit contract to save. > Receipt is a statement about message execution status on the remote chain. - This will distribute the message tips across the off-chain actors once the receipt optimistic period is over. > Will revert if any of these is true: > - Receipt payload is not properly formatted. > - Receipt signer is not an active Notary. > - Receipt signer is in Dispute. > - Receipt's snapshot root is unknown. > - Provided tips could not be proven against the message hash.\"},\"submitReceiptReport(bytes,bytes,bytes)\":{\"notice\":\"Accepts a Guard's receipt report signature, as well as Notary signature for the reported Receipt. > ReceiptReport is a Guard statement saying \\\"Reported receipt is invalid\\\". - This results in an opened Dispute between the Guard and the Notary. - Note: Guard could (but doesn't have to) form a ReceiptReport and use receipt signature from `verifyReceipt()` successful call that led to Notary being slashed in Summit on Synapse Chain. > Will revert if any of these is true: > - Receipt payload is not properly formatted. > - Receipt Report signer is not an active Guard. > - Receipt signer is not an active Notary.\"},\"submitSnapshot(bytes,bytes)\":{\"notice\":\"Accepts a snapshot signed by a Guard or a Notary and passes it to Summit contract to save. > Snapshot is a list of states for a set of Origin contracts residing on any of the chains. - Guard-signed snapshots: all the states in the snapshot become available for Notary signing. - Notary-signed snapshots: Snapshot Merkle Root is saved for valid snapshots, i.e. snapshots which are only using states previously submitted by any of the Guards. - Notary doesn't have to use states submitted by a single Guard in their snapshot. - Notary could then proceed to sign the attestation for their submitted snapshot. > Will revert if any of these is true: > - Snapshot payload is not properly formatted. > - Snapshot signer is not an active Agent. > - Agent snapshot contains a state with a nonce smaller or equal then they have previously submitted. > - Notary snapshot contains a state that hasn't been previously submitted by any of the Guards. > - Note: Agent will NOT be slashed for submitting such a snapshot.\"},\"submitStateReportWithAttestation(uint256,bytes,bytes,bytes,bytes)\":{\"notice\":\"Accepts a Guard's state report signature, a Snapshot containing the reported State, as well as Notary signature for the Attestation created from this Snapshot. > StateReport is a Guard statement saying \\\"Reported state is invalid\\\". - This results in an opened Dispute between the Guard and the Notary. - Note: Guard could (but doesn't have to) form a StateReport and use other values from `verifyStateWithAttestation()` successful call that led to Notary being slashed in remote Origin. > Will revert if any of these is true: > - State Report signer is not an active Guard. > - Snapshot payload is not properly formatted. > - State index is out of range. > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary. > - Attestation's snapshot root is not equal to Merkle Root derived from the Snapshot. > - The Guard or the Notary are already in a Dispute\"},\"submitStateReportWithSnapshot(uint256,bytes,bytes,bytes)\":{\"notice\":\"Accepts a Guard's state report signature, a Snapshot containing the reported State, as well as Notary signature for the Snapshot. > StateReport is a Guard statement saying \\\"Reported state is invalid\\\". - This results in an opened Dispute between the Guard and the Notary. - Note: Guard could (but doesn't have to) form a StateReport and use other values from `verifyStateWithSnapshot()` successful call that led to Notary being slashed in remote Origin. > Will revert if any of these is true: > - State Report signer is not an active Guard. > - Snapshot payload is not properly formatted. > - Snapshot signer is not an active Notary. > - State index is out of range. > - The Guard or the Notary are already in a Dispute\"},\"submitStateReportWithSnapshotProof(uint256,bytes,bytes,bytes32[],bytes,bytes)\":{\"notice\":\"Accepts a Guard's state report signature, a proof of inclusion of the reported State in an Attestation, as well as Notary signature for the Attestation. > StateReport is a Guard statement saying \\\"Reported state is invalid\\\". - This results in an opened Dispute between the Guard and the Notary. - Note: Guard could (but doesn't have to) form a StateReport and use other values from `verifyStateWithSnapshotProof()` successful call that led to Notary being slashed in remote Origin. > Will revert if any of these is true: > - State payload is not properly formatted. > - State Report signer is not an active Guard. > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary. > - Attestation's snapshot root is not equal to Merkle Root derived from State and Snapshot Proof. > - Snapshot Proof's first element does not match the State metadata. > - Snapshot Proof length exceeds Snapshot Tree Height. > - State index is out of range. > - The Guard or the Notary are already in a Dispute\"},\"verifyAttestation(bytes,bytes)\":{\"notice\":\"Verifies an attestation signed by a Notary.  - Does nothing, if the attestation is valid (was submitted by this Notary as a snapshot).  - Slashes the Notary, if the attestation is invalid. > Will revert if any of these is true: > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary.\"},\"verifyAttestationReport(bytes,bytes)\":{\"notice\":\"Verifies a Guard's attestation report signature.  - Does nothing, if the report is valid (if the reported attestation is invalid).  - Slashes the Guard, if the report is invalid (if the reported attestation is valid). > Will revert if any of these is true: > - Attestation payload is not properly formatted. > - Attestation Report signer is not an active Guard.\"},\"verifyReceipt(bytes,bytes)\":{\"notice\":\"Verifies a message receipt signed by the Notary. - Does nothing, if the receipt is valid (matches the saved receipt data for the referenced message). - Slashes the Notary, if the receipt is invalid. > Will revert if any of these is true: > - Receipt payload is not properly formatted. > - Receipt signer is not an active Notary. > - Receipt's destination chain does not refer to this chain.\"},\"verifyReceiptReport(bytes,bytes)\":{\"notice\":\"Verifies a Guard's receipt report signature. - Does nothing, if the report is valid (if the reported receipt is invalid). - Slashes the Guard, if the report is invalid (if the reported receipt is valid). > Will revert if any of these is true: > - Receipt payload is not properly formatted. > - Receipt Report signer is not an active Guard. > - Receipt does not refer to this chain.\"},\"verifyStateReport(bytes,bytes)\":{\"notice\":\"Verifies a Guard's state report signature.  - Does nothing, if the report is valid (if the reported state is invalid).  - Slashes the Guard, if the report is invalid (if the reported state is valid). > Will revert if any of these is true: > - State payload is not properly formatted. > - State Report signer is not an active Guard. > - Reported State does not refer to this chain.\"},\"verifyStateWithAttestation(uint256,bytes,bytes,bytes)\":{\"notice\":\"Verifies a state from the snapshot, that was used for the Notary-signed attestation. - Does nothing, if the state is valid (matches the historical state of this contract). - Slashes the Notary, if the state is invalid. > Will revert if any of these is true: > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary. > - Attestation's snapshot root is not equal to Merkle Root derived from the Snapshot. > - Snapshot payload is not properly formatted. > - State index is out of range. > - State does not refer to this chain.\"},\"verifyStateWithSnapshot(uint256,bytes,bytes)\":{\"notice\":\"Verifies a state from the snapshot (a list of states) signed by a Guard or a Notary. - Does nothing, if the state is valid (matches the historical state of this contract). - Slashes the Agent, if the state is invalid. > Will revert if any of these is true: > - Snapshot payload is not properly formatted. > - Snapshot signer is not an active Agent. > - State index is out of range. > - State does not refer to this chain.\"},\"verifyStateWithSnapshotProof(uint256,bytes,bytes32[],bytes,bytes)\":{\"notice\":\"Verifies a state from the snapshot, that was used for the Notary-signed attestation. - Does nothing, if the state is valid (matches the historical state of this contract). - Slashes the Notary, if the state is invalid. > Will revert if any of these is true: > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary. > - Attestation's snapshot root is not equal to Merkle Root derived from State and Snapshot Proof. > - Snapshot Proof's first element does not match the State metadata. > - Snapshot Proof length exceeds Snapshot Tree Height. > - State payload is not properly formatted. > - State index is out of range. > - State does not refer to this chain.\"}},\"notice\":\"`Inbox` is the child of `StatementInbox` contract, that is used on Synapse Chain. In addition to the functionality of `StatementInbox`, it also: - Accepts Guard and Notary Snapshots and passes them to `Summit` contract. - Accepts Notary-signed Receipts and passes them to `Summit` contract. - Accepts Receipt Reports to initiate a dispute between Guard and Notary. - Verifies Attestations and Attestation Reports, and slashes the signer if they are invalid.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/inbox/Inbox.sol\":\"Inbox\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/base/MessagingBase.sol\":{\"keccak256\":\"0x01a7e9d9a5547e90d2efc4478485c7fc308a870d596a47d2b59383eaf2a02dd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a5ab808e51515e2a8d2efccb3f9d89054c2fc7e9cb5f44514b734a097d8c114\",\"dweb:/ipfs/QmUJ1E1MXy1H2Nb8xCGA7hpsTMNF3CXNoU11qGyd5M8498\"]},\"contracts/base/MultiCallable.sol\":{\"keccak256\":\"0x9645f1629cdf8db803c40725f6b0ee165df64bfc142db4613efd385a88f13699\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc99799fdd946c11c893b89dad922822c866d14bdecded86913948a146f71053\",\"dweb:/ipfs/QmZGRZuhU2w6pAStcaQ5NyzyeUn69nJCJd9a9NnjuBVLsn\"]},\"contracts/base/Version.sol\":{\"keccak256\":\"0x63131bbdb149a0c83685da246afc0faa71d1009a20154b1f39650cef4369fe84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21f001efca9d0550162dd1154f5b1d977c85a703e6df883103638ae0fe65af9b\",\"dweb:/ipfs/QmX3BfuJ3yKxWFXphq6RcKcGrja1v5xJQ1fFCwRQvGV8u8\"]},\"contracts/events/InboxEvents.sol\":{\"keccak256\":\"0x4e834b480f9fba7e803fdce5e22f55a2c4e78a8198a0e34e2bb741e9c998299b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c46f45e8e395fae57202449cf8d0786416360906447c400f740cacefd90425\",\"dweb:/ipfs/QmWZLaJAz1ZJuoas3x1NhDtGyAVWCHuzbA8bASXV5Va4Y3\"]},\"contracts/events/StatementInboxEvents.sol\":{\"keccak256\":\"0x31b50f36f0c2060313ea7a8b6564057449c9a957a77d202c5ec3c02623c20511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d794adac1f7491f684964233bb3d5152402555dfe20743bb8c8ca1a61c17a5d8\",\"dweb:/ipfs/QmZbj2btws52KkpHy8maks6xkqL9nq76LZx8ey2QKmxeFS\"]},\"contracts/inbox/Inbox.sol\":{\"keccak256\":\"0x8e1103df8745e18d3482db5e3ca0a311fb74e51cb5c0ba33f00aefa60537e44f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da9b996949c79204e7f4e1a32aaf3e18b0c551e4d03d5619054b25d1827c4851\",\"dweb:/ipfs/QmQ7HxVf2oAvzD7G7ZvSr72YTZiowWaD5jnnsfFsCBzXbn\"]},\"contracts/inbox/StatementInbox.sol\":{\"keccak256\":\"0x097c1578b0f71f3a090bd0f9340e55e59056944351cf82f55eda43f5d01cdfd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e6182a19c0f82a755817b1ee6de921703b36cf9f2ad418a7293f4b6917ac375\",\"dweb:/ipfs/QmYNxEDbZ6VAitzbk1kHFKcaaZ5EtCZiyzuMyL8Hu3SxBX\"]},\"contracts/interfaces/IAgentManager.sol\":{\"keccak256\":\"0xc6fded8bc39cdb24e2bc038ba9b0ae168ad42fb15ed9d5883b89940b4e970a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://898f25a9d1f375ab7e5dc7cd791263934b50d3b0a44dc29a4c914578a1b06339\",\"dweb:/ipfs/QmXi3CVhvWpGxVvmw4n7UvEoX2bD2ZD2rg4oZhYETYWJ3a\"]},\"contracts/interfaces/IExecutionHub.sol\":{\"keccak256\":\"0x98f6ff39ecb926b480474d122350d753ca18358ca4d18d36d1850ec7af7ae6f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36485341a0ed70b0f151b258124f6a0db003f5d37af22b8bea65b8d5249a252d\",\"dweb:/ipfs/QmfBEDFSGwnSjTyv2AZuuUDjrqWRvacyCx46dXegioWMDL\"]},\"contracts/interfaces/ISnapshotHub.sol\":{\"keccak256\":\"0x3640a263eb4af25646250affc0fe8c666df03e11fa36da4823363b46a878160b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fafb6b8f21c1a392b8d2f1f0a380bfe48bef18862f9519f69fe23e29e03b55ad\",\"dweb:/ipfs/Qmakg3WLAB1r7SyVnP8Db2ofzsV4RmsPDzk6wf3PS35kcX\"]},\"contracts/interfaces/IStateHub.sol\":{\"keccak256\":\"0x26cf1842739cb65203ed5f243879b11939d2e77c46cc629349f016d667c003f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f9959d5230d5b0cac7bc3171cee2cfd95ab548bbcff0da3b06d02a02f61f31\",\"dweb:/ipfs/QmezRqMJF1MfxxU8dzXYFVteBTPq4yuaMVZLNVTMayUzuV\"]},\"contracts/interfaces/IStatementInbox.sol\":{\"keccak256\":\"0x99c93edd056d33d33ce57ae7d6d17328b88e94fe971c4e9d23d2fceaa9f1e41c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76a2cf74f7a24ab3c669efab5372dff18a29463504b09a0d3dde4b4184a2eff3\",\"dweb:/ipfs/Qmb1sy2izNESmgS8FVkFHMXpWc2UM3unQeKMghFYCHNfn4\"]},\"contracts/interfaces/InterfaceDestination.sol\":{\"keccak256\":\"0x708371d239580f8e6dc44e790fd32f47e074cbfb8ae9e75609adbc0de303678c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5061c85c3779304f5c3919d2b1bc6620d1029a4ead7186c3f3f5b409a9bd855\",\"dweb:/ipfs/QmW4Hrz2NGMCRV2Rqv22G4xArsR4jUZtNr1garSR8AZud6\"]},\"contracts/interfaces/InterfaceInbox.sol\":{\"keccak256\":\"0x86dbe24a32f5d09a9620f37f9af69710ba54703edd66ace3ba90e8335ef77246\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb9d7a21b3108cc86013aef80ba9a7e4a91aa8af6dd71aca5d47d26e85d213b0\",\"dweb:/ipfs/QmS2om4PmNgHJkVP92hwoHvBngH9HwmwZJnVMHhqeVj5ZY\"]},\"contracts/interfaces/InterfaceSummit.sol\":{\"keccak256\":\"0xeb60c7097b7e8a82e30e4e4e7788810d029a0bb013eb71d0e47d062abeb14494\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc35dbea34e34c513507575b9189806412e6e0d9dd6c7c34c5e598a89c58ed43\",\"dweb:/ipfs/QmTe6U1pB7AQaDiRdQRGktx96BWkGQdb8vLqtSpqCu3XDK\"]},\"contracts/libs/Constants.sol\":{\"keccak256\":\"0x9ead9581411ac7f702ccba26e3f478610f8c9c785ec3f96f3d9324d162177c2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cba4a834737651bee39e2abca02d59e676cd149439d21182ab6e4320d5e61279\",\"dweb:/ipfs/QmS2K5LKspFZPKuedWoaqywUw6v1nH9xdHa35dN8J9jDEi\"]},\"contracts/libs/Errors.sol\":{\"keccak256\":\"0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b\",\"dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB\"]},\"contracts/libs/Structures.sol\":{\"keccak256\":\"0x3eaa63f5d9aac514328111e8fdd037dc6fdb18af7541a8287deeacd2e44f7137\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://633619910c74a0685ef2993a2e7cc44088929121a15c8a9fc26c9bbadffbda71\",\"dweb:/ipfs/QmZceJv6UntiMWW4JZHbmytLsqXshbuav8yoiritksvqqy\"]},\"contracts/libs/memory/Attestation.sol\":{\"keccak256\":\"0x83b58e2d80cc7139b8996c51c5e9015f34e833e73b92036b53a1af6641e2b699\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a097c82542ba977de931c6331a9b01a39ef2e46b8916414a6f4f550bc59c113\",\"dweb:/ipfs/QmYRHMoPXzrnx86rZnHAEiFxqM5poEs6wyZinLLTEfwZH3\"]},\"contracts/libs/memory/MemView.sol\":{\"keccak256\":\"0x95dd48e50e353b59fadce29f22f02629c91bd3b5e07c0efa588bd7c808536587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4347457c5338192aca52c237c7f588d15a4f541482cd44b0632c59f36f9558eb\",\"dweb:/ipfs/QmXn1sKY7nVNrgKtbtE9PaMHFKBadyg73fs2jhw4Navyb1\"]},\"contracts/libs/memory/Receipt.sol\":{\"keccak256\":\"0x009e8cfffa4806d1a0a326a31350ead092c9cd22105d4890c86bf93d20c7824d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa9905170f86e4e2d9b62e9fabaab36381398da14f001e0b9bb98c31c174a48e\",\"dweb:/ipfs/QmYpHjdY2yf3w6kFi9urUTyrMyVZBBsCGGEkE1kyTnXqVn\"]},\"contracts/libs/memory/Snapshot.sol\":{\"keccak256\":\"0x5df6aa04b1cbb65e410c7f1a02787e0e11dbcdb5cde18ae50d435029c27c1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2e19b5c6778338b7e8e9c8ef82738797d8955d37884c7db70d7cdea43329910\",\"dweb:/ipfs/Qma1cRGHqRM3tkh5JyzR2Td6iKKST2HapTygBwVNTRJJZD\"]},\"contracts/libs/memory/State.sol\":{\"keccak256\":\"0x3997f3a820110b3bce6f87ea8df3e1f8b006d1ac45efff1dc2f8873f8bbfa5af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf973a3633546dfff75b550673b4a680b7fab48d7fc8923157983a4fde3d5da4\",\"dweb:/ipfs/QmZ8NNwcYaqVxtar8g5MH5mqDXXuMTQLe6vi7zYGswFA3N\"]},\"contracts/libs/merkle/MerkleMath.sol\":{\"keccak256\":\"0xbd13c07bdc40b80f56c7d75e3f31b6c4a85a78d444b760604a5b71083d14925c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3162b491e4e216c0f2d143ce3baab4cf9e2a8b1b42466256a5d5b1f8b0385507\",\"dweb:/ipfs/QmYnDSZyxiGHfmB8Fx46zh1LZe3aCdVaKzpaQuD9piTc7u\"]},\"contracts/libs/stack/GasData.sol\":{\"keccak256\":\"0x2007fd4b97cf33bfe4aa7dc6ac887af87b4010ec9834636b4dd5685582ac26cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b54ca8b659d63ef7138c5b3b243190ca19b1e893b7b49dee1f8790d55b9e691\",\"dweb:/ipfs/Qmc2FGb16uosZ5kvyEK2onpWVPvWeE9X72xNWeJw8CbweD\"]},\"contracts/libs/stack/Number.sol\":{\"keccak256\":\"0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd\",\"dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5\"]},\"contracts/libs/stack/Tips.sol\":{\"keccak256\":\"0x2186d854149349ff689a8356c7f387d134f59fa4a97aed7b43c9e25f46661b0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff15d61f2c9b26e6ef33457aed4a2d9ed61726e2a746d3e0a7e68eb6cd3d63a1\",\"dweb:/ipfs/QmUeiiTAjPmuFhLfzDMqZ6DyvQmEYhsKo9XArHSrMvjYKL\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AgentNotActive"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AgentNotActiveNorUnstaking"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AgentNotGuard"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AgentNotNotary"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AgentUnknown"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerNotDestination"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectAgentDomain"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectSnapshotProof"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectSnapshotRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectTipsProof"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectVersionLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IndexOutOfRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IndexedTooMuch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MustBeSynapseDomain"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OccupiedMemory"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PrecompileOutOfGas"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TreeHeightTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnallocatedMemory"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnformattedAttestation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnformattedReceipt"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnformattedSnapshot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnformattedState"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ViewOverrun"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "notary",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AttestationAccepted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidAttestation",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "arPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "arSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidAttestationReport",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "rcptPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "rcptSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidReceipt",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "rrPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "rrSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidReceiptReport",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "srPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "srSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidStateReport",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "statePayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidStateWithAttestation",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "snapSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InvalidStateWithSnapshot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "notary",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "rcptPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "rcptSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReceiptAccepted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "agent",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "snapSignature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SnapshotAccepted",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "agentManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "destination",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getGuardReport",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "statementPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "reportSignature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReportsAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStoredSignature",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agentManager_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "origin_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "destination_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "summit_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "localDomain",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MultiCallable.Call[]",
              "name": "calls",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bool",
                  "name": "allowFailure",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "struct MultiCallable.Result[]",
              "name": "callResults",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "returnData",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "origin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "attNotaryIndex",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "attNonce",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "paddedTips",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "rcptPayload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "passReceipt",
          "outputs": [
            {
              "internalType": "bool",
              "name": "wasAccepted",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "rcptPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "rcptSignature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "paddedTips",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "headerHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "bodyHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitReceipt",
          "outputs": [
            {
              "internalType": "bool",
              "name": "wasAccepted",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "rcptPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "rcptSignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "rrSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitReceiptReport",
          "outputs": [
            {
              "internalType": "bool",
              "name": "wasAccepted",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "snapSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitSnapshot",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "agentRoot_",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "snapGas",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "srSignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitStateReportWithAttestation",
          "outputs": [
            {
              "internalType": "bool",
              "name": "wasAccepted",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "srSignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "snapSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitStateReportWithSnapshot",
          "outputs": [
            {
              "internalType": "bool",
              "name": "wasAccepted",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "statePayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "srSignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes32[]",
              "name": "snapProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitStateReportWithSnapshotProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "wasAccepted",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "summit",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyAttestation",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValidAttestation",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "arSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyAttestationReport",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValidReport",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "rcptPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "rcptSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyReceipt",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValidReceipt",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "rcptPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "rrSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyReceiptReport",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValidReport",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "statePayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "srSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyStateReport",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValidReport",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyStateWithAttestation",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValidState",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "snapPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "snapSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyStateWithSnapshot",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValidState",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stateIndex",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "statePayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes32[]",
              "name": "snapProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes",
              "name": "attPayload",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "attSignature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyStateWithSnapshotProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isValidState",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "versionString",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getGuardReport(uint256)": {
            "details": "Will revert if report with given index doesn't exist.",
            "params": {
              "index": "Report index"
            },
            "returns": {
              "reportSignature": " Guard signature for the report",
              "statementPayload": "Raw payload with statement that Guard reported as invalid"
            }
          },
          "getStoredSignature(uint256)": {
            "details": "Will revert if signature with given index doesn't exist.",
            "params": {
              "index": "Signature index"
            },
            "returns": {
              "_0": "Raw payload with signature"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "passReceipt(uint32,uint32,uint256,bytes)": {
            "details": "If a receipt is not accepted, any of the Notaries can submit it later using `submitReceipt`.",
            "params": {
              "attNonce": "Nonce of the attestation used for proving the executed message",
              "attNotaryIndex": "Index of the Notary who signed the attestation",
              "paddedTips": "Tips for the message execution",
              "rcptPayload": "Raw payload with message execution receipt"
            },
            "returns": {
              "wasAccepted": "     Whether the receipt was accepted"
            }
          },
          "renounceOwnership()": {
            "details": "Should be impossible to renounce ownership; we override OpenZeppelin OwnableUpgradeable's implementation of renounceOwnership to make it a no-op"
          },
          "submitReceipt(bytes,bytes,uint256,bytes32,bytes32)": {
            "params": {
              "bodyHash": "Hash of the message body excluding the tips",
              "headerHash": "Hash of the message header",
              "paddedTips": "Tips for the message execution",
              "rcptPayload": "Raw payload with receipt data",
              "rcptSignature": "Notary signature for the receipt"
            },
            "returns": {
              "wasAccepted": "     Whether the receipt was accepted"
            }
          },
          "submitReceiptReport(bytes,bytes,bytes)": {
            "params": {
              "rcptPayload": "Raw payload with Receipt data that Guard reports as invalid",
              "rcptSignature": "Notary signature for the reported receipt",
              "rrSignature": "Guard signature for the report"
            },
            "returns": {
              "wasAccepted": "     Whether the Report was accepted (resulting in Dispute between the agents)"
            }
          },
          "submitSnapshot(bytes,bytes)": {
            "details": "Notary will need to provide both `agentRoot` and `snapGas` when submitting an attestation on the remote chain (the attestation contains only their merged hash). These are returned by this function, and could be also obtained by calling `getAttestation(nonce)` or `getLatestNotaryAttestation(notary)`.",
            "params": {
              "snapPayload": "Raw payload with snapshot data",
              "snapSignature": "Agent signature for the snapshot"
            },
            "returns": {
              "agentRoot_": "       Current root of the Agent Merkle Tree (zero, if a Guard snapshot was submitted)",
              "attPayload": "      Raw payload with data for attestation derived from Notary snapshot.                          Empty payload, if a Guard snapshot was submitted.",
              "snapGas": "         Gas data for each chain in the snapshot                          Empty list, if a Guard snapshot was submitted."
            }
          },
          "submitStateReportWithAttestation(uint256,bytes,bytes,bytes,bytes)": {
            "params": {
              "attPayload": "Raw payload with Attestation data",
              "attSignature": "Notary signature for the Attestation",
              "snapPayload": "Raw payload with Snapshot data",
              "srSignature": "Guard signature for the report",
              "stateIndex": "Index of the reported State in the Snapshot"
            },
            "returns": {
              "wasAccepted": "     Whether the Report was accepted (resulting in Dispute between the agents)"
            }
          },
          "submitStateReportWithSnapshot(uint256,bytes,bytes,bytes)": {
            "params": {
              "snapPayload": "Raw payload with Snapshot data",
              "snapSignature": "Notary signature for the Snapshot",
              "srSignature": "Guard signature for the report",
              "stateIndex": "Index of the reported State in the Snapshot"
            },
            "returns": {
              "wasAccepted": "     Whether the Report was accepted (resulting in Dispute between the agents)"
            }
          },
          "submitStateReportWithSnapshotProof(uint256,bytes,bytes,bytes32[],bytes,bytes)": {
            "params": {
              "attPayload": "Raw payload with Attestation data",
              "attSignature": "Notary signature for the Attestation",
              "snapProof": "Proof of inclusion of reported State's Left Leaf into Snapshot Merkle Tree",
              "srSignature": "Guard signature for the report",
              "stateIndex": "Index of the reported State in the Snapshot",
              "statePayload": "Raw payload with State data that Guard reports as invalid"
            },
            "returns": {
              "wasAccepted": "     Whether the Report was accepted (resulting in Dispute between the agents)"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "verifyAttestation(bytes,bytes)": {
            "params": {
              "attPayload": "Raw payload with Attestation data",
              "attSignature": "Notary signature for the attestation"
            },
            "returns": {
              "isValidAttestation": "  Whether the provided attestation is valid.                              Notary is slashed, if return value is FALSE."
            }
          },
          "verifyAttestationReport(bytes,bytes)": {
            "params": {
              "arSignature": "Guard signature for the report",
              "attPayload": "Raw payload with Attestation data that Guard reports as invalid"
            },
            "returns": {
              "isValidReport": "   Whether the provided report is valid.                          Guard is slashed, if return value is FALSE."
            }
          },
          "verifyReceipt(bytes,bytes)": {
            "params": {
              "rcptPayload": "Raw payload with Receipt data",
              "rcptSignature": "Notary signature for the receipt"
            },
            "returns": {
              "isValidReceipt": "  Whether the provided receipt is valid.                          Notary is slashed, if return value is FALSE."
            }
          },
          "verifyReceiptReport(bytes,bytes)": {
            "params": {
              "rcptPayload": "Raw payload with Receipt data that Guard reports as invalid",
              "rrSignature": "Guard signature for the report"
            },
            "returns": {
              "isValidReport": "   Whether the provided report is valid.                          Guard is slashed, if return value is FALSE."
            }
          },
          "verifyStateReport(bytes,bytes)": {
            "params": {
              "srSignature": "Guard signature for the report",
              "statePayload": "Raw payload with State data that Guard reports as invalid"
            },
            "returns": {
              "isValidReport": "   Whether the provided report is valid.                          Guard is slashed, if return value is FALSE."
            }
          },
          "verifyStateWithAttestation(uint256,bytes,bytes,bytes)": {
            "params": {
              "attPayload": "Raw payload with Attestation data",
              "attSignature": "Notary signature for the attestation",
              "snapPayload": "Raw payload with snapshot data",
              "stateIndex": "State index to check"
            },
            "returns": {
              "isValidState": "    Whether the provided state is valid.                          Notary is slashed, if return value is FALSE."
            }
          },
          "verifyStateWithSnapshot(uint256,bytes,bytes)": {
            "params": {
              "snapPayload": "Raw payload with snapshot data",
              "snapSignature": "Agent signature for the snapshot",
              "stateIndex": "State index to check"
            },
            "returns": {
              "isValidState": "    Whether the provided state is valid.                          Agent is slashed, if return value is FALSE."
            }
          },
          "verifyStateWithSnapshotProof(uint256,bytes,bytes32[],bytes,bytes)": {
            "params": {
              "attPayload": "Raw payload with Attestation data",
              "attSignature": "Notary signature for the attestation",
              "snapProof": "Proof of inclusion of provided State's Left Leaf into Snapshot Merkle Tree",
              "stateIndex": "Index of state in the snapshot",
              "statePayload": "Raw payload with State data to check"
            },
            "returns": {
              "isValidState": "    Whether the provided state is valid.                          Notary is slashed, if return value is FALSE."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getGuardReport(uint256)": {
            "notice": "Returns the Guard report with the given index stored in StatementInbox. > Only reports that led to opening a Dispute are stored."
          },
          "getReportsAmount()": {
            "notice": "Returns the amount of Guard Reports stored in StatementInbox. > Only reports that led to opening a Dispute are stored."
          },
          "getStoredSignature(uint256)": {
            "notice": "Returns the signature with the given index stored in StatementInbox."
          },
          "initialize(address,address,address,address)": {
            "notice": "Initializes `Inbox` contract: - Sets `msg.sender` as the owner of the contract - Sets `agentManager`, `origin`, `destination` and `summit` addresses"
          },
          "localDomain()": {
            "notice": "Domain of the local chain, set once upon contract creation"
          },
          "multicall((bool,bytes)[])": {
            "notice": "Aggregates a few calls to this contract into one multicall without modifying `msg.sender`."
          },
          "passReceipt(uint32,uint32,uint256,bytes)": {
            "notice": "Passes the message execution receipt from Destination to the Summit contract to save. > Will revert if any of these is true: > - Called by anyone other than Destination."
          },
          "submitReceipt(bytes,bytes,uint256,bytes32,bytes32)": {
            "notice": "Accepts a receipt signed by a Notary and passes it to Summit contract to save. > Receipt is a statement about message execution status on the remote chain. - This will distribute the message tips across the off-chain actors once the receipt optimistic period is over. > Will revert if any of these is true: > - Receipt payload is not properly formatted. > - Receipt signer is not an active Notary. > - Receipt signer is in Dispute. > - Receipt's snapshot root is unknown. > - Provided tips could not be proven against the message hash."
          },
          "submitReceiptReport(bytes,bytes,bytes)": {
            "notice": "Accepts a Guard's receipt report signature, as well as Notary signature for the reported Receipt. > ReceiptReport is a Guard statement saying \"Reported receipt is invalid\". - This results in an opened Dispute between the Guard and the Notary. - Note: Guard could (but doesn't have to) form a ReceiptReport and use receipt signature from `verifyReceipt()` successful call that led to Notary being slashed in Summit on Synapse Chain. > Will revert if any of these is true: > - Receipt payload is not properly formatted. > - Receipt Report signer is not an active Guard. > - Receipt signer is not an active Notary."
          },
          "submitSnapshot(bytes,bytes)": {
            "notice": "Accepts a snapshot signed by a Guard or a Notary and passes it to Summit contract to save. > Snapshot is a list of states for a set of Origin contracts residing on any of the chains. - Guard-signed snapshots: all the states in the snapshot become available for Notary signing. - Notary-signed snapshots: Snapshot Merkle Root is saved for valid snapshots, i.e. snapshots which are only using states previously submitted by any of the Guards. - Notary doesn't have to use states submitted by a single Guard in their snapshot. - Notary could then proceed to sign the attestation for their submitted snapshot. > Will revert if any of these is true: > - Snapshot payload is not properly formatted. > - Snapshot signer is not an active Agent. > - Agent snapshot contains a state with a nonce smaller or equal then they have previously submitted. > - Notary snapshot contains a state that hasn't been previously submitted by any of the Guards. > - Note: Agent will NOT be slashed for submitting such a snapshot."
          },
          "submitStateReportWithAttestation(uint256,bytes,bytes,bytes,bytes)": {
            "notice": "Accepts a Guard's state report signature, a Snapshot containing the reported State, as well as Notary signature for the Attestation created from this Snapshot. > StateReport is a Guard statement saying \"Reported state is invalid\". - This results in an opened Dispute between the Guard and the Notary. - Note: Guard could (but doesn't have to) form a StateReport and use other values from `verifyStateWithAttestation()` successful call that led to Notary being slashed in remote Origin. > Will revert if any of these is true: > - State Report signer is not an active Guard. > - Snapshot payload is not properly formatted. > - State index is out of range. > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary. > - Attestation's snapshot root is not equal to Merkle Root derived from the Snapshot. > - The Guard or the Notary are already in a Dispute"
          },
          "submitStateReportWithSnapshot(uint256,bytes,bytes,bytes)": {
            "notice": "Accepts a Guard's state report signature, a Snapshot containing the reported State, as well as Notary signature for the Snapshot. > StateReport is a Guard statement saying \"Reported state is invalid\". - This results in an opened Dispute between the Guard and the Notary. - Note: Guard could (but doesn't have to) form a StateReport and use other values from `verifyStateWithSnapshot()` successful call that led to Notary being slashed in remote Origin. > Will revert if any of these is true: > - State Report signer is not an active Guard. > - Snapshot payload is not properly formatted. > - Snapshot signer is not an active Notary. > - State index is out of range. > - The Guard or the Notary are already in a Dispute"
          },
          "submitStateReportWithSnapshotProof(uint256,bytes,bytes,bytes32[],bytes,bytes)": {
            "notice": "Accepts a Guard's state report signature, a proof of inclusion of the reported State in an Attestation, as well as Notary signature for the Attestation. > StateReport is a Guard statement saying \"Reported state is invalid\". - This results in an opened Dispute between the Guard and the Notary. - Note: Guard could (but doesn't have to) form a StateReport and use other values from `verifyStateWithSnapshotProof()` successful call that led to Notary being slashed in remote Origin. > Will revert if any of these is true: > - State payload is not properly formatted. > - State Report signer is not an active Guard. > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary. > - Attestation's snapshot root is not equal to Merkle Root derived from State and Snapshot Proof. > - Snapshot Proof's first element does not match the State metadata. > - Snapshot Proof length exceeds Snapshot Tree Height. > - State index is out of range. > - The Guard or the Notary are already in a Dispute"
          },
          "verifyAttestation(bytes,bytes)": {
            "notice": "Verifies an attestation signed by a Notary.  - Does nothing, if the attestation is valid (was submitted by this Notary as a snapshot).  - Slashes the Notary, if the attestation is invalid. > Will revert if any of these is true: > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary."
          },
          "verifyAttestationReport(bytes,bytes)": {
            "notice": "Verifies a Guard's attestation report signature.  - Does nothing, if the report is valid (if the reported attestation is invalid).  - Slashes the Guard, if the report is invalid (if the reported attestation is valid). > Will revert if any of these is true: > - Attestation payload is not properly formatted. > - Attestation Report signer is not an active Guard."
          },
          "verifyReceipt(bytes,bytes)": {
            "notice": "Verifies a message receipt signed by the Notary. - Does nothing, if the receipt is valid (matches the saved receipt data for the referenced message). - Slashes the Notary, if the receipt is invalid. > Will revert if any of these is true: > - Receipt payload is not properly formatted. > - Receipt signer is not an active Notary. > - Receipt's destination chain does not refer to this chain."
          },
          "verifyReceiptReport(bytes,bytes)": {
            "notice": "Verifies a Guard's receipt report signature. - Does nothing, if the report is valid (if the reported receipt is invalid). - Slashes the Guard, if the report is invalid (if the reported receipt is valid). > Will revert if any of these is true: > - Receipt payload is not properly formatted. > - Receipt Report signer is not an active Guard. > - Receipt does not refer to this chain."
          },
          "verifyStateReport(bytes,bytes)": {
            "notice": "Verifies a Guard's state report signature.  - Does nothing, if the report is valid (if the reported state is invalid).  - Slashes the Guard, if the report is invalid (if the reported state is valid). > Will revert if any of these is true: > - State payload is not properly formatted. > - State Report signer is not an active Guard. > - Reported State does not refer to this chain."
          },
          "verifyStateWithAttestation(uint256,bytes,bytes,bytes)": {
            "notice": "Verifies a state from the snapshot, that was used for the Notary-signed attestation. - Does nothing, if the state is valid (matches the historical state of this contract). - Slashes the Notary, if the state is invalid. > Will revert if any of these is true: > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary. > - Attestation's snapshot root is not equal to Merkle Root derived from the Snapshot. > - Snapshot payload is not properly formatted. > - State index is out of range. > - State does not refer to this chain."
          },
          "verifyStateWithSnapshot(uint256,bytes,bytes)": {
            "notice": "Verifies a state from the snapshot (a list of states) signed by a Guard or a Notary. - Does nothing, if the state is valid (matches the historical state of this contract). - Slashes the Agent, if the state is invalid. > Will revert if any of these is true: > - Snapshot payload is not properly formatted. > - Snapshot signer is not an active Agent. > - State index is out of range. > - State does not refer to this chain."
          },
          "verifyStateWithSnapshotProof(uint256,bytes,bytes32[],bytes,bytes)": {
            "notice": "Verifies a state from the snapshot, that was used for the Notary-signed attestation. - Does nothing, if the state is valid (matches the historical state of this contract). - Slashes the Notary, if the state is invalid. > Will revert if any of these is true: > - Attestation payload is not properly formatted. > - Attestation signer is not an active Notary. > - Attestation's snapshot root is not equal to Merkle Root derived from State and Snapshot Proof. > - Snapshot Proof's first element does not match the State metadata. > - Snapshot Proof length exceeds Snapshot Tree Height. > - State payload is not properly formatted. > - State index is out of range. > - State does not refer to this chain."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/inbox/Inbox.sol": "Inbox"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/MessagingBase.sol": {
        "keccak256": "0x01a7e9d9a5547e90d2efc4478485c7fc308a870d596a47d2b59383eaf2a02dd1",
        "urls": [
          "bzz-raw://2a5ab808e51515e2a8d2efccb3f9d89054c2fc7e9cb5f44514b734a097d8c114",
          "dweb:/ipfs/QmUJ1E1MXy1H2Nb8xCGA7hpsTMNF3CXNoU11qGyd5M8498"
        ],
        "license": "MIT"
      },
      "contracts/base/MultiCallable.sol": {
        "keccak256": "0x9645f1629cdf8db803c40725f6b0ee165df64bfc142db4613efd385a88f13699",
        "urls": [
          "bzz-raw://cc99799fdd946c11c893b89dad922822c866d14bdecded86913948a146f71053",
          "dweb:/ipfs/QmZGRZuhU2w6pAStcaQ5NyzyeUn69nJCJd9a9NnjuBVLsn"
        ],
        "license": "MIT"
      },
      "contracts/base/Version.sol": {
        "keccak256": "0x63131bbdb149a0c83685da246afc0faa71d1009a20154b1f39650cef4369fe84",
        "urls": [
          "bzz-raw://21f001efca9d0550162dd1154f5b1d977c85a703e6df883103638ae0fe65af9b",
          "dweb:/ipfs/QmX3BfuJ3yKxWFXphq6RcKcGrja1v5xJQ1fFCwRQvGV8u8"
        ],
        "license": "MIT"
      },
      "contracts/events/InboxEvents.sol": {
        "keccak256": "0x4e834b480f9fba7e803fdce5e22f55a2c4e78a8198a0e34e2bb741e9c998299b",
        "urls": [
          "bzz-raw://56c46f45e8e395fae57202449cf8d0786416360906447c400f740cacefd90425",
          "dweb:/ipfs/QmWZLaJAz1ZJuoas3x1NhDtGyAVWCHuzbA8bASXV5Va4Y3"
        ],
        "license": "MIT"
      },
      "contracts/events/StatementInboxEvents.sol": {
        "keccak256": "0x31b50f36f0c2060313ea7a8b6564057449c9a957a77d202c5ec3c02623c20511",
        "urls": [
          "bzz-raw://d794adac1f7491f684964233bb3d5152402555dfe20743bb8c8ca1a61c17a5d8",
          "dweb:/ipfs/QmZbj2btws52KkpHy8maks6xkqL9nq76LZx8ey2QKmxeFS"
        ],
        "license": "MIT"
      },
      "contracts/inbox/Inbox.sol": {
        "keccak256": "0x8e1103df8745e18d3482db5e3ca0a311fb74e51cb5c0ba33f00aefa60537e44f",
        "urls": [
          "bzz-raw://da9b996949c79204e7f4e1a32aaf3e18b0c551e4d03d5619054b25d1827c4851",
          "dweb:/ipfs/QmQ7HxVf2oAvzD7G7ZvSr72YTZiowWaD5jnnsfFsCBzXbn"
        ],
        "license": "MIT"
      },
      "contracts/inbox/StatementInbox.sol": {
        "keccak256": "0x097c1578b0f71f3a090bd0f9340e55e59056944351cf82f55eda43f5d01cdfd9",
        "urls": [
          "bzz-raw://4e6182a19c0f82a755817b1ee6de921703b36cf9f2ad418a7293f4b6917ac375",
          "dweb:/ipfs/QmYNxEDbZ6VAitzbk1kHFKcaaZ5EtCZiyzuMyL8Hu3SxBX"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IAgentManager.sol": {
        "keccak256": "0xc6fded8bc39cdb24e2bc038ba9b0ae168ad42fb15ed9d5883b89940b4e970a10",
        "urls": [
          "bzz-raw://898f25a9d1f375ab7e5dc7cd791263934b50d3b0a44dc29a4c914578a1b06339",
          "dweb:/ipfs/QmXi3CVhvWpGxVvmw4n7UvEoX2bD2ZD2rg4oZhYETYWJ3a"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IExecutionHub.sol": {
        "keccak256": "0x98f6ff39ecb926b480474d122350d753ca18358ca4d18d36d1850ec7af7ae6f0",
        "urls": [
          "bzz-raw://36485341a0ed70b0f151b258124f6a0db003f5d37af22b8bea65b8d5249a252d",
          "dweb:/ipfs/QmfBEDFSGwnSjTyv2AZuuUDjrqWRvacyCx46dXegioWMDL"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ISnapshotHub.sol": {
        "keccak256": "0x3640a263eb4af25646250affc0fe8c666df03e11fa36da4823363b46a878160b",
        "urls": [
          "bzz-raw://fafb6b8f21c1a392b8d2f1f0a380bfe48bef18862f9519f69fe23e29e03b55ad",
          "dweb:/ipfs/Qmakg3WLAB1r7SyVnP8Db2ofzsV4RmsPDzk6wf3PS35kcX"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStateHub.sol": {
        "keccak256": "0x26cf1842739cb65203ed5f243879b11939d2e77c46cc629349f016d667c003f1",
        "urls": [
          "bzz-raw://d8f9959d5230d5b0cac7bc3171cee2cfd95ab548bbcff0da3b06d02a02f61f31",
          "dweb:/ipfs/QmezRqMJF1MfxxU8dzXYFVteBTPq4yuaMVZLNVTMayUzuV"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStatementInbox.sol": {
        "keccak256": "0x99c93edd056d33d33ce57ae7d6d17328b88e94fe971c4e9d23d2fceaa9f1e41c",
        "urls": [
          "bzz-raw://76a2cf74f7a24ab3c669efab5372dff18a29463504b09a0d3dde4b4184a2eff3",
          "dweb:/ipfs/Qmb1sy2izNESmgS8FVkFHMXpWc2UM3unQeKMghFYCHNfn4"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceDestination.sol": {
        "keccak256": "0x708371d239580f8e6dc44e790fd32f47e074cbfb8ae9e75609adbc0de303678c",
        "urls": [
          "bzz-raw://e5061c85c3779304f5c3919d2b1bc6620d1029a4ead7186c3f3f5b409a9bd855",
          "dweb:/ipfs/QmW4Hrz2NGMCRV2Rqv22G4xArsR4jUZtNr1garSR8AZud6"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceInbox.sol": {
        "keccak256": "0x86dbe24a32f5d09a9620f37f9af69710ba54703edd66ace3ba90e8335ef77246",
        "urls": [
          "bzz-raw://fb9d7a21b3108cc86013aef80ba9a7e4a91aa8af6dd71aca5d47d26e85d213b0",
          "dweb:/ipfs/QmS2om4PmNgHJkVP92hwoHvBngH9HwmwZJnVMHhqeVj5ZY"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceSummit.sol": {
        "keccak256": "0xeb60c7097b7e8a82e30e4e4e7788810d029a0bb013eb71d0e47d062abeb14494",
        "urls": [
          "bzz-raw://cc35dbea34e34c513507575b9189806412e6e0d9dd6c7c34c5e598a89c58ed43",
          "dweb:/ipfs/QmTe6U1pB7AQaDiRdQRGktx96BWkGQdb8vLqtSpqCu3XDK"
        ],
        "license": "MIT"
      },
      "contracts/libs/Constants.sol": {
        "keccak256": "0x9ead9581411ac7f702ccba26e3f478610f8c9c785ec3f96f3d9324d162177c2c",
        "urls": [
          "bzz-raw://cba4a834737651bee39e2abca02d59e676cd149439d21182ab6e4320d5e61279",
          "dweb:/ipfs/QmS2K5LKspFZPKuedWoaqywUw6v1nH9xdHa35dN8J9jDEi"
        ],
        "license": "MIT"
      },
      "contracts/libs/Errors.sol": {
        "keccak256": "0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011",
        "urls": [
          "bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b",
          "dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB"
        ],
        "license": "MIT"
      },
      "contracts/libs/Structures.sol": {
        "keccak256": "0x3eaa63f5d9aac514328111e8fdd037dc6fdb18af7541a8287deeacd2e44f7137",
        "urls": [
          "bzz-raw://633619910c74a0685ef2993a2e7cc44088929121a15c8a9fc26c9bbadffbda71",
          "dweb:/ipfs/QmZceJv6UntiMWW4JZHbmytLsqXshbuav8yoiritksvqqy"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Attestation.sol": {
        "keccak256": "0x83b58e2d80cc7139b8996c51c5e9015f34e833e73b92036b53a1af6641e2b699",
        "urls": [
          "bzz-raw://1a097c82542ba977de931c6331a9b01a39ef2e46b8916414a6f4f550bc59c113",
          "dweb:/ipfs/QmYRHMoPXzrnx86rZnHAEiFxqM5poEs6wyZinLLTEfwZH3"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/MemView.sol": {
        "keccak256": "0x95dd48e50e353b59fadce29f22f02629c91bd3b5e07c0efa588bd7c808536587",
        "urls": [
          "bzz-raw://4347457c5338192aca52c237c7f588d15a4f541482cd44b0632c59f36f9558eb",
          "dweb:/ipfs/QmXn1sKY7nVNrgKtbtE9PaMHFKBadyg73fs2jhw4Navyb1"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Receipt.sol": {
        "keccak256": "0x009e8cfffa4806d1a0a326a31350ead092c9cd22105d4890c86bf93d20c7824d",
        "urls": [
          "bzz-raw://aa9905170f86e4e2d9b62e9fabaab36381398da14f001e0b9bb98c31c174a48e",
          "dweb:/ipfs/QmYpHjdY2yf3w6kFi9urUTyrMyVZBBsCGGEkE1kyTnXqVn"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/Snapshot.sol": {
        "keccak256": "0x5df6aa04b1cbb65e410c7f1a02787e0e11dbcdb5cde18ae50d435029c27c1ce5",
        "urls": [
          "bzz-raw://d2e19b5c6778338b7e8e9c8ef82738797d8955d37884c7db70d7cdea43329910",
          "dweb:/ipfs/Qma1cRGHqRM3tkh5JyzR2Td6iKKST2HapTygBwVNTRJJZD"
        ],
        "license": "MIT"
      },
      "contracts/libs/memory/State.sol": {
        "keccak256": "0x3997f3a820110b3bce6f87ea8df3e1f8b006d1ac45efff1dc2f8873f8bbfa5af",
        "urls": [
          "bzz-raw://bf973a3633546dfff75b550673b4a680b7fab48d7fc8923157983a4fde3d5da4",
          "dweb:/ipfs/QmZ8NNwcYaqVxtar8g5MH5mqDXXuMTQLe6vi7zYGswFA3N"
        ],
        "license": "MIT"
      },
      "contracts/libs/merkle/MerkleMath.sol": {
        "keccak256": "0xbd13c07bdc40b80f56c7d75e3f31b6c4a85a78d444b760604a5b71083d14925c",
        "urls": [
          "bzz-raw://3162b491e4e216c0f2d143ce3baab4cf9e2a8b1b42466256a5d5b1f8b0385507",
          "dweb:/ipfs/QmYnDSZyxiGHfmB8Fx46zh1LZe3aCdVaKzpaQuD9piTc7u"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/GasData.sol": {
        "keccak256": "0x2007fd4b97cf33bfe4aa7dc6ac887af87b4010ec9834636b4dd5685582ac26cb",
        "urls": [
          "bzz-raw://8b54ca8b659d63ef7138c5b3b243190ca19b1e893b7b49dee1f8790d55b9e691",
          "dweb:/ipfs/Qmc2FGb16uosZ5kvyEK2onpWVPvWeE9X72xNWeJw8CbweD"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Number.sol": {
        "keccak256": "0xe4e0d66268eb69304cda001a3e03242e9f4af8680830c92b3d6ebe83e96acb96",
        "urls": [
          "bzz-raw://f70c28a10a2d34849614ff51c74f8c6107093b4d01eb865b2ab0d4efe9294cfd",
          "dweb:/ipfs/QmQbXCnHfPJjdNCK1UuQ2ShNan6H7j5s9DLS4HygQ5wfP5"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Tips.sol": {
        "keccak256": "0x2186d854149349ff689a8356c7f387d134f59fa4a97aed7b43c9e25f46661b0d",
        "urls": [
          "bzz-raw://ff15d61f2c9b26e6ef33457aed4a2d9ed61726e2a746d3e0a7e68eb6cd3d63a1",
          "dweb:/ipfs/QmUeiiTAjPmuFhLfzDMqZ6DyvQmEYhsKo9XArHSrMvjYKL"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34",
        "urls": [
          "bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7",
          "dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba",
        "urls": [
          "bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8",
          "dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d",
        "urls": [
          "bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f",
          "dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5",
        "urls": [
          "bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900",
          "dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/inbox/Inbox.sol",
    "id": 7539,
    "exportedSymbols": {
      "AgentStatus": [
        10357
      ],
      "Attestation": [
        10527
      ],
      "AttestationLib": [
        10809
      ],
      "CallerNotDestination": [
        10176
      ],
      "ChainGas": [
        14599
      ],
      "IAgentManager": [
        9127
      ],
      "IExecutionHub": [
        9234
      ],
      "ISnapshotHub": [
        9341
      ],
      "Inbox": [
        7538
      ],
      "InboxEvents": [
        4000
      ],
      "IncorrectAgentDomain": [
        10184
      ],
      "IncorrectSnapshotRoot": [
        10198
      ],
      "IncorrectTipsProof": [
        10204
      ],
      "InterfaceDestination": [
        9719
      ],
      "InterfaceInbox": [
        9844
      ],
      "InterfaceSummit": [
        10053
      ],
      "MerkleMath": [
        14266
      ],
      "MessagingBase": [
        2851
      ],
      "MustBeSynapseDomain": [
        10290
      ],
      "Receipt": [
        12600
      ],
      "ReceiptLib": [
        12956
      ],
      "SYNAPSE_DOMAIN": [
        10170
      ],
      "Snapshot": [
        12980
      ],
      "SnapshotLib": [
        13418
      ],
      "StatementInbox": [
        9030
      ],
      "Tips": [
        15578
      ],
      "TipsLib": [
        15905
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:12707:27",
    "nodes": [
      {
        "id": 6900,
        "nodeType": "PragmaDirective",
        "src": "32:23:27",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 6903,
        "nodeType": "ImportDirective",
        "src": "258:75:27",
        "nodes": [],
        "absolutePath": "contracts/libs/memory/Attestation.sol",
        "file": "../libs/memory/Attestation.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7539,
        "sourceUnit": 10810,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6901,
              "name": "Attestation",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10527,
              "src": "266:11:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 6902,
              "name": "AttestationLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10809,
              "src": "279:14:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6909,
        "nodeType": "ImportDirective",
        "src": "334:164:27",
        "nodes": [],
        "absolutePath": "contracts/libs/Errors.sol",
        "file": "../libs/Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7539,
        "sourceUnit": 10335,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6904,
              "name": "CallerNotDestination",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10176,
              "src": "347:20:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 6905,
              "name": "IncorrectAgentDomain",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10184,
              "src": "373:20:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 6906,
              "name": "IncorrectSnapshotRoot",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10198,
              "src": "399:21:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 6907,
              "name": "IncorrectTipsProof",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10204,
              "src": "426:18:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 6908,
              "name": "MustBeSynapseDomain",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10290,
              "src": "450:19:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6911,
        "nodeType": "ImportDirective",
        "src": "499:53:27",
        "nodes": [],
        "absolutePath": "contracts/libs/Constants.sol",
        "file": "../libs/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7539,
        "sourceUnit": 10171,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6910,
              "name": "SYNAPSE_DOMAIN",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10170,
              "src": "507:14:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6913,
        "nodeType": "ImportDirective",
        "src": "553:51:27",
        "nodes": [],
        "absolutePath": "contracts/libs/stack/GasData.sol",
        "file": "../libs/stack/GasData.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7539,
        "sourceUnit": 14992,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6912,
              "name": "ChainGas",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14599,
              "src": "561:8:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6915,
        "nodeType": "ImportDirective",
        "src": "605:57:27",
        "nodes": [],
        "absolutePath": "contracts/libs/merkle/MerkleMath.sol",
        "file": "../libs/merkle/MerkleMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7539,
        "sourceUnit": 14267,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6914,
              "name": "MerkleMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14266,
              "src": "613:10:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6918,
        "nodeType": "ImportDirective",
        "src": "663:63:27",
        "nodes": [],
        "absolutePath": "contracts/libs/memory/Receipt.sol",
        "file": "../libs/memory/Receipt.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7539,
        "sourceUnit": 12957,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6916,
              "name": "Receipt",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12600,
              "src": "671:7:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 6917,
              "name": "ReceiptLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12956,
              "src": "680:10:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6921,
        "nodeType": "ImportDirective",
        "src": "727:66:27",
        "nodes": [],
        "absolutePath": "contracts/libs/memory/Snapshot.sol",
        "file": "../libs/memory/Snapshot.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7539,
        "sourceUnit": 13419,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6919,
              "name": "Snapshot",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12980,
              "src": "735:8:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 6920,
              "name": "SnapshotLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13418,
              "src": "745:11:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6923,
        "nodeType": "ImportDirective",
        "src": "794:51:27",
        "nodes": [],
        "absolutePath": "contracts/libs/Structures.sol",
        "file": "../libs/Structures.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7539,
        "sourceUnit": 10474,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6922,
              "name": "AgentStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10357,
              "src": "802:11:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6926,
        "nodeType": "ImportDirective",
        "src": "846:53:27",
        "nodes": [],
        "absolutePath": "contracts/libs/stack/Tips.sol",
        "file": "../libs/stack/Tips.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7539,
        "sourceUnit": 15906,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6924,
              "name": "Tips",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 15578,
              "src": "854:4:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 6925,
              "name": "TipsLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 15905,
              "src": "860:7:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6928,
        "nodeType": "ImportDirective",
        "src": "1099:52:27",
        "nodes": [],
        "absolutePath": "contracts/inbox/StatementInbox.sol",
        "file": "./StatementInbox.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7539,
        "sourceUnit": 9031,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6927,
              "name": "StatementInbox",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9030,
              "src": "1107:14:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6930,
        "nodeType": "ImportDirective",
        "src": "1152:56:27",
        "nodes": [],
        "absolutePath": "contracts/base/MessagingBase.sol",
        "file": "../base/MessagingBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7539,
        "sourceUnit": 2852,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6929,
              "name": "MessagingBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2851,
              "src": "1160:13:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6932,
        "nodeType": "ImportDirective",
        "src": "1209:54:27",
        "nodes": [],
        "absolutePath": "contracts/events/InboxEvents.sol",
        "file": "../events/InboxEvents.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7539,
        "sourceUnit": 4001,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6931,
              "name": "InboxEvents",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4000,
              "src": "1217:11:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6934,
        "nodeType": "ImportDirective",
        "src": "1264:62:27",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IAgentManager.sol",
        "file": "../interfaces/IAgentManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7539,
        "sourceUnit": 9128,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6933,
              "name": "IAgentManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9127,
              "src": "1272:13:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6936,
        "nodeType": "ImportDirective",
        "src": "1327:76:27",
        "nodes": [],
        "absolutePath": "contracts/interfaces/InterfaceDestination.sol",
        "file": "../interfaces/InterfaceDestination.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7539,
        "sourceUnit": 9720,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6935,
              "name": "InterfaceDestination",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9719,
              "src": "1335:20:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6938,
        "nodeType": "ImportDirective",
        "src": "1404:62:27",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IExecutionHub.sol",
        "file": "../interfaces/IExecutionHub.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7539,
        "sourceUnit": 9235,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6937,
              "name": "IExecutionHub",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9234,
              "src": "1412:13:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6940,
        "nodeType": "ImportDirective",
        "src": "1467:64:27",
        "nodes": [],
        "absolutePath": "contracts/interfaces/InterfaceInbox.sol",
        "file": "../interfaces/InterfaceInbox.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7539,
        "sourceUnit": 9845,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6939,
              "name": "InterfaceInbox",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9844,
              "src": "1475:14:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6942,
        "nodeType": "ImportDirective",
        "src": "1532:60:27",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ISnapshotHub.sol",
        "file": "../interfaces/ISnapshotHub.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7539,
        "sourceUnit": 9342,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6941,
              "name": "ISnapshotHub",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9341,
              "src": "1540:12:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6944,
        "nodeType": "ImportDirective",
        "src": "1593:66:27",
        "nodes": [],
        "absolutePath": "contracts/interfaces/InterfaceSummit.sol",
        "file": "../interfaces/InterfaceSummit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7539,
        "sourceUnit": 10054,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6943,
              "name": "InterfaceSummit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10053,
              "src": "1601:15:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7538,
        "nodeType": "ContractDefinition",
        "src": "2151:10587:27",
        "nodes": [
          {
            "id": 6954,
            "nodeType": "UsingForDirective",
            "src": "2219:31:27",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 6952,
              "name": "AttestationLib",
              "nameLocations": [
                "2225:14:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10809,
              "src": "2225:14:27"
            },
            "typeName": {
              "id": 6953,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2244:5:27",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "id": 6957,
            "nodeType": "UsingForDirective",
            "src": "2255:27:27",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 6955,
              "name": "ReceiptLib",
              "nameLocations": [
                "2261:10:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12956,
              "src": "2261:10:27"
            },
            "typeName": {
              "id": 6956,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2276:5:27",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "id": 6960,
            "nodeType": "UsingForDirective",
            "src": "2287:28:27",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 6958,
              "name": "SnapshotLib",
              "nameLocations": [
                "2293:11:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13418,
              "src": "2293:11:27"
            },
            "typeName": {
              "id": 6959,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2309:5:27",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "id": 6971,
            "nodeType": "StructDefinition",
            "src": "2390:150:27",
            "nodes": [],
            "canonicalName": "Inbox.ReceiptInfo",
            "members": [
              {
                "constant": false,
                "id": 6963,
                "mutability": "mutable",
                "name": "rcptNotaryStatus",
                "nameLocation": "2431:16:27",
                "nodeType": "VariableDeclaration",
                "scope": 6971,
                "src": "2419:28:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AgentStatus_$10357_storage_ptr",
                  "typeString": "struct AgentStatus"
                },
                "typeName": {
                  "id": 6962,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 6961,
                    "name": "AgentStatus",
                    "nameLocations": [
                      "2419:11:27"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 10357,
                    "src": "2419:11:27"
                  },
                  "referencedDeclaration": 10357,
                  "src": "2419:11:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AgentStatus_$10357_storage_ptr",
                    "typeString": "struct AgentStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6965,
                "mutability": "mutable",
                "name": "notary",
                "nameLocation": "2465:6:27",
                "nodeType": "VariableDeclaration",
                "scope": 6971,
                "src": "2457:14:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6964,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2457:7:27",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6967,
                "mutability": "mutable",
                "name": "attNonce",
                "nameLocation": "2488:8:27",
                "nodeType": "VariableDeclaration",
                "scope": 6971,
                "src": "2481:15:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 6966,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2481:6:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6970,
                "mutability": "mutable",
                "name": "attNotaryStatus",
                "nameLocation": "2518:15:27",
                "nodeType": "VariableDeclaration",
                "scope": 6971,
                "src": "2506:27:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AgentStatus_$10357_storage_ptr",
                  "typeString": "struct AgentStatus"
                },
                "typeName": {
                  "id": 6969,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 6968,
                    "name": "AgentStatus",
                    "nameLocations": [
                      "2506:11:27"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 10357,
                    "src": "2506:11:27"
                  },
                  "referencedDeclaration": 10357,
                  "src": "2506:11:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AgentStatus_$10357_storage_ptr",
                    "typeString": "struct AgentStatus"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ReceiptInfo",
            "nameLocation": "2397:11:27",
            "scope": 7538,
            "visibility": "public"
          },
          {
            "id": 6973,
            "nodeType": "VariableDeclaration",
            "src": "2919:21:27",
            "nodes": [],
            "constant": false,
            "functionSelector": "9fbcb9cb",
            "mutability": "mutable",
            "name": "summit",
            "nameLocation": "2934:6:27",
            "scope": 7538,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6972,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2919:7:27",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6990,
            "nodeType": "FunctionDefinition",
            "src": "3241:133:27",
            "nodes": [],
            "body": {
              "id": 6989,
              "nodeType": "Block",
              "src": "3299:75:27",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 6984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6982,
                      "name": "domain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6975,
                      "src": "3313:6:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 6983,
                      "name": "SYNAPSE_DOMAIN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10170,
                      "src": "3323:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3313:24:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6988,
                  "nodeType": "IfStatement",
                  "src": "3309:58:27",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6985,
                        "name": "MustBeSynapseDomain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10290,
                        "src": "3346:19:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 6986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3346:21:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 6987,
                    "nodeType": "RevertStatement",
                    "src": "3339:28:27"
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "302e302e33",
                    "id": 6978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3282:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cf7237ef3acb94b87ad359c2a069e622db390803036159a6818cbdd245669abf",
                      "typeString": "literal_string \"0.0.3\""
                    },
                    "value": "0.0.3"
                  },
                  {
                    "id": 6979,
                    "name": "domain",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6975,
                    "src": "3291:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 6980,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6977,
                  "name": "MessagingBase",
                  "nameLocations": [
                    "3268:13:27"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2851,
                  "src": "3268:13:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "3268:30:27"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6975,
                  "mutability": "mutable",
                  "name": "domain",
                  "nameLocation": "3260:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6990,
                  "src": "3253:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 6974,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3253:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3252:15:27"
            },
            "returnParameters": {
              "id": 6981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3299:0:27"
            },
            "scope": 7538,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 7015,
            "nodeType": "FunctionDefinition",
            "src": "3561:242:27",
            "nodes": [],
            "body": {
              "id": 7014,
              "nodeType": "Block",
              "src": "3701:102:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7005,
                        "name": "agentManager_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6993,
                        "src": "3733:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7006,
                        "name": "origin_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6995,
                        "src": "3748:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7007,
                        "name": "destination_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6997,
                        "src": "3757:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7004,
                      "name": "__StatementInbox_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7884,
                      "src": "3711:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 7008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3711:59:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7009,
                  "nodeType": "ExpressionStatement",
                  "src": "3711:59:27"
                },
                {
                  "expression": {
                    "id": 7012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7010,
                      "name": "summit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6973,
                      "src": "3780:6:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7011,
                      "name": "summit_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6999,
                      "src": "3789:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3780:16:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7013,
                  "nodeType": "ExpressionStatement",
                  "src": "3780:16:27"
                }
              ]
            },
            "documentation": {
              "id": 6991,
              "nodeType": "StructuredDocumentation",
              "src": "3380:176:27",
              "text": "@notice Initializes `Inbox` contract:\n - Sets `msg.sender` as the owner of the contract\n - Sets `agentManager`, `origin`, `destination` and `summit` addresses"
            },
            "functionSelector": "f8c8765e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7002,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7001,
                  "name": "initializer",
                  "nameLocations": [
                    "3685:11:27"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46735,
                  "src": "3685:11:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "3685:11:27"
              }
            ],
            "name": "initialize",
            "nameLocation": "3570:10:27",
            "parameters": {
              "id": 7000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6993,
                  "mutability": "mutable",
                  "name": "agentManager_",
                  "nameLocation": "3589:13:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7015,
                  "src": "3581:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3581:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6995,
                  "mutability": "mutable",
                  "name": "origin_",
                  "nameLocation": "3612:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7015,
                  "src": "3604:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3604:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6997,
                  "mutability": "mutable",
                  "name": "destination_",
                  "nameLocation": "3629:12:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7015,
                  "src": "3621:20:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3621:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6999,
                  "mutability": "mutable",
                  "name": "summit_",
                  "nameLocation": "3651:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7015,
                  "src": "3643:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3643:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3580:79:27"
            },
            "returnParameters": {
              "id": 7003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3701:0:27"
            },
            "scope": 7538,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7132,
            "nodeType": "FunctionDefinition",
            "src": "4142:2138:27",
            "nodes": [],
            "body": {
              "id": 7131,
              "nodeType": "Block",
              "src": "4329:1951:27",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7032
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7032,
                      "mutability": "mutable",
                      "name": "snapshot",
                      "nameLocation": "4405:8:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7131,
                      "src": "4396:17:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Snapshot_$12980",
                        "typeString": "Snapshot"
                      },
                      "typeName": {
                        "id": 7031,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7030,
                          "name": "Snapshot",
                          "nameLocations": [
                            "4396:8:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12980,
                          "src": "4396:8:27"
                        },
                        "referencedDeclaration": 12980,
                        "src": "4396:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Snapshot_$12980",
                          "typeString": "Snapshot"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7036,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7033,
                        "name": "snapPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7018,
                        "src": "4416:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 7034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4428:14:27",
                      "memberName": "castToSnapshot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13072,
                      "src": "4416:26:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_userDefinedValueType$_Snapshot_$12980_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (Snapshot)"
                      }
                    },
                    "id": 7035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4416:28:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Snapshot_$12980",
                      "typeString": "Snapshot"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4396:48:27"
                },
                {
                  "assignments": [
                    7039,
                    7041
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7039,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "4544:6:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7131,
                      "src": "4525:25:27",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                        "typeString": "struct AgentStatus"
                      },
                      "typeName": {
                        "id": 7038,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7037,
                          "name": "AgentStatus",
                          "nameLocations": [
                            "4525:11:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10357,
                          "src": "4525:11:27"
                        },
                        "referencedDeclaration": 10357,
                        "src": "4525:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_storage_ptr",
                          "typeString": "struct AgentStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7041,
                      "mutability": "mutable",
                      "name": "agent",
                      "nameLocation": "4560:5:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7131,
                      "src": "4552:13:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7040,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4552:7:27",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7047,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7043,
                        "name": "snapshot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7032,
                        "src": "4608:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Snapshot_$12980",
                          "typeString": "Snapshot"
                        }
                      },
                      {
                        "id": 7044,
                        "name": "snapSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7020,
                        "src": "4633:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 7045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4662:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Snapshot_$12980",
                          "typeString": "Snapshot"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7042,
                      "name": "_verifySnapshot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8975,
                      "src": "4581:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Snapshot_$12980_$_t_bytes_memory_ptr_$_t_bool_$returns$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                        "typeString": "function (Snapshot,bytes memory,bool) view returns (struct AgentStatus memory,address)"
                      }
                    },
                    "id": 7046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "4598:8:27",
                      "4618:13:27",
                      "4648:12:27"
                    ],
                    "names": [
                      "snapshot",
                      "snapSignature",
                      "verifyNotary"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4581:88:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                      "typeString": "tuple(struct AgentStatus memory,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4524:145:27"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7048,
                        "name": "status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7039,
                        "src": "4717:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                          "typeString": "struct AgentStatus memory"
                        }
                      },
                      "id": 7050,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4724:12:27",
                      "memberName": "verifyActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10394,
                      "src": "4717:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_AgentStatus_$10357_memory_ptr_$returns$__$bound_to$_t_struct$_AgentStatus_$10357_memory_ptr_$",
                        "typeString": "function (struct AgentStatus memory) pure"
                      }
                    },
                    "id": 7051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4717:21:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7052,
                  "nodeType": "ExpressionStatement",
                  "src": "4717:21:27"
                },
                {
                  "assignments": [
                    7054
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7054,
                      "mutability": "mutable",
                      "name": "sigIndex",
                      "nameLocation": "4806:8:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7131,
                      "src": "4798:16:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7053,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4798:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7058,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7056,
                        "name": "snapSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7020,
                        "src": "4832:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7055,
                      "name": "_saveSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8706,
                      "src": "4817:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes memory) returns (uint256)"
                      }
                    },
                    "id": 7057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4817:29:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4798:48:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 7062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 7059,
                        "name": "status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7039,
                        "src": "4860:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                          "typeString": "struct AgentStatus memory"
                        }
                      },
                      "id": 7060,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4867:6:27",
                      "memberName": "domain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10354,
                      "src": "4860:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4877:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4860:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 7121,
                    "nodeType": "Block",
                    "src": "5187:1006:27",
                    "statements": [
                      {
                        "expression": {
                          "id": 7080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7074,
                            "name": "agentRoot_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7025,
                            "src": "5256:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 7076,
                                    "name": "agentManager",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7840,
                                    "src": "5283:12:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 7075,
                                  "name": "IAgentManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9127,
                                  "src": "5269:13:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IAgentManager_$9127_$",
                                    "typeString": "type(contract IAgentManager)"
                                  }
                                },
                                "id": 7077,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5269:27:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAgentManager_$9127",
                                  "typeString": "contract IAgentManager"
                                }
                              },
                              "id": 7078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5297:9:27",
                              "memberName": "agentRoot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9067,
                              "src": "5269:37:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                "typeString": "function () view external returns (bytes32)"
                              }
                            },
                            "id": 7079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5269:39:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5256:52:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 7081,
                        "nodeType": "ExpressionStatement",
                        "src": "5256:52:27"
                      },
                      {
                        "expression": {
                          "id": 7093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7082,
                            "name": "attPayload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7023,
                            "src": "5378:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 7087,
                                  "name": "status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7039,
                                  "src": "5467:6:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                                    "typeString": "struct AgentStatus memory"
                                  }
                                },
                                "id": 7088,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5474:5:27",
                                "memberName": "index",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10356,
                                "src": "5467:12:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              {
                                "id": 7089,
                                "name": "sigIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7054,
                                "src": "5507:8:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 7090,
                                "name": "agentRoot_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7025,
                                "src": "5544:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 7091,
                                "name": "snapPayload",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7018,
                                "src": "5585:11:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 7084,
                                    "name": "summit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6973,
                                    "src": "5407:6:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 7083,
                                  "name": "InterfaceSummit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10053,
                                  "src": "5391:15:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_InterfaceSummit_$10053_$",
                                    "typeString": "type(contract InterfaceSummit)"
                                  }
                                },
                                "id": 7085,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5391:23:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_InterfaceSummit_$10053",
                                  "typeString": "contract InterfaceSummit"
                                }
                              },
                              "id": 7086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5415:20:27",
                              "memberName": "acceptNotarySnapshot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10012,
                              "src": "5391:44:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (uint32,uint256,bytes32,bytes memory) external returns (bytes memory)"
                              }
                            },
                            "id": 7092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "5454:11:27",
                              "5497:8:27",
                              "5533:9:27",
                              "5572:11:27"
                            ],
                            "names": [
                              "notaryIndex",
                              "sigIndex",
                              "agentRoot",
                              "snapPayload"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "5391:220:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "5378:233:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 7094,
                        "nodeType": "ExpressionStatement",
                        "src": "5378:233:27"
                      },
                      {
                        "assignments": [
                          7099
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7099,
                            "mutability": "mutable",
                            "name": "snapGas_",
                            "nameLocation": "5643:8:27",
                            "nodeType": "VariableDeclaration",
                            "scope": 7121,
                            "src": "5625:26:27",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_userDefinedValueType$_ChainGas_$14599_$dyn_memory_ptr",
                              "typeString": "ChainGas[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 7097,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 7096,
                                  "name": "ChainGas",
                                  "nameLocations": [
                                    "5625:8:27"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 14599,
                                  "src": "5625:8:27"
                                },
                                "referencedDeclaration": 14599,
                                "src": "5625:8:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_ChainGas_$14599",
                                  "typeString": "ChainGas"
                                }
                              },
                              "id": 7098,
                              "nodeType": "ArrayTypeName",
                              "src": "5625:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_userDefinedValueType$_ChainGas_$14599_$dyn_storage_ptr",
                                "typeString": "ChainGas[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7103,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 7100,
                              "name": "snapshot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7032,
                              "src": "5654:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Snapshot_$12980",
                                "typeString": "Snapshot"
                              }
                            },
                            "id": 7101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5663:7:27",
                            "memberName": "snapGas",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13289,
                            "src": "5654:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Snapshot_$12980_$returns$_t_array$_t_userDefinedValueType$_ChainGas_$14599_$dyn_memory_ptr_$bound_to$_t_userDefinedValueType$_Snapshot_$12980_$",
                              "typeString": "function (Snapshot) pure returns (ChainGas[] memory)"
                            }
                          },
                          "id": 7102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5654:18:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_userDefinedValueType$_ChainGas_$14599_$dyn_memory_ptr",
                            "typeString": "ChainGas[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5625:47:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7108,
                                "name": "status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7039,
                                "src": "5863:6:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                                  "typeString": "struct AgentStatus memory"
                                }
                              },
                              "id": 7109,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5870:5:27",
                              "memberName": "index",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10356,
                              "src": "5863:12:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 7112,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5882:7:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 7111,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5882:7:27",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 7110,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "5877:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 7113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5877:13:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 7114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5891:3:27",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "5877:17:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 7115,
                              "name": "attPayload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7023,
                              "src": "5896:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 7116,
                              "name": "agentRoot_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7025,
                              "src": "5908:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 7117,
                              "name": "snapGas_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7099,
                              "src": "5920:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_userDefinedValueType$_ChainGas_$14599_$dyn_memory_ptr",
                                "typeString": "ChainGas[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_array$_t_userDefinedValueType$_ChainGas_$14599_$dyn_memory_ptr",
                                "typeString": "ChainGas[] memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7105,
                                  "name": "destination",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7844,
                                  "src": "5815:11:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7104,
                                "name": "InterfaceDestination",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9719,
                                "src": "5794:20:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_InterfaceDestination_$9719_$",
                                  "typeString": "type(contract InterfaceDestination)"
                                }
                              },
                              "id": 7106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5794:33:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_InterfaceDestination_$9719",
                                "typeString": "contract InterfaceDestination"
                              }
                            },
                            "id": 7107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5828:17:27",
                            "memberName": "acceptAttestation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9675,
                            "src": "5794:51:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes32_$_t_array$_t_userDefinedValueType$_ChainGas_$14599_$dyn_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (uint32,uint256,bytes memory,bytes32,ChainGas[] memory) external returns (bool)"
                            }
                          },
                          "id": 7118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5794:148:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7119,
                        "nodeType": "ExpressionStatement",
                        "src": "5794:148:27"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "6132:51:27",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6150:19:27",
                              "value": {
                                "name": "snapGas_",
                                "nodeType": "YulIdentifier",
                                "src": "6161:8:27"
                              },
                              "variableNames": [
                                {
                                  "name": "snapGas",
                                  "nodeType": "YulIdentifier",
                                  "src": "6150:7:27"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 7028,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6150:7:27",
                            "valueSize": 1
                          },
                          {
                            "declaration": 7099,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6161:8:27",
                            "valueSize": 1
                          }
                        ],
                        "id": 7120,
                        "nodeType": "InlineAssembly",
                        "src": "6123:60:27"
                      }
                    ]
                  },
                  "id": 7122,
                  "nodeType": "IfStatement",
                  "src": "4856:1337:27",
                  "trueBody": {
                    "id": 7073,
                    "nodeType": "Block",
                    "src": "4880:301:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7067,
                                "name": "status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7039,
                                "src": "5065:6:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                                  "typeString": "struct AgentStatus memory"
                                }
                              },
                              "id": 7068,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5072:5:27",
                              "memberName": "index",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10356,
                              "src": "5065:12:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 7069,
                              "name": "sigIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7054,
                              "src": "5105:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 7070,
                              "name": "snapPayload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7018,
                              "src": "5144:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7064,
                                  "name": "summit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6973,
                                  "src": "5007:6:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7063,
                                "name": "InterfaceSummit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10053,
                                "src": "4991:15:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_InterfaceSummit_$10053_$",
                                  "typeString": "type(contract InterfaceSummit)"
                                }
                              },
                              "id": 7065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4991:23:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_InterfaceSummit_$10053",
                                "typeString": "contract InterfaceSummit"
                              }
                            },
                            "id": 7066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5015:19:27",
                            "memberName": "acceptGuardSnapshot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9998,
                            "src": "4991:43:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint32,uint256,bytes memory) external"
                            }
                          },
                          "id": 7071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "5053:10:27",
                            "5095:8:27",
                            "5131:11:27"
                          ],
                          "names": [
                            "guardIndex",
                            "sigIndex",
                            "snapPayload"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "4991:179:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7072,
                        "nodeType": "ExpressionStatement",
                        "src": "4991:179:27"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7124,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7039,
                          "src": "6224:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                            "typeString": "struct AgentStatus memory"
                          }
                        },
                        "id": 7125,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6231:6:27",
                        "memberName": "domain",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10354,
                        "src": "6224:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 7126,
                        "name": "agent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7041,
                        "src": "6239:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7127,
                        "name": "snapPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7018,
                        "src": "6246:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7128,
                        "name": "snapSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7020,
                        "src": "6259:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7123,
                      "name": "SnapshotAccepted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3974,
                      "src": "6207:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint32,address,bytes memory,bytes memory)"
                      }
                    },
                    "id": 7129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6207:66:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7130,
                  "nodeType": "EmitStatement",
                  "src": "6202:71:27"
                }
              ]
            },
            "baseFunctions": [
              9781
            ],
            "documentation": {
              "id": 7016,
              "nodeType": "StructuredDocumentation",
              "src": "4107:30:27",
              "text": "@inheritdoc InterfaceInbox"
            },
            "functionSelector": "4bb73ea5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitSnapshot",
            "nameLocation": "4151:14:27",
            "parameters": {
              "id": 7021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7018,
                  "mutability": "mutable",
                  "name": "snapPayload",
                  "nameLocation": "4179:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7132,
                  "src": "4166:24:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7017,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4166:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7020,
                  "mutability": "mutable",
                  "name": "snapSignature",
                  "nameLocation": "4205:13:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7132,
                  "src": "4192:26:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7019,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4192:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4165:54:27"
            },
            "returnParameters": {
              "id": 7029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7023,
                  "mutability": "mutable",
                  "name": "attPayload",
                  "nameLocation": "4267:10:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7132,
                  "src": "4254:23:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7022,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4254:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7025,
                  "mutability": "mutable",
                  "name": "agentRoot_",
                  "nameLocation": "4287:10:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7132,
                  "src": "4279:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7024,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4279:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7028,
                  "mutability": "mutable",
                  "name": "snapGas",
                  "nameLocation": "4316:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7132,
                  "src": "4299:24:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7026,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4299:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7027,
                    "nodeType": "ArrayTypeName",
                    "src": "4299:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4253:71:27"
            },
            "scope": 7538,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7271,
            "nodeType": "FunctionDefinition",
            "src": "6321:1879:27",
            "nodes": [],
            "body": {
              "id": 7270,
              "nodeType": "Block",
              "src": "6538:1662:27",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7150
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7150,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "6621:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7270,
                      "src": "6602:23:27",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReceiptInfo_$6971_memory_ptr",
                        "typeString": "struct Inbox.ReceiptInfo"
                      },
                      "typeName": {
                        "id": 7149,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7148,
                          "name": "ReceiptInfo",
                          "nameLocations": [
                            "6602:11:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6971,
                          "src": "6602:11:27"
                        },
                        "referencedDeclaration": 6971,
                        "src": "6602:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReceiptInfo_$6971_storage_ptr",
                          "typeString": "struct Inbox.ReceiptInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7151,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6602:23:27"
                },
                {
                  "assignments": [
                    7154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7154,
                      "mutability": "mutable",
                      "name": "rcpt",
                      "nameLocation": "6699:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7270,
                      "src": "6691:12:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Receipt_$12600",
                        "typeString": "Receipt"
                      },
                      "typeName": {
                        "id": 7153,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7152,
                          "name": "Receipt",
                          "nameLocations": [
                            "6691:7:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12600,
                          "src": "6691:7:27"
                        },
                        "referencedDeclaration": 12600,
                        "src": "6691:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Receipt_$12600",
                          "typeString": "Receipt"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7158,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7155,
                        "name": "rcptPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7135,
                        "src": "6706:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 7156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6718:13:27",
                      "memberName": "castToReceipt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12684,
                      "src": "6706:25:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_userDefinedValueType$_Receipt_$12600_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (Receipt)"
                      }
                    },
                    "id": 7157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6706:27:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Receipt_$12600",
                      "typeString": "Receipt"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6691:42:27"
                },
                {
                  "expression": {
                    "id": 7169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 7159,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7150,
                            "src": "6816:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ReceiptInfo_$6971_memory_ptr",
                              "typeString": "struct Inbox.ReceiptInfo memory"
                            }
                          },
                          "id": 7161,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "6821:16:27",
                          "memberName": "rcptNotaryStatus",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6963,
                          "src": "6816:21:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                            "typeString": "struct AgentStatus memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 7162,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7150,
                            "src": "6839:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ReceiptInfo_$6971_memory_ptr",
                              "typeString": "struct Inbox.ReceiptInfo memory"
                            }
                          },
                          "id": 7163,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "6844:6:27",
                          "memberName": "notary",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6965,
                          "src": "6839:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 7164,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "6815:36:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                        "typeString": "tuple(struct AgentStatus memory,address)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7166,
                          "name": "rcpt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7154,
                          "src": "6869:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Receipt_$12600",
                            "typeString": "Receipt"
                          }
                        },
                        {
                          "id": 7167,
                          "name": "rcptSignature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7137,
                          "src": "6875:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Receipt_$12600",
                            "typeString": "Receipt"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7165,
                        "name": "_verifyReceipt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8869,
                        "src": "6854:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Receipt_$12600_$_t_bytes_memory_ptr_$returns$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                          "typeString": "function (Receipt,bytes memory) view returns (struct AgentStatus memory,address)"
                        }
                      },
                      "id": 7168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6854:35:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                        "typeString": "tuple(struct AgentStatus memory,address)"
                      }
                    },
                    "src": "6815:74:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7170,
                  "nodeType": "ExpressionStatement",
                  "src": "6815:74:27"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 7171,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7150,
                          "src": "6944:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReceiptInfo_$6971_memory_ptr",
                            "typeString": "struct Inbox.ReceiptInfo memory"
                          }
                        },
                        "id": 7174,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6949:16:27",
                        "memberName": "rcptNotaryStatus",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6963,
                        "src": "6944:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                          "typeString": "struct AgentStatus memory"
                        }
                      },
                      "id": 7175,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6966:12:27",
                      "memberName": "verifyActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10394,
                      "src": "6944:34:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_AgentStatus_$10357_memory_ptr_$returns$__$bound_to$_t_struct$_AgentStatus_$10357_memory_ptr_$",
                        "typeString": "function (struct AgentStatus memory) pure"
                      }
                    },
                    "id": 7176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6944:36:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7177,
                  "nodeType": "ExpressionStatement",
                  "src": "6944:36:27"
                },
                {
                  "expression": {
                    "id": 7189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 7178,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7150,
                        "src": "6990:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReceiptInfo_$6971_memory_ptr",
                          "typeString": "struct Inbox.ReceiptInfo memory"
                        }
                      },
                      "id": 7180,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6995:8:27",
                      "memberName": "attNonce",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6967,
                      "src": "6990:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 7185,
                              "name": "rcpt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7154,
                              "src": "7053:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Receipt_$12600",
                                "typeString": "Receipt"
                              }
                            },
                            "id": 7186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7058:12:27",
                            "memberName": "snapshotRoot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12883,
                            "src": "7053:17:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Receipt_$12600_$returns$_t_bytes32_$bound_to$_t_userDefinedValueType$_Receipt_$12600_$",
                              "typeString": "function (Receipt) pure returns (bytes32)"
                            }
                          },
                          "id": 7187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7053:19:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 7182,
                              "name": "destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7844,
                              "src": "7020:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 7181,
                            "name": "IExecutionHub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9234,
                            "src": "7006:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IExecutionHub_$9234_$",
                              "typeString": "type(contract IExecutionHub)"
                            }
                          },
                          "id": 7183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7006:26:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IExecutionHub_$9234",
                            "typeString": "contract IExecutionHub"
                          }
                        },
                        "id": 7184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7033:19:27",
                        "memberName": "getAttestationNonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9208,
                        "src": "7006:46:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint32_$",
                          "typeString": "function (bytes32) view external returns (uint32)"
                        }
                      },
                      "id": 7188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7006:67:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "6990:83:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 7190,
                  "nodeType": "ExpressionStatement",
                  "src": "6990:83:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 7194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 7191,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7150,
                        "src": "7087:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReceiptInfo_$6971_memory_ptr",
                          "typeString": "struct Inbox.ReceiptInfo memory"
                        }
                      },
                      "id": 7192,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7092:8:27",
                      "memberName": "attNonce",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6967,
                      "src": "7087:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7104:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7087:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7198,
                  "nodeType": "IfStatement",
                  "src": "7083:54:27",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7195,
                        "name": "IncorrectSnapshotRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10198,
                        "src": "7114:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 7196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7114:23:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 7197,
                    "nodeType": "RevertStatement",
                    "src": "7107:30:27"
                  }
                },
                {
                  "expression": {
                    "id": 7210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 7199,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7150,
                        "src": "7222:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReceiptInfo_$6971_memory_ptr",
                          "typeString": "struct Inbox.ReceiptInfo memory"
                        }
                      },
                      "id": 7201,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7227:15:27",
                      "memberName": "attNotaryStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6970,
                      "src": "7222:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                        "typeString": "struct AgentStatus memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 7206,
                              "name": "rcpt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7154,
                              "src": "7285:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Receipt_$12600",
                                "typeString": "Receipt"
                              }
                            },
                            "id": 7207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7290:9:27",
                            "memberName": "attNotary",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12921,
                            "src": "7285:14:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Receipt_$12600_$returns$_t_address_$bound_to$_t_userDefinedValueType$_Receipt_$12600_$",
                              "typeString": "function (Receipt) pure returns (address)"
                            }
                          },
                          "id": 7208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7285:16:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 7203,
                              "name": "agentManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7840,
                              "src": "7259:12:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 7202,
                            "name": "IAgentManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9127,
                            "src": "7245:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IAgentManager_$9127_$",
                              "typeString": "type(contract IAgentManager)"
                            }
                          },
                          "id": 7204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7245:27:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAgentManager_$9127",
                            "typeString": "contract IAgentManager"
                          }
                        },
                        "id": 7205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7273:11:27",
                        "memberName": "agentStatus",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9076,
                        "src": "7245:39:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_AgentStatus_$10357_memory_ptr_$",
                          "typeString": "function (address) view external returns (struct AgentStatus memory)"
                        }
                      },
                      "id": 7209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7245:57:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                        "typeString": "struct AgentStatus memory"
                      }
                    },
                    "src": "7222:80:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                      "typeString": "struct AgentStatus memory"
                    }
                  },
                  "id": 7211,
                  "nodeType": "ExpressionStatement",
                  "src": "7222:80:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 7218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 7212,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7150,
                          "src": "7316:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReceiptInfo_$6971_memory_ptr",
                            "typeString": "struct Inbox.ReceiptInfo memory"
                          }
                        },
                        "id": 7213,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7321:15:27",
                        "memberName": "attNotaryStatus",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6970,
                        "src": "7316:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                          "typeString": "struct AgentStatus memory"
                        }
                      },
                      "id": 7214,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7337:6:27",
                      "memberName": "domain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10354,
                      "src": "7316:27:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 7215,
                          "name": "rcpt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7154,
                          "src": "7347:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Receipt_$12600",
                            "typeString": "Receipt"
                          }
                        },
                        "id": 7216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7352:11:27",
                        "memberName": "destination",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12847,
                        "src": "7347:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Receipt_$12600_$returns$_t_uint32_$bound_to$_t_userDefinedValueType$_Receipt_$12600_$",
                          "typeString": "function (Receipt) pure returns (uint32)"
                        }
                      },
                      "id": 7217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7347:18:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "7316:49:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7222,
                  "nodeType": "IfStatement",
                  "src": "7312:84:27",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7219,
                        "name": "IncorrectAgentDomain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10184,
                        "src": "7374:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 7220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7374:22:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 7221,
                    "nodeType": "RevertStatement",
                    "src": "7367:29:27"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 7224,
                            "name": "rcpt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7154,
                            "src": "7500:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Receipt_$12600",
                              "typeString": "Receipt"
                            }
                          },
                          "id": 7225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7505:11:27",
                          "memberName": "messageHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12865,
                          "src": "7500:16:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Receipt_$12600_$returns$_t_bytes32_$bound_to$_t_userDefinedValueType$_Receipt_$12600_$",
                            "typeString": "function (Receipt) pure returns (bytes32)"
                          }
                        },
                        "id": 7226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7500:18:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7227,
                        "name": "paddedTips",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7139,
                        "src": "7520:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7228,
                        "name": "headerHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7141,
                        "src": "7532:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7229,
                        "name": "bodyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7143,
                        "src": "7544:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7223,
                      "name": "_verifyReceiptTips",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7537,
                      "src": "7481:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,uint256,bytes32,bytes32) pure"
                      }
                    },
                    "id": 7230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7481:72:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7231,
                  "nodeType": "ExpressionStatement",
                  "src": "7481:72:27"
                },
                {
                  "assignments": [
                    7233
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7233,
                      "mutability": "mutable",
                      "name": "sigIndex",
                      "nameLocation": "7621:8:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7270,
                      "src": "7613:16:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7232,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7613:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7237,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7235,
                        "name": "rcptSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7137,
                        "src": "7647:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7234,
                      "name": "_saveSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8706,
                      "src": "7632:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes memory) returns (uint256)"
                      }
                    },
                    "id": 7236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7632:29:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7613:48:27"
                },
                {
                  "expression": {
                    "id": 7255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7238,
                      "name": "wasAccepted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7146,
                      "src": "7731:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 7243,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7150,
                              "src": "7814:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ReceiptInfo_$6971_memory_ptr",
                                "typeString": "struct Inbox.ReceiptInfo memory"
                              }
                            },
                            "id": 7244,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7819:16:27",
                            "memberName": "rcptNotaryStatus",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6963,
                            "src": "7814:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                              "typeString": "struct AgentStatus memory"
                            }
                          },
                          "id": 7245,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7836:5:27",
                          "memberName": "index",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10356,
                          "src": "7814:27:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 7246,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7150,
                              "src": "7871:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ReceiptInfo_$6971_memory_ptr",
                                "typeString": "struct Inbox.ReceiptInfo memory"
                              }
                            },
                            "id": 7247,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7876:15:27",
                            "memberName": "attNotaryStatus",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6970,
                            "src": "7871:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                              "typeString": "struct AgentStatus memory"
                            }
                          },
                          "id": 7248,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7892:5:27",
                          "memberName": "index",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10356,
                          "src": "7871:26:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 7249,
                          "name": "sigIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7233,
                          "src": "7921:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 7250,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7150,
                            "src": "7953:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ReceiptInfo_$6971_memory_ptr",
                              "typeString": "struct Inbox.ReceiptInfo memory"
                            }
                          },
                          "id": 7251,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7958:8:27",
                          "memberName": "attNonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6967,
                          "src": "7953:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 7252,
                          "name": "paddedTips",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7139,
                          "src": "7992:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7253,
                          "name": "rcptPayload",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7135,
                          "src": "8029:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 7240,
                              "name": "summit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6973,
                              "src": "7761:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 7239,
                            "name": "InterfaceSummit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10053,
                            "src": "7745:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_InterfaceSummit_$10053_$",
                              "typeString": "type(contract InterfaceSummit)"
                            }
                          },
                          "id": 7241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7745:23:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_InterfaceSummit_$10053",
                            "typeString": "contract InterfaceSummit"
                          }
                        },
                        "id": 7242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7769:13:27",
                        "memberName": "acceptReceipt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9988,
                        "src": "7745:37:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_uint32_$_t_uint256_$_t_uint32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (uint32,uint32,uint256,uint32,uint256,bytes memory) external returns (bool)"
                        }
                      },
                      "id": 7254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "7797:15:27",
                        "7855:14:27",
                        "7911:8:27",
                        "7943:8:27",
                        "7980:10:27",
                        "8016:11:27"
                      ],
                      "names": [
                        "rcptNotaryIndex",
                        "attNotaryIndex",
                        "sigIndex",
                        "attNonce",
                        "paddedTips",
                        "rcptPayload"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "7745:306:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7731:320:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7256,
                  "nodeType": "ExpressionStatement",
                  "src": "7731:320:27"
                },
                {
                  "condition": {
                    "id": 7257,
                    "name": "wasAccepted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7146,
                    "src": "8065:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7269,
                  "nodeType": "IfStatement",
                  "src": "8061:133:27",
                  "trueBody": {
                    "id": 7268,
                    "nodeType": "Block",
                    "src": "8078:116:27",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 7259,
                                  "name": "info",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7150,
                                  "src": "8113:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ReceiptInfo_$6971_memory_ptr",
                                    "typeString": "struct Inbox.ReceiptInfo memory"
                                  }
                                },
                                "id": 7260,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8118:16:27",
                                "memberName": "rcptNotaryStatus",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6963,
                                "src": "8113:21:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                                  "typeString": "struct AgentStatus memory"
                                }
                              },
                              "id": 7261,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8135:6:27",
                              "memberName": "domain",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10354,
                              "src": "8113:28:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "expression": {
                                "id": 7262,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7150,
                                "src": "8143:4:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ReceiptInfo_$6971_memory_ptr",
                                  "typeString": "struct Inbox.ReceiptInfo memory"
                                }
                              },
                              "id": 7263,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8148:6:27",
                              "memberName": "notary",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6965,
                              "src": "8143:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7264,
                              "name": "rcptPayload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7135,
                              "src": "8156:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 7265,
                              "name": "rcptSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7137,
                              "src": "8169:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 7258,
                            "name": "ReceiptAccepted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3985,
                            "src": "8097:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint32,address,bytes memory,bytes memory)"
                            }
                          },
                          "id": 7266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8097:86:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7267,
                        "nodeType": "EmitStatement",
                        "src": "8092:91:27"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              9797
            ],
            "documentation": {
              "id": 7133,
              "nodeType": "StructuredDocumentation",
              "src": "6286:30:27",
              "text": "@inheritdoc InterfaceInbox"
            },
            "functionSelector": "b2a4b455",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitReceipt",
            "nameLocation": "6330:13:27",
            "parameters": {
              "id": 7144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7135,
                  "mutability": "mutable",
                  "name": "rcptPayload",
                  "nameLocation": "6366:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7271,
                  "src": "6353:24:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7134,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6353:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7137,
                  "mutability": "mutable",
                  "name": "rcptSignature",
                  "nameLocation": "6400:13:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7271,
                  "src": "6387:26:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7136,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6387:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7139,
                  "mutability": "mutable",
                  "name": "paddedTips",
                  "nameLocation": "6431:10:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7271,
                  "src": "6423:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6423:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7141,
                  "mutability": "mutable",
                  "name": "headerHash",
                  "nameLocation": "6459:10:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7271,
                  "src": "6451:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7140,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6451:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7143,
                  "mutability": "mutable",
                  "name": "bodyHash",
                  "nameLocation": "6487:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7271,
                  "src": "6479:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7142,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6479:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6343:158:27"
            },
            "returnParameters": {
              "id": 7147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7146,
                  "mutability": "mutable",
                  "name": "wasAccepted",
                  "nameLocation": "6525:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7271,
                  "src": "6520:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7145,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6520:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6519:18:27"
            },
            "scope": 7538,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7334,
            "nodeType": "FunctionDefinition",
            "src": "8241:972:27",
            "nodes": [],
            "body": {
              "id": 7333,
              "nodeType": "Block",
              "src": "8406:807:27",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7285
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7285,
                      "mutability": "mutable",
                      "name": "rcpt",
                      "nameLocation": "8480:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7333,
                      "src": "8472:12:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Receipt_$12600",
                        "typeString": "Receipt"
                      },
                      "typeName": {
                        "id": 7284,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7283,
                          "name": "Receipt",
                          "nameLocations": [
                            "8472:7:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12600,
                          "src": "8472:7:27"
                        },
                        "referencedDeclaration": 12600,
                        "src": "8472:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Receipt_$12600",
                          "typeString": "Receipt"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7289,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7286,
                        "name": "rcptPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7274,
                        "src": "8487:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 7287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8499:13:27",
                      "memberName": "castToReceipt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12684,
                      "src": "8487:25:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_userDefinedValueType$_Receipt_$12600_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (Receipt)"
                      }
                    },
                    "id": 7288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8487:27:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Receipt_$12600",
                      "typeString": "Receipt"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8472:42:27"
                },
                {
                  "assignments": [
                    7292,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7292,
                      "mutability": "mutable",
                      "name": "guardStatus",
                      "nameLocation": "8615:11:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7333,
                      "src": "8596:30:27",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                        "typeString": "struct AgentStatus"
                      },
                      "typeName": {
                        "id": 7291,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7290,
                          "name": "AgentStatus",
                          "nameLocations": [
                            "8596:11:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10357,
                          "src": "8596:11:27"
                        },
                        "referencedDeclaration": 10357,
                        "src": "8596:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_storage_ptr",
                          "typeString": "struct AgentStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 7297,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7294,
                        "name": "rcpt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7285,
                        "src": "8652:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Receipt_$12600",
                          "typeString": "Receipt"
                        }
                      },
                      {
                        "id": 7295,
                        "name": "rrSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7278,
                        "src": "8658:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Receipt_$12600",
                          "typeString": "Receipt"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7293,
                      "name": "_verifyReceiptReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8903,
                      "src": "8631:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Receipt_$12600_$_t_bytes_memory_ptr_$returns$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                        "typeString": "function (Receipt,bytes memory) view returns (struct AgentStatus memory,address)"
                      }
                    },
                    "id": 7296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8631:39:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                      "typeString": "tuple(struct AgentStatus memory,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8595:75:27"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7298,
                        "name": "guardStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7292,
                        "src": "8716:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                          "typeString": "struct AgentStatus memory"
                        }
                      },
                      "id": 7300,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8728:12:27",
                      "memberName": "verifyActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10394,
                      "src": "8716:24:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_AgentStatus_$10357_memory_ptr_$returns$__$bound_to$_t_struct$_AgentStatus_$10357_memory_ptr_$",
                        "typeString": "function (struct AgentStatus memory) pure"
                      }
                    },
                    "id": 7301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8716:26:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7302,
                  "nodeType": "ExpressionStatement",
                  "src": "8716:26:27"
                },
                {
                  "assignments": [
                    7305,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7305,
                      "mutability": "mutable",
                      "name": "notaryStatus",
                      "nameLocation": "8839:12:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7333,
                      "src": "8820:31:27",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                        "typeString": "struct AgentStatus"
                      },
                      "typeName": {
                        "id": 7304,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7303,
                          "name": "AgentStatus",
                          "nameLocations": [
                            "8820:11:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10357,
                          "src": "8820:11:27"
                        },
                        "referencedDeclaration": 10357,
                        "src": "8820:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_storage_ptr",
                          "typeString": "struct AgentStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 7310,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7307,
                        "name": "rcpt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7285,
                        "src": "8871:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Receipt_$12600",
                          "typeString": "Receipt"
                        }
                      },
                      {
                        "id": 7308,
                        "name": "rcptSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7276,
                        "src": "8877:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Receipt_$12600",
                          "typeString": "Receipt"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7306,
                      "name": "_verifyReceipt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8869,
                      "src": "8856:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Receipt_$12600_$_t_bytes_memory_ptr_$returns$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                        "typeString": "function (Receipt,bytes memory) view returns (struct AgentStatus memory,address)"
                      }
                    },
                    "id": 7309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8856:35:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                      "typeString": "tuple(struct AgentStatus memory,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8819:72:27"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7311,
                        "name": "notaryStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7305,
                        "src": "8948:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                          "typeString": "struct AgentStatus memory"
                        }
                      },
                      "id": 7313,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8961:21:27",
                      "memberName": "verifyActiveUnstaking",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10436,
                      "src": "8948:34:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_AgentStatus_$10357_memory_ptr_$returns$__$bound_to$_t_struct$_AgentStatus_$10357_memory_ptr_$",
                        "typeString": "function (struct AgentStatus memory) pure"
                      }
                    },
                    "id": 7314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8948:36:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7315,
                  "nodeType": "ExpressionStatement",
                  "src": "8948:36:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7317,
                        "name": "rcptPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7274,
                        "src": "9006:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7318,
                        "name": "rrSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7278,
                        "src": "9019:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7316,
                      "name": "_saveReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8686,
                      "src": "8994:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory)"
                      }
                    },
                    "id": 7319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8994:37:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7320,
                  "nodeType": "ExpressionStatement",
                  "src": "8994:37:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7325,
                          "name": "guardStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7292,
                          "src": "9147:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                            "typeString": "struct AgentStatus memory"
                          }
                        },
                        "id": 7326,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9159:5:27",
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10356,
                        "src": "9147:17:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 7327,
                          "name": "notaryStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7305,
                          "src": "9166:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                            "typeString": "struct AgentStatus memory"
                          }
                        },
                        "id": 7328,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9179:5:27",
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10356,
                        "src": "9166:18:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7322,
                            "name": "agentManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7840,
                            "src": "9121:12:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7321,
                          "name": "IAgentManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9127,
                          "src": "9107:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAgentManager_$9127_$",
                            "typeString": "type(contract IAgentManager)"
                          }
                        },
                        "id": 7323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9107:27:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAgentManager_$9127",
                          "typeString": "contract IAgentManager"
                        }
                      },
                      "id": 7324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9135:11:27",
                      "memberName": "openDispute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9043,
                      "src": "9107:39:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_uint32_$returns$__$",
                        "typeString": "function (uint32,uint32) external"
                      }
                    },
                    "id": 7329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9107:78:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7330,
                  "nodeType": "ExpressionStatement",
                  "src": "9107:78:27"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9202:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7282,
                  "id": 7332,
                  "nodeType": "Return",
                  "src": "9195:11:27"
                }
              ]
            },
            "baseFunctions": [
              9809
            ],
            "documentation": {
              "id": 7272,
              "nodeType": "StructuredDocumentation",
              "src": "8206:30:27",
              "text": "@inheritdoc InterfaceInbox"
            },
            "functionSelector": "89246503",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitReceiptReport",
            "nameLocation": "8250:19:27",
            "parameters": {
              "id": 7279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7274,
                  "mutability": "mutable",
                  "name": "rcptPayload",
                  "nameLocation": "8283:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7334,
                  "src": "8270:24:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7273,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8270:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7276,
                  "mutability": "mutable",
                  "name": "rcptSignature",
                  "nameLocation": "8309:13:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7334,
                  "src": "8296:26:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7275,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8296:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7278,
                  "mutability": "mutable",
                  "name": "rrSignature",
                  "nameLocation": "8337:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7334,
                  "src": "8324:24:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7277,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8324:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8269:80:27"
            },
            "returnParameters": {
              "id": 7282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7281,
                  "mutability": "mutable",
                  "name": "wasAccepted",
                  "nameLocation": "8389:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7334,
                  "src": "8384:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7280,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8384:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8383:18:27"
            },
            "scope": 7538,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7373,
            "nodeType": "FunctionDefinition",
            "src": "9254:588:27",
            "nodes": [],
            "body": {
              "id": 7372,
              "nodeType": "Block",
              "src": "9417:425:27",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 7351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 7348,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9477:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 7349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9481:6:27",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9477:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 7350,
                      "name": "destination",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7844,
                      "src": "9491:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9477:25:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7355,
                  "nodeType": "IfStatement",
                  "src": "9473:60:27",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7352,
                        "name": "CallerNotDestination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10176,
                        "src": "9511:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 7353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9511:22:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 7354,
                    "nodeType": "RevertStatement",
                    "src": "9504:29:27"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7360,
                        "name": "attNotaryIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7337,
                        "src": "9619:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 7361,
                        "name": "attNotaryIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7337,
                        "src": "9663:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 7364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9706:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 7363,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9706:7:27",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 7362,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "9701:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 7365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9701:13:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 7366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "9715:3:27",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "9701:17:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7367,
                        "name": "attNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7339,
                        "src": "9742:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 7368,
                        "name": "paddedTips",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7341,
                        "src": "9776:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7369,
                        "name": "rcptPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7343,
                        "src": "9813:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7357,
                            "name": "summit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6973,
                            "src": "9566:6:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7356,
                          "name": "InterfaceSummit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10053,
                          "src": "9550:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_InterfaceSummit_$10053_$",
                            "typeString": "type(contract InterfaceSummit)"
                          }
                        },
                        "id": 7358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9550:23:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InterfaceSummit_$10053",
                          "typeString": "contract InterfaceSummit"
                        }
                      },
                      "id": 7359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9574:13:27",
                      "memberName": "acceptReceipt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9988,
                      "src": "9550:37:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_uint32_$_t_uint256_$_t_uint32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint32,uint32,uint256,uint32,uint256,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 7370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "9602:15:27",
                      "9647:14:27",
                      "9691:8:27",
                      "9732:8:27",
                      "9764:10:27",
                      "9800:11:27"
                    ],
                    "names": [
                      "rcptNotaryIndex",
                      "attNotaryIndex",
                      "sigIndex",
                      "attNonce",
                      "paddedTips",
                      "rcptPayload"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "9550:285:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7347,
                  "id": 7371,
                  "nodeType": "Return",
                  "src": "9543:292:27"
                }
              ]
            },
            "baseFunctions": [
              9823
            ],
            "documentation": {
              "id": 7335,
              "nodeType": "StructuredDocumentation",
              "src": "9219:30:27",
              "text": "@inheritdoc InterfaceInbox"
            },
            "functionSelector": "6b47b3bc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "passReceipt",
            "nameLocation": "9263:11:27",
            "parameters": {
              "id": 7344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7337,
                  "mutability": "mutable",
                  "name": "attNotaryIndex",
                  "nameLocation": "9282:14:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7373,
                  "src": "9275:21:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7336,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9275:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7339,
                  "mutability": "mutable",
                  "name": "attNonce",
                  "nameLocation": "9305:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7373,
                  "src": "9298:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7338,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9298:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7341,
                  "mutability": "mutable",
                  "name": "paddedTips",
                  "nameLocation": "9323:10:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7373,
                  "src": "9315:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9315:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7343,
                  "mutability": "mutable",
                  "name": "rcptPayload",
                  "nameLocation": "9348:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7373,
                  "src": "9335:24:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7342,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9335:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9274:86:27"
            },
            "returnParameters": {
              "id": 7347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7346,
                  "mutability": "mutable",
                  "name": "wasAccepted",
                  "nameLocation": "9400:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7373,
                  "src": "9395:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7345,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9395:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9394:18:27"
            },
            "scope": 7538,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7435,
            "nodeType": "FunctionDefinition",
            "src": "10181:801:27",
            "nodes": [],
            "body": {
              "id": 7434,
              "nodeType": "Block",
              "src": "10323:659:27",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7385,
                      "mutability": "mutable",
                      "name": "att",
                      "nameLocation": "10406:3:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7434,
                      "src": "10394:15:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                        "typeString": "Attestation"
                      },
                      "typeName": {
                        "id": 7384,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7383,
                          "name": "Attestation",
                          "nameLocations": [
                            "10394:11:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10527,
                          "src": "10394:11:27"
                        },
                        "referencedDeclaration": 10527,
                        "src": "10394:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                          "typeString": "Attestation"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7389,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7386,
                        "name": "attPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7376,
                        "src": "10412:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 7387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10423:17:27",
                      "memberName": "castToAttestation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10593,
                      "src": "10412:28:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_userDefinedValueType$_Attestation_$10527_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (Attestation)"
                      }
                    },
                    "id": 7388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10412:30:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                      "typeString": "Attestation"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10394:48:27"
                },
                {
                  "assignments": [
                    7392,
                    7394
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7392,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "10548:6:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7434,
                      "src": "10529:25:27",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                        "typeString": "struct AgentStatus"
                      },
                      "typeName": {
                        "id": 7391,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7390,
                          "name": "AgentStatus",
                          "nameLocations": [
                            "10529:11:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10357,
                          "src": "10529:11:27"
                        },
                        "referencedDeclaration": 10357,
                        "src": "10529:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_storage_ptr",
                          "typeString": "struct AgentStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7394,
                      "mutability": "mutable",
                      "name": "notary",
                      "nameLocation": "10564:6:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7434,
                      "src": "10556:14:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7393,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10556:7:27",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7399,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7396,
                        "name": "att",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7385,
                        "src": "10593:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                          "typeString": "Attestation"
                        }
                      },
                      {
                        "id": 7397,
                        "name": "attSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7378,
                        "src": "10598:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                          "typeString": "Attestation"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7395,
                      "name": "_verifyAttestation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8801,
                      "src": "10574:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Attestation_$10527_$_t_bytes_memory_ptr_$returns$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                        "typeString": "function (Attestation,bytes memory) view returns (struct AgentStatus memory,address)"
                      }
                    },
                    "id": 7398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10574:37:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                      "typeString": "tuple(struct AgentStatus memory,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10528:83:27"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7400,
                        "name": "status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7392,
                        "src": "10668:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                          "typeString": "struct AgentStatus memory"
                        }
                      },
                      "id": 7402,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10675:21:27",
                      "memberName": "verifyActiveUnstaking",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10436,
                      "src": "10668:28:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_AgentStatus_$10357_memory_ptr_$returns$__$bound_to$_t_struct$_AgentStatus_$10357_memory_ptr_$",
                        "typeString": "function (struct AgentStatus memory) pure"
                      }
                    },
                    "id": 7403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10668:30:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7404,
                  "nodeType": "ExpressionStatement",
                  "src": "10668:30:27"
                },
                {
                  "expression": {
                    "id": 7412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7405,
                      "name": "isValidAttestation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7381,
                      "src": "10708:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7410,
                          "name": "attPayload",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7376,
                          "src": "10769:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 7407,
                              "name": "summit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6973,
                              "src": "10742:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 7406,
                            "name": "ISnapshotHub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9341,
                            "src": "10729:12:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISnapshotHub_$9341_$",
                              "typeString": "type(contract ISnapshotHub)"
                            }
                          },
                          "id": 7408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10729:20:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISnapshotHub_$9341",
                            "typeString": "contract ISnapshotHub"
                          }
                        },
                        "id": 7409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10750:18:27",
                        "memberName": "isValidAttestation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9263,
                        "src": "10729:39:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (bytes memory) view external returns (bool)"
                        }
                      },
                      "id": 7411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10729:51:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10708:72:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7413,
                  "nodeType": "ExpressionStatement",
                  "src": "10708:72:27"
                },
                {
                  "condition": {
                    "id": 7415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "10794:19:27",
                    "subExpression": {
                      "id": 7414,
                      "name": "isValidAttestation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7381,
                      "src": "10795:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7433,
                  "nodeType": "IfStatement",
                  "src": "10790:186:27",
                  "trueBody": {
                    "id": 7432,
                    "nodeType": "Block",
                    "src": "10815:161:27",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 7417,
                              "name": "attPayload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7376,
                              "src": "10853:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 7418,
                              "name": "attSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7378,
                              "src": "10865:12:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 7416,
                            "name": "InvalidAttestation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3992,
                            "src": "10834:18:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory)"
                            }
                          },
                          "id": 7419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10834:44:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7420,
                        "nodeType": "EmitStatement",
                        "src": "10829:49:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7425,
                                "name": "status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7392,
                                "src": "10931:6:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                                  "typeString": "struct AgentStatus memory"
                                }
                              },
                              "id": 7426,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10938:6:27",
                              "memberName": "domain",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10354,
                              "src": "10931:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 7427,
                              "name": "notary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7394,
                              "src": "10946:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 7428,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10954:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10958:6:27",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10954:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7422,
                                  "name": "agentManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7840,
                                  "src": "10906:12:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7421,
                                "name": "IAgentManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9127,
                                "src": "10892:13:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IAgentManager_$9127_$",
                                  "typeString": "type(contract IAgentManager)"
                                }
                              },
                              "id": 7423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10892:27:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAgentManager_$9127",
                                "typeString": "contract IAgentManager"
                              }
                            },
                            "id": 7424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10920:10:27",
                            "memberName": "slashAgent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9061,
                            "src": "10892:38:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint32,address,address) external"
                            }
                          },
                          "id": 7430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10892:73:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7431,
                        "nodeType": "ExpressionStatement",
                        "src": "10892:73:27"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              9833
            ],
            "documentation": {
              "id": 7374,
              "nodeType": "StructuredDocumentation",
              "src": "10146:30:27",
              "text": "@inheritdoc InterfaceInbox"
            },
            "functionSelector": "0ca77473",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyAttestation",
            "nameLocation": "10190:17:27",
            "parameters": {
              "id": 7379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7376,
                  "mutability": "mutable",
                  "name": "attPayload",
                  "nameLocation": "10221:10:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7435,
                  "src": "10208:23:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7375,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10208:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7378,
                  "mutability": "mutable",
                  "name": "attSignature",
                  "nameLocation": "10246:12:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7435,
                  "src": "10233:25:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7377,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10233:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10207:52:27"
            },
            "returnParameters": {
              "id": 7382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7381,
                  "mutability": "mutable",
                  "name": "isValidAttestation",
                  "nameLocation": "10299:18:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7435,
                  "src": "10294:23:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7380,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10294:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10293:25:27"
            },
            "scope": 7538,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7498,
            "nodeType": "FunctionDefinition",
            "src": "11023:871:27",
            "nodes": [],
            "body": {
              "id": 7497,
              "nodeType": "Block",
              "src": "11165:729:27",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7447
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7447,
                      "mutability": "mutable",
                      "name": "att",
                      "nameLocation": "11248:3:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7497,
                      "src": "11236:15:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                        "typeString": "Attestation"
                      },
                      "typeName": {
                        "id": 7446,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7445,
                          "name": "Attestation",
                          "nameLocations": [
                            "11236:11:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10527,
                          "src": "11236:11:27"
                        },
                        "referencedDeclaration": 10527,
                        "src": "11236:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                          "typeString": "Attestation"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7451,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7448,
                        "name": "attPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7438,
                        "src": "11254:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 7449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11265:17:27",
                      "memberName": "castToAttestation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10593,
                      "src": "11254:28:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_userDefinedValueType$_Attestation_$10527_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (Attestation)"
                      }
                    },
                    "id": 7450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11254:30:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                      "typeString": "Attestation"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11236:48:27"
                },
                {
                  "assignments": [
                    7454,
                    7456
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7454,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "11384:6:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7497,
                      "src": "11365:25:27",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                        "typeString": "struct AgentStatus"
                      },
                      "typeName": {
                        "id": 7453,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7452,
                          "name": "AgentStatus",
                          "nameLocations": [
                            "11365:11:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10357,
                          "src": "11365:11:27"
                        },
                        "referencedDeclaration": 10357,
                        "src": "11365:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_storage_ptr",
                          "typeString": "struct AgentStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7456,
                      "mutability": "mutable",
                      "name": "guard",
                      "nameLocation": "11400:5:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7497,
                      "src": "11392:13:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7455,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11392:7:27",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7461,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7458,
                        "name": "att",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7447,
                        "src": "11434:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                          "typeString": "Attestation"
                        }
                      },
                      {
                        "id": 7459,
                        "name": "arSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7440,
                        "src": "11439:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Attestation_$10527",
                          "typeString": "Attestation"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7457,
                      "name": "_verifyAttestationReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8835,
                      "src": "11409:24:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Attestation_$10527_$_t_bytes_memory_ptr_$returns$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                        "typeString": "function (Attestation,bytes memory) view returns (struct AgentStatus memory,address)"
                      }
                    },
                    "id": 7460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11409:42:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_AgentStatus_$10357_memory_ptr_$_t_address_$",
                      "typeString": "tuple(struct AgentStatus memory,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11364:87:27"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7462,
                        "name": "status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7454,
                        "src": "11507:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                          "typeString": "struct AgentStatus memory"
                        }
                      },
                      "id": 7464,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11514:21:27",
                      "memberName": "verifyActiveUnstaking",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10436,
                      "src": "11507:28:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_AgentStatus_$10357_memory_ptr_$returns$__$bound_to$_t_struct$_AgentStatus_$10357_memory_ptr_$",
                        "typeString": "function (struct AgentStatus memory) pure"
                      }
                    },
                    "id": 7465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11507:30:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7466,
                  "nodeType": "ExpressionStatement",
                  "src": "11507:30:27"
                },
                {
                  "expression": {
                    "id": 7475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7467,
                      "name": "isValidReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7443,
                      "src": "11625:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "11641:52:27",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 7472,
                            "name": "attPayload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7438,
                            "src": "11682:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 7469,
                                "name": "summit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6973,
                                "src": "11655:6:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 7468,
                              "name": "ISnapshotHub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9341,
                              "src": "11642:12:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ISnapshotHub_$9341_$",
                                "typeString": "type(contract ISnapshotHub)"
                              }
                            },
                            "id": 7470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11642:20:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISnapshotHub_$9341",
                              "typeString": "contract ISnapshotHub"
                            }
                          },
                          "id": 7471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11663:18:27",
                          "memberName": "isValidAttestation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9263,
                          "src": "11642:39:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes memory) view external returns (bool)"
                          }
                        },
                        "id": 7473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11642:51:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11625:68:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7476,
                  "nodeType": "ExpressionStatement",
                  "src": "11625:68:27"
                },
                {
                  "condition": {
                    "id": 7478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "11707:14:27",
                    "subExpression": {
                      "id": 7477,
                      "name": "isValidReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7443,
                      "src": "11708:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7496,
                  "nodeType": "IfStatement",
                  "src": "11703:185:27",
                  "trueBody": {
                    "id": 7495,
                    "nodeType": "Block",
                    "src": "11723:165:27",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 7480,
                              "name": "attPayload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7438,
                              "src": "11767:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 7481,
                              "name": "arSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7440,
                              "src": "11779:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 7479,
                            "name": "InvalidAttestationReport",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3999,
                            "src": "11742:24:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory)"
                            }
                          },
                          "id": 7482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11742:49:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7483,
                        "nodeType": "EmitStatement",
                        "src": "11737:54:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7488,
                                "name": "status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7454,
                                "src": "11844:6:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                                  "typeString": "struct AgentStatus memory"
                                }
                              },
                              "id": 7489,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11851:6:27",
                              "memberName": "domain",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10354,
                              "src": "11844:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 7490,
                              "name": "guard",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7456,
                              "src": "11859:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 7491,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11866:3:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11870:6:27",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11866:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7485,
                                  "name": "agentManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7840,
                                  "src": "11819:12:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7484,
                                "name": "IAgentManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9127,
                                "src": "11805:13:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IAgentManager_$9127_$",
                                  "typeString": "type(contract IAgentManager)"
                                }
                              },
                              "id": 7486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11805:27:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAgentManager_$9127",
                                "typeString": "contract IAgentManager"
                              }
                            },
                            "id": 7487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11833:10:27",
                            "memberName": "slashAgent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9061,
                            "src": "11805:38:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint32,address,address) external"
                            }
                          },
                          "id": 7493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11805:72:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7494,
                        "nodeType": "ExpressionStatement",
                        "src": "11805:72:27"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              9843
            ],
            "documentation": {
              "id": 7436,
              "nodeType": "StructuredDocumentation",
              "src": "10988:30:27",
              "text": "@inheritdoc InterfaceInbox"
            },
            "functionSelector": "31e8df5a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyAttestationReport",
            "nameLocation": "11032:23:27",
            "parameters": {
              "id": 7441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7438,
                  "mutability": "mutable",
                  "name": "attPayload",
                  "nameLocation": "11069:10:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "11056:23:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7437,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11056:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7440,
                  "mutability": "mutable",
                  "name": "arSignature",
                  "nameLocation": "11094:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "11081:24:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7439,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11081:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11055:51:27"
            },
            "returnParameters": {
              "id": 7444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7443,
                  "mutability": "mutable",
                  "name": "isValidReport",
                  "nameLocation": "11146:13:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "11141:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7442,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11141:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11140:20:27"
            },
            "scope": 7538,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7537,
            "nodeType": "FunctionDefinition",
            "src": "12280:456:27",
            "nodes": [],
            "body": {
              "id": 7536,
              "nodeType": "Block",
              "src": "12417:319:27",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7512,
                      "mutability": "mutable",
                      "name": "tips",
                      "nameLocation": "12432:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7536,
                      "src": "12427:9:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Tips_$15578",
                        "typeString": "Tips"
                      },
                      "typeName": {
                        "id": 7511,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7510,
                          "name": "Tips",
                          "nameLocations": [
                            "12427:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15578,
                          "src": "12427:4:27"
                        },
                        "referencedDeclaration": 15578,
                        "src": "12427:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Tips_$15578",
                          "typeString": "Tips"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7517,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7515,
                        "name": "paddedTips",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7503,
                        "src": "12458:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7513,
                        "name": "TipsLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15905,
                        "src": "12439:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TipsLib_$15905_$",
                          "typeString": "type(library TipsLib)"
                        }
                      },
                      "id": 7514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12447:10:27",
                      "memberName": "wrapPadded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15704,
                      "src": "12439:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_userDefinedValueType$_Tips_$15578_$",
                        "typeString": "function (uint256) pure returns (Tips)"
                      }
                    },
                    "id": 7516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12439:30:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Tips_$15578",
                      "typeString": "Tips"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12427:42:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 7530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 7520,
                          "name": "headerHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7505,
                          "src": "12609:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 7523,
                                  "name": "tips",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7512,
                                  "src": "12642:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_userDefinedValueType$_Tips_$15578",
                                    "typeString": "Tips"
                                  }
                                },
                                "id": 7524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12647:4:27",
                                "memberName": "leaf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15728,
                                "src": "12642:9:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Tips_$15578_$returns$_t_bytes32_$bound_to$_t_userDefinedValueType$_Tips_$15578_$",
                                  "typeString": "function (Tips) pure returns (bytes32)"
                                }
                              },
                              "id": 7525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12642:11:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 7526,
                              "name": "bodyHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7507,
                              "src": "12655:8:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 7521,
                              "name": "MerkleMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14266,
                              "src": "12621:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MerkleMath_$14266_$",
                                "typeString": "type(library MerkleMath)"
                              }
                            },
                            "id": 7522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12632:9:27",
                            "memberName": "getParent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14003,
                            "src": "12621:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                            }
                          },
                          "id": 7527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12621:43:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 7518,
                          "name": "MerkleMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14266,
                          "src": "12588:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MerkleMath_$14266_$",
                            "typeString": "type(library MerkleMath)"
                          }
                        },
                        "id": 7519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12599:9:27",
                        "memberName": "getParent",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14003,
                        "src": "12588:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                        }
                      },
                      "id": 7528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12588:77:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 7529,
                      "name": "msgHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7501,
                      "src": "12669:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "12588:88:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7535,
                  "nodeType": "IfStatement",
                  "src": "12584:146:27",
                  "trueBody": {
                    "id": 7534,
                    "nodeType": "Block",
                    "src": "12678:52:27",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7531,
                            "name": "IncorrectTipsProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10204,
                            "src": "12699:18:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 7532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12699:20:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7533,
                        "nodeType": "RevertStatement",
                        "src": "12692:27:27"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7499,
              "nodeType": "StructuredDocumentation",
              "src": "12216:59:27",
              "text": "@dev Verifies that tips proof matches the message hash."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyReceiptTips",
            "nameLocation": "12289:18:27",
            "parameters": {
              "id": 7508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7501,
                  "mutability": "mutable",
                  "name": "msgHash",
                  "nameLocation": "12316:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7537,
                  "src": "12308:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7500,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12308:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7503,
                  "mutability": "mutable",
                  "name": "paddedTips",
                  "nameLocation": "12333:10:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7537,
                  "src": "12325:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12325:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7505,
                  "mutability": "mutable",
                  "name": "headerHash",
                  "nameLocation": "12353:10:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7537,
                  "src": "12345:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7504,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12345:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7507,
                  "mutability": "mutable",
                  "name": "bodyHash",
                  "nameLocation": "12373:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7537,
                  "src": "12365:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7506,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12365:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12307:75:27"
            },
            "returnParameters": {
              "id": 7509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12417:0:27"
            },
            "scope": 7538,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6946,
              "name": "StatementInbox",
              "nameLocations": [
                "2169:14:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9030,
              "src": "2169:14:27"
            },
            "id": 6947,
            "nodeType": "InheritanceSpecifier",
            "src": "2169:14:27"
          },
          {
            "baseName": {
              "id": 6948,
              "name": "InboxEvents",
              "nameLocations": [
                "2185:11:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4000,
              "src": "2185:11:27"
            },
            "id": 6949,
            "nodeType": "InheritanceSpecifier",
            "src": "2185:11:27"
          },
          {
            "baseName": {
              "id": 6950,
              "name": "InterfaceInbox",
              "nameLocations": [
                "2198:14:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9844,
              "src": "2198:14:27"
            },
            "id": 6951,
            "nodeType": "InheritanceSpecifier",
            "src": "2198:14:27"
          }
        ],
        "canonicalName": "Inbox",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6945,
          "nodeType": "StructuredDocumentation",
          "src": "1661:490:27",
          "text": "@notice `Inbox` is the child of `StatementInbox` contract, that is used on Synapse Chain.\n In addition to the functionality of `StatementInbox`, it also:\n - Accepts Guard and Notary Snapshots and passes them to `Summit` contract.\n - Accepts Notary-signed Receipts and passes them to `Summit` contract.\n - Accepts Receipt Reports to initiate a dispute between Guard and Notary.\n - Verifies Attestations and Attestation Reports, and slashes the signer if they are invalid."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          7538,
          9844,
          4000,
          9030,
          9521,
          4103,
          2851,
          46691,
          47177,
          46833,
          3004,
          2941
        ],
        "name": "Inbox",
        "nameLocation": "2160:5:27",
        "scope": 7539,
        "usedErrors": [
          10176,
          10184,
          10196,
          10198,
          10204,
          10206,
          10216,
          10222,
          10234,
          10240,
          10242,
          10252,
          10264,
          10266,
          10270,
          10272,
          10278,
          10290,
          10324,
          10326,
          10328,
          10330,
          10332
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 27
}