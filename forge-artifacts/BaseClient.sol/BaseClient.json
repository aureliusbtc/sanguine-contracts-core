{
  "abi": [
    {
      "inputs": [],
      "name": "BaseClientOptimisticPeriod",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CallerNotDestination",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectNonce",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroProofMaturity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "destination",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "optimisticPeriod",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "origin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "origin_",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "nonce",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "sender",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "proofMaturity",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "version",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "content",
          "type": "bytes"
        }
      ],
      "name": "receiveBaseMessage",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "destination",
          "type": "uint32"
        }
      ],
      "name": "trustedSender",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "destination()": "b269681d",
    "optimisticPeriod()": "9fee6226",
    "origin()": "938b5f32",
    "receiveBaseMessage(uint32,uint32,bytes32,uint256,uint32,bytes)": "032f287e",
    "trustedSender(uint32)": "bad3f8df"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BaseClientOptimisticPeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallerNotDestination\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroProofMaturity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"destination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"optimisticPeriod\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"origin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"origin_\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"proofMaturity\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"version\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"content\",\"type\":\"bytes\"}],\"name\":\"receiveBaseMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destination\",\"type\":\"uint32\"}],\"name\":\"trustedSender\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of IMessageRecipient interface, to be used as the recipient of base messages passed by the Destination contract. BaseClient could be used as a backbone for cross-chain apps: - A single BaseClient contract per chain (aka trusted sender) - Only BaseClient instances from other chains are able to send messages to this contract - BaseClient enforces a common optimistic period for all types of messages Note: BaseClient is forever stateless, meaning it can be potentially used as a parent for the upgradeable contract without worrying about storage collision.\",\"kind\":\"dev\",\"methods\":{\"receiveBaseMessage(uint32,uint32,bytes32,uint256,uint32,bytes)\":{\"details\":\"Message recipient needs to ensure that merkle proof for the message is at least as old as the optimistic period that the recipient is using. Note: as this point it is checked that the \\\"message optimistic period\\\" has passed, however the period value itself could be anything, and thus could differ from the one that the recipient would like to enforce.\",\"params\":{\"content\":\"Raw bytes content of message\",\"nonce\":\"Message nonce on the origin domain\",\"origin\":\"Domain where message originated\",\"proofMaturity\":\"Message's merkle proof age in seconds\",\"sender\":\"Sender address on origin chain\",\"version\":\"Message version specified by sender\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"destination()\":{\"notice\":\"Local chain Destination: used for receiving messages\"},\"optimisticPeriod()\":{\"notice\":\"Period of time since the root was submitted to Destination. Once this period is over, root can be used for proving and executing a message though this Client.\"},\"origin()\":{\"notice\":\"Local chain Origin: used for sending messages\"},\"receiveBaseMessage(uint32,uint32,bytes32,uint256,uint32,bytes)\":{\"notice\":\"Message recipient needs to implement this function in order to receive cross-chain messages.\"},\"trustedSender(uint32)\":{\"notice\":\"Address of the trusted sender on the destination chain. The trusted sender will be able to:  - Send messages to this contract from other chains.  - Receive messages from this contract on other chains.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/client/BaseClient.sol\":\"BaseClient\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/client/BaseClient.sol\":{\"keccak256\":\"0x69f079e2c050e97097102305bad37048f9a3c5642fe4b977b18edbd9538e6b6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f02ef800cc66e11d7af797df9bbb299f14c33225907af795f59351b45b2de12\",\"dweb:/ipfs/QmWWzz4VcyNe8FAXukpoZPBZ6kKUVKzFkN4eAsW3BricsT\"]},\"contracts/client/MessageRecipient.sol\":{\"keccak256\":\"0x2d4e3b539c03be510f528adac71c6b74181b968d0f094583a210fe81c11ed71a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af80118b9e711633189326a8ea16f61bb2e8f5721a3bc34200aefeee020596f8\",\"dweb:/ipfs/QmSCwCUWXyy3Yw5KcTae8cimCifRTE6viqRfj7mSfaVLfB\"]},\"contracts/interfaces/IMessageRecipient.sol\":{\"keccak256\":\"0x342bc1cf70e5a37e6a14d871297e845120608412d1be5dcd2657fc0dae5ebbde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8b93ab4b2d4e85b0dcb62cf0beeaa0289aebc7b3dbc3fb9cad9e82639cbc5e\",\"dweb:/ipfs/QmRHr2Dqr6tcFWZ7osKisaGg6QZtvwGrncchYjJ1UYWWVx\"]},\"contracts/interfaces/InterfaceOrigin.sol\":{\"keccak256\":\"0xe2c7feb15991348e274a413ee7e24c4cc4e2225c851924955ad2f025c8b5c42f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://314cdd9daf29e9d6ed288e02be302487cce6c0ca89805e5e8f6d78fb150c6ea6\",\"dweb:/ipfs/QmP6vY22Cpf45a3eDR6hPBnDDqCPcu4cRXJhH7W41ohkD6\"]},\"contracts/libs/Errors.sol\":{\"keccak256\":\"0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b\",\"dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB\"]},\"contracts/libs/stack/Request.sol\":{\"keccak256\":\"0xecd4427fe7285d1d5663ea019a66ebb04d3f495c0be28a14043c99a0d9a90689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55e800c307070d6497031b90157d917dcabd5f93d342081be8d20ad3c80df429\",\"dweb:/ipfs/QmU8oza8MeWDbG9xfPaPVoj4Z1rKtvQ7pA3Z7CuYyGSuY6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "BaseClientOptimisticPeriod"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerNotDestination"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectNonce"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroProofMaturity"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "destination",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "optimisticPeriod",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "origin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "origin_",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "sender",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "proofMaturity",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "version",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "content",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "receiveBaseMessage"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "destination",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedSender",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "receiveBaseMessage(uint32,uint32,bytes32,uint256,uint32,bytes)": {
            "details": "Message recipient needs to ensure that merkle proof for the message is at least as old as the optimistic period that the recipient is using. Note: as this point it is checked that the \"message optimistic period\" has passed, however the period value itself could be anything, and thus could differ from the one that the recipient would like to enforce.",
            "params": {
              "content": "Raw bytes content of message",
              "nonce": "Message nonce on the origin domain",
              "origin": "Domain where message originated",
              "proofMaturity": "Message's merkle proof age in seconds",
              "sender": "Sender address on origin chain",
              "version": "Message version specified by sender"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "destination()": {
            "notice": "Local chain Destination: used for receiving messages"
          },
          "optimisticPeriod()": {
            "notice": "Period of time since the root was submitted to Destination. Once this period is over, root can be used for proving and executing a message though this Client."
          },
          "origin()": {
            "notice": "Local chain Origin: used for sending messages"
          },
          "receiveBaseMessage(uint32,uint32,bytes32,uint256,uint32,bytes)": {
            "notice": "Message recipient needs to implement this function in order to receive cross-chain messages."
          },
          "trustedSender(uint32)": {
            "notice": "Address of the trusted sender on the destination chain. The trusted sender will be able to:  - Send messages to this contract from other chains.  - Receive messages from this contract on other chains."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/client/BaseClient.sol": "BaseClient"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/client/BaseClient.sol": {
        "keccak256": "0x69f079e2c050e97097102305bad37048f9a3c5642fe4b977b18edbd9538e6b6a",
        "urls": [
          "bzz-raw://3f02ef800cc66e11d7af797df9bbb299f14c33225907af795f59351b45b2de12",
          "dweb:/ipfs/QmWWzz4VcyNe8FAXukpoZPBZ6kKUVKzFkN4eAsW3BricsT"
        ],
        "license": "MIT"
      },
      "contracts/client/MessageRecipient.sol": {
        "keccak256": "0x2d4e3b539c03be510f528adac71c6b74181b968d0f094583a210fe81c11ed71a",
        "urls": [
          "bzz-raw://af80118b9e711633189326a8ea16f61bb2e8f5721a3bc34200aefeee020596f8",
          "dweb:/ipfs/QmSCwCUWXyy3Yw5KcTae8cimCifRTE6viqRfj7mSfaVLfB"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IMessageRecipient.sol": {
        "keccak256": "0x342bc1cf70e5a37e6a14d871297e845120608412d1be5dcd2657fc0dae5ebbde",
        "urls": [
          "bzz-raw://6d8b93ab4b2d4e85b0dcb62cf0beeaa0289aebc7b3dbc3fb9cad9e82639cbc5e",
          "dweb:/ipfs/QmRHr2Dqr6tcFWZ7osKisaGg6QZtvwGrncchYjJ1UYWWVx"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/InterfaceOrigin.sol": {
        "keccak256": "0xe2c7feb15991348e274a413ee7e24c4cc4e2225c851924955ad2f025c8b5c42f",
        "urls": [
          "bzz-raw://314cdd9daf29e9d6ed288e02be302487cce6c0ca89805e5e8f6d78fb150c6ea6",
          "dweb:/ipfs/QmP6vY22Cpf45a3eDR6hPBnDDqCPcu4cRXJhH7W41ohkD6"
        ],
        "license": "MIT"
      },
      "contracts/libs/Errors.sol": {
        "keccak256": "0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011",
        "urls": [
          "bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b",
          "dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB"
        ],
        "license": "MIT"
      },
      "contracts/libs/stack/Request.sol": {
        "keccak256": "0xecd4427fe7285d1d5663ea019a66ebb04d3f495c0be28a14043c99a0d9a90689",
        "urls": [
          "bzz-raw://55e800c307070d6497031b90157d917dcabd5f93d342081be8d20ad3c80df429",
          "dweb:/ipfs/QmU8oza8MeWDbG9xfPaPVoj4Z1rKtvQ7pA3Z7CuYyGSuY6"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/client/BaseClient.sol",
    "id": 3123,
    "exportedSymbols": {
      "BaseClient": [
        3122
      ],
      "BaseClientOptimisticPeriod": [
        10254
      ],
      "IncorrectSender": [
        10210
      ],
      "MessageRecipient": [
        3331
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5475:8",
    "nodes": [
      {
        "id": 3006,
        "nodeType": "PragmaDirective",
        "src": "32:23:8",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 3009,
        "nodeType": "ImportDirective",
        "src": "258:79:8",
        "nodes": [],
        "absolutePath": "contracts/libs/Errors.sol",
        "file": "../libs/Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3123,
        "sourceUnit": 10335,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3007,
              "name": "BaseClientOptimisticPeriod",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10254,
              "src": "266:26:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3008,
              "name": "IncorrectSender",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10210,
              "src": "294:15:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3011,
        "nodeType": "ImportDirective",
        "src": "537:56:8",
        "nodes": [],
        "absolutePath": "contracts/client/MessageRecipient.sol",
        "file": "./MessageRecipient.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3123,
        "sourceUnit": 3332,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3010,
              "name": "MessageRecipient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3331,
              "src": "545:16:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3122,
        "nodeType": "ContractDefinition",
        "src": "1204:4302:8",
        "nodes": [
          {
            "id": 3026,
            "nodeType": "FunctionDefinition",
            "src": "1308:93:8",
            "nodes": [],
            "body": {
              "id": 3025,
              "nodeType": "Block",
              "src": "1399:2:8",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3021,
                    "name": "origin_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3016,
                    "src": "1376:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 3022,
                    "name": "destination_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3018,
                    "src": "1385:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3023,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3020,
                  "name": "MessageRecipient",
                  "nameLocations": [
                    "1359:16:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3331,
                  "src": "1359:16:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1359:39:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3016,
                  "mutability": "mutable",
                  "name": "origin_",
                  "nameLocation": "1328:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3026,
                  "src": "1320:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1320:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3018,
                  "mutability": "mutable",
                  "name": "destination_",
                  "nameLocation": "1345:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3026,
                  "src": "1337:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1337:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1319:39:8"
            },
            "returnParameters": {
              "id": 3024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1399:0:8"
            },
            "scope": 3122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3032,
            "nodeType": "FunctionDefinition",
            "src": "1938:65:8",
            "nodes": [],
            "documentation": {
              "id": 3027,
              "nodeType": "StructuredDocumentation",
              "src": "1741:192:8",
              "text": " @notice Period of time since the root was submitted to Destination. Once this period is over,\n root can be used for proving and executing a message though this Client."
            },
            "functionSelector": "9fee6226",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "optimisticPeriod",
            "nameLocation": "1947:16:8",
            "parameters": {
              "id": 3028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1963:2:8"
            },
            "returnParameters": {
              "id": 3031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3030,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3032,
                  "src": "1995:6:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3029,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1995:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1994:8:8"
            },
            "scope": 3122,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 3040,
            "nodeType": "FunctionDefinition",
            "src": "2255:81:8",
            "nodes": [],
            "documentation": {
              "id": 3033,
              "nodeType": "StructuredDocumentation",
              "src": "2009:241:8",
              "text": " @notice Address of the trusted sender on the destination chain. The trusted sender will be able to:\n  - Send messages to this contract from other chains.\n  - Receive messages from this contract on other chains."
            },
            "functionSelector": "bad3f8df",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "trustedSender",
            "nameLocation": "2264:13:8",
            "parameters": {
              "id": 3036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3035,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "2285:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3040,
                  "src": "2278:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3034,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2278:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2277:20:8"
            },
            "returnParameters": {
              "id": 3039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3038,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3040,
                  "src": "2327:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3037,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2327:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2326:9:8"
            },
            "scope": 3122,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 3082,
            "nodeType": "FunctionDefinition",
            "src": "3263:441:8",
            "nodes": [],
            "body": {
              "id": 3081,
              "nodeType": "Block",
              "src": "3477:227:8",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 3061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3057,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3047,
                      "src": "3491:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 3059,
                          "name": "origin_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3043,
                          "src": "3515:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 3058,
                        "name": "trustedSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3040,
                        "src": "3501:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_bytes32_$",
                          "typeString": "function (uint32) view returns (bytes32)"
                        }
                      },
                      "id": 3060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3501:22:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3491:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3065,
                  "nodeType": "IfStatement",
                  "src": "3487:62:8",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3062,
                        "name": "IncorrectSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10210,
                        "src": "3532:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3532:17:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3064,
                    "nodeType": "RevertStatement",
                    "src": "3525:24:8"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3066,
                      "name": "proofMaturity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3049,
                      "src": "3563:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3067,
                        "name": "optimisticPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3032,
                        "src": "3579:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint32_$",
                          "typeString": "function () view returns (uint32)"
                        }
                      },
                      "id": 3068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3579:18:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3563:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3073,
                  "nodeType": "IfStatement",
                  "src": "3559:75:8",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3070,
                        "name": "BaseClientOptimisticPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10254,
                        "src": "3606:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3606:28:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3072,
                    "nodeType": "RevertStatement",
                    "src": "3599:35:8"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3075,
                        "name": "origin_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3043,
                        "src": "3664:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 3076,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3045,
                        "src": "3673:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 3077,
                        "name": "version",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3051,
                        "src": "3680:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 3078,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3053,
                        "src": "3689:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3074,
                      "name": "_receiveBaseMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3094,
                      "src": "3644:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_uint32_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint32,uint32,uint32,bytes memory)"
                      }
                    },
                    "id": 3079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3644:53:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3080,
                  "nodeType": "ExpressionStatement",
                  "src": "3644:53:8"
                }
              ]
            },
            "baseFunctions": [
              3239
            ],
            "documentation": {
              "id": 3041,
              "nodeType": "StructuredDocumentation",
              "src": "2658:600:8",
              "text": " @dev Child contracts should implement the logic for receiving a Base Message in an \"unsafe way\".\n Following checks HAVE been performed:\n  - receiveBaseMessage() was called by Destination (i.e. this is a legit base message).\n  - Nonce is not zero.\n  - Message sender on origin chain is not a zero address.\n  - Proof maturity is not zero.\n Following checks HAVE NOT been performed (thus \"unsafe\"):\n  - Message sender on origin chain could be anything non-zero at this point.\n  - Proof maturity could be anything non-zero at this point."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_receiveBaseMessageUnsafe",
            "nameLocation": "3272:25:8",
            "overrides": {
              "id": 3055,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3468:8:8"
            },
            "parameters": {
              "id": 3054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3043,
                  "mutability": "mutable",
                  "name": "origin_",
                  "nameLocation": "3314:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3082,
                  "src": "3307:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3042,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3307:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3045,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "3338:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3082,
                  "src": "3331:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3044,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3331:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3047,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3361:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3082,
                  "src": "3353:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3046,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3353:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3049,
                  "mutability": "mutable",
                  "name": "proofMaturity",
                  "nameLocation": "3385:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3082,
                  "src": "3377:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3377:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3051,
                  "mutability": "mutable",
                  "name": "version",
                  "nameLocation": "3415:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3082,
                  "src": "3408:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3050,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3408:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3053,
                  "mutability": "mutable",
                  "name": "content",
                  "nameLocation": "3445:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3082,
                  "src": "3432:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3052,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3432:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3297:161:8"
            },
            "returnParameters": {
              "id": 3056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3477:0:8"
            },
            "scope": 3122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3094,
            "nodeType": "FunctionDefinition",
            "src": "4134:114:8",
            "nodes": [],
            "documentation": {
              "id": 3083,
              "nodeType": "StructuredDocumentation",
              "src": "3710:419:8",
              "text": " @dev Child contracts should implement the logic for receiving a Base Message.\n Following checks HAVE been performed:\n  - receiveBaseMessage() was called by Destination (i.e. this is a legit base message).\n  - Nonce is not zero.\n  - Message sender on origin chain is a trusted sender (and is not zero).\n  - Optimistic period for the message have passed (and is not zero)."
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_receiveBaseMessage",
            "nameLocation": "4143:19:8",
            "parameters": {
              "id": 3092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3085,
                  "mutability": "mutable",
                  "name": "origin_",
                  "nameLocation": "4170:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3094,
                  "src": "4163:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3084,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4163:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3087,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "4186:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3094,
                  "src": "4179:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3086,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4179:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3089,
                  "mutability": "mutable",
                  "name": "version",
                  "nameLocation": "4200:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3094,
                  "src": "4193:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3088,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4193:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3091,
                  "mutability": "mutable",
                  "name": "content",
                  "nameLocation": "4222:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3094,
                  "src": "4209:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3090,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4209:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4162:68:8"
            },
            "returnParameters": {
              "id": 3093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4247:0:8"
            },
            "scope": 3122,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 3121,
            "nodeType": "FunctionDefinition",
            "src": "5005:499:8",
            "nodes": [],
            "body": {
              "id": 3120,
              "nodeType": "Block",
              "src": "5185:319:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3110,
                        "name": "destination_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3097,
                        "src": "5417:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3112,
                            "name": "destination_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3097,
                            "src": "5445:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 3111,
                          "name": "trustedSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3040,
                          "src": "5431:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_bytes32_$",
                            "typeString": "function (uint32) view returns (bytes32)"
                          }
                        },
                        "id": 3113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5431:27:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3114,
                          "name": "optimisticPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3032,
                          "src": "5460:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint32_$",
                            "typeString": "function () view returns (uint32)"
                          }
                        },
                        "id": 3115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5460:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 3116,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3100,
                        "src": "5480:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MessageRequest_$3146_memory_ptr",
                          "typeString": "struct MessageRecipient.MessageRequest memory"
                        }
                      },
                      {
                        "id": 3117,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3102,
                        "src": "5489:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_struct$_MessageRequest_$3146_memory_ptr",
                          "typeString": "struct MessageRecipient.MessageRequest memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3109,
                      "name": "_sendBaseMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3121,
                        3282
                      ],
                      "referencedDeclaration": 3282,
                      "src": "5400:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_bytes32_$_t_uint32_$_t_struct$_MessageRequest_$3146_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint32_$_t_bytes32_$",
                        "typeString": "function (uint32,bytes32,uint32,struct MessageRecipient.MessageRequest memory,bytes memory) returns (uint32,bytes32)"
                      }
                    },
                    "id": 3118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5400:97:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint32_$_t_bytes32_$",
                      "typeString": "tuple(uint32,bytes32)"
                    }
                  },
                  "functionReturnParameters": 3108,
                  "id": 3119,
                  "nodeType": "Return",
                  "src": "5393:104:8"
                }
              ]
            },
            "documentation": {
              "id": 3095,
              "nodeType": "StructuredDocumentation",
              "src": "4254:746:8",
              "text": " @dev Sends a message to given destination chain. Full `msg.value` is used to pay for the message tips.\n `_getMinimumTipsValue()` could be used to calculate the minimum required tips value, and should be also\n exposed as a public view function to estimate the tips value before sending a message off-chain.\n This function is not exposed in BaseClient, as the message encoding is implemented by the child contract.\n > Will revert if the trusted sender is not set for the destination domain.\n @param destination_          Domain of the destination chain\n @param request               Encoded message execution request on destination chain\n @param content               The message content"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sendBaseMessage",
            "nameLocation": "5014:16:8",
            "parameters": {
              "id": 3103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3097,
                  "mutability": "mutable",
                  "name": "destination_",
                  "nameLocation": "5038:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3121,
                  "src": "5031:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3096,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5031:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3100,
                  "mutability": "mutable",
                  "name": "request",
                  "nameLocation": "5074:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3121,
                  "src": "5052:29:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MessageRequest_$3146_memory_ptr",
                    "typeString": "struct MessageRecipient.MessageRequest"
                  },
                  "typeName": {
                    "id": 3099,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3098,
                      "name": "MessageRequest",
                      "nameLocations": [
                        "5052:14:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3146,
                      "src": "5052:14:8"
                    },
                    "referencedDeclaration": 3146,
                    "src": "5052:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MessageRequest_$3146_storage_ptr",
                      "typeString": "struct MessageRecipient.MessageRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3102,
                  "mutability": "mutable",
                  "name": "content",
                  "nameLocation": "5096:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3121,
                  "src": "5083:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3101,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5083:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5030:74:8"
            },
            "returnParameters": {
              "id": 3108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3105,
                  "mutability": "mutable",
                  "name": "messageNonce",
                  "nameLocation": "5146:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3121,
                  "src": "5139:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3104,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5139:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3107,
                  "mutability": "mutable",
                  "name": "messageHash",
                  "nameLocation": "5168:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3121,
                  "src": "5160:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3106,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5160:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5138:42:8"
            },
            "scope": 3122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 3013,
              "name": "MessageRecipient",
              "nameLocations": [
                "1236:16:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3331,
              "src": "1236:16:8"
            },
            "id": 3014,
            "nodeType": "InheritanceSpecifier",
            "src": "1236:16:8"
          }
        ],
        "canonicalName": "BaseClient",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3012,
          "nodeType": "StructuredDocumentation",
          "src": "595:608:8",
          "text": " @dev Implementation of IMessageRecipient interface, to be used as the recipient of\n base messages passed by the Destination contract.\n BaseClient could be used as a backbone for cross-chain apps:\n - A single BaseClient contract per chain (aka trusted sender)\n - Only BaseClient instances from other chains are able to send messages to this contract\n - BaseClient enforces a common optimistic period for all types of messages\n Note: BaseClient is forever stateless, meaning it can be potentially used as a parent\n for the upgradeable contract without worrying about storage collision."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          3122,
          3331,
          9253
        ],
        "name": "BaseClient",
        "nameLocation": "1222:10:8",
        "scope": 3123,
        "usedErrors": [
          10176,
          10208,
          10210,
          10254,
          10262
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 8
}