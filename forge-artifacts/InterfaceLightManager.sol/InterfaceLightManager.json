{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "msgOrigin",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "proofMaturity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "remoteWithdrawTips",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magicValue",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "agentRoot",
          "type": "bytes32"
        }
      ],
      "name": "setAgentRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agent",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum AgentFlag",
              "name": "flag",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "domain",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "internalType": "struct AgentStatus",
          "name": "status",
          "type": "tuple"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgentStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "remoteWithdrawTips(uint32,uint256,address,uint256)": "1fa07138",
    "setAgentRoot(bytes32)": "58668176",
    "updateAgentStatus(address,(uint8,uint32,uint32),bytes32[])": "cbd05965"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"msgOrigin\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"proofMaturity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"remoteWithdrawTips\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"agentRoot\",\"type\":\"bytes32\"}],\"name\":\"setAgentRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum AgentFlag\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"internalType\":\"struct AgentStatus\",\"name\":\"status\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgentStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"remoteWithdrawTips(uint32,uint256,address,uint256)\":{\"details\":\"Could only be remote-called by BondingManager contract on Synapse Chain. Note: as an extra security check this function returns its own selector, so that Destination could verify that a \\\"remote\\\" function was called when executing a manager message.\",\"params\":{\"amount\":\"Tips value to withdraw\",\"recipient\":\"Address to withdraw tips to\"}},\"setAgentRoot(bytes32)\":{\"params\":{\"agentRoot\":\"New Agent Merkle Root\"}},\"updateAgentStatus(address,(uint8,uint32,uint32),bytes32[])\":{\"details\":\"Will revert if the provided proof doesn't match the latest merkle root.\",\"params\":{\"agent\":\"Agent address\",\"proof\":\"Merkle proof of Active status for the agent\",\"status\":\"Structure specifying agent status: (flag, domain, index)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"remoteWithdrawTips(uint32,uint256,address,uint256)\":{\"notice\":\"Withdraws locked base message tips from local Origin to the recipient.\"},\"setAgentRoot(bytes32)\":{\"notice\":\"Updates the root of Agent Merkle Tree that the Light Manager is tracking. Could be only called by a local Destination contract, which is supposed to verify the attested Agent Merkle Roots.\"},\"updateAgentStatus(address,(uint8,uint32,uint32),bytes32[])\":{\"notice\":\"Updates agent status, using a proof against the latest known Agent Merkle Root.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/InterfaceLightManager.sol\":\"InterfaceLightManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/interfaces/InterfaceLightManager.sol\":{\"keccak256\":\"0xfd56fe81fd6776faae469d615e66d71387512fac1997157a1dd3f80ada8e7dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1ef5b8bbdc189ce2148cc74f61f6eb9ca8bdcbf53ac84948ec72953ed4433d2\",\"dweb:/ipfs/Qmbe1Qm94avKV2mw1Yj33SZ698ykCA8vEpZhqjL9o4oqev\"]},\"contracts/libs/Errors.sol\":{\"keccak256\":\"0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b\",\"dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB\"]},\"contracts/libs/Structures.sol\":{\"keccak256\":\"0x3eaa63f5d9aac514328111e8fdd037dc6fdb18af7541a8287deeacd2e44f7137\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://633619910c74a0685ef2993a2e7cc44088929121a15c8a9fc26c9bbadffbda71\",\"dweb:/ipfs/QmZceJv6UntiMWW4JZHbmytLsqXshbuav8yoiritksvqqy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "msgOrigin",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "proofMaturity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remoteWithdrawTips",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "magicValue",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "agentRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAgentRoot"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agent",
              "type": "address"
            },
            {
              "internalType": "struct AgentStatus",
              "name": "status",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum AgentFlag",
                  "name": "flag",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "domain",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "index",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgentStatus"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "remoteWithdrawTips(uint32,uint256,address,uint256)": {
            "details": "Could only be remote-called by BondingManager contract on Synapse Chain. Note: as an extra security check this function returns its own selector, so that Destination could verify that a \"remote\" function was called when executing a manager message.",
            "params": {
              "amount": "Tips value to withdraw",
              "recipient": "Address to withdraw tips to"
            }
          },
          "setAgentRoot(bytes32)": {
            "params": {
              "agentRoot": "New Agent Merkle Root"
            }
          },
          "updateAgentStatus(address,(uint8,uint32,uint32),bytes32[])": {
            "details": "Will revert if the provided proof doesn't match the latest merkle root.",
            "params": {
              "agent": "Agent address",
              "proof": "Merkle proof of Active status for the agent",
              "status": "Structure specifying agent status: (flag, domain, index)"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "remoteWithdrawTips(uint32,uint256,address,uint256)": {
            "notice": "Withdraws locked base message tips from local Origin to the recipient."
          },
          "setAgentRoot(bytes32)": {
            "notice": "Updates the root of Agent Merkle Tree that the Light Manager is tracking. Could be only called by a local Destination contract, which is supposed to verify the attested Agent Merkle Roots."
          },
          "updateAgentStatus(address,(uint8,uint32,uint32),bytes32[])": {
            "notice": "Updates agent status, using a proof against the latest known Agent Merkle Root."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/interfaces/InterfaceLightManager.sol": "InterfaceLightManager"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/InterfaceLightManager.sol": {
        "keccak256": "0xfd56fe81fd6776faae469d615e66d71387512fac1997157a1dd3f80ada8e7dac",
        "urls": [
          "bzz-raw://e1ef5b8bbdc189ce2148cc74f61f6eb9ca8bdcbf53ac84948ec72953ed4433d2",
          "dweb:/ipfs/Qmbe1Qm94avKV2mw1Yj33SZ698ykCA8vEpZhqjL9o4oqev"
        ],
        "license": "MIT"
      },
      "contracts/libs/Errors.sol": {
        "keccak256": "0xe9a2059a2ad04e5a8ce5a6fcd091541dcd1b745edb1ce36fd97b188fe8a24011",
        "urls": [
          "bzz-raw://36c91869720c13e9f207ef4a96147c1bcdc75574fb84eacfd8a5a4efe4e5210b",
          "dweb:/ipfs/QmRuYYPnsuES87cQTAag63gdVf22pL7UjF9pvzBt87iGyB"
        ],
        "license": "MIT"
      },
      "contracts/libs/Structures.sol": {
        "keccak256": "0x3eaa63f5d9aac514328111e8fdd037dc6fdb18af7541a8287deeacd2e44f7137",
        "urls": [
          "bzz-raw://633619910c74a0685ef2993a2e7cc44088929121a15c8a9fc26c9bbadffbda71",
          "dweb:/ipfs/QmZceJv6UntiMWW4JZHbmytLsqXshbuav8yoiritksvqqy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/interfaces/InterfaceLightManager.sol",
    "id": 9912,
    "exportedSymbols": {
      "AgentStatus": [
        10357
      ],
      "InterfaceLightManager": [
        9911
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1590:42",
    "nodes": [
      {
        "id": 9876,
        "nodeType": "PragmaDirective",
        "src": "32:23:42",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 9878,
        "nodeType": "ImportDirective",
        "src": "57:51:42",
        "nodes": [],
        "absolutePath": "contracts/libs/Structures.sol",
        "file": "../libs/Structures.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9912,
        "sourceUnit": 10474,
        "symbolAliases": [
          {
            "foreign": {
              "id": 9877,
              "name": "AgentStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10357,
              "src": "65:11:42",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 9911,
        "nodeType": "ContractDefinition",
        "src": "110:1511:42",
        "nodes": [
          {
            "id": 9890,
            "nodeType": "FunctionDefinition",
            "src": "530:102:42",
            "nodes": [],
            "documentation": {
              "id": 9879,
              "nodeType": "StructuredDocumentation",
              "src": "148:377:42",
              "text": " @notice Updates agent status, using a proof against the latest known Agent Merkle Root.\n @dev Will revert if the provided proof doesn't match the latest merkle root.\n @param agent     Agent address\n @param status    Structure specifying agent status: (flag, domain, index)\n @param proof     Merkle proof of Active status for the agent"
            },
            "functionSelector": "cbd05965",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateAgentStatus",
            "nameLocation": "539:17:42",
            "parameters": {
              "id": 9888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9881,
                  "mutability": "mutable",
                  "name": "agent",
                  "nameLocation": "565:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 9890,
                  "src": "557:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9880,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9884,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "591:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 9890,
                  "src": "572:25:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AgentStatus_$10357_memory_ptr",
                    "typeString": "struct AgentStatus"
                  },
                  "typeName": {
                    "id": 9883,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9882,
                      "name": "AgentStatus",
                      "nameLocations": [
                        "572:11:42"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10357,
                      "src": "572:11:42"
                    },
                    "referencedDeclaration": 10357,
                    "src": "572:11:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AgentStatus_$10357_storage_ptr",
                      "typeString": "struct AgentStatus"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9887,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "616:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 9890,
                  "src": "599:22:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9885,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "599:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 9886,
                    "nodeType": "ArrayTypeName",
                    "src": "599:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:66:42"
            },
            "returnParameters": {
              "id": 9889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "631:0:42"
            },
            "scope": 9911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 9896,
            "nodeType": "FunctionDefinition",
            "src": "922:50:42",
            "nodes": [],
            "documentation": {
              "id": 9891,
              "nodeType": "StructuredDocumentation",
              "src": "638:279:42",
              "text": " @notice Updates the root of Agent Merkle Tree that the Light Manager is tracking.\n Could be only called by a local Destination contract, which is supposed to\n verify the attested Agent Merkle Roots.\n @param agentRoot     New Agent Merkle Root"
            },
            "functionSelector": "58668176",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setAgentRoot",
            "nameLocation": "931:12:42",
            "parameters": {
              "id": 9894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9893,
                  "mutability": "mutable",
                  "name": "agentRoot",
                  "nameLocation": "952:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 9896,
                  "src": "944:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9892,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "943:19:42"
            },
            "returnParameters": {
              "id": 9895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "971:0:42"
            },
            "scope": 9911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 9910,
            "nodeType": "FunctionDefinition",
            "src": "1462:157:42",
            "nodes": [],
            "documentation": {
              "id": 9897,
              "nodeType": "StructuredDocumentation",
              "src": "978:479:42",
              "text": " @notice Withdraws locked base message tips from local Origin to the recipient.\n @dev Could only be remote-called by BondingManager contract on Synapse Chain.\n Note: as an extra security check this function returns its own selector, so that\n Destination could verify that a \"remote\" function was called when executing a manager message.\n @param recipient     Address to withdraw tips to\n @param amount        Tips value to withdraw"
            },
            "functionSelector": "1fa07138",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "remoteWithdrawTips",
            "nameLocation": "1471:18:42",
            "parameters": {
              "id": 9906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9899,
                  "mutability": "mutable",
                  "name": "msgOrigin",
                  "nameLocation": "1497:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 9910,
                  "src": "1490:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 9898,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9901,
                  "mutability": "mutable",
                  "name": "proofMaturity",
                  "nameLocation": "1516:13:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 9910,
                  "src": "1508:21:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1508:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9903,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1539:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 9910,
                  "src": "1531:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9902,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9905,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1558:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 9910,
                  "src": "1550:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1489:76:42"
            },
            "returnParameters": {
              "id": 9909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9908,
                  "mutability": "mutable",
                  "name": "magicValue",
                  "nameLocation": "1607:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 9910,
                  "src": "1600:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 9907,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1600:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1599:19:42"
            },
            "scope": 9911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "InterfaceLightManager",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          9911
        ],
        "name": "InterfaceLightManager",
        "nameLocation": "120:21:42",
        "scope": 9912,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 42
}